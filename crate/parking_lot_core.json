{"root":"0:0:1827","crate_version":"0.9.9","includes_private":false,"index":{"0:231:2089":{"id":"0:231:2089","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:80:1815":{"id":"0:80:1815","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3129:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3129:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:719":{"id":"0:283:719","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181-0:270:1823":{"id":"0:181-0:270:1823","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1823","glob":false}}},"a:2:32418:244-0:298:1826":{"id":"a:2:32418:244-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:243:456":{"id":"0:243:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2741-0:211:1822":{"id":"b:2:2741-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:76:1816":{"id":"0:76:1816","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:177-0:192:1819":{"id":"0:177-0:192:1819","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1819","glob":false}}},"0:180-0:211:1822":{"id":"0:180-0:211:1822","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1822","glob":false}}},"2:12758:28150":{"id":"2:12758:28150","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1643"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2068":{"id":"0:196:2068","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12841:33378":{"id":"2:12841:33378","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2423-0:211:1822":{"id":"b:2:2423-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5551:34062":{"id":"5:5551:34062","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168-0:82:1812":{"id":"0:168-0:82:1812","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1812","glob":false}}},"0:195:1754":{"id":"0:195:1754","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:32500:2831-0:252:1818":{"id":"a:2:32500:2831-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42131:2770-0:252:1818":{"id":"a:2:42131:2770-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2726-0:252:1818":{"id":"b:2:2726-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12817:28190":{"id":"2:12817:28190","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12826:33372":{"id":"2:12826:33372","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12443:19863","`DoubleEndedIterator`":"2:7826:128","prim@char":"1:12034:452","str::matches":"2:12823:2532"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44124:13683","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2426-0:298:1826":{"id":"b:2:2426-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2943:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:211:1822":{"id":"0:211:1822","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:2075","0:213:2077","0:214:2080","0:215:2084"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32418:244-0:211:1822","a:2:32500:2831-0:211:1822","a:2:42130:2771-0:211:1822","a:2:42131:2770-0:211:1822","a:2:2948:254-0:211:1822","b:2:2426-0:211:1822","b:2:2741-0:211:1822","b:2:2726-0:211:1822","b:2:2736-0:211:1822","b:2:3495-0:211:1822","b:2:2730-0:211:1822","b:2:2423-0:211:1822","b:5:687-0:211:1822","0:228","0:225","0:226","0:218","0:217","0:222","0:223","0:220"]}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:719"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:239:2097":{"id":"0:239:2097","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:32418:244-0:252:1818":{"id":"a:2:32418:244-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32500:2831-0:284:1820":{"id":"a:2:32500:2831-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2736-0:298:1826":{"id":"b:2:2736-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32420:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112-0:327:2371":{"id":"0:112-0:327:2371","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2371","glob":false}}},"2:12746":{"id":"2:12746","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12747:875","2:12748:2332","2:12749:33363","2:12750:33364","2:12752:33365","2:12755:27116","2:12756:33366","2:12757:340","2:12758:28150","2:12759:2037","2:12761:9819","2:12763:28148","2:12765:28149","2:12767:33367","2:12768:33368","2:12769:28173","2:12770:28174","2:12771:13689","2:12772:13699","2:12773:13552","2:12774:31964","2:12775:31966","2:12776:27341","2:12777:33369","2:12778:31977","2:12779:28192","2:12782:27558","2:12785:27560","2:12788:3036","2:12792:3001","2:12796:27340","2:12799:28182","2:12802:28184","2:12805:33370","2:12808:33371","2:12811:28186","2:12814:28188","2:12817:28190","2:12820:28191","2:12823:2532","2:12826:33372","2:12829:33373","2:12832:33374","2:12835:33375","2:12837:33376","2:12839:33377","2:12841:33378","2:12842:33379","2:12843:33380","2:12846:33381","2:12849:25587","2:12852:28193","2:12855:33382","2:12858:33383","2:12861:33384","2:12864:33385","2:12866:26690","2:12867:28092","2:12868:26694","2:12869:26695","2:12870:26696","2:12871:28095","2:12872:28096","2:12873:28097","2:12874:33386","2:12876:14494","2:12877:33387"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92:2350":{"id":"0:92:2350","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:1824":{"id":"0:183-0:73:1824","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1824","glob":false}}},"2:12748:2332":{"id":"2:12748:2332","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1826":{"id":"0:298:1826","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:32418:244-0:298:1826","a:2:32500:2831-0:298:1826","a:2:42130:2771-0:298:1826","a:2:42131:2770-0:298:1826","a:2:2948:254-0:298:1826","b:2:2426-0:298:1826","b:2:2741-0:298:1826","b:2:2726-0:298:1826","b:2:2736-0:298:1826","b:2:3495-0:298:1826","b:2:2730-0:298:1826","b:2:2423-0:298:1826","0:300"]}}},"0:185-0:298:1826":{"id":"0:185-0:298:1826","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1826","glob":false}}},"2:12755:27116":{"id":"2:12755:27116","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11998:19864"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12829:33373":{"id":"2:12829:33373","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12443:19863","`DoubleEndedIterator`":"2:7826:128","prim@char":"1:12034:452","str::rmatch_indices":"2:12832:33374"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44052:13679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12870:26696":{"id":"2:12870:26696","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42130:2771-0:211:1822":{"id":"a:2:42130:2771-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12872:28096":{"id":"2:12872:28096","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:895:35257"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32500:2831-0:230:1821":{"id":"a:2:32500:2831-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2426-0:192:1819":{"id":"b:2:2426-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2426-0:252:1818":{"id":"b:2:2426-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2726-0:284:1820":{"id":"b:2:2726-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110-0:331:2358":{"id":"0:110-0:331:2358","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2358","glob":false}}},"0:252:1818":{"id":"0:252:1818","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:2100","0:255:2102","0:257:2104"],"impls":["a:2:32418:244-0:252:1818","a:2:32500:2831-0:252:1818","a:2:42130:2771-0:252:1818","a:2:42131:2770-0:252:1818","a:2:2948:254-0:252:1818","b:2:2426-0:252:1818","b:2:2741-0:252:1818","b:2:2726-0:252:1818","b:2:2736-0:252:1818","b:2:3495-0:252:1818","b:2:2730-0:252:1818","b:2:2423-0:252:1818","b:5:687-0:252:1818","0:266","0:260","0:265","0:262","0:263","0:259","0:268"]}}},"2:12874:33386":{"id":"2:12874:33386","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4670:33386"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44201:13603","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42130:2771-0:270:1823":{"id":"a:2:42130:2771-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12750:33364":{"id":"2:12750:33364","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12811:28186":{"id":"2:12811:28186","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863","str::rsplitn":"2:12814:28188"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44006:13676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2730-0:298:1826":{"id":"b:2:2730-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2491:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12749:33363":{"id":"2:12749:33363","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3495-0:211:1822":{"id":"b:2:3495-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2741-0:252:1818":{"id":"b:2:2741-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2423-0:230:1821":{"id":"b:2:2423-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5536:34059":{"id":"5:5536:34059","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:1968","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:1968","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2948:254-0:284:1820":{"id":"a:2:2948:254-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193:2066":{"id":"0:193:2066","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1754"]},"discriminant":null}}},"a:2:32418:244-0:192:1819":{"id":"a:2:32418:244-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2745:1619":{"id":"2:2745:1619","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42149:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1813":{"id":"0:74:1813","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9111:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:456":{"id":"0:289:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42130:2771-0:230:1821":{"id":"a:2:42130:2771-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2736-0:284:1820":{"id":"b:2:2736-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32418:244-0:211:1822":{"id":"a:2:32418:244-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12846:33381":{"id":"2:12846:33381","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1824":{"id":"0:73:1824","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2423-0:270:1823":{"id":"b:2:2423-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2491:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:211:1822":{"id":"b:5:687-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3053","5:690:3054","5:691:3055"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:252:1818":{"id":"b:5:687-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3053","5:690:3054","5:691:3055"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2491:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42131:2770-0:270:1823":{"id":"a:2:42131:2770-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42131:2770-0:211:1822":{"id":"a:2:42131:2770-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2729:2995":{"id":"2:2729:2995","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2703:142"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2491:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:179-0:230:1821":{"id":"0:179-0:230:1821","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1821","glob":false}}},"2:12792:3001":{"id":"2:12792:3001","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42004:198","prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1039","0:92:2350","0:93:2357","0:94:2363"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42130:2771-0:298:1826":{"id":"a:2:42130:2771-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:295:662":{"id":"0:295:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3495-0:252:1818":{"id":"b:2:3495-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2486:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32418:244-0:230:1821":{"id":"a:2:32418:244-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2425:2522":{"id":"2:2425:2522","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2736-0:270:1823":{"id":"b:2:2736-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:456":{"id":"0:219:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12770:28174":{"id":"2:12770:28174","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12769:28173"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2732:746":{"id":"2:2732:746","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2091":{"id":"0:233:2091","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12761:9819":{"id":"2:12761:9819","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42004:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2730-0:270:1823":{"id":"b:2:2730-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2948:254-0:230:1821":{"id":"a:2:2948:254-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2730-0:284:1820":{"id":"b:2:2730-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32420:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257:2104":{"id":"0:257:2104","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2943:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2948:254-0:192:1819":{"id":"a:2:2948:254-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:255:2102":{"id":"0:255:2102","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:32418:244-0:270:1823":{"id":"a:2:32418:244-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3495-0:298:1826":{"id":"b:2:3495-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12805:33370":{"id":"2:12805:33370","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12443:19863","str::split":"2:12796:27340","prim@char":"1:12034:452","`DoubleEndedIterator`":"2:7826:128","str::rsplit_terminator":"2:12808:33371"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43952:13673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:662":{"id":"0:281:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:719":{"id":"0:297:719","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111-0:313:1943":{"id":"0:111-0:313:1943","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1943","glob":false}}},"2:12788:3036":{"id":"2:12788:3036","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42004:198","prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:1821":{"id":"0:230:1821","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2089","0:233:2091","0:235:2093","0:237:2095","0:239:2097"],"impls":["a:2:32418:244-0:230:1821","a:2:32500:2831-0:230:1821","a:2:42130:2771-0:230:1821","a:2:42131:2770-0:230:1821","a:2:2948:254-0:230:1821","b:2:2426-0:230:1821","b:2:2741-0:230:1821","b:2:2726-0:230:1821","b:2:2736-0:230:1821","b:2:3495-0:230:1821","b:2:2730-0:230:1821","b:2:2423-0:230:1821","b:5:687-0:230:1821","0:250","0:242","0:241","0:247","0:245","0:248","0:244"]}}},"2:12832:33374":{"id":"2:12832:33374","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12443:19863","`DoubleEndedIterator`":"2:7826:128","prim@char":"1:12034:452","str::match_indices":"2:12829:33373"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44070:13680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12842:33379":{"id":"2:12842:33379","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12752:33365":{"id":"2:12752:33365","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12750:33364"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2426-0:230:1821":{"id":"b:2:2426-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261:456":{"id":"0:261:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12769:28173":{"id":"2:12769:28173","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12770:28174"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2740:1621":{"id":"2:2740:1621","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42149:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42130:2771-0:192:1819":{"id":"a:2:42130:2771-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:77:1814":{"id":"0:77:1814","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12776:27341":{"id":"2:12776:27341","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44156:13684","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2744:135":{"id":"2:2744:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32348:12693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12823:2532":{"id":"2:12823:2532","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12443:19863","`DoubleEndedIterator`":"2:7826:128","prim@char":"1:12034:452","str::rmatches":"2:12826:33372"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44106:13682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5552:34063":{"id":"5:5552:34063","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:1968","`String`":"5:7535:250"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:1968","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42131:2770-0:192:1819":{"id":"a:2:42131:2770-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2730-0:211:1822":{"id":"b:2:2730-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:719"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2736-0:230:1821":{"id":"b:2:2736-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:172-0:80:1815":{"id":"0:172-0:80:1815","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1815","glob":false}}},"2:12799:28182":{"id":"2:12799:28182","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12259:13571","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2948:254-0:252:1818":{"id":"a:2:2948:254-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32445:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12759:2037":{"id":"2:12759:2037","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42004:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32445:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12763:28148":{"id":"2:12763:28148","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2080":{"id":"0:214:2080","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:12835:33375":{"id":"2:12835:33375","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2095":{"id":"0:237:2095","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12869:26695":{"id":"2:12869:26695","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2736-0:252:1818":{"id":"b:2:2736-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12871:28095":{"id":"2:12871:28095","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:895:35257"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32445:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42131:2770-0:284:1820":{"id":"a:2:42131:2770-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12757:340":{"id":"2:12757:340","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12758:28150","`u8`":"1:12051:1643"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2423-0:298:1826":{"id":"b:2:2423-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:269:719":{"id":"0:269:719","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42130:2771-0:252:1818":{"id":"a:2:42130:2771-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2486:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32500:2831-0:298:1826":{"id":"a:2:32500:2831-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12852:28193":{"id":"2:12852:28193","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2726-0:230:1821":{"id":"b:2:2726-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12877:33387":{"id":"2:12877:33387","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4668:33387"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44219:13602","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2426-0:211:1822":{"id":"b:2:2426-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2777:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32500:2831-0:270:1823":{"id":"a:2:32500:2831-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12802:28184":{"id":"2:12802:28184","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12443:19863","`DoubleEndedIterator`":"2:7826:128","prim@char":"1:12034:452","str::split":"2:12796:27340"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43920:13572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2943:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5537:2721":{"id":"5:5537:2721","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:719"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12837:33376":{"id":"2:12837:33376","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:1825":{"id":"0:72:1825","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12867:28092":{"id":"2:12867:28092","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39949:28085","Self::is_ascii":"2:12866:26690"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39949:28085","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:1039":{"id":"0:91:1039","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2741-0:298:1826":{"id":"b:2:2741-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:93:2357":{"id":"0:93:2357","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12820:28191":{"id":"2:12820:28191","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32420:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:192:1819":{"id":"b:5:687-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3053","5:690:3054","5:691:3055"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12774:31964":{"id":"2:12774:31964","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12775:31966"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44176:13686","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12861:33384":{"id":"2:12861:33384","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5554:26692":{"id":"5:5554:26692","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12869:26695"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32500:2831-0:192:1819":{"id":"a:2:32500:2831-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235:2093":{"id":"0:235:2093","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3495-0:230:1821":{"id":"b:2:3495-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2726-0:270:1823":{"id":"b:2:2726-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32418:244-0:284:1820":{"id":"a:2:32418:244-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32418:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2491:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2363":{"id":"0:94:2363","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5555:26693":{"id":"5:5555:26693","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12870:26696"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:2072":{"id":"0:71:2072","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2426-0:270:1823":{"id":"b:2:2426-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12765:28149":{"id":"2:12765:28149","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3495-0:270:1823":{"id":"b:2:3495-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:690:3054":{"id":"5:690:3054","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2072"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:212:2075":{"id":"0:212:2075","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:202:456":{"id":"0:202:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12858:33383":{"id":"2:12858:33383","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:1819":{"id":"0:192:1819","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2066","0:196:2068","0:198:2070"],"impls":["0:70","a:2:32418:244-0:192:1819","a:2:32500:2831-0:192:1819","a:2:42130:2771-0:192:1819","a:2:42131:2770-0:192:1819","a:2:2948:254-0:192:1819","b:2:2426-0:192:1819","b:2:2741-0:192:1819","b:2:2726-0:192:1819","b:2:2736-0:192:1819","b:2:3495-0:192:1819","b:2:2730-0:192:1819","b:2:2423-0:192:1819","b:5:687-0:192:1819","0:206","0:201","0:200","0:207","0:204","0:203","0:209"]}}},"b:2:2423-0:252:1818":{"id":"b:2:2423-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:249:662":{"id":"0:249:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2736-0:192:1819":{"id":"b:2:2736-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12849:25587":{"id":"2:12849:25587","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42002:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:719":{"id":"0:229:719","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2777:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32445:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:176-0:252:1818":{"id":"0:176-0:252:1818","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1818","glob":false}}},"2:12808:33371":{"id":"2:12808:33371","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12443:19863","str::split":"2:12796:27340","prim@char":"1:12034:452","str::split_terminator":"2:12805:33370"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43970:13674","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1812":{"id":"0:82:1812","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2208","0:84:2214"],"is_stripped":false}}},"2:12868:26694":{"id":"2:12868:26694","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2077":{"id":"0:213:2077","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2730-0:252:1818":{"id":"b:2:2730-0:252:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:719":{"id":"0:251:719","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2948:254-0:211:1822":{"id":"a:2:2948:254-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2943:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3497:1634":{"id":"2:3497:1634","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39762:12880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2084":{"id":"0:215:2084","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:198:2070":{"id":"0:198:2070","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12768:33368":{"id":"2:12768:33368","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1538","crate::ops::IndexMut":"2:3161:14527","str::slice_unchecked":"2:12767:33367"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12771:13689":{"id":"2:12771:13689","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43872:13667","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:719"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12779:28192":{"id":"2:12779:28192","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2741-0:270:1823":{"id":"b:2:2741-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:689:3053":{"id":"5:689:3053","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:2739:135":{"id":"2:2739:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2741-0:284:1820":{"id":"b:2:2741-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:719":{"id":"0:210:719","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2943:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:270:1823":{"id":"0:270:1823","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1754"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32418:244-0:270:1823","a:2:32500:2831-0:270:1823","a:2:42130:2771-0:270:1823","a:2:42131:2770-0:270:1823","a:2:2948:254-0:270:1823","b:2:2426-0:270:1823","b:2:2741-0:270:1823","b:2:2726-0:270:1823","b:2:2736-0:270:1823","b:2:3495-0:270:1823","b:2:2730-0:270:1823","b:2:2423-0:270:1823","b:5:687-0:270:1823","0:277","0:274","0:276","0:273","0:282","0:279","0:280"]}}},"0:0:1827":{"id":"0:0:1827","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1812","0:170-0:74:1813","0:171-0:77:1814","0:172-0:80:1815","0:173-0:76:1816","0:174-0:79:1817","0:176-0:252:1818","0:177-0:192:1819","0:178-0:284:1820","0:179-0:230:1821","0:180-0:211:1822","0:181-0:270:1823","0:183-0:73:1824","0:184-0:72:1825","0:185-0:298:1826"],"is_stripped":false}}},"0:272:1754":{"id":"0:272:1754","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"5:5540:34060":{"id":"5:5540:34060","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2486:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:267:662":{"id":"0:267:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1754":{"id":"0:286:1754","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:227:662":{"id":"0:227:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32445:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:84:2214":{"id":"0:84:2214","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2726-0:298:1826":{"id":"b:2:2726-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12785:27560":{"id":"2:12785:27560","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5543:34061":{"id":"5:5543:34061","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12747:875":{"id":"2:12747:875","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:452"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2730-0:230:1821":{"id":"b:2:2730-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12756:33366":{"id":"2:12756:33366","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12775:31966":{"id":"2:12775:31966","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12774:31964"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44185:13687","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2726-0:192:1819":{"id":"b:2:2726-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171-0:77:1814":{"id":"0:171-0:77:1814","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1814","glob":false}}},"2:12876:14494":{"id":"2:12876:14494","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4671:14494"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44210:13597","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2948:254-0:298:1826":{"id":"a:2:2948:254-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12796:27340":{"id":"2:12796:27340","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12443:19863","`DoubleEndedIterator`":"2:7826:128","prim@char":"1:12034:452","str::split_whitespace":"2:12774:31964","str::rsplit":"2:12802:28184"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43902:13568","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2486:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12814:28188":{"id":"2:12814:28188","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:452","str::splitn":"2:12811:28186","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44024:13677","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:34059","5:5537:2721","5:5540:34060","5:5543:34061","5:5551:34062","5:5552:34063","5:5553:2626","5:5554:26692","5:5555:26693"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42131:2770-0:230:1821":{"id":"a:2:42131:2770-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:170-0:74:1813":{"id":"0:170-0:74:1813","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1813","glob":false}}},"2:12767:33367":{"id":"2:12767:33367","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1538","str::slice_mut_unchecked":"2:12768:33368","crate::ops::Index":"2:39580:14526"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2736-0:211:1822":{"id":"b:2:2736-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2706:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2739:135","2:2740:1621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:2208":{"id":"0:83:2208","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:173-0:76:1816":{"id":"0:173-0:76:1816","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1816","glob":false}}},"b:2:3495-0:192:1819":{"id":"b:2:3495-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12855:33382":{"id":"2:12855:33382","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12463:19861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184-0:72:1825":{"id":"0:184-0:72:1825","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1825","glob":false}}},"2:12843:33380":{"id":"2:12843:33380","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12468:19860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2100":{"id":"0:253:2100","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12864:33385":{"id":"2:12864:33385","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12404:134","`FromStr`":"2:12403:14678"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42149:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12403:14678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12403:14678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42130:2771-0:284:1820":{"id":"a:2:42130:2771-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42130:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2426-0:284:1820":{"id":"b:2:2426-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2420:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2428:25530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:719"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3495-0:284:1820":{"id":"b:2:3495-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3493:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3497:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12777:33369":{"id":"2:12777:33369","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44166:13685","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2491:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:284:1820":{"id":"0:284:1820","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1754"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32418:244-0:284:1820","a:2:32500:2831-0:284:1820","a:2:42130:2771-0:284:1820","a:2:42131:2770-0:284:1820","a:2:2948:254-0:284:1820","b:2:2426-0:284:1820","b:2:2741-0:284:1820","b:2:2726-0:284:1820","b:2:2736-0:284:1820","b:2:3495-0:284:1820","b:2:2730-0:284:1820","b:2:2423-0:284:1820","b:5:687-0:284:1820","0:296","0:294","0:290","0:288","0:287","0:293","0:291"]}}},"b:2:2423-0:192:1819":{"id":"b:2:2423-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42131:2770-0:298:1826":{"id":"a:2:42131:2770-0:298:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42131:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12778:31977":{"id":"2:12778:31977","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44194:13688","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:662":{"id":"0:208:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32500:2831-0:211:1822":{"id":"a:2:32500:2831-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32500:2831","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2741-0:230:1821":{"id":"b:2:2741-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32420:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178-0:284:1820":{"id":"0:178-0:284:1820","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1820","glob":false}}},"b:2:2741-0:192:1819":{"id":"b:2:2741-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2710:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2744:135","2:2745:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2730-0:192:1819":{"id":"b:2:2730-0:192:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2732:746"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12873:28097":{"id":"2:12873:28097","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:895:35257"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5553:2626":{"id":"5:5553:2626","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2486:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12773:13552":{"id":"2:12773:13552","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43888:11396","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2428:25530":{"id":"2:2428:25530","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:270:1823":{"id":"b:5:687-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3053","5:690:3054","5:691:3055"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:230:1821":{"id":"b:5:687-0:230:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3053","5:690:3054","5:691:3055"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2726-0:211:1822":{"id":"b:2:2726-0:211:1822","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2703:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2700:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2729:2995"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:275:456":{"id":"0:275:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:284:1820":{"id":"b:5:687-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2439:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3053","5:690:3054","5:691:3055"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12866:26690":{"id":"2:12866:26690","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2948:254-0:270:1823":{"id":"a:2:2948:254-0:270:1823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2948:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:174-0:79:1817":{"id":"0:174-0:79:1817","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1817","glob":false}}},"5:691:3055":{"id":"5:691:3055","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32420:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32445:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12772:13699":{"id":"2:12772:13699","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43878:13668","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12782:27558":{"id":"2:12782:27558","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12443:19863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12448:14257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2486:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2423-0:284:1820":{"id":"b:2:2423-0:284:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32419:2830","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2417:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2425:2522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79:1817":{"id":"0:79:1817","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3132:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12839:33377":{"id":"2:12839:33377","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32420:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:719"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2943:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"11:2140:14226":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:42982:3079":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"22:6752:8492":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"5:786:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13882:11438":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"22:7425:4756":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"11:328:13521":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:43872:13667":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:9833:233":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:12418:14138":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:9681:3272":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:12016:25577":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:14969:11953":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"8:0:1828":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:40447:13603":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"22:8193:9451":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:945:14224":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"22:5215:7727":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:4745:7723":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"22:6817:8497":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:6243:14178":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:12115:14131":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"11:1087:34398":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:3687:9999":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"20:328:2620":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"2:43806:14282":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:5363:12371":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:45985:13062":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:6872:10044":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:22743:13590":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:4686:7718":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:21238:32257":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"10:0:2427":{"crate_id":10,"path":["adler"],"kind":"module"},"5:2979:32787":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:4603:7711":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:4092:3103":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:12220:11477":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:914:14217":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:5004:10022":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:44194:13688":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"22:7335:8905":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"22:5479:7759":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:44510:13714":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"18:481:13308":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:13121:11540":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"11:856:14222":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"22:478:3731":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"6:4824:7732":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:15527:12118":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"22:6911:8529":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:2183:13535":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:12053:1641":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:13339:14514":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10016:21361":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:2710:264":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:21564:14576":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:15961:11544":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:47200:13112":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:3161:14527":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:4050:9999":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:10959:13676":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:8294:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"7:31:20290":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:5111:7772":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:12659:21364":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:8844:13239":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:11767:14120":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"18:707:13319":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:12614:21385":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:893:2617":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:9891:21363":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"22:6405:8461":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:9888:3258":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:15546:12124":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:39580:14526":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:10451:10104":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:8564:13742":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:44476:19876":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"11:1142:14229":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:621:2221":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:33586:2636":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"22:1637:4643":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:482:10077":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:8167:14213":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:32418:244":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"21:0:1828":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"2:3602:2617":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"22:8243:7937":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"22:5594:7770":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:10513:14304":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:10299:112":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:16004:12238":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:11459:14099":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"5:7285:13544":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"22:5553:7766":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:10973:13677":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:5941:8424":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"11:787:13525":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:4639:11159":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:5104:7771":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:16170:11553":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"6:1718:4651":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:1570:4636":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:6268:34416":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:3735:14311":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:12005:14501":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"22:1661:4645":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:41926:13656":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"11:1107:14228":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:6682:3608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:9016:14355":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:13935:11675":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:9678:21367":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11023:10107":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"11:2151:14227":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:6927:7741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:3581:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:40356:13598":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"22:6413:8462":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:44633:13721":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13097:11539":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11617:13340":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:903:10034":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:11345:11426":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:2169:21441":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:4366:271":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:12224:13681":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:15631:12146":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:2600:10066":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"18:515:11272":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:42556:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:43055:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:32533:113":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:3732:14310":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:47230:13113":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:32348:12693":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:48074:13151":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:21893:32270":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:40603:14272":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:5897:8465":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:533:2694":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"22:1684:4648":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:8302:14345":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:9882:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:12380:11484":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:40530:31034":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:939:14222":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4440:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:6934:8917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:4159:14640":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:8816:13237":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:31164:203":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:38171:19986":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:5625:227":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:15027:11967":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:22495:13581":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:9028:14357":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:3251:13529":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:4700:14655":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:12746:13363":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:21219:32267":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:5743:13385":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:8239:12494":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:10530:246":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"22:1619:4641":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:867:13524":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:12050:795":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:22729:12804":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2586:10079":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"22:5048:7713":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:12035:1659":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:30602:9503":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:12191:11473":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:5955:8425":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:9790:21380":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:46562:13086":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"22:6876:7600":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:16062:12253":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"6:7598:7937":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:1550:13526":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:4774:12358":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:9877:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:7365:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:8281:12563":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:15384:12062":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:7376:2619":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"22:1563:4637":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:6194:14327":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"0:0:1827":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"2:13044:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4764:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:11357:13757":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:46706:13090":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:10510:14070":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:12057:1698":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"22:6710:8487":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:10035:11387":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"22:5441:7754":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:1567:13529":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:4535:7703":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:41903:31017":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"5:7307:10010":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:32501:2971":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:12403:14678":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:4380:2566":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:4928:14068":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:12029:11470":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:12052:1640":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:22564:13582":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:42192:3102":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"9:0:2426":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:3425:13215":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:48410:13167":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:8159:13212":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:1691:10022":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:42070:3103":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:21447:14704":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"9:357:20319":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"11:2548:12691":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:6818:13478":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:43492:13664":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:33107:12447":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:6162:10090":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:3594:3102":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:44895:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"22:464:3729":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"2:4513:2577":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"22:4860:7690":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"22:5620:7772":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:8975:14352":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:5727:13383":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:40367:13599":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:42141:2702":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"5:4020:2617":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:119:3765":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:7597:34413":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"18:80:25508":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:10510:14302":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:42515:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"22:5010:7708":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"11:2542:12690":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:569:3740":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"11:102:1969":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:8148:13211":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:8283:13738":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"22:6896:8528":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:44185:13687":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:14843:11937":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:1556:13527":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:1617:2403":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:588:3743":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:4401:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:5571:14683":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:15710:12166":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:1558:4635":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:44166:13685":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:3166:26487":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"11:2124:13496":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:4998:7756":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:1913:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:2323:636":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:7563:2565":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:8139:12493":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"22:1488:4628":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:39701:223":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11645:13342":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:44937:13729":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12459:11410":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:15212:12016":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4647:7715":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"10:44:12697":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:39776:12881":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:2228:14063":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:261:14054":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:38915:19990":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:42120:2768":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:7451:2701":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:14765:11895":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:39494:3105":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:10941:14077":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:46918:13107":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"22:4998:7707":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:1650:4643":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:42739:3256":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"22:5485:7760":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:40546:13611":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11426:14097":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:12051:1643":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"22:1678:4647":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"22:537:3737":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"17:16032:12245":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:4488:7697":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:40659:13613":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:7542:14378":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:4745:12357":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:9445:136":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"16:6960:14190":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:5859:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:10950:14078":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:4030:10022":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:4449:2574":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:8050:12551":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:11818:10115":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:1760:14292":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6968:21319":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:5877:2617":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:3239:14304":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:10569:34427":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:2504:12295":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5049:12367":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:15224:12017":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:4231:14313":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"22:4866:7691":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:12310:11479":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:41221:13647":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:14757:11892":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:10075:14360":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:12443:19863":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:8328:14349":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:4585:12353":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"22:5348:7744":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"17:10471:34420":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:10964:13239":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:11497:11429":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:13707:11643":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:4865:224":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:4998:856":{"crate_id":2,"path":["core","iter"],"kind":"module"},"5:5992:10030":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"14:40:11541":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:21573:14705":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:1424:3102":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:15943:11543":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:11369:11428":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"22:5279:7735":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:43477:13046":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:15279:12035":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:8134:13514":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:11001:14081":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"22:7557:8916":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:15244:12024":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:11342:13257":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:11743:14118":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:4860:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:40518:13610":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:1301:14226":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:15659:12155":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:7281:31062":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"9:330:12734":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:48196:13154":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:12273:11513":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:742:14218":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"12:0:2429":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:15287:12038":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:14099:11714":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"18:755:13326":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:10408:14350":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:4742:14632":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:22226:31535":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"5:6960:270":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:10136:14580":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:1591:4638":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:12674:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:2333:3063":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"22:5240:7730":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:2256:13540":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:2154:13533":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4955:7752":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"22:1501:4630":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:3160:29612":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:2911:10082":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:10225:14685":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:9096:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:47762:13147":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:6862:10042":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:14296:11745":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:42634:2589":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:10667:34426":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:14989:11961":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"11:710:14217":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13347:11560":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:4497:12350":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:12410:11488":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:4584:7709":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:30794:31031":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:22136:14791":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"17:11978:14124":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:4212:10022":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:4949:12364":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:13235:114":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:4151:14639":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:32409:13594":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:4428:7690":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:43902:13568":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:46039:13064":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:1538:2619":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:6171:213":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:909:14231":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:10813:34428":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:12009:11421":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:11518:14311":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:12046:800":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:46760:13092":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"22:4948:7700":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:15990:12234":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:39679:221":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"22:6558:8473":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"22:4920:7697":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:8332:3514":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"21:4:1828":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"17:15062:11977":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:42972:13033":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:44924:13057":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:12572:14145":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"16:3600:12340":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:14786:11902":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:5344:9999":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"18:660:14048":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"11:2326:14226":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"6:4783:7727":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:2439:111":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:1691:4647":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:46964:13108":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:6415:13444":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"9:177:14427":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"7:78:20297":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:5574:12314":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:10093:150":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:40623:14273":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"22:5118:7718":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:3225:13526":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"11:1603:14233":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11088:11414":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"18:681:13313":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:22843:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"18:614:34431":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:15037:11968":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:4462:12349":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:12596:14147":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4870:7738":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:11155:13327":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"22:5511:7762":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:46340:13079":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:5634:13374":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10726:34421":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:41962:13027":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:6897:10096":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:4878:7739":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:30333:14617":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:10355:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:22442:13580":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:42746:3258":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"22:5524:7763":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:11269:11410":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:2722:12304":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"22:1583:4639":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"11:2569:13546":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"18:507:11269":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:7850:13733":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:12701:11509":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:32402:2575":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:11486:14263":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:42208:2619":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:12387:21508":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:4375:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:2777:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:14887:11941":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:11595:13258":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:14662:11809":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:11478:14310":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:44641:13723":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:6346:14189":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"22:5170:7722":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:7840:9846":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:6915:12324":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6837:8912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:2370:14566":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"14:7:14214":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:6764:4758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:23710:12805":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"22:5577:7768":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:10051:11388":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:533:3735":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:7862:13504":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:3493:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:7054:13491":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:6711:8907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4578:7708":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:6226:14174":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"11:700:2619":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"22:8284:7943":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"15:306:20407":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:11315:14375":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:7534:12328":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:14904:11943":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:11984:14265":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:10974:11410":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"11:123:9987":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:10915:14076":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:5068:7768":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4543:7704":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"18:671:14052":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:9354:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:6961:8919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"22:7542:8915":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"22:5561:7767":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:13989:11683":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"11:1582:14232":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:44839:214":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:7645:14576":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:5961:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:10676:3102":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"22:8249:7938":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:40473:13606":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:14057:11693":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"22:6632:8478":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:34419:12456":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"22:5632:7774":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:6499:12333":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:11607:26588":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"22:7344:8906":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:11122:13237":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:46538:13085":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:7613:14208":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:7708:12332":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:42002:201":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"22:1669:4646":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:12037:1152":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:15612:12141":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:5763:13555":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8980:114":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:2864:12310":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:42217:203":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:357:2708":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:11563:13336":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:6012:8473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:44874:13896":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:4180:14642":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:15125:11993":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:44425:13704":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:7531:11384":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:39584:13595":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:6083:20424":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:1536:14238":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:6117:10022":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:32500:2831":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:4641:12355":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:7736:12504":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:14021:11687":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:1063:14227":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:6159:8496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4989:7755":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:7633:7942":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"9:450:20304":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:12510:11491":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:10207:11394":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:10559:14071":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:11243:13253":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"22:6725:8489":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:33645:19981":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:5082:14316":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:3670:14616":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:22268:14794":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:42595:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:6332:12313":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:40350:13597":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:489:3731":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:4480:7696":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:9541:14436":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:9884:3256":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:15:2535":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:307:1589":{"crate_id":1,"path":["std","thread"],"kind":"module"},"1:2205:3070":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:44219:13602":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"22:1705:4651":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:7317:33138":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:46091:13066":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:5154:10030":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"22:1508:4631":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"22:1690:4649":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:42732:3257":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"18:609:14047":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"14:221:12641":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:590:11277":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:6596:14697":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:2907:12312":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:7740:14545":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:6691:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:1821:14294":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:21445:14576":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"22:6487:8424":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:7826:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:5121:12369":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"22:1483:4627":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:1743:659":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:555:3738":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:6204:14159":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:40431:13602":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:7462:12496":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:14878:11938":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"22:6660:8481":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7090:13495":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:4473:7695":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:4821:14629":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:8195:13515":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13235:11547":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:3217:13528":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:38336:19989":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:6070:10086":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:6430:14328":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"18:644:11269":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"22:8008:9289":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"22:5396:7750":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:30618:3079":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:43888:11396":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:12324:13359":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:12457:13319":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:7423:13546":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"11:837:14219":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:40419:13601":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:7217:19974":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:48318:13163":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:11507:11430":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:11126:14085":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:6543:14695":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:13478:11590":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"22:7463:8911":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:15108:11990":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:11621:13762":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:40842:13635":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:10716:14370":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"16:3315:12338":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:401:14055":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"11:1923:13529":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:14778:11901":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:6889:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"20:0:1829":{"crate_id":20,"path":["smallvec"],"kind":"module"},"1:8961:13244":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:928:14513":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:43262:154":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:44319:13697":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:6687:13463":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:5816:13390":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:9949:13653":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"6:1537:4633":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:10925:21396":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:10657:11421":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:4835:12360":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:3980:14622":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:21851:14576":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:2426:2439":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:10137:11392":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:4915:14654":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:12684:11360":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:836:3102":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:7297:2617":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:3343:10034":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:11156:10211":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:3126:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:4698:7719":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13395:11565":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:22003:14576":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"22:5626:7773":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:4635:11155":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:40560:8530":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:40409:13600":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:33763:19982":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:22677:31027":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:2975:12776":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"22:6515:8469":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:45915:13059":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:4182:10022":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:11175:2632":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"16:2284:20425":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:1270:13496":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:33527:2634":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:10172:11393":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"22:5016:7709":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"22:5411:7751":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:2354:14562":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:6136:11071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:6156:13435":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:344:2622":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"2:40719:13622":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:5830:13391":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"22:7385:4773":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:12468:19860":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:5648:14150":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:495:2918":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:11991:11468":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"22:8290:7944":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:3278:14306":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"11:2536:12689":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:2943:116":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"22:5498:7761":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"6:4461:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:14181:11729":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:12448:14257":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:12052:11471":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:11576:13337":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:15903:12220":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:4265:2587":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:2788:12307":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:4491:14645":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:4773:14067":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:21392:14576":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:6466:10093":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:43952:13673":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:14698:11840":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:3915:12345":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"18:766:25520":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:40828:2102":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:1896:12780":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:2657:14576":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:11536:13334":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:10918:14333":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:46140:13068":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:39755:14271":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:10790:126":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:11372:13802":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:8921:2769":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:39637:219":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"22:5060:7714":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13145:11541":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:14251:11738":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:40395:13011":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:13093:212":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:9032:14257":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10785:34425":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:692:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:0:314":{"crate_id":5,"path":["alloc"],"kind":"module"},"22:5372:7747":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:7474:14201":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:4884:7740":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:5075:7769":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"9:507:12755":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:3510:14594":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"22:5196:7725":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"11:1917:13528":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:6913:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:13118:14267":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"22:4912:7696":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:12486:11490":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:1777:635":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:46109:13067":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:7503:12493":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:557:2696":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:2700:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"22:4981:7705":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:11945:14122":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:6425:13445":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:43920:13572":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:5322:12370":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"22:577:3743":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"17:11412:14096":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:46170:13069":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:9886:3257":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:15079:11982":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:5639:13730":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:10880:13572":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:5592:10022":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"6:5910:8466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:6297:227":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"22:6605:8475":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:4908:7747":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:46737:13091":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13056:11531":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:3098:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:2946:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:10293:11396":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"22:1626:4642":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:886:10007":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:44653:10211":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:6299:13557":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:6531:13457":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:13633:11627":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:14041:11688":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12953:11520":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:12536:14142":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"5:7524:10031":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:2352:3056":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:2944:233":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:15117:11991":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"9:486:20303":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11958:11465":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:5632:2234":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:1094:14057":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:15507:12112":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"22:1557:4636":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"22:8296:7945":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:1286:14227":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"22:5419:7752":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4800:7729":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:6456:13447":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:7903:13735":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:5381:14317":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"11:811:10034":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:7691:2253":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:2335:3064":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:10102:11391":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:22328:14786":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:43292:13663":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:7111:3012":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:21182:2983":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"9:426:20306":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:14633:11789":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:48333:13164":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:15253:12025":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:42320:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:10700:3103":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:22580:12787":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:2359:12289":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"15:0:2431":{"crate_id":15,"path":["addr2line"],"kind":"module"},"22:5292:7737":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"11:2554:34397":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:3966:14621":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:7004:10045":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:43784:14281":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:13809:11658":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:22:733":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:3738:13532":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:1796:14293":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:7492:13497":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:11998:19864":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:10716:14073":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:16146:12272":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:4625:14624":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:48234:13157":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:7925:14337":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"22:6520:8470":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:1576:4637":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:1151:34356":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:3196:33142":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:3021:12452":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:46659:13089":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:7128:13245":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:3338:19904":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:15432:12099":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:44201:13603":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:11243:14090":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:6114:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:10775:14074":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:8222:13684":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:6813:8910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:40593:10052":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:44006:13676":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:12366:21507":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:12463:19861":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:5384:21311":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:22631:12791":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:4252:3102":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:4126:108":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:36295:12457":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:2658:19926":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:7756:14333":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:10316:26547":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"17:11469:14100":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:30596:2628":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:7935:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"22:5386:7749":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:4549:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13273:11549":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:7368:2619":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:7277:2619":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:1784:9499":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:536:13366":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:6041:21315":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:42359:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:922:14219":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:41773:13019":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:15689:12163":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:12584:14146":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:10608:14072":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:9149:2633":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:6086:8478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:15519:12115":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"11:1051:14227":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:8310:13217":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:1789:10034":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:4411:10022":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:32445:251":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:14170:11728":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:47414:13115":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:48295:13162":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:12041:1624":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:43253:13661":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:4932:7750":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:8288:14643":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"22:1533:4634":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:15133:11995":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:3372:2583":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:12185:13675":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:7601:10101":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:8013:14605":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:2048:13532":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:15493:12106":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"22:7481:8912":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:4167:14641":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:6100:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:3111:2584":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10735:13745":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:46229:13072":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:2548:12297":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:3930:14620":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"22:558:3740":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"2:38281:19988":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:10803:14075":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:13724:11646":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:11817:21483":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:6545:12388":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:3830:12343":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:5588:12317":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"14:187:20394":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:5661:13378":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:6484:2617":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:9559:21362":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:6666:4585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:4417:12348":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"3:0:479":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:0:534":{"crate_id":2,"path":["core"],"kind":"module"},"17:12077:14125":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:46210:13071":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:2380:12290":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:40:9995":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:2144:2690":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:640:14286":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46994:13109":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"22:5302:7738":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:2992:2969":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:42200:3103":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"11:1025:14226":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:6352:13440":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:13322:11558":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"18:521:25521":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:5974:8470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:7498:13550":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12828:11513":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:542:3736":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:7679:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:12548:14143":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:563:3739":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:7768:12320":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:15003:11965":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:12034:452":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:13026:11527":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:11141:14086":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:16016:12240":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:10246:10062":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:149:9984":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:12055:1639":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"22:5286:7736":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"22:4881:7693":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:4922:7749":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:32388:12494":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:5995:13369":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:46840:13093":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:5568:3453":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"20:97:2618":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"17:11476:1964":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:10807:14258":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"22:8324:7948":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"5:3818:10034":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:8868:2619":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12930:21388":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:1682:4646":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"22:7310:4585":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:6985:27534":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"11:844:14513":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:501:3732":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"22:6694:8485":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:11027:11377":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:44106:13682":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:11113:14084":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:13856:11663":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:40700:13619":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:9894:3260":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:22228:3063":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"20:164:9980":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"20:350:2623":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"18:538:11274":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:7582:12497":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"11:299:13518":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6467:13448":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:2941:2582":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:4434:7691":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:39762:12880":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:7722:12322":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:654:4626":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:11968:20040":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:4854:7736":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:4566:7707":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:7651:7945":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:4616:7713":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:1387:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:14122:11723":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6222:8527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"22:5098:7716":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:15329:12047":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:12039:1505":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:47076:13110":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:3080:19835":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"22:6646:8479":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"22:5325:7741":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:46486:13083":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:3482:3255":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"18:719:11287":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:7339:217":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:1496:4627":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"22:5130:7719":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:43860:13666":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:10101:154":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:7535:250":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:1516:14218":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:14266:11742":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:9111:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:42242:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:23761:243":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:40439:13597":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:43696:13573":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:1685:9999":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:5085:7770":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:4516:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:1514:4630":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:2368:14565":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:48120:13152":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:22199:14576":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:14455:11773":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"22:544:3738":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"2:40751:13627":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:2200:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:15868:12190":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"6:4947:7751":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:43496:13665":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:44282:19875":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:41192:13643":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"6:4808:7730":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"22:4955:7701":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:33704:19980":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"22:4783:7685":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:8860:14351":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"22:6764:8494":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2:21466:12784":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:11439:14098":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:1674:4645":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"9:52:14417":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:13663:11635":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:4311:14314":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:2985:2967":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:8852:3102":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4496:7698":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:40780:13630":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:2197:14060":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:6644:240":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:8276:13737":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:15294:12039":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:16180:11558":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:7284:2767":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:11307:14093":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:3049:20454":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:23151:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:12040:1538":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:10922:12752":{"crate_id":1,"path":["std","sys","pal","unix","os_str","Buf"],"kind":"struct"},"2:21453:14707":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:40852:13636":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:7343:3687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:40630:13576":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:7908:13736":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:42398:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:15842:11539":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:14282:11743":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:42437:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"13:226:12688":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:5052:7767":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"14:202:19877":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"11:364:9988":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:14509:11787":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:5395:14319":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:2662:14301":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:11590:13338":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:15101:11988":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:48214:13155":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:13742:11647":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:8192:13613":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:10770:13172":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:23548:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:2697:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:12259:13571":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:12049:799":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:7797:2833":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:4862:12361":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:7041:13488":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:40690:13617":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"4:0:2425":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:14485:11480":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:1697:4648":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:7028:10097":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"22:5079:7715":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:7751:19971":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:10329:10066":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"16:7694:12331":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:10520:34424":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"18:113:25510":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:42753:3259":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:40710:13620":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:8553:13236":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:13976:11682":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:21204:32263":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:6357:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:14324:11751":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:12047:797":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:256:14053":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4841:7734":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:10881:21395":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:13254:11548":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"22:6375:8396":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:2420:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:7331:2619":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:7342:34418":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"20:331:2621":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"1:10818:26527":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:44912:13728":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"22:5584:7769":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:7006:14191":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:11001:14262":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:7867:13734":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:44617:13717":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:15480:12100":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:22616:31036":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:6494:10058":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"16:6513:13449":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:5403:11387":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:15267:12032":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:22357:14787":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"22:6538:8472":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:9651:21377":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:595:11384":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"22:5256:7732":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:15160:11999":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:12127:14132":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13309:11556":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:5650:2621":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:30562:9502":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:8171:14575":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:6753:13465":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:9455:703":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"16:5905:13399":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13218:11546":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:40982:13639":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:4776:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"22:7442:8908":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:10133:14362":{"crate_id":1,"path":["std","sys","pal","unix","os_str","Slice"],"kind":"struct"},"22:5673:7779":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:11983:13803":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:13083:11538":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:47872:13148":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:39657:222":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:1019:2343":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"1:4744:14633":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:22548:12786":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:0:1530":{"crate_id":1,"path":["std"],"kind":"module"},"5:6013:20269":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:43000:32250":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:8003:14338":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:8986:2693":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:9860:21382":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:6844:12423":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:44176:13686":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:16160:12273":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"22:4893:7694":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:4102:14251":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6361:13441":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44709:20078":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:6843:2621":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:11755:14119":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:8008:14339":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:511:14056":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:11065:11412":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"3:234:233":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:8294:14348":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:44210:13597":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:2522:202":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:15049:11971":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:6741:4773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:7677:217":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:10946:25579":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:918:14218":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:11523:13332":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:3357:32546":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"22:5432:7753":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:4710:7720":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:12356:13361":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"11:687:3103":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:3065:11294":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:40499:13012":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:46516:13084":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:12038:339":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:1406:153":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"22:8025:9290":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"18:599:34429":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:9106:242":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:22656:31009":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"22:6717:8488":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"22:5378:7748":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12264:13356":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:5419:11388":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:13419:11567":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:10344:10070":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"22:6734:8490":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"16:8115:13511":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:2031:14059":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:7622:7941":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:40513:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"22:5221:7728":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:7657:7946":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:3837:14312":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:7828:12513":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:849:3103":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:40771:13629":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"22:7608:2907":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"6:1734:4652":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11399:14095":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:7610:7939":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:13285:11552":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:39597:220":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:14426:11770":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:14087:11712":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:21394:14708":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:15192:12009":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:4666:7716":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"22:1515:4632":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:15535:12119":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:15671:12157":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:6721:21318":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:4964:14660":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:4383:14315":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:0:2432":{"crate_id":16,"path":["gimli"],"kind":"module"},"11:2304:13496":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:7268:9675":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:1505:14217":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"11:875:14224":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"11:774:13524":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"9:393:20305":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:5612:12319":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:44637:13722":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"22:5035:7711":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:4469:14644":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:7747:19972":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"11:351:34394":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"16:6485:12316":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:9023:14356":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:6483:13562":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:46392:13081":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:15200:12010":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"22:4961:7702":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:4569:14650":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:12898:21387":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:8243:2627":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:5825:10085":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"22:7512:8913":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:40992:13640":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:45961:13061":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:2983:32786":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:4533:1950":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:2933:20452":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:2670:12302":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"22:7457:8910":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:42053:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:13684:11639":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:14950:11952":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:44672:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:11395:14094":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:5829:8396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:3155:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:3323:14602":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:4898:420":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:5963:14152":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:9968:21384":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:2744:12305":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:40454:19921":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:12180:14136":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:4740:14630":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:40728:13623":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:588:14493":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:48269:13160":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:880:13525":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:10242:11395":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:13896:11671":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:42062:3102":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:10054:14293":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"18:96:25509":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:6569:12321":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:16134:12269":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"16:4613:12354":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:7635:10038":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:1721:4652":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:14399:11766":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"22:5187:7724":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:6610:10094":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:44462:13705":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:1545:10034":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"22:7448:8909":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:15645:12148":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:1873:14295":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:4149:19834":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"22:7362:3514":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"22:8261:7940":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:2694:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:859:2619":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4755:7724":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:13162:11543":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:11657:13345":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:6944:34414":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:9071:13248":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:48223:13156":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"11:1896:10034":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:41206:13645":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"11:832:14231":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"15:394:20416":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:9252:9676":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:44024:13677":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:46608:13088":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:13448:11578":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"11:883:14225":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:9896:3261":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:12054:1642":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:1486:13525":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:10141:13566":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:8181:12334":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12255:13355":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:1541:2617":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:8405:13228":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"22:6625:8477":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"18:652:11269":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:5891:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:4527:12351":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:4504:2576":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"22:5649:7776":{"crate_id":22,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"6:6798:8908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:15356:12054":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:21236:32272":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:4719:12356":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:3230:33141":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:2209:14559":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"22:7580:8918":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:30630:31014":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:40681:13616":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:45939:13060":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:43245:13660":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:44070:13680":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:4364:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:14921:11944":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:1528:4632":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12999:11524":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:1969:204":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"14:165:20387":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:41756:13017":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:22722:13587":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:5140:7777":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:5123:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:1024:9999":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"22:522:3735":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"22:5366:7746":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:6540:14329":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:11539:14312":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:44052:13679":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:23074:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4455:7525":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:2321:12281":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"22:4975:7704":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:4523:7701":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:2696:12303":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:15589:12140":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:7554:12329":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:12972:11523":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:5308:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:7933:13532":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"22:6666:8482":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:22282:3063":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:12045:695":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"6:6781:4756":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:7616:7940":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:6898:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:4610:7712":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"18:727:11290":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:11012:10106":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:10315:11398":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13491:11594":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:39533:19836":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:1909:706":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:12784:13364":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:10809:26525":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:12872:11515":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:3500:14574":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:12058:1248":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:3753:14239":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:10745:13733":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:16087:12261":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"16:5712:13380":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:46294:13074":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:3655:11299":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:12335:11480":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:504:2690":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:1546:4634":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:22005:14706":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:3797:12342":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"14:0:2430":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:7568:12330":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6120:8482":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:22693:31043":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:14359:11763":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:43771:13576":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:1819:9676":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:475:3729":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"22:5639:7775":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:48280:13161":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5885:8463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:7784:143":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:4737:19915":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:15177:12007":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:34246:19985":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:9349:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:13922:11674":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:1439:3103":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:6901:12323":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12301:13358":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:7318:12475":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:951:14225":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:7621:21322":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:12560:14144":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"22:5310:7739":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:8893:13241":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:1203:14058":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"22:4887:7525":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:15855:11540":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"16:2305:20451":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:3461:12339":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:5939:13405":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:2406:12291":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:10740:13747":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"17:15013:11966":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:9624:21360":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:41006:13641":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:1495:14231":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:14346:11762":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:5015:7763":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:14235:11736":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:5753:14325":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:5415:14320":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:7582:10099":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:6318:12383":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:44621:13718":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"11:1007:13496":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:12797:11512":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4968:7753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"11:1066:20381":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"22:6674:8483":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"11:2469:10034":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:4376:228":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:46584:13087":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:43077:3265":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:5088:12368":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"22:531:3736":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"17:15733:12170":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:3443:14309":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:8215:13568":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:2996:1956":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:2596:12299":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:44625:13719":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:43237:13658":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:5146:7778":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:22755:14618":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:1455:2619":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:47950:13149":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"22:5156:7721":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:5128:211":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"22:6593:8474":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:13334:11559":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:12230:13347":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:6929:12432":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:4789:7728":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:7523:13501":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:4738:7722":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:33900:19983":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:0:2433":{"crate_id":17,"path":["object"],"kind":"module"},"1:5446:112":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"18:699:13317":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:6792:13477":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:6687:9999":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:574:3741":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8234:14347":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"14:160:14214":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:3491:26799":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:4053:12346":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:32419:2830":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:39723:14506":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:43734:14280":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:10432:34423":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:4919:31235":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:527:3734":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:43878:13668":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:4889:12362":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"22:4988:7706":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8993:25578":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:43724:13575":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:21192:32263":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:5987:227":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:3332:144":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:1562:13528":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:8354:13218":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:9101:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"18:736:25519":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6600:21317":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:7371:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:15557:12125":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:10852:21394":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:22313:14576":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"16:2881:12311":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:6263:8529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"22:5542:7765":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:43037:3079":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:1507:4629":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:3163:26491":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:42131:2770":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:4308:1949":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"20:281:2619":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"2:44821:226":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"22:7571:8917":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:15680:12161":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:6658:3781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"18:574:11269":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"11:2352:14227":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"13:0:2424":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:8906:14700":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:13246:10075":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:10780:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"11:2498:20377":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:14373:11764":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:790:10002":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:4168:19906":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:5876:13556":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"15:288:20406":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:3199:14302":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"18:624:34430":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:6943:8918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:830:10005":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:5921:8467":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:3988:14623":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:723:151":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:4234:2586":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:11449:11339":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:48254:13159":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"22:6685:8484":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:9892:213":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:42149:233":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13436:11575":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:9457:10103":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"22:1578:4638":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:46007:13063":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"18:0:2434":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:7734:14500":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:3366:13647":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:4388:7688":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"11:1883:3102":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"22:5208:7726":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:2644:12301":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:4344:12347":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"18:582:2983":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:266:9999":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:16123:12267":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:7639:7943":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:9813:21381":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:4902:7746":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:12000:14438":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:4724:7721":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:41733:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:4628:7714":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:40760:13628":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:8938:14701":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:43970:13674":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:1131:33131":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:43645:14278":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"22:4905:7695":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:34073:19984":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:43846:13049":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:16098:12262":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"11:2369:14235":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:2953:2581":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"11:2443:2617":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:13676:11637":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"22:5232:7729":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12445:14141":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:11455:10111":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:41790:14615":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:10337:11399":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:12208:13678":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:40742:13626":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4893:7745":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:5004:7757":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:6107:8480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"22:496:3733":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"17:11014:14082":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"22:5027:7710":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:11485:14105":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:6017:21314":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:10987:14261":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:8478:13231":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"22:472:3730":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:4459:2575":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:6426:13645":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:2450:12293":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"22:8313:7947":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:15311:12043":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:9759:21379":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:636:11286":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:4:1115":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:10800:13212":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:2788:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:11321:11421":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:13909:11672":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:4820:7688":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:11666:13346":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:2472:12294":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:7660:12501":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"22:4928:7698":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"22:5532:7764":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:14896:11942":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:9890:3259":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:11800:11434":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:5807:258":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:2972:3053":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:21250:32260":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"22:4833:7689":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:7917:14336":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:15087:11985":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:6386:12385":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:4444:10024":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:7138:30927":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:15980:12233":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:12718:21386":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:13754:11649":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:13182:11544":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:46370:13080":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:23386:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:5033:7765":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:48158:13153":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:3327:261":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:41230:10060":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:16109:12263":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:2706:265":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:7436:12495":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:21221:32269":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"11:1160:14230":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:7651:14209":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"22:5142:7720":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:41939:13737":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:22639:12792":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:5971:2234":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:10931:14322":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"11:1903:13526":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:11727:14116":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:7511:13553":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13383:11562":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:11292:10109":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:40480:19922":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:6128:8483":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"22:5332:7742":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"1:9166:2711":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"16:2574:12298":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:32531:2970":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:4986:12365":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:1477:13524":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"11:396:9990":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13869:11666":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:548:3737":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"14:31:14214":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:7015:12437":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"22:5262:7733":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:4957:14255":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:2528:209":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11136:13238":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"11:673:3102":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:12600:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:683:257":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:15235:12021":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:40379:31030":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:123:3766":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6169:8497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:10067:11389":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:21856:14710":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:12044:693":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:2417:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:44645:13724":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:634:14236":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:9730:21378":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"22:8337:9487":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:7391:21321":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:14312:11749":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:7857:13172":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"22:6771:8495":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:3584:14066":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:23228:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:22091:14790":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:3344:19903":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:26163:273":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:41215:13646":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:11148:26528":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:44818:147":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:41199:13644":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"22:7408:4758":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:42476:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12474:11421":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:2380:14571":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:507:3733":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:6742:13464":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:11714:14114":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:2766:12306":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:1596:4639":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:12290:13357":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"5:2236:33177":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:7333:19966":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"22:6501:8425":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:1703:4649":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:12514:19869":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"18:564:11276":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"22:4967:7703":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:2486:208":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"11:800:2617":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"22:1545:4635":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:32420:252":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:9943:21366":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:12148:13670":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"22:490:3732":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"1:12032:402":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:2518:14299":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:32395:14270":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"22:7355:8907":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:22997:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:6819:8911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:6079:8477":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"18:690:13316":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:6718:3514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"14:215:13516":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:44629:13720":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"6:4676:7717":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:14413:11769":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:8455:13042":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:7102:21320":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:48348:13165":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:48243:13158":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:14208:11732":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12166:14135":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:5760:21313":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"11:1676:9992":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:281:1968":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:6489:13561":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:5928:8468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:6189:13438":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4529:7702":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:7544:13502":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"22:6617:8476":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:6700:8906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:38226:19987":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:15337:12049":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"22:7302:3781":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"22:8267:7941":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:3736:2619":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13516:11598":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:42087:2767":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"22:5473:7758":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:1966:205":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"22:5667:7778":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"22:44:2909":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"22:6467:8467":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:1972:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:415:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:2491:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:1054:14226":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11675:11495":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:10516:14306":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:41240:13013":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:903:3102":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"22:6443:8465":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:3241:14305":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:23629:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:7788:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"22:585:3744":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"1:9130:2632":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:1527:217":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:3280:14307":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:5673:12318":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"22:8255:7939":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"22:5613:7771":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:10758:13752":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:44398:13703":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:14497:11780":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:43274:13042":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:4557:12352":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:5982:13408":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:10962:14079":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"22:6431:8463":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:21575:12784":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:15374:12057":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:2474:12773":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:9050:25588":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:10556:2253":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:33293:19979":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:12103:14130":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:3394:10022":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:7619:10034":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:43028:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:2948:254":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:9852:141":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:13202:11545":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:42130:2771":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:7702:9488":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:7347:13545":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:40803:13632":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"11:1910:13527":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:6279:12380":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"11:1566:20382":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:9188:26636":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:16076:12256":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:44304:13691":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:22214:14793":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"6:5009:7758":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:11194:21414":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:5240:210":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:46247:13073":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:2339:12283":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:7269:34415":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:7670:2700":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:46440:13082":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:5431:14321":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"11:1891:2617":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:62:3728":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:2810:12308":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:4449:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:4806:12359":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:1710:4650":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:5867:8462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"22:563:3741":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"2:13284:149":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:2062:14239":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:12345:11483":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13297:11553":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:1072:14230":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:12140:14133":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:3994:14624":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:1758:14291":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:8205:21325":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:2202:14298":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13961:11679":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:44156:13684":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:11193:10210":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:3001:2635":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:8798:14350":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12202:21506":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:9452:14334":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"6:4977:7754":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:10918:14260":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"22:5340:7743":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:12921:11480":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:5696:21312":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:5023:7764":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:8922:14699":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:11384:13759":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"22:5453:7755":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:11932:14121":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:4595:7710":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:1040:13496":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:22604:13586":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:11215:13330":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:40672:13614":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:3032:12335":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8547:3102":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:6146:10075":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"7:0:1688":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6261:14186":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:8097:13508":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:11309:13753":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:16049:12247":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"6:4847:7735":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:14145:11724":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:645:14496":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"22:516:3734":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:5866:13397":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:40650:14274":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:15725:12167":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"20:57:2617":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"16:2428:12292":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11614:13762":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:580:3742":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13948:11677":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:12033:1035":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:3764:12341":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:14934:11949":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:8537:13739":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:4050:14628":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:23467:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:3251:14064":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:12056:850":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12396:11485":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:42132:2958":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:3936:14619":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:4506:7699":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"22:5042:7712":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:2526:12296":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:5746:14323":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:7880:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"13:110:34399":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"22:4872:7692":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:6870:8527":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:1632:4641":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:4351:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:44487:13706":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:5500:14322":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:5687:10022":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"22:5403:1102":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:8252:19970":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:8387:14664":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:11168:21413":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:43012:12528":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:1905:3082":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"22:4938:7699":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:6893:12429":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:3607:3103":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:1501:4628":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:4114:14252":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:5117:7773":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:4637:11157":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"22:6807:8496":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"22:6784:11071":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:1494:4629":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:39949:28085":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:10520:14576":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:0:880":{"crate_id":6,"path":["libc"],"kind":"module"},"5:5392:19852":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:2703:12777":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:4906:14653":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:9536:32406":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:7556:9451":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:14385:11765":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:8874:13240":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:3460:14065":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:7879:2832":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"10:36:12696":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:10618:34422":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"22:5661:7777":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:3888:12344":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:42078:2619":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:7646:2710":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:7884:21324":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:7792:21323":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:6530:9999":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:7468:13547":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:1534:3102":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"22:6437:8464":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:12091:14129":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:2618:12300":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:11390:13760":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:10312:10065":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"22:7326:3608":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:6868:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:7560:14249":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:11549:13335":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:4385:2567":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:43816:13578":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"22:8302:7946":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:3232:12280":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:8154:14210":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"22:6528:8471":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12153:14134":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:7067:13494":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:13765:11650":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:5388:19851":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:7388:9290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:5969:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:7435:14512":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:14470:11777":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:4556:7706":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:2622:14300":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:3011:12451":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:1604:4640":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"11:434:34388":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"15:327:14414":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"11:2423:2619":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"22:6702:8486":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:5798:12374":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"22:5462:7756":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:41819:13026":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:7782:13503":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:11519:14264":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:14822:11932":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:6879:12427":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"19:0:1132":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:43284:13662":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:4798:10083":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"11:0:2428":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:6059:8475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:11029:10108":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:21881:12785":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:2703:142":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:43797:13577":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:2969:20453":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"18:491:13309":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:3317:19991":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:15345:12050":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"22:5357:7745":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:7845:14334":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"11:2231:1964":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"5:7482:31034":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:40812:13633":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:47154:13111":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:14221:11733":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:1664:4644":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:48371:13166":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:435:11346":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"18:531:13310":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:8202:13639":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:4921:12363":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:41248:13648":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:44882:13054":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"11:1887:2619":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:44649:13725":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:7549:13554":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:10725:13568":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:3132:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:47620:13146":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"22:6474:8468":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:6376:21316":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:44124:13683":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:11256:14091":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:44530:13715":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"22:484:2918":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"20:363:2624":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"6:6248:8528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13365:11561":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"22:5108:7717":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:8830:13238":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:7360:34417":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1639:4642":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:212:9997":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"22:6742:8491":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"22:8347:9488":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:2832:12309":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:596:3744":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:7604:7938":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:11560:3080":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:22362:14785":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:44333:13700":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:1521:4631":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:4703:14644":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:15301:12040":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13648:11631":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:5982:8471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11779:11432":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:483:3730":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"11:2562:12694":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:15184:12008":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:40793:13631":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:4042:14627":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:46192:13070":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:1902:14555":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:6047:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:15747:12173":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"22:5316:7740":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:43705:13574":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:4381:10024":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:4038:14626":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:22920:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:12850:11477":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"22:7980:3687":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:14439:11771":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"22:1651:4644":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:5780:14326":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:6249:2234":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:4028:14625":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:11294:14092":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:7668:7947":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6696:12411":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"22:5246:7731":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:0:880":{"crate_id":22,"path":["libc"],"kind":"module"},"11:2383:3102":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:39613:217":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:1814:1189":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"9:237:13042":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:15566:12127":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:3129:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:7692:9487":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12432:14140":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:44497:13710":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:23305:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"22:4807:7687":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:8072:12552":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:3201:14303":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"22:8002:9288":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:46069:13065":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"11:2403:3103":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"6:4814:7731":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:32921:12450":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:3409:2585":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:6811:14702":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:10896:11407":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11690:14110":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:4129:30930":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:9918:21383":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:6605:2619":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"22:5468:7757":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:637:14284":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13695:11642":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:363:2709":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:11604:13339":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:1882:3083":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13504:11595":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:11701:14111":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:6351:14796":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:5992:8472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:48012:13150":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:1115:34358":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"22:5273:7734":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:13407:11566":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:22175:14792":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:44831:234":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:8495:14677":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:5130:7775":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:13066:32104":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:6228:7600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:10845:14259":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:47264:13114":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"22:4796:7686":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:3254:218":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4830:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:14156:11726":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:45895:13058":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:15367:12055":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:5435:12372":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:44697:2639":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"22:6456:8466":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:4939:1102":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"22:552:3739":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"1:7719:14499":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:11212:159":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:10073:14361":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:9834:3255":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:1315:14230":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:2829:14250":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:11052:14073":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:13463:11584":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:8246:3104":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7503:12327":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"22:1697:4650":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11226:14087":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:8228:14345":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"22:5177:7723":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:7029:10048":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5017:12366":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5044:7766":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:15321:12046":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:2973:33134":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"22:1591:4640":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13832:11662":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:8290:32404":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:12758:11511":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:42281:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"22:7533:8914":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:43745:13047":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:2092:3085":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:5152:7779":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:8209:11396":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:8239:14614":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:11632:13341":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:10768:13571":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:6583:13459":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:7513:13500":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:6401:12315":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:44350:13701":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"22:1524:4633":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:3191:13527":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:32384:14269":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"22:569:3742":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"17:10988:14080":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:8804:206":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"22:6759:8493":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:14001:11684":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:4560:2578":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:9036:13245":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:4914:7748":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"20:118:1951":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"16:6560:9986":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:7645:7944":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"22:7598:8919":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:40466:13605":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:31192:2983":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:7897:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:6071:8476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:12048:798":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"22:8278:7942":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:43826:14283":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:43714:14279":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:3122:2014":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11041:11421":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:7665:2699":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:14194:11731":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"11:430:34396":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:5051:14316":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:7382:27524":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12244:13351":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:3184:3102":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:13787:11657":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:6804:8909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:30688:31037":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:10422:14069":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:41981:13028":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"22:6653:8480":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:13584:11602":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}