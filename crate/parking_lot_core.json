{"root":"0:0:2362","crate_version":"0.9.10","includes_private":false,"index":{"b:2:2994-0:294:2361":{"id":"b:2:2994-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42200:3432-0:230:2356":{"id":"a:2:42200:3432-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13303:14055":{"id":"2:13303:14055","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43972:11885","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32339:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3832-0:212:2357":{"id":"b:2:3832-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3042:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2720-0:230:2356":{"id":"b:2:2720-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:76:2351":{"id":"0:76:2351","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2717-0:294:2361":{"id":"b:2:2717-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:293:804":{"id":"0:293:804","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10360:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10341:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111-0:309:2483":{"id":"0:111-0:309:2483","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:309:2483","glob":false}}},"0:170-0:74:2348":{"id":"0:170-0:74:2348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:2348","glob":false}}},"a:2:32337:237-0:294:2361":{"id":"a:2:32337:237-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13404:26917":{"id":"2:13404:26917","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2717-0:212:2357":{"id":"b:2:2717-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3248:3457-0:230:2356":{"id":"a:2:3248:3457-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3832-0:230:2356":{"id":"b:2:3832-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:291:699":{"id":"0:291:699","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2717-0:251:2353":{"id":"b:2:2717-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2767:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:77:2349":{"id":"0:77:2349","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32396:3264-0:194:2354":{"id":"a:2:32396:3264-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5685:34769":{"id":"5:5685:34769","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:2508","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:306:2508","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13336:29172":{"id":"2:13336:29172","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12963:20382","`DoubleEndedIterator`":"2:8335:129","prim@char":"1:12363:471","str::split":"2:13330:27003"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44004:14076","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13330:27003":{"id":"2:13330:27003","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12963:20382","`DoubleEndedIterator`":"2:8335:129","prim@char":"1:12363:471","str::split_whitespace":"2:13304:32034","str::rsplit":"2:13336:29172"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43986:14072","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:60":{"id":"0:222:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110-0:327:2895":{"id":"0:110-0:327:2895","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:327:2895","glob":false}}},"2:13299:29168":{"id":"2:13299:29168","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13298:29167"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5692:34771":{"id":"5:5692:34771","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7744:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2616":{"id":"0:214:2616","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3042:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:222:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13407:30325":{"id":"2:13407:30325","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1060:38218"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:804":{"id":"0:229:804","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10360:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10341:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:60":{"id":"0:297:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177-0:194:2354":{"id":"0:177-0:194:2354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:194:2354","glob":false}}},"0:212:2357":{"id":"0:212:2357","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:213:2614","0:214:2616","0:215:2619","0:216:2623"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42199:3433-0:212:2357","a:2:32337:237-0:212:2357","a:2:32396:3264-0:212:2357","a:2:3248:3457-0:212:2357","a:2:3213:247-0:212:2357","a:2:42200:3432-0:212:2357","b:2:2717-0:212:2357","b:2:2994-0:212:2357","b:2:3000-0:212:2357","b:2:3832-0:212:2357","b:2:3005-0:212:2357","b:2:2990-0:212:2357","b:2:2720-0:212:2357","b:5:793-0:212:2357","0:228","0:226","0:225","0:223","0:218","0:221","0:219"]}}},"0:268:2358":{"id":"0:268:2358","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:270:1978"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42199:3433-0:268:2358","a:2:32337:237-0:268:2358","a:2:32396:3264-0:268:2358","a:2:3248:3457-0:268:2358","a:2:3213:247-0:268:2358","a:2:42200:3432-0:268:2358","b:2:2717-0:268:2358","b:2:2994-0:268:2358","b:2:3000-0:268:2358","b:2:3832-0:268:2358","b:2:3005-0:268:2358","b:2:2990-0:268:2358","b:2:2720-0:268:2358","b:5:793-0:268:2358","0:271","0:272","0:279","0:276","0:277","0:274"]}}},"2:13357:3068":{"id":"2:13357:3068","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12963:20382","`DoubleEndedIterator`":"2:8335:129","prim@char":"1:12363:471","str::rmatches":"2:13360:34060"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44190:14182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3832-0:194:2354":{"id":"b:2:3832-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13292:29140":{"id":"2:13292:29140","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13309:27004":{"id":"2:13309:27004","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44240:14184","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32396:3264-0:212:2357":{"id":"a:2:32396:3264-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13273":{"id":"2:13273","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13274:1000","2:13275:2869","2:13276:34051","2:13277:34052","2:13279:34053","2:13282:26797","2:13283:34054","2:13284:336","2:13285:29141","2:13286:2576","2:13288:10284","2:13290:29139","2:13292:29140","2:13294:34055","2:13295:34056","2:13296:29163","2:13297:29164","2:13298:29167","2:13299:29168","2:13301:14189","2:13302:14199","2:13303:14055","2:13304:32034","2:13306:32035","2:13309:27004","2:13311:34057","2:13312:32030","2:13313:29180","2:13316:29181","2:13319:29182","2:13322:3528","2:13326:3493","2:13330:27003","2:13333:29170","2:13336:29172","2:13339:34058","2:13342:34059","2:13345:29174","2:13348:29176","2:13351:29178","2:13354:29179","2:13357:3068","2:13360:34060","2:13363:34061","2:13366:34062","2:13369:34063","2:13371:34064","2:13373:34065","2:13375:34066","2:13376:34067","2:13377:34068","2:13380:34069","2:13383:26395","2:13386:29183","2:13389:34070","2:13392:34071","2:13395:34072","2:13398:34073","2:13400:26911","2:13401:30320","2:13402:26915","2:13403:26916","2:13404:26917","2:13405:30323","2:13406:30324","2:13407:30325","2:13408:34074","2:13411:14996","2:13412:34075"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:272":{"id":"0:272","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:273:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:250:804":{"id":"0:250:804","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10360:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10341:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:2359":{"id":"0:183-0:73:2359","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:2359","glob":false}}},"2:13345:29174":{"id":"2:13345:29174","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382","str::rsplitn":"2:13348:29176"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44090:14176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:2623":{"id":"0:216:2623","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:3248:3457-0:268:2358":{"id":"a:2:3248:3457-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5700:34772":{"id":"5:5700:34772","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7744:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2720-0:251:2353":{"id":"b:2:2720-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3004:1813":{"id":"2:3004:1813","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42238:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2767:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32339:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:797:3547":{"id":"5:797:3547","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2772:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:213:2614":{"id":"0:213:2614","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:42200:3432-0:294:2361":{"id":"a:2:42200:3432-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1181","0:92:2887","0:93:2894","0:94:2900"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:793-0:268:2358":{"id":"b:5:793-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3545","5:796:3546","5:797:3547"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13306:32035":{"id":"2:13306:32035","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13304:32034"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44269:14187","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2767:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32339:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2717-0:268:2358":{"id":"b:2:2717-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82:2347":{"id":"0:82:2347","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2747","0:84:2753"],"is_stripped":false}}},"0:112-0:323:2908":{"id":"0:112-0:323:2908","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:323:2908","glob":false}}},"b:2:3005-0:251:2353":{"id":"b:2:3005-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3834:1826":{"id":"2:3834:1826","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39820:13340","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13408:34074":{"id":"2:13408:34074","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5024:34074"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44285:14107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32396:3264-0:294:2361":{"id":"a:2:32396:3264-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3005-0:230:2356":{"id":"b:2:3005-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:260:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10386:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:280:804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3213:247-0:281:2355":{"id":"a:2:3213:247-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2996:834":{"id":"2:2996:834","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42200:3432-0:268:2358":{"id":"a:2:42200:3432-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:91:1181":{"id":"0:91:1181","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2994-0:251:2353":{"id":"b:2:2994-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13316:29181":{"id":"2:13316:29181","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13333:29170":{"id":"2:13333:29170","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12778:14075","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3213:247-0:230:2356":{"id":"a:2:3213:247-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3000-0:230:2356":{"id":"b:2:3000-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3208:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2720-0:194:2354":{"id":"b:2:2720-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:176-0:251:2353":{"id":"0:176-0:251:2353","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:251:2353","glob":false}}},"0:74:2348":{"id":"0:74:2348","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9421:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:336":{"id":"2:13284:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13285:29141","`u8`":"1:12382:1856"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13288:10284":{"id":"2:13288:10284","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42107:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13392:34071":{"id":"2:13392:34071","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180-0:212:2357":{"id":"0:180-0:212:2357","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:212:2357","glob":false}}},"0:265:699":{"id":"0:265:699","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13376:34067":{"id":"2:13376:34067","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42199:3433-0:294:2361":{"id":"a:2:42199:3433-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32396:3264-0:230:2356":{"id":"a:2:32396:3264-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2994-0:281:2355":{"id":"b:2:2994-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:2747":{"id":"0:83:2747","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if `deadlock_detection` feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:281:2355":{"id":"b:5:793-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3545","5:796:3546","5:797:3547"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13298:29167":{"id":"2:13298:29167","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13299:29168"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42199:3433-0:212:2357":{"id":"a:2:42199:3433-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:2362":{"id":"0:0:2362","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:2347","0:170-0:74:2348","0:171-0:77:2349","0:172-0:80:2350","0:173-0:76:2351","0:174-0:79:2352","0:176-0:251:2353","0:177-0:194:2354","0:178-0:281:2355","0:179-0:230:2356","0:180-0:212:2357","0:181-0:268:2358","0:183-0:73:2359","0:184-0:72:2360","0:185-0:294:2361"],"is_stripped":false}}},"2:2722:26116":{"id":"2:2722:26116","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2772:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2720-0:212:2357":{"id":"b:2:2720-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13296:29163":{"id":"2:13296:29163","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13298:29167","str::split_at_mut":"2:13297:29164"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13354:29179":{"id":"2:13354:29179","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13360:34060":{"id":"2:13360:34060","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12963:20382","`DoubleEndedIterator`":"2:8335:129","prim@char":"1:12363:471","str::matches":"2:13357:3068"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44208:14183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13403:26916":{"id":"2:13403:26916","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2767:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:291:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2994-0:230:2356":{"id":"b:2:2994-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:2350":{"id":"0:80:2350","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3459:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3459:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13302:14199":{"id":"2:13302:14199","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12363:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43962:14168","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13297:29164":{"id":"2:13297:29164","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13296:29163","str::split_at_mut_checked":"2:13299:29168"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:2360":{"id":"0:72:2360","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:13375:34066":{"id":"2:13375:34066","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13276:34051":{"id":"2:13276:34051","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13412:34075":{"id":"2:13412:34075","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5022:34075"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44303:14106","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2634":{"id":"0:237:2634","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2994-0:194:2354":{"id":"b:2:2994-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:204:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:215:2619":{"id":"0:215:2619","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3208:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3208:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278:699":{"id":"0:278:699","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32339:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32396:3264-0:281:2355":{"id":"a:2:32396:3264-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:194:2354":{"id":"0:194:2354","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:195:2605","0:198:2607","0:200:2609"],"impls":["0:70","a:2:42199:3433-0:194:2354","a:2:32337:237-0:194:2354","a:2:32396:3264-0:194:2354","a:2:3248:3457-0:194:2354","a:2:3213:247-0:194:2354","a:2:42200:3432-0:194:2354","b:2:2717-0:194:2354","b:2:2994-0:194:2354","b:2:3000-0:194:2354","b:2:3832-0:194:2354","b:2:3005-0:194:2354","b:2:2990-0:194:2354","b:2:2720-0:194:2354","b:5:793-0:194:2354","0:208","0:203","0:205","0:210","0:202","0:207"]}}},"b:2:3832-0:281:2355":{"id":"b:2:3832-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42199:3433-0:281:2355":{"id":"a:2:42199:3433-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13383:26395":{"id":"2:13383:26395","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292":{"id":"0:292","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10386:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:293:804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281:2355":{"id":"0:281:2355","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:283:1978"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42199:3433-0:281:2355","a:2:32337:237-0:281:2355","a:2:32396:3264-0:281:2355","a:2:3248:3457-0:281:2355","a:2:3213:247-0:281:2355","a:2:42200:3432-0:281:2355","b:2:2717-0:281:2355","b:2:2994-0:281:2355","b:2:3000-0:281:2355","b:2:3832-0:281:2355","b:2:3005-0:281:2355","b:2:2990-0:281:2355","b:2:2720-0:281:2355","b:5:793-0:281:2355","0:284","0:290","0:285","0:292","0:287","0:289"]}}},"0:168-0:82:2347":{"id":"0:168-0:82:2347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:2347","glob":false}}},"a:2:3248:3457-0:251:2353":{"id":"a:2:3248:3457-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:197:1978":{"id":"0:197:1978","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13295:34056":{"id":"2:13295:34056","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12369:1726","crate::ops::IndexMut":"2:3491:15029","str::slice_unchecked":"2:13294:34055"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13363:34061":{"id":"2:13363:34061","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12963:20382","`DoubleEndedIterator`":"2:8335:129","prim@char":"1:12363:471","str::rmatch_indices":"2:13366:34062"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44136:14179","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:2753":{"id":"0:84:2753","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if `deadlock_detection` feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3213:247-0:251:2353":{"id":"a:2:3213:247-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3248:3457-0:194:2354":{"id":"a:2:3248:3457-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32396:3264-0:268:2358":{"id":"a:2:32396:3264-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3005-0:281:2355":{"id":"b:2:3005-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13373:34065":{"id":"2:13373:34065","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172-0:80:2350":{"id":"0:172-0:80:2350","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:2350","glob":false}}},"0:273:475":{"id":"0:273:475","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:795:3545":{"id":"5:795:3545","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10386:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71:2611":{"id":"0:71:2611","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32337:237-0:251:2353":{"id":"a:2:32337:237-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2772:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13294:34055":{"id":"2:13294:34055","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12369:1726","str::slice_mut_unchecked":"2:13295:34056","crate::ops::Index":"2:39651:15028"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3005-0:294:2361":{"id":"b:2:3005-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3248:3457-0:212:2357":{"id":"a:2:3248:3457-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32337:237-0:268:2358":{"id":"a:2:32337:237-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3005-0:212:2357":{"id":"b:2:3005-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3008:137":{"id":"2:3008:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32261:13142","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2990-0:294:2361":{"id":"b:2:2990-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2717-0:230:2356":{"id":"b:2:2717-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:93:2894":{"id":"0:93:2894","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13377:34068":{"id":"2:13377:34068","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12989:20379","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13274:1000":{"id":"2:13274:1000","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12363:471"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3213:247-0:294:2361":{"id":"a:2:3213:247-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13319:29182":{"id":"2:13319:29182","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13339:34058":{"id":"2:13339:34058","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12963:20382","str::split":"2:13330:27003","prim@char":"1:12363:471","`DoubleEndedIterator`":"2:8335:129","str::rsplit_terminator":"2:13342:34059"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44036:14173","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13342:34059":{"id":"2:13342:34059","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12963:20382","str::split":"2:13330:27003","prim@char":"1:12363:471","str::split_terminator":"2:13339:34058"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44054:14174","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2990-0:251:2353":{"id":"b:2:2990-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267:804":{"id":"0:267:804","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10360:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10341:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:796:3546":{"id":"5:796:3546","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2636":{"id":"0:239:2636","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:178-0:281:2355":{"id":"0:178-0:281:2355","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:281:2355","glob":false}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2611"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13389:34070":{"id":"2:13389:34070","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:220:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5702:3164":{"id":"5:5702:3164","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7744:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10386:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:283:1978":{"id":"0:283:1978","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:42199:3433-0:194:2354":{"id":"a:2:42199:3433-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2717-0:281:2355":{"id":"b:2:2717-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13369:34063":{"id":"2:13369:34063","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13398:34073":{"id":"2:13398:34073","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12924:136","`FromStr`":"2:12923:15060"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42238:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12923:15060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12923:15060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32337:237-0:230:2356":{"id":"a:2:32337:237-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13279:34053":{"id":"2:13279:34053","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13277:34052"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2772:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3213:247-0:212:2357":{"id":"a:2:3213:247-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3000-0:268:2358":{"id":"b:2:3000-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42200:3432-0:281:2355":{"id":"a:2:42200:3432-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5704:26914":{"id":"5:5704:26914","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13404:26917"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2990-0:194:2354":{"id":"b:2:2990-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179-0:230:2356":{"id":"0:179-0:230:2356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:2356","glob":false}}},"a:2:42200:3432-0:194:2354":{"id":"a:2:42200:3432-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13395:34072":{"id":"2:13395:34072","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3832-0:251:2353":{"id":"b:2:3832-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:2628":{"id":"0:231:2628","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:793-0:212:2357":{"id":"b:5:793-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3545","5:796:3546","5:797:3547"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3005-0:194:2354":{"id":"b:2:3005-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:294:2361":{"id":"0:294:2361","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:42199:3433-0:294:2361","a:2:32337:237-0:294:2361","a:2:32396:3264-0:294:2361","a:2:3248:3457-0:294:2361","a:2:3213:247-0:294:2361","a:2:42200:3432-0:294:2361","b:2:2717-0:294:2361","b:2:2994-0:294:2361","b:2:3000-0:294:2361","b:2:3832-0:294:2361","b:2:3005-0:294:2361","b:2:2990-0:294:2361","b:2:2720-0:294:2361","0:296"]}}},"0:254:2641":{"id":"0:254:2641","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:227:699":{"id":"0:227:699","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2719:3058":{"id":"2:2719:3058","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13380:34069":{"id":"2:13380:34069","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10386:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:211:804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13386:29183":{"id":"2:13386:29183","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13406:30324":{"id":"2:13406:30324","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1060:38218"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3009:1811":{"id":"2:3009:1811","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42238:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5701:34773":{"id":"5:5701:34773","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:306:2508","`String`":"5:7744:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:2508","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2887":{"id":"0:92:2887","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5686:3446":{"id":"5:5686:3446","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7744:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2720-0:294:2361":{"id":"b:2:2720-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:793-0:194:2354":{"id":"b:5:793-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3545","5:796:3546","5:797:3547"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:699":{"id":"0:248:699","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3208:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3832-0:294:2361":{"id":"b:2:3832-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:2630":{"id":"0:233:2630","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:270:1978":{"id":"0:270:1978","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"5:5703:26913":{"id":"5:5703:26913","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13403:26916"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:475":{"id":"0:260:475","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2767:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13348:29176":{"id":"2:13348:29176","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12363:471","str::splitn":"2:13345:29174","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44108:14177","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3000-0:281:2355":{"id":"b:2:3000-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:2359":{"id":"0:73:2359","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:13285:29141":{"id":"2:13285:29141","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12382:1856"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32396:3264-0:251:2353":{"id":"a:2:32396:3264-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32396:3264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2990-0:212:2357":{"id":"b:2:2990-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2720-0:268:2358":{"id":"b:2:2720-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3213:247-0:268:2358":{"id":"a:2:3213:247-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32339:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5684":{"id":"5:5684","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5685:34769","5:5686:3446","5:5689:34770","5:5692:34771","5:5700:34772","5:5701:34773","5:5702:3164","5:5703:26913","5:5704:26914"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13401:30320":{"id":"2:13401:30320","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40006:3477","Self::is_ascii":"2:13400:26911"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40006:3477","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13411:14996":{"id":"2:13411:14996","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5025:14996"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44294:14101","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42200:3432-0:212:2357":{"id":"a:2:42200:3432-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:251:2353":{"id":"0:251:2353","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:252:2639","0:254:2641","0:256:2643"],"impls":["a:2:42199:3433-0:251:2353","a:2:32337:237-0:251:2353","a:2:32396:3264-0:251:2353","a:2:3248:3457-0:251:2353","a:2:3213:247-0:251:2353","a:2:42200:3432-0:251:2353","b:2:2717-0:251:2353","b:2:2994-0:251:2353","b:2:3000-0:251:2353","b:2:3832-0:251:2353","b:2:3005-0:251:2353","b:2:2990-0:251:2353","b:2:2720-0:251:2353","b:5:793-0:251:2353","0:266","0:258","0:263","0:264","0:259","0:261"]}}},"b:2:2717-0:194:2354":{"id":"b:2:2717-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2711:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2719:3058"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32337:237-0:212:2357":{"id":"a:2:32337:237-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2994-0:212:2357":{"id":"b:2:2994-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:204:475":{"id":"0:204:475","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13282:26797":{"id":"2:13282:26797","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12510:20383"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13371:34064":{"id":"2:13371:34064","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13277:34052":{"id":"2:13277:34052","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3248:3457-0:281:2355":{"id":"a:2:3248:3457-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:230:2356":{"id":"0:230:2356","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2628","0:233:2630","0:235:2632","0:237:2634","0:239:2636"],"impls":["a:2:42199:3433-0:230:2356","a:2:32337:237-0:230:2356","a:2:32396:3264-0:230:2356","a:2:3248:3457-0:230:2356","a:2:3213:247-0:230:2356","a:2:42200:3432-0:230:2356","b:2:2717-0:230:2356","b:2:2994-0:230:2356","b:2:3000-0:230:2356","b:2:3832-0:230:2356","b:2:3005-0:230:2356","b:2:2990-0:230:2356","b:2:2720-0:230:2356","b:5:793-0:230:2356","0:246","0:249","0:247","0:244","0:242","0:241"]}}},"a:2:42199:3433-0:230:2356":{"id":"a:2:42199:3433-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13402:26915":{"id":"2:13402:26915","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2607":{"id":"0:198:2607","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3832-0:268:2358":{"id":"b:2:3832-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3830:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3834:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243:475":{"id":"0:243:475","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3208:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2772:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2990-0:268:2358":{"id":"b:2:2990-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13312:32030":{"id":"2:13312:32030","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44278:14188","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:2605":{"id":"0:195:2605","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:197:1978"]},"discriminant":null}}},"0:209:699":{"id":"0:209:699","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10386:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2990-0:281:2355":{"id":"b:2:2990-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3248:3457-0:294:2361":{"id":"a:2:3248:3457-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3248:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:184-0:72:2360":{"id":"0:184-0:72:2360","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:2360","glob":false}}},"2:13286:2576":{"id":"2:13286:2576","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42107:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13351:29178":{"id":"2:13351:29178","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2900":{"id":"0:94:2900","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2639":{"id":"0:252:2639","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:286:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2772:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:280:804":{"id":"0:280:804","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10360:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10341:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13322:3528":{"id":"2:13322:3528","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42107:191","prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:2632":{"id":"0:235:2632","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:200:2609":{"id":"0:200:2609","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13304:32034":{"id":"2:13304:32034","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13306:32035"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44260:14186","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32337:237-0:281:2355":{"id":"a:2:32337:237-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185-0:294:2361":{"id":"0:185-0:294:2361","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:294:2361","glob":false}}},"0:173-0:76:2351":{"id":"0:173-0:76:2351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:2351","glob":false}}},"2:13405:30323":{"id":"2:13405:30323","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1060:38218"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2720-0:281:2355":{"id":"b:2:2720-0:281:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32338:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2714:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2722:26116"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2767:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:209:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42199:3433-0:268:2358":{"id":"a:2:42199:3433-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13313:29180":{"id":"2:13313:29180","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3000-0:251:2353":{"id":"b:2:3000-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:220:475":{"id":"0:220:475","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13400:26911":{"id":"2:13400:26911","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42199:3433-0:251:2353":{"id":"a:2:42199:3433-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42199:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13275:2869":{"id":"2:13275:2869","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:804":{"id":"0:211:804","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10360:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10341:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174-0:79:2352":{"id":"0:174-0:79:2352","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:2352","glob":false}}},"0:79:2352":{"id":"0:79:2352","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3462:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32337:237-0:194:2354":{"id":"a:2:32337:237-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32337:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3000-0:294:2361":{"id":"b:2:3000-0:294:2361","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:294:2361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3003:137":{"id":"2:3003:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:42200:3432-0:251:2353":{"id":"a:2:42200:3432-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42200:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13290:29139":{"id":"2:13290:29139","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:251:2353":{"id":"b:5:793-0:251:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:251:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3545","5:796:3546","5:797:3547"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13326:3493":{"id":"2:13326:3493","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42107:191","prim@char":"1:12363:471","self::pattern":"2:12963:20382"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42105:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:2643":{"id":"0:256:2643","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2994-0:268:2358":{"id":"b:2:2994-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3208:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2990-0:230:2356":{"id":"b:2:2990-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2967:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2993:3487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3005-0:268:2358":{"id":"b:2:3005-0:268:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2964:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:268:2358","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3008:137","2:3009:1811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3000-0:194:2354":{"id":"b:2:3000-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171-0:77:2349":{"id":"0:171-0:77:2349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:2349","glob":false}}},"0:181-0:268:2358":{"id":"0:181-0:268:2358","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:268:2358","glob":false}}},"b:2:3000-0:212:2357":{"id":"b:2:3000-0:212:2357","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2974:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2970:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:212:2357","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3003:137","2:3004:1813"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32339:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:793-0:230:2356":{"id":"b:5:793-0:230:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2733:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3545","5:796:3546","5:797:3547"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2993:3487":{"id":"2:2993:3487","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2967:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13301:14189":{"id":"2:13301:14189","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12363:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43956:14167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:475":{"id":"0:286:475","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:281:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3213:247-0:194:2354":{"id":"a:2:3213:247-0:194:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3213:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:194:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13283:34054":{"id":"2:13283:34054","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13311:34057":{"id":"2:13311:34057","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44250:14185","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5689:34770":{"id":"5:5689:34770","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7744:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7744:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13366:34062":{"id":"2:13366:34062","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12963:20382","`DoubleEndedIterator`":"2:8335:129","prim@char":"1:12363:471","str::match_indices":"2:13363:34061"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44154:14180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12969:14738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12984:20380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"22:5373:8238":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:10018:21897":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:38413:20509":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:542:13868":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:40691:9019":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:43962:14168":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:3465:10503":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:4070:3157":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"20:118:2491":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"17:15383:12527":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:5282:8226":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:953:14698":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:5368:980":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:10170:11877":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:12969:14738":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:47080:13640":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:12478:11973":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:42200:3432":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:30724:3453":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:4502:12838":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"22:1537:5124":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13594:12084":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:16259:12042":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:3094:14731":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:5958:14812":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:44595:14214":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:8005:12983":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:6758:8981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:11367:14740":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:986:14705":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:15039:12441":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:12364:1878":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"20:331:3159":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"6:7341:9394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"22:4814:8179":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:6979:10531":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"16:7741:12820":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:15410:12534":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:14372:12232":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:5708:14811":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:12724:14178":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"22:5228:8220":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:3940:10503":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:44572:14206":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"22:5149:8212":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:3688:32350":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:12387:969":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:42133:3590":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:14386:12234":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:12374:740":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:8755:3592":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:15273:12496":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:3462:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:894:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"22:6447:8954":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:6199:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:46242:13565":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:7475:10299":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"11:2466:10503":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"22:5184:8215":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:6411:8950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11865:14599":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:6572:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"11:1023:14706":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:7534:33956":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10818:14553":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:5357:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"6:7539:9403":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:545:4225":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:1564:3157":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:8613:14837":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:43133:3569":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:3303:31361":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"18:515:11756":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:11721:14252":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:7867:11873":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:2719:10538":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:6895:12913":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"22:5203:8217":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:5851:14222":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"22:1655:5134":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"22:6768:8983":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"1:12369:1726":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:5301:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:589:11761":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:11014:26826":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:22607:3557":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"17:11443:11915":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:47175:13651":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:7833:20487":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:7570:12816":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:7355:12965":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:43579:14165":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:4981:10556":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:15748:12643":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13173:12027":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:13855:12139":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"0:0:2362":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"5:3352:33993":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:13015:11969":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:7981:3249":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:10903:14237":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:2344:3575":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:41327:14147":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:5139:10490":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:11419:11910":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"11:2137:14706":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:13753:12124":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:1614:14697":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"22:8294:8436":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:1496:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:3436:14795":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:7648:14688":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:1481:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:6623:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:4962:8193":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:2548:12785":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:23141:15078":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"22:531:4223":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"1:957:14699":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:5992:14815":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:40766:14761":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"22:1519:5122":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:6813:13967":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:2772:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:44278:14188":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:10395:3738":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:8388:3261":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:47033:13637":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:11128:11866":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:2304:14037":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:31097:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:42141:3591":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:40867:14128":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:13252:12032":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:5641:8266":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:13889:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:15176:12474":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"22:5439:8245":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:34323:20505":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:6079:13871":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:12390:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:6631:8966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:5006:12854":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5366:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:5258:14805":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:13037:20388":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:8468:13712":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:12557:11899":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"6:1690:5138":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:6534:8960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:38992:20510":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"11:1888:3155":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"11:2400:3591":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:13999:12161":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:12923:15060":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"22:8029:9779":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:7487:9401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"22:4982:8196":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:5179:8214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"18:735:26101":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:1955:10490":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:12381:887":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:10573:35282":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"13:0:2958":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:14489:12255":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:4211:15143":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:8335:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:4352:12835":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:13344:12037":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4792:8177":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:1898:10503":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"16:6398:12801":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:3105:33896":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:3456:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:2714:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:11051:14558":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:10652:14070":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:6666:8970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:46565:13594":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:12963:20382":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:6680:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44925:14221":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12238:14612":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:7539:12815":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:41318:14146":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:1727:5142":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:11715:14251":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:5267:435":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:5007:8199":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"22:7561:9405":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11764:13848":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:8014:9778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:15769:12649":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:10924:14244":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:10041:32323":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"22:7516:9402":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:7686:14689":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:7549:14002":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:44582:14210":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:1620:10503":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:40719:14759":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:4902:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:12225:14611":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:10763:10535":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:14436:12251":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:14325:12225":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:42641:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:15390:12528":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:9938:21915":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:11392:14572":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:10068:21900":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:46210:13563":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:5798:3159":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"11:2121:13998":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:2175:21975":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"22:7575:9406":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:3585:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:11704:14296":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:11945:14254":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:45988:13543":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:15456:12543":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:5051:8204":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:7857:13003":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:5295:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:47228:13654":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"22:5263:8224":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:6507:8917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"14:187:20927":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:40503:14105":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:485:3354":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:12510:20383":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:1551:5125":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:13706:32977":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:815:15122":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:12378:894":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:11898:11923":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:12335:15003":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"22:5469:8248":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"22:7429:5246":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:10524:14549":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:7564:14048":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"22:4919:8188":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11743:13844":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:7718:20444":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:5405:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:5428:8244":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:2705:10552":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"11:1893:10503":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:7917:10577":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:4672:15162":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:46758:13630":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:500:10550":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:13199:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:671:3590":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:6506:15310":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"14:202:20396":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:15333:12512":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:46288:13567":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"22:7389:5263":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11915:22017":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:6962:12812":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:6282:10559":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:5288:8227":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"22:4927:8189":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"10:36:13145":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:11063:14559":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:6813:8985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:5196:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:6156:14058":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"22:4803:8178":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"22:5042:8203":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:221:10463":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"22:484:3354":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"16:7397:35273":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:8259:12984":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:8118:14010":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:6026:13907":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"22:7446:9397":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6802:13966":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"22:4968:8194":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:6335:14666":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:8761:20491":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"22:4912:8187":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:15023:12438":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:4215:15144":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:2974:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"22:8265:8432":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:5533:8255":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:4452:14733":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11242:14566":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:6374:10563":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:1410:14706":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:4921:8188":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:15368:12523":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:2037:14539":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:3592:13716":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:6991:35272":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:12150:11960":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:6606:13959":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:21950:13233":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"22:6379:8888":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:14066:12171":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:44483:14203":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:5095:20434":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:42327:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"22:1505:5120":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:23047:32115":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"22:5194:8216":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:8301:13053":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"22:5034:8202":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:9305:14847":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"20:164:10447":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"6:1711:5141":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:8219:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:3274:12941":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"22:5668:8269":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"22:4988:8197":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:7717:20443":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"5:2182:14720":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"16:3029:11778":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:32428:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:47137:13645":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13899:12147":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"22:44:3345":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"17:12278:14615":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:675:14774":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"20:57:3155":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"16:5927:13893":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:553:4226":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:6342:35276":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:3703:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:3067:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"11:1900:14028":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:1696:5139":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7014:21853":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:4883:15172":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"22:5023:8201":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13814:12135":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5311:8230":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:40858:14127":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:680:14998":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:44260:14186":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:7473:12985":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:6037:10558":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:13969:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:1075:13998":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:4531:12839":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:2936:20986":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:5965:14814":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:4506:10493":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:14986:12431":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:3300:31365":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"11:809:10503":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"5:3313:14029":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:6968:14066":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:5588:14806":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:46548:13593":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:12740:14181":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"22:6874:9016":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12342:13853":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:9413:10573":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:3213:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:1530:5123":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:11222:3591":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"15:327:14907":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:10186:3753":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:938:10471":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:14516:12259":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13292:12034":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:3434:3121":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:41899:15119":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:47126:13644":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:2528:12784":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:5779:15198":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:5494:8252":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"17:12647:14621":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:44240:14184":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"11:740:14698":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:45904:13538":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5107:8208":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:949:14697":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:14177:12201":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:4990:8197":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13785:12131":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:38358:20508":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:8664:13719":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:7323:10574":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:2958:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:11702:13841":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:31124:3473":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:1625:5131":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:7709:14053":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:1586:14026":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:3206:3119":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:42831:3739":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:8297:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:13089:12013":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:10943:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"22:8341:9976":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:5441:8245":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:1098:14707":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13455:12050":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"22:6698:8974":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"16:2808:12797":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:12824:21920":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:5165:8213":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:7656:21856":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:735:14716":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:3097:13225":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:39783:15008":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:8065:3103":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:7428:21855":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:6700:8974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:23255:13261":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:11523:14743":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:2878:12800":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:1569:5127":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"18:726:11774":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:8246:14829":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:10046:14929":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:11302:13755":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:44811:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:4727:3104":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:672:14772":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:11812:14593":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:9422:3431":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:3729:3591":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:14038:12166":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:47071:13639":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:2357:33987":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:10339:14853":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:12368:1692":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:15289:12498":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:5151:8212":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:5462:8247":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:9408:10572":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"5:7650:15014":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:5538:20370":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:32338:3263":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:11853:14598":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:16198:12751":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:10622:35285":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:291:10465":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"22:7584:9407":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:46983:13635":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:5089:15169":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"11:785:14027":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:4333:15158":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:586:4231":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:1609:3590":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:8856:13737":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:12370:1816":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:0:2967":{"crate_id":17,"path":["object"],"kind":"module"},"5:6090:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"11:1884:3157":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:6385:12871":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"15:394:20949":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:2147:13229":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:15836:12661":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"18:698:13819":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:578:4230":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:2458:12781":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:5341:8234":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"6:5471:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"16:5385:11876":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:12030:14600":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:10671:35289":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:9858:21912":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"22:1725:5142":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:6160:20957":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6872:13980":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:5107:12857":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:22555:15306":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"22:4840:8181":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:2318:3563":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:15426:12537":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:2838:12798":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:8523:11885":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:5271:8225":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:4570:10493":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:963:15015":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:3286:20350":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"6:1500:5119":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:3439:3122":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"6:497:4220":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:3842:12831":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11647:13837":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:8008:9777":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:5075:12856":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:5551:8257":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6876:9016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12792:11847":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:9916:21914":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:6790:11555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:8012:9778":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:3597:14546":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:22738:15299":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:11153:14553":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:3329:12826":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"18:623:35294":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:14024:15016":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:10360:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:5863:21846":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:15281:12497":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:13644:14127":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:39705:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"22:1665:5135":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:8253:20492":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:4806:3113":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:44303:14106":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:44661:3176":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:40514:14106":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:11290:14075":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:11440:14741":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:4424:12836":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:12664:14170":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:23109:14094":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11187:13738":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:15324:12509":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:12671:14623":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"17:12887:13866":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6620:12878":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:44913:13522":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:10999:14811":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"11:2380:3590":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:23222:13258":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:0:1005":{"crate_id":6,"path":["libc"],"kind":"module"},"22:5633:8265":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:43792:14078":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:15616:12606":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:21683:3473":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"11:299:14020":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:12508:11977":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:6974:14065":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:40910:14132":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:13485:12054":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:42067:13487":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:13604:14748":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"5:3809:10465":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:12366:1317":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:2031:671":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14587:12269":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:43378:14163":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:16138:12735":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"16:3778:12829":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:41867:13477":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"6:6708:8975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:41304:14144":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:7980:15078":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"22:7412:5248":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:15931:12028":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"6:6672:8971":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:6480:8957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:15168:12471":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:16105:12728":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:40929:14134":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:8840:14231":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:7813:14005":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:3486:15104":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:40480:13471":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:2469:15064":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:42045:14229":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:4653:2489":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:15342:12513":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"22:5460:8247":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"22:7602:9408":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"21:4:2363":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"17:11841:14597":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"19:0:1294":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:40617:14111":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:8333:14831":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:4732:3105":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:5349:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"1:6509:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:2967:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:7782:32031":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12043:14601":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:5265:8224":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10954:21928":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:11211:30984":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:6902:9017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:5139:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:47100:13642":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:12701:14175":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:6723:8977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"22:1487:5117":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:46032:13546":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:15957:12678":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:40709:10525":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:1597:5130":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:43945:14166":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:14529:12260":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:5562:8258":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:6263:13940":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:4487:20349":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:44547:14205":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:2374:12777":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12422:13861":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:8267:8432":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"22:5049:8204":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:3208:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:2068:1361":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:884:3591":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"22:6915:9018":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:46880:13632":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:3459:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12076:14603":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5635:8265":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"22:6811:8985":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:7470:28486":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"3:0:505":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:6419:8951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:15646:12613":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"18:538:11758":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:22248:13234":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:23120:15135":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:11237:3169":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"20:350:3161":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"22:6821:8986":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:22955:13236":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:5098:15170":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"2:39763:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:3675:20422":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:2322:15061":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:15992:12708":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:3438:14796":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:7528:13999":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:10341:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:6358:10547":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:6406:14816":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:5507:8253":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:11773:11984":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:33292:20499":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:12362:1177":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:4923:15147":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"11:123:10453":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:30686:3452":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:6927:12917":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:10710:14552":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:5831:13885":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:7559:14003":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:10612:14550":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"18:573:11753":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:11653:13506":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"1:8230:14228":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:8067:15047":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:4153:15139":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:2234:14543":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:12389:1422":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:6473:8956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:44036:14173":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:15400:12531":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:22381:15220":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11870:14801":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:12388:13859":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:11272:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"14:7:14694":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:8553:15118":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:42286:3591":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:7757:14057":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:6874:10465":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:11547:11826":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"11:2420:3157":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:42817:3738":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:42303:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:4103:15137":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:6300:14654":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"5:3101:33895":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:14402:12238":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:43986:14072":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:47190:13652":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:43956:14167":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:47205:13653":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:15569:12588":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:15822:12658":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:7604:12818":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:13733:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:3475:12827":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:46954:13634":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8548:14839":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"22:6664:8970":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:44108:14177":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"22:6562:8962":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:3255:3459":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:7150:15216":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13046:12009":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:860:14629":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"5:6143:20797":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3716:3590":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:7206:10518":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:7548:3157":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:1861:14780":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"5:7721:14056":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:44876:14771":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"18:113:26093":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:22:819":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:10604:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:41845:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:3610:14798":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:12478:20556":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"22:8317:8439":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:5629:8264":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:23200:13256":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:44368:20394":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"18:670:14532":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:43913:14770":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:10350:11884":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:40959:14136":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:3014:20987":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"22:7485:9401":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:41360:14149":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"11:1158:14710":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:8296:8436":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:11715:13842":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"16:4641:12843":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:9859:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:10341:14852":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:12863:12000":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:4829:8180":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:10982:21929":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:8202:12822":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:8226:21859":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:7518:9402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"9:480:20835":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"22:464:4216":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"18:563:11760":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:6574:12821":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"22:6738:8979":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:915:14027":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"5:2275:14035":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:6353:12868":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:22660:3557":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:44154:14180":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:4821:11643":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:40945:2641":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:42199:3433":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:4062:12834":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:6560:12804":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"14:160:14694":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:12989:20379":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:1589:5129":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:32307:12984":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:2073:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:8061:15002":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:8353:9977":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:9117:13738":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:7391:5263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:522:4222":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"1:871:3590":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"11:364:10454":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:8302:8437":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"22:558:4227":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"2:23751:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:6525:15311":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"17:15376:12526":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"11:2539:13139":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:15778:12651":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:4771:12846":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"5:6785:3157":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:40:10461":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:6976:12922":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:21938:15078":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:10317:11883":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:13674:12091":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:8850:3590":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:7755:12810":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:39571:3594":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:4440:14732":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:7414:5248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:15:3071":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:6749:13965":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:974:14702":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"22:7306:4268":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:3403:20353":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:379:3248":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"22:1641:5133":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:5334:8233":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:8697:15180":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"22:5280:8226":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:42522:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:15734:12636":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13424:12048":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:1239:33991":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:9729:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"18:689:13818":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5700:12805":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:5995:13901":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13064:12012":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:3340:14791":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:12530:14619":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"11:2228:2504":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:5230:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"11:1085:35251":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:597:11873":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:4796:3112":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12683:14624":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:4896:8017":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:5603:8262":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:43871:14768":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:2660:12790":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:4925:15149":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:8443:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:513:14536":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:8799:32322":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:3277:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:4605:3125":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:40876:14129":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:7132:13997":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:42230:3242":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:6917:9018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:6532:13949":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:32261:13142":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"22:6629:8966":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:8261:8431":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:651:11753":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"11:1601:14713":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:41342:10533":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:10251:11881":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:39651:15028":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:15058:12442":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:7665:3241":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:46326:13569":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:43096:13018":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:11329:14739":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:14575:11969":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:8183:13673":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:7548:9404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"22:6435:8952":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:44190:14182":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:5412:1246":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:7877:14870":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:5802:21845":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"22:6524:8959":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:2232:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:12851:13865":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:32321:3113":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:1657:5134":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:42719:3127":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:43368:13506":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:2418:12779":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"22:5347:8235":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:11293:21948":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:39683:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:6659:8969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:11189:11903":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"22:552:4226":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"2:44389:14191":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:9542:10692":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"22:6756:8981":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:46453:13590":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"18:754:13828":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"22:7537:9403":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:2748:12794":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:10401:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:4927:15150":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:9100:14842":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"5:7067:10513":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"22:5332:8233":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:32337:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:22733:15301":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:5837:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:8506:14115":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:5036:8202":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:23011:13241":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:7936:10579":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:11567:14580":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"22:5492:8252":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:938:10503":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:5335:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:1604:14711":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:3830:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:33564:3171":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:16269:12047":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:44619:10689":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:14545:12262":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5037:12855":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:3648:20511":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:5450:8246":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"22:1709:5141":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:15010:12433":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:5781:12806":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:902:14026":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:33631:3173":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:12363:471":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:5846:13887":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:6521:8958":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:2467:3548":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:2010:787":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:6442:13943":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:43125:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:872:14534":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"18:0:2968":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:6461:2771":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:11938:26879":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:38248:20506":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:7681:14050":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:6867:10570":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"17:11730:13843":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:14449:12252":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:2592:12787":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:5482:8250":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7769:12994":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:2394:12778":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:46195:13562":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"18:491:13811":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:1645:14718":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:16093:12726":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"5:7694:20546":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"22:8247:8429":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"22:7330:4095":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:43821:14767":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:11031:13740":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:1844:696":{"crate_id":1,"path":["std","env"],"kind":"module"},"21:0:2363":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"6:5420:8243":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"9:176:14920":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:3294:20352":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:1684:5137":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:11786:10589":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:13375:12041":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:11595:11918":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:14788:12329":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"22:5137:8211":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:47111:13643":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:4817:11639":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"2:3218:3118":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:22473:15304":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:11219:10689":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"22:1512:5121":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:13758:14752":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:15445:12542":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:47012:13636":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:12314:14297":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"22:4995:8198":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:4805:8178":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:15249:12487":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:12543:14620":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"22:1595:5130":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:2315:14787":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:40816:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"11:1914:14030":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:564:4228":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:6427:14669":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"22:5448:8246":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:11088:10585":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:1089:14706":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:40454:14103":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:42011:32257":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:39813:14758":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"22:1528:5123":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:46309:13568":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:45950:13541":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:11094:10586":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:10633:10582":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:41883:13479":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:10887:35290":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:32303:14756":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:43884:14081":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:8762:13506":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:7888:14006":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:5817:13882":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:14968:12427":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:4821:14547":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:12375:756":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:11926:13760":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:14723:12278":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:8216:14017":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:4468:12837":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:1616:3155":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13766:12126":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:4723:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"22:6689:8973":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"16:6066:13910":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:23211:13257":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:43932:13513":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:12485:22042":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:7431:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12572:11910":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:30463:15121":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:40788:14116":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11497:14575":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:16223:12757":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:14051:12168":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:42838:3740":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"22:5269:8225":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:6433:13942":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:2594:13222":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11313:13832":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"11:0:2962":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:22221:15078":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:4303:28485":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:1514:5121":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:44208:14183":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:42149:3157":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:21739:32194":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:5298:10499":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:15197:12478":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:8328:14830":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:8254:14034":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:2135:3574":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"22:6721:8977":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:1974:14783":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:42600:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"11:1005:13998":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:22691:15078":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:12008:14744":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:2803:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:9671:21896":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:11877:11921":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12659:14622":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:1507:5120":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:10908:14239":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:5638:14810":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:42680:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"11:698:3157":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:1521:5122":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:3289:20351":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"17:15092:12454":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:21842:13233":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:4807:15141":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"22:6417:8951":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:830:14711":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:45883:13533":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:8599:15161":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:13912:10547":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10997:11896":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"22:8288:8435":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:42105:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:11214:14564":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:5756:14630":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:261:14534":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:11256:13829":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:32426:3460":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"5:7584:3157":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:2508:12783":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"22:5253:8223":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:7361:9396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:11041:15078":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"11:2366:14715":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:14599:12276":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:23089:14091":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:5983:10490":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"5:7158:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:9358:13749":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:9707:14826":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:11198:3590":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:6779:14060":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:46925:13633":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:2483:15067":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:12201:14609":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"11:798:3155":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:13832:12136":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:9202:15214":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:3393:14793":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:7556:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"11:854:14702":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"22:5055:8205":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:5534:20369":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:8249:8429":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:40739:14760":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:8225:14227":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"22:6880:8092":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:7546:9404":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:21771:15222":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:1187:2880":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"2:2970:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"6:7308:4268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"11:1049:14707":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"22:6775:8984":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:13932:10549":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:43171:3746":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:9737:21895":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:4819:11641":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:8047:15001":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:7085:13990":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5224:8219":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:4506:20425":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"16:4856:12849":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:6678:14146":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:44404:14197":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:32396:3264":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:40797:14118":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:11499:10587":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"17:13387:12042":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"22:1630:5132":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:16121:12733":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"14:0:2964":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:14111:12176":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:2171:14719":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:3614:12828":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:23288:13264":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"6:5117:8209":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:46341:13570":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:5367:21844":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"13:110:35253":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:5477:8249":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"22:5323:8232":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:13877:12146":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:33698:20501":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:656:2759":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11524:14577":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:11075:11899":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"22:1587:5129":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:3306:3590":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:16151:12741":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:46681:13598":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:22605:32812":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:8176:14225":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13116:12016":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:4167:15141":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:43150:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:3841:15120":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:13844:12138":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:45789:13523":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:256:14533":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1703:5140":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:3264:14544":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:46259:13566":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:11809:14799":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:44269:14187":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:3906:14800":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:21722:32204":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:21948:15219":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"11:328:14023":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:40576:14109":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:4772:15168":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:34496:12946":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:12353:13857":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"11:434:35246":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"18:80:26091":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:13797:12132":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:6634:12809":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:3395:14794":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"22:5584:8260":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:46157:13560":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:7448:9397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"11:2533:13138":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:43811:14079":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:4947:8191":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:5593:8261":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:7910:21858":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:6120:21848":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"18:613:35296":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:8249:20493":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:1548:3591":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"22:6491:8916":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:39743:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:9712:10581":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:8171:14826":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:4142:3155":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:40746:14080":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"5:2157:14034":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:3473:14545":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:2572:12786":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:5057:8205":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:6682:14817":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:7350:9395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"13:229:13137":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:7379:35275":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:21705:32201":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"22:1582:5128":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:5395:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:1854:2938":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:45971:13542":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:6005:3155":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:2495:15073":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:11269:21947":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"22:5385:8240":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:491:4219":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:14855:12384":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:2728:12793":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"11:708:14697":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"9:355:20851":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:40493:14104":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:818:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:36372:12947":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:13581:12083":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:3669:20423":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:40806:14119":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:10213:14154":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:13606:12087":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:13774:12128":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:7463:9399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:12149:10593":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:15596:12600":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:1636:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:40888:14130":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:16176:12749":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"20:0:2364":{"crate_id":20,"path":["smallvec"],"kind":"module"},"2:40530:14107":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:16165:12744":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"22:6519:8958":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:43084:13504":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:15313:12505":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"11:1880:3590":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:1897:14781":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:32868:12940":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"22:7467:9400":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:43903:14082":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"22:1673:5136":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"22:5163:8213":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:10044:21917":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:21824:15218":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:13325:12036":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:2741:14789":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"22:4873:8183":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:14503:12258":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:12597:11979":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"22:5239:8221":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:4325:15157":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"22:5222:8219":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"18:643:11753":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:1489:5117":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"22:5393:8241":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:11621:13834":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:758:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:2265:3228":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"22:5017:8200":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:9886:21913":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"11:2566:14049":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:40465:32119":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:12993:21921":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"22:6650:8968":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:44613:14216":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:6882:8092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:6471:8956":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"22:4894:8017":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"22:1623:5131":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:5387:8240":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:6456:21850":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:5319:8231":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:21751:32208":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:42085:13488":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:14025:12164":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:7492:14046":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:2961:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"22:516:4221":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:9457:3170":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"22:8282:8434":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:2768:12795":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:16079:12722":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:22379:15078":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:2809:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:40006:3477":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:6544:8961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"22:8253:8430":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"18:507:11753":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:4694:15163":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"22:490:4219":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"16:2323:20984":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:7590:12817":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:11510:14576":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"22:5355:8236":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:6270:14059":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:14356:12231":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:8785:13732":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:13024:21922":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:5488:8251":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"6:8273:8433":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"22:8271:8433":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5241:8221":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:10950:13752":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"22:5317:8231":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:3450:2553":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:7098:13993":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:4464:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:8308:8438":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:7695:12991":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:15624:12607":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:4802:12847":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:4884:2490":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:43386:14164":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:44561:20395":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:15814:12655":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:2825:13226":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:8306:3262":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:23244:13260":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:1859:14779":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:523:4222":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"15:306:20940":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:2338:12769":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"22:5639:8266":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:14091:12173":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:6770:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"11:881:14705":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"22:7366:4001":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:22593:15307":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"16:2684:12791":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:6948:12811":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"14:220:13131":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:46498:13591":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:5307:12858":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:44637:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:4816:8179":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:44004:14076":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:12984:20380":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"11:873:14704":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:45819:13527":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"22:1492:5118":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:40418:14101":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"9:328:13183":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:14271:12218":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:7509:14681":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:6443:8953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:3899:12832":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:1259:33998":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"11:2440:3155":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:8166:10312":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:2377:14042":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:22989:32261":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:9398:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:7332:4095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:12300:22040":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:2038:3448":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"11:2545:13140":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:2223:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:12380:906":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:8642:4001":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:4109:15136":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:13986:12160":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:11051:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:10391:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:8031:9779":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:43067:3569":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:465:4216":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12175:14604":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:42444:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"22:0:1005":{"crate_id":22,"path":["libc"],"kind":"module"},"2:34150:20504":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:10661:14551":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:3677:15097":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:3937:3155":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:39668:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:10284:11882":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:30739:3569":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"5:7524:14047":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:11676:13759":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:6740:8979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:15760:12645":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:11346:14866":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"6:5658:8268":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:4223:15145":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:9533:14738":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:22978:14090":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:7823:21857":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:10403:3741":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:1584:5128":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:5602:14808":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"22:1682:5137":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:2478:12782":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:4929:8189":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:44250:14185":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"22:6478:8957":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:6657:8969":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:30718:3165":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:9106:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:9173:13741":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:2303:20958":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:7577:9406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:4976:12853":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:7368:4001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:6493:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"18:521:26103":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:44294:14101":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:5622:14809":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"22:6746:8980":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"5:3095:33992":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"15:288:20939":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:12367:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:3925:12833":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:22646:15308":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:4882:12850":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:5044:8203":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:3421:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9312:14848":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:1675:5136":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"22:4879:8184":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:12127:11959":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:9143:13740":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:9284:26219":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"11:772:14026":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:33977:20503":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13146:12020":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:7052:14671":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:11688:13840":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"11:351:35243":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:12516:14617":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:7395:10575":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:6849:13979":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:11634:13836":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:42278:3590":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:7727:12819":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:10481:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:11227:14565":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:13621:14751":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:9960:784":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"2:46835:13631":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:15463:12545":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:6231:13937":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"9:500:13204":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:22871:14085":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13509:12056":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:8199:9940":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:10399:11885":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:10861:10542":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:7454:9398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:6799:15210":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:13211:12029":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:9232:15215":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:6412:21849":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"22:5364:8237":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"22:8006:9777":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:10534:35288":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:47054:13638":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:6588:13951":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:39723:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"22:6706:8975":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"1:8001:3239":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:39655:14099":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:16069:12721":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:13473:12051":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:9151:3590":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15582:12594":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:11200:13739":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:42033:14157":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:40775:14115":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:6462:8955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:7612:3343":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"6:4875:8183":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:6183:2771":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:13738:12120":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:14752:12298":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:22226:15224":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"18:765:26102":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:8529:14072":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"22:6505:8917":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:7504:3155":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"22:5505:8253":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"16:2998:12823":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8082:14825":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4970:8194":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:12778:14075":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"11:2349:14707":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:47091:13641":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:8605:14840":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"22:6788:11555":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:43356:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:41094:14140":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:44793:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:44090:14176":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:1207:14538":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:4886:15162":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:12900:12001":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:3248:3457":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:14933:12426":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:6665:21851":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"18:608:14527":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:9266:14844":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:4862:3115":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"22:6460:8955":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"9:445:20836":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4914:8187":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"22:6636:8967":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:46128:13559":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:8205:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:11670:14867":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:40654:20546":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:14414:12240":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:2203:14540":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:11799:14591":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:8800:15193":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12371:12002":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:4964:8193":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:10971:30982":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:4161:15140":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:46113:13558":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:46017:13545":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:0:563":{"crate_id":2,"path":["core"],"kind":"module"},"17:10419:11887":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:23233:13259":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:14189:12203":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:1674:10458":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:4364:10490":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:1632:5132":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:6437:8952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:7580:14004":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:568:3233":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:7111:13996":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"22:585:4231":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"6:559:4227":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:8619:13718":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:3491:15029":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:12808:11998":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:4341:15159":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:14260:12217":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:14298:12221":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:5654:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:3297:28689":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"22:7348:9395":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6278:14639":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:42238:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:10750:2790":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:3663:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:2938:20446":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:15655:12615":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:8175:14690":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:15418:12535":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"5:7033:3159":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:5326:14736":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:6777:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"5:789:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:6504:13947":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:23277:13263":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"6:4937:8190":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:7604:9408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:41352:13473":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:41333:14148":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"22:544:4225":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"6:7563:9405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:4:1259":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:5255:8223":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:4888:8185":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"22:478:4218":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"11:685:3591":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:44786:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:10877:14554":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"20:363:3162":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"16:4743:12845":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:15126:12457":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"11:1140:14709":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"18:481:13810":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:432:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:928:3155":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:46660:13597":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:9167:3157":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12949:11966":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"22:6763:8982":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"22:5475:8249":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:6611:8964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"22:5105:8208":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:10769:35287":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:22517:15305":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"22:5656:8268":{"crate_id":22,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:12041:14745":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:11354:14571":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:3032:10555":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:47152:13646":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:13363:12038":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:9325:13746":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"22:577:4230":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"6:5325:8232":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:46527:13592":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:15678:12628":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:44865:33410":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:2076:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:42483:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:12382:1856":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:43893:14769":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"22:5286:8227":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:10704:14791":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:9159:14843":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"22:4935:8190":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:5019:8200":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:40844:14124":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:7744:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:2854:12799":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"5:1625:14698":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:3559:10490":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"22:4974:8195":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"11:1920:14031":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"22:5646:8267":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"22:5549:8257":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"22:6597:8963":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"22:5601:8262":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:4915:3116":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"22:537:4224":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"18:718:11771":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:12373:737":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:8536:14184":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:21830:15221":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:7497:12986":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:11849:14800":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:6599:8963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"22:7452:9398":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:12089:11957":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:7767:14730":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"5:1395:14707":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:5375:8238":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:3318:33994":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"22:7359:9396":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:8638:14841":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:7986:4174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:5722:12807":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:5742:13876":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:6564:8962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:14079:12172":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"11:2148:14707":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:5112:15171":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:12213:14610":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:10759:11910":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:11102:14561":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:7144:21854":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:3342:14792":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"22:8300:8437":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:5004:15146":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:46631:13596":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:9217:15213":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:1563:5126":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:10980:30986":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:6940:12919":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:320:1778":{"crate_id":1,"path":["std","thread"],"kind":"module"},"6:7469:9400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40826:14121":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"5:306:2508":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:5586:8260":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:8516:14140":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:22705:15300":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:32314:14757":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:46046:13547":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:14131:12177":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:23299:13265":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"2:10342:3736":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:10991:14825":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:8290:8435":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:7168:13746":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:3347:14028":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:30750:32102":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:22579:15078":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:8255:8430":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"22:6678:8972":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:14463:12253":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:10092:21918":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:479:4218":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:14246:12215":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:9807:21901":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:3053:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"5:4172:10465":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"20:97:3156":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"22:7314:5072":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4976:8195":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:46178:13561":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:9277:3232":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:11026:21930":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:41118:14142":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:12189:14608":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:7514:10476":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:26151:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"22:5177:8214":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:6381:8888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"14:31:14694":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:4487:14803":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"22:5309:8230":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:2133:3573":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:44844:14358":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:4830:12848":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:15138:12460":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:39833:13341":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"22:569:4229":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"1:1613:3157":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:11142:11910":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11016:14556":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:11574:2504":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:8477:13713":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"22:5005:8199":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12621:11980":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"1:9338:26223":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:1107:14710":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:994:10473":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"22:5539:8256":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:2485:15068":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:5381:8239":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:11367:11899":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:9781:21911":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:13723:12116":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:4614:12842":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:4718:12844":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"22:4827:8180":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:15266:12495":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:13922:12151":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:14868:12390":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:5205:8217":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:4217:3591":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13538:12067":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:8284:8434":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5682:8271":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:46586:13595":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"9:422:20838":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:44902:14220":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:21693:32201":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"14:40:12030":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"15:0:2965":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:23189:13255":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"5:3373:14031":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:9421:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:7586:9407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:15222:12483":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:1667:5135":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:6543:13950":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:44510:14204":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:4574:3124":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:0:2966":{"crate_id":16,"path":["gimli"],"kind":"module"},"22:4955:8192":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:12494:14746":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:44852:13519":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:6652:8968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:13959:12155":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:8338:15109":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"22:1694:5139":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2767:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:15116:12456":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11537:14578":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:13568:12079":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:11042:14557":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:2597:672":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:6704:10465":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"11:1105:14708":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:10828:35283":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11166:11901":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:13526:12064":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:8155:14016":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:6648:13961":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"5:5490:10465":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"22:7461:9399":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"22:6609:8964":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:16187:12750":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"17:14284:12220":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"22:563:4228":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"22:5531:8255":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:7061:12927":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:1533:3590":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:40643:14112":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:6658:3155":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:15434:12538":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:7484:3157":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:45851:13531":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:21737:32199":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:2937:15078":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:11089:14560":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:40681:11885":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2:40638:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:4940:12852":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:15701:12629":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12399:13860":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:7352:26396":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:47267:13668":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:13308:12035":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:12379:900":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:14012:12163":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:1379:13998":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:5088:8207":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"10:44:13146":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"11:1564:20914":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:40625:13472":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"20:328:3158":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"2:43832:13511":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:4491:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"18:680:13815":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:4406:14802":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:10905:14555":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:10399:3740":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:1223:34004":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:7592:3157":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"22:5627:8264":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:42189:3430":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"22:8306:8438":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"22:6532:8960":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:21769:15078":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:23003:13240":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:44803:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:10647:15082":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:45804:13526":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:8093:13042":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"22:5518:8254":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"1:10590:14842":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:44418:14200":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"20:344:3160":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"1:10913:14225":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"22:1498:5119":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:1922:14782":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:43972:11885":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"14:214:14018":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:2780:14790":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:11481:14176":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:9403:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:11664:14245":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:16032:12032":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"22:8351:9977":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:23178:13254":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:46227:13564":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:4995:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:4354:15160":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:12330:14931":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:4337:10490":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:14147:12182":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:46386:13587":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:3196:12768":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:12386:1832":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"7:79:20829":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"11:1907:14029":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:9439:3169":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:9317:14849":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:2438:12780":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:570:4229":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"9:53:14910":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5622:8263":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"22:5591:8261":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"22:472:4217":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:7733:10500":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"22:5486:8251":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:15190:12477":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:15078:12450":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:46003:13544":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"22:496:4220":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"17:15799:12654":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12464:22041":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:11247:14072":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:150:10451":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:44136:14179":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:2313:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:6122:10499":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:12433:11969":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:5914:13892":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"22:5125:8210":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:46415:13588":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12707:14626":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:5541:8256":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:9700:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:13272:12033":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:44054:14174":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:3649:3736":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:43347:14162":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:4997:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"22:1688:5138":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6317:14658":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10720:35286":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:8136:14013":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:5400:11877":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:6466:12875":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:10498:26862":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:2612:12788":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:38303:20507":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"11:2559:13143":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12584:14553":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:5168:15176":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:5935:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:14876:12391":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"11:835:14699":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:6248:10490":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"11:1064:20913":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:4913:12851":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:1643:5133":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"22:6714:8976":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:11661:13838":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:10612:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:6853:14821":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:5515:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:5520:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:22939:14086":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"5:1595:14027":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10439:11888":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:8286:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"11:2551:35242":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:3658:28966":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:3903:14799":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:14560:12266":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:5676:8270":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11690:14249":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:6638:8967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:2902:20985":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:43783:14077":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:42158:3429":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:15102:12455":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"9:0:2960":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:16050:12033":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:6526:8959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"22:5403:8242":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:42366:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:3339:14030":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:403:14535":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:8343:9976":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:4853:3114":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:4986:14548":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:40835:14123":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"22:5680:8271":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:3669:11783":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:623:14995":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:12361:417":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:980:14704":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"7:0:1906":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:6748:8980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:3658:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:6718:10569":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:5415:12860":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:12346:26828":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"12:0:2963":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:42294:3157":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:11115:14562":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:9394:10490":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"6:6765:8982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:44285:14107":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2613:3558":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"17:15206:12479":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:33765:20500":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:43732:14765":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"11:430:35250":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:5069:8206":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:944:14711":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:10155:11876":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:4139:15138":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:9854:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"22:4945:8191":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"20:281:3157":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"6:8330:8440":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:0:1718":{"crate_id":1,"path":["std"],"kind":"module"},"1:3667:15076":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:10393:3737":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:11493:14574":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:14475:12254":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:16235:12760":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:1828:3727":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"17:12408:11968":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:12384:1844":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"22:5339:8234":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:12056:11954":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:14311:12222":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:5289:14805":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:10405:3742":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:23266:13262":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"16:867:14533":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:7715:31604":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:9253:13745":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1539:5124":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13437:12049":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:40424:14102":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:3529:14148":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:10707:14793":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:12107:11910":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:32397:3461":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:11467:11917":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:44435:14201":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:15214:12481":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:5217:8218":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:7633:35271":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:2636:12789":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"4:0:2959":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:4984:8196":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:22260:32197":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:473:4217":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:538:4224":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46096:13557":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:4201:15142":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:12724:21919":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:5447:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:11495:14177":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:5960:13899":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:2611:3557":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"22:5620:8263":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:6731:8978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"16:8073:13041":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:5025:8201":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:33832:20502":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:4957:8192":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:43858:14080":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:3860:14034":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:7639:14049":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12362:13858":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:12494:11974":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:32328:14098":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:12768:21898":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:6047:14632":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:44886:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:11583:14585":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:532:4223":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:3042:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"22:5247:8222":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4869:8182":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:898:10468":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:5670:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:517:4221":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:22818:14084":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:4587:12841":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:2635:14788":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:8587:14229":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:40522:14101":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:10710:14795":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:11254:10688":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"1:5844:2771":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:41104:14141":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"18:581:3473":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:43571:13510":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"22:6670:8971":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:4790:8177":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:9271:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"11:1580:14712":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:4008:14801":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"22:4900:8186":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:14994:12432":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:12082:3570":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:6691:8973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:437:11833":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:7826:10503":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"22:5299:8229":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:598:35297":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:42405:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:11409:13201":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"5:1132:10465":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:373:3247":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"22:5410:1246":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:14912:12421":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:2711:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:45836:13530":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:1637:14030":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:44781:13518":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"2:41927:13486":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:13946:12152":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:7006:14670":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:7316:5072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:12978:13821":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:40610:14110":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9755:21893":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"22:1701:5140":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:4560:12840":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"22:8328:8440":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"22:5480:8250":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:8319:8439":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:45868:13532":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:7799:12808":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:12376:735":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"6:5127:8210":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:8594:14230":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:15944:12029":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:11341:14570":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:6480:12803":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"22:1549:5125":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:527:3228":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"22:5379:8239":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:10884:14861":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"14:165:20920":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:1920:10692":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"22:5674:8270":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"18:96:26092":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13235:12030":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"22:8259:8431":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:9130:13739":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:16212:12755":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:6079:10490":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:11557:14579":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:5897:12862":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:1794:10465":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"22:5426:8244":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:2003:15057":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:798:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:5776:3940":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"22:6409:8950":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"11:2301:13998":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"16:6782:21852":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:8188:14693":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"22:5067:8206":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"22:5418:8243":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:21822:15078":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"22:7339:9394":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:10320:14781":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:12385:1850":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:8867:14234":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"18:531:13812":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"9:236:13506":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:4561:14804":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"22:1567:5127":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"11:2323:14706":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:894:3157":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"22:5215:8218":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:12264:14614":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:42824:3737":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:9190:13742":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"22:8197:9940":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12251:14613":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:5249:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:40969:14137":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"11:102:2509":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:10962:13713":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"10:0:2961":{"crate_id":10,"path":["adler"],"kind":"module"},"2:44672:20607":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"16:7321:3429":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:6796:14818":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:1424:14710":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:6716:8976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:15473:12550":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:43801:14766":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:11405:14573":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:10933:13673":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:8752:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"22:7984:4174":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:14847:12381":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:13972:11927":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:3703:3120":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:16249:12761":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:46075:13556":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:7618:12987":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:6098:21847":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:43057:13494":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:12969:12004":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"22:6542:8961":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4842:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"7:32:20822":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:43339:14161":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"22:5560:8258":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:39820:13340":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1631:14029":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:10185:11878":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:8714:13729":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:10407:15200":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"16:6758:12901":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:12388:1916":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:1625:14028":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:7306:35274":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:40920:14133":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"11:396:10456":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:2788:12796":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:40669:14113":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3065:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"22:5086:8207":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:23062:32118":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:9386:10566":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"22:5568:8259":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:39607:20354":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:32339:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:7231:10521":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:3264:3172":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:46436:13589":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:9381:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:8459:12983":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:14341:12227":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:15521:12587":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:13399:12045":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:7842:10507":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:10915:35284":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:3094:3545":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:8486:15077":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:12695:14625":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"5:7057:10511":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:12289:11962":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:5570:8259":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:42221:3394":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:592:3235":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:4377:3590":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"18:706:13821":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:40897:14131":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:8238:14828":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:10397:3739":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:7612:3504":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"22:6729:8978":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"17:12443:11972":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:5648:8267":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:3344:12942":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:42561:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:11605:11919":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:11076:10584":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:43112:32109":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:8542:14837":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"5:4307:10490":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:15301:12504":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:11402:14076":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:2964:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"22:6441:8953":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:14977:12430":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:2156:3572":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11755:13847":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"8:0:2363":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:11324:14567":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:5186:8215":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"22:4867:8182":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:4890:8185":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:33080:12937":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:10829:10537":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:10137:21894":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:12383:1838":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:5347:12859":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:5686:12802":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:4536:10490":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:12929:12002":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:21720:32206":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:41311:14145":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:15635:12612":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13412:12047":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:14235:12213":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:12318:11966":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"9:390:20837":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"11:2495:20909":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"18:659:14528":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:1011:3590":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"18:635:11770":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:23096:13253":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:45921:13539":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:2708:12792":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:12377:912":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"22:5115:8209":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"22:6900:9017":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:15608:12603":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:13187:12028":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:2355:12771":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12454:13863":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:3810:12830":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:6922:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:7996:3238":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:1642:14031":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:9984:21916":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:1098:14537":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11674:13839":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:8193:14226":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:3259:2496":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:6823:8986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:11509:14742":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11825:14595":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:43331:14159":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:10386:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:10218:11880":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:10846:10538":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:40537:20440":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:2541:2973":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:5288:32083":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:42124:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:2733:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:15151:12466":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:45936:13540":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"22:5293:8228":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:44789:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:23027:32106":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8019:2790":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:22924:13235":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:5769:13880":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:11953:14254":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:15720:12634":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6494:13946":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13553:12073":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:15356:12520":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"22:1561:5126":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:4881:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11788:14590":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:14212:12212":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"11:842:15015":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:12328:13849":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:13497:12055":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:1494:5118":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"22:6621:8965":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:6449:8954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:3740:3123":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:3875:14719":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}