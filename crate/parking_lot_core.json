{"root":"0:0:1618","crate_version":"0.9.5","includes_private":false,"index":{"b:2:2500-0:252:1609":{"id":"b:2:2500-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11343:56729":{"id":"2:11343:56729","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11342:56728"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11372:56737":{"id":"2:11372:56737","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10845:9762","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:2524-0:284:1611":{"id":"a:2:7718:2524-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:213:1854":{"id":"0:213:1854","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2506-0:192:1610":{"id":"b:2:2506-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11441:54857":{"id":"2:11441:54857","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:2525-0:230:1612":{"id":"a:2:7717:2525-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2224-0:270:1614":{"id":"b:2:2224-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:211:1613":{"id":"a:2:2659:222-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:210:650":{"id":"0:210:650","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:211:1613":{"id":"b:2:2221-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:284:1611":{"id":"b:5:671-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2794","5:674:2795","5:675:2796"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:270:1614":{"id":"0:270:1614","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:272:1545"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2645:214-0:270:1614","a:2:7717:2525-0:270:1614","a:2:7718:2524-0:270:1614","a:2:2709:2580-0:270:1614","a:2:2659:222-0:270:1614","b:2:2511-0:270:1614","b:2:2496-0:270:1614","b:2:2506-0:270:1614","b:2:3304-0:270:1614","b:2:2500-0:270:1614","b:2:2221-0:270:1614","b:2:2224-0:270:1614","b:5:671-0:270:1614","0:273","0:274","0:276","0:277","0:279","0:280","0:282"]}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1603","glob":false}},"a:2:7718:2524-0:270:1614":{"id":"a:2:7718:2524-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2659:222-0:252:1609":{"id":"a:2:2659:222-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:272:1545":{"id":"0:272:1545","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2511-0:192:1610":{"id":"b:2:2511-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5092:61204":{"id":"5:5092:61204","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1744","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:9735","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1744","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:9735","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11349:10731":{"id":"2:11349:10731","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50239:9534","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2659:222-0:298:1617":{"id":"a:2:2659:222-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7718:2524-0:298:1617":{"id":"a:2:7718:2524-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7717:2525-0:270:1614":{"id":"a:2:7717:2525-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11352:56745":{"id":"2:11352:56745","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:270:1614":{"id":"b:2:2506-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11320:782":{"id":"2:11320:782","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12350:2233"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11408:60561":{"id":"2:11408:60561","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:252:1609":{"id":"b:2:2221-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2500-0:298:1617":{"id":"b:2:2500-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:251:650":{"id":"0:251:650","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5110:54854":{"id":"5:5110:54854","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11441:54857"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:252:1609":{"id":"b:2:2224-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11322:60547":{"id":"2:11322:60547","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11428:60568":{"id":"2:11428:60568","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2580-0:298:1617":{"id":"a:2:2709:2580-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:674:2795":{"id":"5:674:2795","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11341:60552":{"id":"2:11341:60552","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"2:11340:60551","`str`":"1:12356:2238","crate::ops::IndexMut":"2:2974:9769"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:275:409":{"id":"0:275:409","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:230:1612":{"id":"b:2:2500-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2506-0:298:1617":{"id":"b:2:2506-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2645:214-0:211:1613":{"id":"a:2:2645:214-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:239:1874":{"id":"0:239:1874","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:2499:2737":{"id":"2:2499:2737","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2473:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1605","glob":false}},"a:2:2659:222-0:270:1614":{"id":"a:2:2659:222-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2138","glob":false}},"0:173":{"id":"0:173","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1607","glob":false}},"2:11405:60560":{"id":"2:11405:60560","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"2:11402:60559","prim@char":"1:12350:2233","self::pattern":"2:11021:10007","`DoubleEndedIterator`":"2:7061:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50153:10209","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11350:60553":{"id":"2:11350:60553","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50249:10213","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:2524-0:230:1612":{"id":"a:2:7718:2524-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:298:1617":{"id":"0:298:1617","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:2645:214-0:298:1617","a:2:7717:2525-0:298:1617","a:2:7718:2524-0:298:1617","a:2:2709:2580-0:298:1617","a:2:2659:222-0:298:1617","b:2:2511-0:298:1617","b:2:2496-0:298:1617","b:2:2506-0:298:1617","b:2:3304-0:298:1617","b:2:2500-0:298:1617","b:2:2221-0:298:1617","b:2:2224-0:298:1617","0:300"]}},"2:11338:56707":{"id":"2:11338:56707","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:2524-0:252:1609":{"id":"a:2:7718:2524-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:83:1987":{"id":"0:83:1987","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["_key",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:72:1616":{"id":"0:72:1616","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2645:214-0:270:1614":{"id":"a:2:2645:214-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11419:60567":{"id":"2:11419:60567","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11410:60562":{"id":"2:11410:60562","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11345:10038":{"id":"2:11345:10038","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49961:10200","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11347:59432":{"id":"2:11347:59432","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11348:59434"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50259:10214","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:243:409":{"id":"0:243:409","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:255:1879":{"id":"0:255:1879","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:11446:60572":{"id":"2:11446:60572","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4451:60572"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50302:10218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2580-0:284:1611":{"id":"a:2:2709:2580-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11332:1814":{"id":"2:11332:1814","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48019:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249:595":{"id":"0:249:595","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:675:2796":{"id":"5:675:2796","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:284:1611":{"id":"b:2:2506-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:2580-0:192:1610":{"id":"a:2:2709:2580-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11440:54856":{"id":"2:11440:54856","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11365:2743":{"id":"2:11365:2743","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233","`None`":"2:48019:174"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:1606":{"id":"0:80:1606","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["filter",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2918:1977","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2918:1977","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:253:1877":{"id":"0:253:1877","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:2496-0:192:1610":{"id":"b:2:2496-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2510:1419":{"id":"2:2510:1419","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179":{"id":"0:179","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1612","glob":false}},"a:2:7717:2525-0:298:1617":{"id":"a:2:7717:2525-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:233:1868":{"id":"0:233:1868","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:202:409":{"id":"0:202:409","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11351:59430":{"id":"2:11351:59430","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50277:10216","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2502:668":{"id":"2:2502:668","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:284:1611":{"id":"b:2:2224-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2221-0:270:1614":{"id":"b:2:2221-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11348:59434":{"id":"2:11348:59434","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11347:59432"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50268:10215","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2645:214-0:192:1610":{"id":"a:2:2645:214-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11402:60559":{"id":"2:11402:60559","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:7061:120","prim@char":"1:12350:2233","self::pattern":"2:11021:10007","str::rmatch_indices":"2:11405:60560"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50135:10208","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:84:1993":{"id":"0:84:1993","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["_key",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5108:61208":{"id":"5:5108:61208","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1744","`String`":"5:6978:218"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1744","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:9735","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1616","glob":false}},"0:93:2137":{"id":"0:93:2137","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1611","glob":false}},"2:11393:60557":{"id":"2:11393:60557","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:193:1843":{"id":"0:193:1843","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:195:1545"]}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:252:1609":{"id":"0:252:1609","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:1877","0:255:1879","0:257:1881"],"impls":["a:2:2645:214-0:252:1609","a:2:7717:2525-0:252:1609","a:2:7718:2524-0:252:1609","a:2:2709:2580-0:252:1609","a:2:2659:222-0:252:1609","b:2:2511-0:252:1609","b:2:2496-0:252:1609","b:2:2506-0:252:1609","b:2:3304-0:252:1609","b:2:2500-0:252:1609","b:2:2221-0:252:1609","b:2:2224-0:252:1609","b:5:671-0:252:1609","0:259","0:260","0:262","0:263","0:265","0:266","0:268"]}},"2:11384:56741":{"id":"2:11384:56741","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"2:11387:56743","self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50089:9760","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:86:1599","path":"::spinwait"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:908","0:92:2130","0:93:2137","0:94:2143"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7717:2525-0:192:1610":{"id":"a:2:7717:2525-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2224-0:230:1612":{"id":"b:2:2224-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11422:53681":{"id":"2:11422:53681","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12350:2233","self::pattern":"2:11021:10007"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:270:1614":{"id":"b:2:2511-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:208:595":{"id":"0:208:595","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11340:60551":{"id":"2:11340:60551","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:2970:9720","str::slice_mut_unchecked":"2:11341:60552","`str`":"1:12356:2238"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:283:650":{"id":"0:283:650","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:2524-0:192:1610":{"id":"a:2:7718:2524-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11328:53600":{"id":"2:11328:53600","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10589:10335"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71:1849":{"id":"0:71:1849","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:671-0:270:1614":{"id":"b:5:671-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2794","5:674:2795","5:675:2796"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:82:1603":{"id":"0:82:1603","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:83:1987","0:84:1993"],"is_stripped":false}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2496-0:270:1614":{"id":"b:2:2496-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11329:60550":{"id":"2:11329:60550","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11425:56748":{"id":"2:11425:56748","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:297:650":{"id":"0:297:650","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11321:2111":{"id":"2:11321:2111","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11358:56747":{"id":"2:11358:56747","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:252:1609":{"id":"b:2:2496-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2709:2580-0:211:1613":{"id":"a:2:2709:2580-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11442:54858":{"id":"2:11442:54858","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:284:1611":{"id":"b:2:2496-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2500-0:211:1613":{"id":"b:2:2500-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2511-0:284:1611":{"id":"b:2:2511-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2509:127":{"id":"2:2509:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:5:671-0:230:1612":{"id":"b:5:671-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2794","5:674:2795","5:675:2796"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:286:1545":{"id":"0:286:1545","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:11387:56743":{"id":"2:11387:56743","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233","str::splitn":"2:11384:56741"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50107:9758","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1617","glob":false}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:77:1605":{"id":"0:77:1605","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["unpark_token",{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:195:1545":{"id":"0:195:1545","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:1849"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5096:61205":{"id":"5:5096:61205","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1606","glob":false}},"b:2:2224-0:192:1610":{"id":"b:2:2224-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5109:2415":{"id":"5:5109:2415","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::park","name":"park","id":"0:74:1604","glob":false}},"2:11323:60548":{"id":"2:11323:60548","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:284:1611":{"id":"b:2:3304-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11390:60556":{"id":"2:11390:60556","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11331:11345":{"id":"2:11331:11345","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12367:2247"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2221-0:298:1617":{"id":"b:2:2221-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11445:9772":{"id":"2:11445:9772","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4454:9772"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50293:9773","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11415:60565":{"id":"2:11415:60565","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11378:60554":{"id":"2:11378:60554","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:12350:2233","str::rsplit_terminator":"2:11381:60555","self::pattern":"2:11021:10007","`DoubleEndedIterator`":"2:7061:120","str::split":"2:11369:54183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50035:10204","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215:1861":{"id":"0:215:1861","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:11325:60549":{"id":"2:11325:60549","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11323:60548"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:212:1852":{"id":"0:212:1852","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:221:59":{"id":"0:221:59","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11319":{"id":"2:11319","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10584:1344","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11320:782","2:11321:2111","2:11322:60547","2:11323:60548","2:11325:60549","2:11328:53600","2:11329:60550","2:11330:306","2:11331:11345","2:11332:1814","2:11334:11334","2:11336:56706","2:11338:56707","2:11340:60551","2:11341:60552","2:11342:56728","2:11343:56729","2:11344:10236","2:11345:10038","2:11346:10382","2:11347:59432","2:11348:59434","2:11349:10731","2:11350:60553","2:11351:59430","2:11352:56745","2:11355:56746","2:11358:56747","2:11361:2778","2:11365:2743","2:11369:54183","2:11372:56737","2:11375:56739","2:11378:60554","2:11381:60555","2:11384:56741","2:11387:56743","2:11390:60556","2:11393:60557","2:11396:2314","2:11399:60558","2:11402:60559","2:11405:60560","2:11408:60561","2:11410:60562","2:11412:60563","2:11414:60564","2:11415:60565","2:11416:60566","2:11419:60567","2:11422:53681","2:11425:56748","2:11428:60568","2:11431:60569","2:11434:60570","2:11437:10153","2:11439:10376","2:11440:54856","2:11441:54857","2:11442:54858","2:11443:60571","2:11445:9772","2:11446:60572"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2511-0:211:1613":{"id":"b:2:2511-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11334:11334":{"id":"2:11334:11334","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48019:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11439:10376":{"id":"2:11439:10376","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1719","glob":false}},"2:11361:2778":{"id":"2:11361:2778","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48019:174","self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:1872":{"id":"0:237:1872","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:2224-0:211:1613":{"id":"b:2:2224-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:230:1612":{"id":"a:2:2659:222-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2515:1418":{"id":"2:2515:1418","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11336:56706":{"id":"2:11336:56706","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1614","glob":false}},"2:11416:60566":{"id":"2:11416:60566","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11046:10006","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:2524-0:211:1613":{"id":"a:2:7718:2524-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:2524","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2224-0:298:1617":{"id":"b:2:2224-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:53599"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2496-0:211:1613":{"id":"b:2:2496-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:227:595":{"id":"0:227:595","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:230:1612":{"id":"b:2:2511-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:301:59":{"id":"0:301:59","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11346:10382":{"id":"2:11346:10382","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49971:9531","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:267:595":{"id":"0:267:595","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2514:127":{"id":"2:2514:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39262:9607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2496-0:298:1617":{"id":"b:2:2496-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11437:10153":{"id":"2:11437:10153","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:10983:126","`FromStr`":"2:10982:9624"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:10982:9624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:10982:9624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:284:1611":{"id":"b:2:2500-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11369:54183":{"id":"2:11369:54183","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:7061:120","self::pattern":"2:11021:10007","str::split_whitespace":"2:11347:59432","prim@char":"1:12350:2233","str::rsplit":"2:11375:56739"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49985:9533","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1609","glob":false}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:74:1604":{"id":"0:74:1604","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["validate",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:9597:1729","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:230:1612":{"id":"b:2:2506-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2221-0:230:1612":{"id":"b:2:2221-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:211:1613":{"id":"0:211:1613","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:212:1852","0:213:1854","0:214:1857","0:215:1861"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2645:214-0:211:1613","a:2:7717:2525-0:211:1613","a:2:7718:2524-0:211:1613","a:2:2709:2580-0:211:1613","a:2:2659:222-0:211:1613","b:2:2511-0:211:1613","b:2:2496-0:211:1613","b:2:2506-0:211:1613","b:2:3304-0:211:1613","b:2:2500-0:211:1613","b:2:2221-0:211:1613","b:2:2224-0:211:1613","b:5:671-0:211:1613","0:217","0:218","0:220","0:222","0:223","0:225","0:226","0:228"]}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2645:214-0:252:1609":{"id":"a:2:2645:214-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2645:214-0:284:1611":{"id":"a:2:2645:214-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:92:2130":{"id":"0:92:2130","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:2525-0:252:1609":{"id":"a:2:7717:2525-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2500-0:270:1614":{"id":"b:2:2500-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3304-0:298:1617":{"id":"b:2:3304-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11342:56728":{"id":"2:11342:56728","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11343:56729"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:231:1866":{"id":"0:231:1866","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:79:1608":{"id":"0:79:1608","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key_from",{"kind":"primitive","inner":"usize"}],["key_to",{"kind":"primitive","inner":"usize"}],["validate",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2511-0:252:1609":{"id":"b:2:2511-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:198:1847":{"id":"0:198:1847","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"5:673:2794":{"id":"5:673:2794","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1610","glob":false}},"5:5091":{"id":"5:5091","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5002:1344","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5092:61204","5:5093:2811","5:5096:61205","5:5099:61206","5:5107:61207","5:5108:61208","5:5109:2415","5:5110:54854","5:5111:54855"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5111:54855":{"id":"5:5111:54855","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11442:54858"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11399:60558":{"id":"2:11399:60558","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:11396:2314","prim@char":"1:12350:2233","`DoubleEndedIterator`":"2:7061:120","self::pattern":"2:11021:10007"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50207:10212","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11431:60569":{"id":"2:11431:60569","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12350:2233","self::pattern":"2:11021:10007"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1618":{"id":"0:0:1618","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:168","0:170","0:171","0:172","0:173","0:174","0:176","0:177","0:178","0:179","0:180","0:181","0:183","0:184","0:185"],"is_stripped":false}},"b:2:3304-0:211:1613":{"id":"b:2:3304-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11330:306":{"id":"2:11330:306","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12367:2247","str::as_mut_ptr":"2:11331:11345"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":{"restricted":{"parent":"0:86:1599","path":"::spinwait"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11443:60571":{"id":"2:11443:60571","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4453:60571"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50284:10217","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:230:1612":{"id":"b:2:2496-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:2737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:2580-0:252:1609":{"id":"a:2:2709:2580-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:230:1612":{"id":"0:230:1612","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:1866","0:233:1868","0:235:1870","0:237:1872","0:239:1874"],"impls":["a:2:2645:214-0:230:1612","a:2:7717:2525-0:230:1612","a:2:7718:2524-0:230:1612","a:2:2709:2580-0:230:1612","a:2:2659:222-0:230:1612","b:2:2511-0:230:1612","b:2:2496-0:230:1612","b:2:2506-0:230:1612","b:2:3304-0:230:1612","b:2:2500-0:230:1612","b:2:2221-0:230:1612","b:2:2224-0:230:1612","b:5:671-0:230:1612","0:241","0:242","0:244","0:245","0:247","0:248","0:250"]}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11414:60564":{"id":"2:11414:60564","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:269:650":{"id":"0:269:650","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11355:56746":{"id":"2:11355:56746","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:219:409":{"id":"0:219:409","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:1881":{"id":"0:257:1881","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:11381:60555":{"id":"2:11381:60555","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"2:11378:60554","str::split":"2:11369:54183","prim@char":"1:12350:2233","self::pattern":"2:11021:10007"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50053:10205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2645:214-0:230:1612":{"id":"a:2:2645:214-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:229:650":{"id":"0:229:650","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:214:1857":{"id":"0:214:1857","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:252:1609":{"id":"b:2:2506-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3304-0:270:1614":{"id":"b:2:3304-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:192:1610":{"id":"a:2:2659:222-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:295:595":{"id":"0:295:595","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:908":{"id":"0:91:908","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2151","glob":false}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2645:214-0:298:1617":{"id":"a:2:2645:214-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3304-0:192:1610":{"id":"b:2:3304-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1615","glob":false}},"b:2:3304-0:252:1609":{"id":"b:2:3304-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5099:61206":{"id":"5:5099:61206","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5107:61207":{"id":"5:5107:61207","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:94:2143":{"id":"0:94:2143","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:211:1613":{"id":"b:2:2506-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1608","glob":false}},"0:192:1610":{"id":"0:192:1610","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:1843","0:196:1845","0:198:1847"],"impls":["0:70","a:2:2645:214-0:192:1610","a:2:7717:2525-0:192:1610","a:2:7718:2524-0:192:1610","a:2:2709:2580-0:192:1610","a:2:2659:222-0:192:1610","b:2:2511-0:192:1610","b:2:2496-0:192:1610","b:2:2506-0:192:1610","b:2:3304-0:192:1610","b:2:2500-0:192:1610","b:2:2221-0:192:1610","b:2:2224-0:192:1610","b:5:671-0:192:1610","0:200","0:201","0:203","0:204","0:206","0:207","0:209"]}},"0:196:1845":{"id":"0:196:1845","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:3306:1432":{"id":"2:3306:1432","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46490:9469","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2580-0:230:1612":{"id":"a:2:2709:2580-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2511-0:298:1617":{"id":"b:2:2511-0:298:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:298:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:261:409":{"id":"0:261:409","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:2525-0:284:1611":{"id":"a:2:7717:2525-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2500-0:192:1610":{"id":"b:2:2500-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:671-0:252:1609":{"id":"b:5:671-0:252:1609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2794","5:674:2795","5:675:2796"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:76:1607":{"id":"0:76:1607","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2921:1783","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11396:2314":{"id":"2:11396:2314","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"2:11396:2314","self::pattern":"2:11021:10007","prim@char":"1:12350:2233","`DoubleEndedIterator`":"2:7061:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50189:10211","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2659:222-0:284:1611":{"id":"a:2:2659:222-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11412:60563":{"id":"2:11412:60563","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:2525-0:211:1613":{"id":"a:2:7717:2525-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5093:2811":{"id":"5:5093:2811","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2223:2303":{"id":"2:2223:2303","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73:1615":{"id":"0:73:1615","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1613","glob":false}},"b:5:671-0:192:1610":{"id":"b:5:671-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2794","5:674:2795","5:675:2796"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:2580-0:270:1614":{"id":"a:2:2709:2580-0:270:1614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2221-0:284:1611":{"id":"b:2:2221-0:284:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2226:53599":{"id":"2:2226:53599","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281:595":{"id":"0:281:595","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:270:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235:1870":{"id":"0:235:1870","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:3304-0:230:1612":{"id":"b:2:3304-0:230:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:230:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":{"restricted":{"parent":"0:3:1598","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:252:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2221-0:192:1610":{"id":"b:2:2221-0:192:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:2579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:192:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:2303"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:211:1613":{"id":"b:5:671-0:211:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:211:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2794","5:674:2795","5:675:2796"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11434:60570":{"id":"2:11434:60570","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11021:10007","prim@char":"1:12350:2233"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11375:56739":{"id":"2:11375:56739","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:12350:2233","`DoubleEndedIterator`":"2:7061:120","self::pattern":"2:11021:10007","str::split":"2:11369:54183"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50003:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:10008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:10011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:289:409":{"id":"0:289:409","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:284:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11344:10236":{"id":"2:11344:10236","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12350:2233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49955:10199","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284:1611":{"id":"0:284:1611","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:286:1545"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2645:214-0:284:1611","a:2:7717:2525-0:284:1611","a:2:7718:2524-0:284:1611","a:2:2709:2580-0:284:1611","a:2:2659:222-0:284:1611","b:2:2511-0:284:1611","b:2:2496-0:284:1611","b:2:2506-0:284:1611","b:2:3304-0:284:1611","b:2:2500-0:284:1611","b:2:2221-0:284:1611","b:2:2224-0:284:1611","b:5:671-0:284:1611","0:287","0:288","0:290","0:291","0:293","0:294","0:296"]}}},"paths":{"16:7475:10788":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:47529:13089":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"22:4525:6815":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:4013:9899":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:12368:2248":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"22:61:3131":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"20:57:2407":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"12:353:10685":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:6048:10773":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5480:7453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:6953:3488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:2526:11061":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:50716:10232":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:6156:11572":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"9:920:10521":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4565:6820":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:48763:2891":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:53721:10110":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:3721:2407":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:12134:12184":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:10642:11251":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:12350:2233":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:3557:12635":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"12:1845:9490":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:11637:58910":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:1678:4439":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:11741:58911":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:47103:9810":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:8210:9546":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"12:1836:2409":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:2467:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:50053:10205":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:1385:9703":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"22:4278:6791":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:1608:2407":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:10670:11248":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:10589:10335":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:11876:9899":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"22:6275:4361":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:5625:7464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:6721:10875":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:6248:10784":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:8628:9901":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:5007:9455":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:5500:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:20245:9979":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:11748:12112":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:7297:10888":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:2834:9791":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:9382:11909":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:21224:10155":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:3265:9550":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:1435:10472":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"22:4315:6796":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:54025:13163":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:7522:54998":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:50788:10310":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"22:6543:7899":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:1671:1047":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:39298:10483":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:39311:2717":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:3373:9515":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:2833:11040":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:2380:9864":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:2607:9535":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:5684:7467":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:4762:9601":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"22:6973:8269":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:10546:46946":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:4303:2353":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:7266:6978":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:939:11572":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"22:1641:4436":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:9616:2428":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:276:1744":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:12360:2240":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:993:9710":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:8106:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"22:4435:6807":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:4496:6812":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:7279:8460":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:11200:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:9548:9760":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"22:506:2668":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"2:56961:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:7411:2873":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:3707:12639":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:1695:4441":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"22:4642:6830":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13082:12464":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:2358:11059":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:47248:9827":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:6572:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:47183:9823":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11220:54038":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:11739:13412":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:4258:9582":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:9071:61308":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"18:690:11300":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5606:10846":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:8059:9587":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:11199:12004":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:6506:10871":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:1823:13736":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:0:1336":{"crate_id":1,"path":["std"],"kind":"module"},"22:1539:4427":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:2573:9542":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"9:977:10525":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"22:5833:7506":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:8054:9859":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:967:13661":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:7095:11053":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:5113:12664":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:5793:10853":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:1525:4425":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:6777:2409":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"18:80:53344":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:21363:10273":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:1617:9491":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:7220:6972":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"12:0:2209":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:8526:11224":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:12739:12382":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5741:7474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:8596:11899":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"22:4802:6846":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:7928:9504":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:1759:2826":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:12781:12394":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:768:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"18:671:11298":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:2570:11113":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:575:3541":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:2268:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:54142:13170":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:9576:9761":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:9509:13751":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"22:4704:6837":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:9857:11194":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:2218:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:29472:9282":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:2215:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11351:9697":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:2968:9493":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:5672:7466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:7832:2861":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:13071:12460":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"12:60:61289":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"22:5780:7476":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"22:599:3545":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"16:6037:11058":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:8141:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12730:12379":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:7000:10378":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:8696:9900":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:20276:9597":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:10559:10370":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:9897:13683":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6337:10867":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"18:96:53345":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:52018:13107":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:4181:2345":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:9553:11169":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:11691:13254":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:11909:12134":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:4461:6809":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:3475:9509":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"22:1593:4432":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:50302:10218":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12909:12422":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:4965:9451":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:9456:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:4534:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:48085:2872":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:6068:9930":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:9526:11158":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:50776:2436":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"12:2069:9713":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:2826:9787":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:38106:2724":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:957:9704":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:3254:12633":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:9892:9859":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"22:4487:6811":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:49020:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"22:5502:7455":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:1964:9856":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:6855:10877":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:4267:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"9:188:10586":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:12980:12439":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:9223:46991":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:6139:10861":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:46769:10066":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:5541:7459":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"18:707:10010":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:9507:9757":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:2724:2794":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:8122:9543":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:6732:2409":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:2622:11074":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:5856:10855":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:11576:1729":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"22:5441:7396":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:4777:12659":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:2141:572":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"22:486:3531":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"2:48596:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:2709:2580":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:8272:11250":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:6225:201":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"22:5508:7456":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:10708:11244":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:9658:13678":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:6820:2409":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"22:4425:6806":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:4206:9446":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:29506:2417":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:3153:9885":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"14:165:45249":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:2470:146":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:13572:12609":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:2795:9500":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:9885:13682":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:11137:11996":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:3310:9538":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:9031:61304":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"22:5623:7464":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:2970:9720":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:5402:10836":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:4191:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:3482:9529":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"12:320:10686":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:47075:9807":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:10108:11186":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:9398:9616":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:1612:9490":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:13148:12483":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:48756:2892":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"7:0:1483":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:5974:10857":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:20005:59586":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:448:2859":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6713:10805":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:8055:11140":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:11539:2428":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:2291:11084":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12617:12336":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"15:214:10708":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"22:6390:4365":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4598:6824":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:5005:9453":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12955:12434":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:8471:9660":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"5:1067:10475":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:47174:9822":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:11536:12081":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:9155:13668":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:11755:11624":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"6:4398:6804":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:1605:2409":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:8701:11902":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:11594:12089":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:21789:2854":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:859:2871":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"18:727:11303":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10682:11249":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:9344:2409":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:3680:12638":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:52925:10105":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:7920:10894":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:11528:12079":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:49340:13386":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:53994:13160":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:1426:193":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:6785:193":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"22:4549:6818":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:4657:6832":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:7166:8432":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:9328:11259":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:50570:10024":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:49814:9738":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:11606:12091":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"22:7206:6970":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:54005:13161":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10721:11977":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:12348:2231":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:562:11978":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:4683:6835":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"18:652:11808":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:8848:9498":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:951:9490":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:12351:2234":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:46868:10217":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:20028:59587":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:56948:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7022:11050":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"22:6428:7892":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4096:6773":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"14:40:11985":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:595:2851":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:6386:10241":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:19973:59523":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:5523:7457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:9462:2848":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:4840:12661":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:52000:10092":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:2859:11041":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:4449:6808":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13393:12566":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:10466:13302":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4506:6813":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:3466:54548":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:7408:2416":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:4404:12648":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:12638:12343":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:12237:12206":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"20:163:11566":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"6:1738:4446":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11974:12164":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"22:4494:6812":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"22:6422:7891":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:7113:11054":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"14:7:13710":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"12:444:140":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:2561:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:46829:10354":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:11190:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:9820:11266":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:7084:2582":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"22:4579:6822":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:7098:55235":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:50239:9534":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:46748:13367":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:1532:4426":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"22:4245:6787":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:1701:4442":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"19:0:991":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:3986:9627":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:9280:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:3156:9886":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:5438:10838":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"22:4237:6786":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:3939:10142":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"18:507:11808":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:51880:13105":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:12316:13796":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:7276:10886":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:50704:10227":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:2779:9486":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:13031:12451":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:8871:13663":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"22:4298:6794":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:5060:9457":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:6554:7900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:4294:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:7825:10892":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:13176:12490":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:3302:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:50035:10204":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:11897:9906":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:8517:13228":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"6:6352:4389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"12:1872:9494":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"12:1065:10682":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4706:6837":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"22:4696:6836":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:21259:13004":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"20:97:2408":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"2:5443:9815":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:4421:9953":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:12225:12205":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:20323:9977":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:11997:10712":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:11106:11992":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:12192:11625":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"22:4210:6783":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"12:861:9711":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:6755:10496":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:8951:61309":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"22:4327:6797":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:1595:4432":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:12349:2232":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:54066:13166":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:11664:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:8724:3315":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"22:4688:966":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:11706:13409":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"18:614:61312":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:8393:11128":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:7208:6970":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4575:6821":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:12251:12207":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8089:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:3623:12637":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:50259:10214":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:11174:12002":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:2696:2716":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:29512:9283":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:12362:2242":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:3125:13662":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"18:636:11818":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:10445:11245":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:10455:11280":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:1550:4428":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"22:4663:6833":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:4644:6830":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:5175:45322":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:6402:11610":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:11953:13255":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4690:966":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:2396:9868":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:215:10451":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:6230:10865":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:10088:11947":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:47154:9821":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:1962:11207":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:13557:12608":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:49714:10198":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11893:12129":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:49540:10374":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"22:1548:4428":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:12211:12204":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:658:2000":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:50724:10231":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"7:79:44524":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:1338:2871":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7489:10763":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:6474:10870":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:9369:9614":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:4332:1726":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:2822:9785":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"22:500:3533":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"17:8911:61306":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:50107:9758":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:9183:13669":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10528:11241":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:4501:9908":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:5154:11044":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:2864:9687":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:8146:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:6537:201":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:2736:1732":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:12485:12230":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:9691:1740":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10283:13695":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:49318:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"22:1509:4423":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:8822:61303":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:11092:10014":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:48144:2708":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:5720:7471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"9:111:10578":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:13168:12489":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:8405:9530":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"22:5532:7458":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7256:10884":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"22:1712:4444":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:47131:13376":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:9263:13671":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:4740:9449":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:20948:9447":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"22:4272:6790":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:47501:13381":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:12060:12173":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:7072:10432":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:4305:6795":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:11324:9448":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"22:5470:7452":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:4932:9731":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:10845:11245":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:5758:10851":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:1216:9713":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"18:609:13655":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:2656:219":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:11853:12125":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:9531:53861":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:2647:9544":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"12:1852:9491":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:11021:10007":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:13374:12561":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:2885:11075":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:46310:10059":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:11841:12124":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:4399:9951":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:5739:10850":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"22:1699:4442":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:56987:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:6288:2411":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:2023:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"22:7212:6971":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:29606:10283":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"22:4447:6808":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:49293:9594":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:52111:10124":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13536:12605":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:3326:158":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:4429:9954":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:5510:7456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:1824:2361":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"11:44:10672":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:21297:58554":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:10810:10210":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:567:3540":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:6654:10789":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4417:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:7948:10796":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:21041:10255":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:20690:21413":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:6597:10873":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:153:10771":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:7350:11101":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"22:5658:7465":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:247:13658":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:1415:9706":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:48254:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"20:343:2413":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"1:678:13731":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:56935:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:50907:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:50580:10025":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:771:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:2657:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:5568:7426":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:6749:9558":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:9597:1729":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:5547:10394":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:6489:2013":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:46889:10358":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9885:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:47197:9824":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:6646:11092":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:4900:9165":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:47519:11597":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:54181:13171":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:586:3543":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:7769:11613":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:2406:9873":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:2273:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:6670:9728":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:2311:10766":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"18:755:11305":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:4536:12651":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"12:669:9705":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:0:279":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:52163:10131":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:3188:9552":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:10875:11189":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:13580:12612":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:13382:12562":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:9314:9533":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:11041:10011":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:49803:9747":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:9909:11914":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:52477:13113":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:4354:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:4735:10393":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"22:1705:4443":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:10296:13696":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:12860:12411":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:4029:11574":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:13340:12549":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"22:1598:4433":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"22:4743:6841":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:20026:59584":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:7958:10828":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:6975:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:47163:9816":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:5503:10842":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:4581:9914":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:6277:4361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4346:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"22:5580:7460":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:10434:13300":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:9805:11265":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:2775:9484":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"11:36:12913":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:2247:9860":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"22:5521:7457":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:9292:9695":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:49929:10294":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"22:4265:6789":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:49774:9744":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:5870:201":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:1642:9279":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"22:4333:6798":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:47510:9559":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:4888:11572":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:2478:11060":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:52847:10117":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:10403:11144":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"22:6309:7887":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:4968:9449":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:3249:11195":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"20:118:1727":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"5:6879:9719":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:6978:218":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:46927:10291":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:7214:6971":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:4231:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:135:3198":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:8066:9861":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:6545:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"5:1943:10387":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:5531:10393":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:9437:9926":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:10575:10372":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:21888:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:9751:11209":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"22:6507:7896":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:2726:12991":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:6311:7887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:8137:46943":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"12:815:9707":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:6814:2409":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:4778:6844":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:7055:9490":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:4102:6774":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:2380:11055":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:13024:12450":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:6834:211":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:10823:9693":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"12:119:10688":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:6668:10790":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:6794:11094":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5472:7452":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:49961:10200":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:4653:9915":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:13436:12582":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4673:6834":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"5:6942:10453":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:21954:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:13366:12558":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:2652:2579":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:1500:4421":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:47284:9829":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:8870:9640":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:4212:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:1886:13740":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:6797:59508":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:50889:200":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"22:4094:6773":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:0:1620":{"crate_id":20,"path":["smallvec"],"kind":"module"},"5:6895:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:19988:59523":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"22:4766:6843":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:487:13660":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:10866:11618":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:1348:2872":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:50712:10228":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"6:6524:7897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4698:6836":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2918:1977":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:842:10494":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"9:649:10564":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"5:36:10431":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:4348:12646":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:5424:10837":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:1473:2183":{"crate_id":2,"path":["core","mem"],"kind":"module"},"13:220:12907":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:897:2872":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:12004:10712":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:21184:13358":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11617:12092":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:3094:9490":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:2916:11183":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:50277:10216":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:6759:10802":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:7447:10792":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:48777:2894":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:10747:9694":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:13279:12542":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:12366:2246":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:11433:11621":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:5782:7476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:9577:11161":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:6538:7898":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:4113:9906":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:592:3544":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:4605:6825":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:5835:7506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:8395:9499":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"5:4014:238":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"22:4113:6775":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6294:10811":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"22:5839:6687":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:49117:2890":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:5727:7472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"12:985:9712":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:4248:2351":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:48229:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:8881:61307":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:625:9770":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:11500:12073":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"22:4222:6784":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:48204:2871":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:9722:11913":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:50545:10022":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:50402:10015":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"22:4513:6814":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:56922:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2026:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5587:7461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:6697:11090":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"14:31:13710":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:12797:12397":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:11813:9670":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:12103:12179":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:10380:9912":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:10159:11949":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:47062:9499":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:9061:11169":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:7024:148":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"22:4590:6823":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:47299:9820":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:10245:13692":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:47113:9811":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:9590:9759":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:7717:2525":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:8702:9917":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"16:0:2212":{"crate_id":16,"path":["gimli"],"kind":"module"},"22:5697:7469":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"22:4183:6780":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"22:5725:7472":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:8047:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:20220:10141":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"3:223:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:11046:10006":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:11996:2730":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"2:46385:197":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"22:6522:7897":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4475:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:4912:12663":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:46483:10079":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:7307:10889":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:12630:12342":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"22:4671:6834":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"22:4619:6827":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:4208:12642":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:53985:13159":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:6955:10454":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:9283:13673":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:9350:11261":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"11:0:2208":{"crate_id":11,"path":["adler"],"kind":"module"},"12:1628:11570":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:9396:9749":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11145:13397":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:716:16285":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:9446:13677":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:13594:12615":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:53185:10118":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:5772:7475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:9320:9697":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:11689:13726":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:1903:47029":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:1505:4422":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:6632:10874":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"22:5670:7466":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:5816:3253":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:48153:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"22:6407:7889":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:10854:11206":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:2906:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:5488:10841":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:4253:12643":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:962:9705":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:2816:9782":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:9635:2429":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:9469:9756":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"18:481:11308":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:2304:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:11733:13411":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:7366:10806":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:46341:193":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:4489:6811":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:1684:4440":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:11939:12153":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:8796:11148":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:49047:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:1971:10477":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:49783:9748":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:3460:9545":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:47122:9812":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"22:7287:8462":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"22:6979:8270":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:2394:9867":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:907:2409":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"22:1498:4421":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:48068:2747":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"12:777:10680":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"5:4974:11579":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:5894:11584":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:46510:10827":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"22:644:3575":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"22:130:3197":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"2:49955:10199":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:9592:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:4329:6797":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:51810:10135":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:10374:11220":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:2746:9472":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:5660:7465":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:49885:9753":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"9:33:10611":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:11436:12044":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"22:1560:4429":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:624:61313":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6820:13344":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:987:9709":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12073:12174":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:7037:2521":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:5819:9698":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"22:1885:4585":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:1111:9714":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:9193:61301":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:50559:10023":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:4355:2355":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:50980:9847":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:5422:2407":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"14:215:13345":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:1201:9714":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:11271:12011":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"22:7235:6974":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:11828:12123":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:6308:10866":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:13100:12468":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:5009:9456":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:9265:2871":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:4376:12647":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:3130:10286":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6124:10831":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"22:6477:7894":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:4432:12649":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:10725:56630":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:11652:9701":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"22:5585:7461":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:736:11304":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:7945:17280":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:11559:12085":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:2942:9492":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:9328:2871":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"22:6536:7898":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"9:709:9639":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:8799:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:3228:9555":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:6178:10862":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:3792:2872":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:2476:231":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:46263:10057":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:4312:2354":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:4152:6778":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:49544:9739":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:50189:10211":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"22:5711:7470":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:7266:10885":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:5582:7460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:11628:11622":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:6495:10700":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:0:2213":{"crate_id":17,"path":["object"],"kind":"module"},"16:2921:10767":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:0:787":{"crate_id":6,"path":["libc"],"kind":"module"},"17:13492:12590":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:39262:9607":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:3448:11824":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:4726:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:9289:2872":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:10139:11169":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11300:12022":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"18:521:11307":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"22:4292:6793":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:5210:11897":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:1394:9704":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:12972:12437":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:4300:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"12:1120:10684":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:2900:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:11070:11990":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:9433:13676":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:9293:11262":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"14:221:12862":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"22:4352:6800":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2974:9769":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:8561:11205":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:5366:9814":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"12:98:1745":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"22:4633:6829":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"8:0:1619":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:53643:10126":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:10121:11187":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:52508:13114":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"22:5552:7425":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"22:4255:6788":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:4551:6818":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:4679:58927":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:4565:12652":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:9422:13675":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:1551:9515":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"22:518:3535":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"17:11661:12100":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:8596:9666":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:50728:10225":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"9:800:12963":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:5519:10843":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:11774:12115":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:2431:9447":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"22:5747:11802":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:4808:6847":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13126:12478":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:54119:13169":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:4257:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:1600:4433":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:8488:9661":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:2751:9474":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:2659:222":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:8608:9667":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:53035:10094":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:6807:11095":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:56909:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:608:3546":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:305:1392":{"crate_id":1,"path":["std","thread"],"kind":"module"},"17:12307:12214":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:11787:12116":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:50992:9846":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:8339:46945":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:19960:2724":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:1580:4431":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:51710:10134":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:48220:2409":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:2548:11062":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7189:10774":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:7243:6975":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:8304:10184":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:56552:10245":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:9517:10878":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"22:6373:4362":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:1562:4429":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:131:3197":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:51941:10103":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"22:7164:8432":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:20282:9599":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:386:13659":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:1021:11263":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:3167:10078":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"22:5539:7459":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:4059:9515":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:1636:4435":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"22:5731:7473":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:53001:10112":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:3140:227":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:4597:12653":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:9681:11858":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:21251:13003":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:11899:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:4247:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"22:591:3544":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"17:9317:11258":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:6633:13743":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:1935:9855":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:54089:13167":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:4042:2362":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:12816:12398":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:10982:9624":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:6545:10801":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:6416:2755":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"22:4627:6828":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:667:225":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10350:11142":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:9671:11131":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:4239:6786":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:8774:11141":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:4808:12660":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:524:11034":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"9:622:10563":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:4335:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:9165:61310":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"22:4714:6838":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:6424:7891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6479:7894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:8494:11896":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:9274:13672":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:47233:1879":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"22:4573:6821":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:11320:13746":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"22:585:3543":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"5:6793:10388":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:4740:12658":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:9414:9617":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:683:16284":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:6081:2409":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"22:1503:4422":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:11315:12028":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:38089:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:21690:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11639:12099":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"3:0:429":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:7413:10824":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"18:719:11302":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:46799:10359":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"22:6327:3315":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:620:13713":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:5605:7463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:12355:2237":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:11235:12006":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:10997:11985":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:8526:2886":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:6308:11603":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:11343:12038":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:48077:2871":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"0:0:1618":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"5:2039:10476":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:3145:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:7938:9716":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:20842:9598":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:49301:13385":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:8797:9629":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:2887:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:9764:13298":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"22:1606:4434":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:46908:10070":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:4224:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:51981:13106":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:12371:2251":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"14:187:45255":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:53783:10130":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:12118:12183":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:5877:2013":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:53891:10113":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"9:956:10520":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11288:12019":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:12046:12172":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:5365:10782":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:46875:10356":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:14:2317":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:3190:9553":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:3599:2409":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:11356:12039":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:6972:12992":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:8746:9454":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:50268:10215":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:52971:10109":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"22:580:3542":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"2:48482:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:2734:59903":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:6302:7886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:2510:9541":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:7545:10812":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:8752:9531":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:21375:10272":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:12354:2236":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:5673:9690":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:2252:11043":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:7961:13746":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"9:592:10562":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:47145:9813":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:10321:11277":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:2547:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:3548:11572":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8677:9952":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:9778:11210":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:2238:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:11842:10241":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:3182:2359":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:10924:9552":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:6500:7895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:6509:7896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:51666:13103":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:48770:2893":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:1473:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:4258:2352":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:4665:6833":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:10930:9550":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:56974:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8205:9685":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4379:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:2674:11063":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:21276:58568":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:2718:11065":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5692:7468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:9250:13670":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:6778:9678":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"20:349:2403":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"2:48102:2521":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:9631:11155":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"12:853:9710":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:47485:13380":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:7879:2032":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:2653:2358":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:4179:6779":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:7858:2847":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:52211:10116":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:6502:9806":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:7615:10797":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11721:12108":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:21342:13361":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:8049:9605":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:4621:6827":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:5876:7508":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:7287:10887":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"22:0:787":{"crate_id":22,"path":["libc"],"kind":"module"},"6:4797:6845":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:8475:11123":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:5619:9515":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:39302:9466":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:29712:10284":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"16:2332:11077":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"12:1866:9493":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:6775:9927":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"10:0:2207":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"22:7224:6973":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:21313:58559":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"7:32:44517":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:10973:11984":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:5653:9689":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"18:644:11808":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:13134:12481":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:6682:10803":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:660:11297":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:3418:9525":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:4516:10351":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"22:7241:6975":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:4361:6801":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:1404:9705":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:12087:12177":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:7415:9798":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:12367:2247":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:10420:11279":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:1680:9490":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:4705:767":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:8847:9639":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:5226:12665":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:1771:11160":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:50700:10224":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:1034:2123":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"2:50942:10239":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:7637:10780":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:3343:9559":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"15:0:2211":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:4317:6796":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:2645:214":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:7374:10890":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:8779:19586":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:5610:59350":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:11333:53855":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"15:193:10704":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:410:11624":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:10394:11222":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:10360:11278":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4527:6815":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:11416:11619":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:242:13657":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4139:6777":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:454:2860":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:11247:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:3400:9523":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"22:6996:8271":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"12:738:9703":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"1:542:2844":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:8666:11901":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:3179:12632":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"18:681:11299":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:50387:10012":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:4206:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:4115:6775":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:11485:12069":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:48330:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:52765:10132":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"22:5739:7474":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:11684:12104":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:7283:56604":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"22:1578:4431":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12695:12378":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:1931:11156":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:50293:9773":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:7843:54503":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:13214:12498":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:1643:4436":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:339:160":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:495:3532":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"18:113:53346":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"22:6300:7886":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:20407:21395":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:12033:12170":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:21723:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:4264:9583":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"14:202:10380":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:12948:12432":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"9:382:10517":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:50963:156":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"22:4396:6804":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:6596:9799":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:13184:12492":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:4212:9444":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:10484:13738":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:52379:10097":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:13459:12583":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:5390:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:52611:10137":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10062:13684":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"18:0:2214":{"crate_id":18,"path":["memchr"],"kind":"module"},"12:2080:9714":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:675:13729":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:46882:10357":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"22:494:3532":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:8939:2871":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:20854:59526":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:4250:9581":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:7887:10800":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:2500:11072":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:7803:10891":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:49943:9626":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:12369:2249":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"22:6291:3408":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:48444:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:8682:9955":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:4072:2363":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:4810:6847":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:8573:9623":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"2:46742:9773":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"22:4603:6825":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:4635:6829":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"22:4229:6785":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"12:1681:142":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:4274:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"14:160:13710":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"22:5478:7453":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:5808:21607":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:2464:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:1722:4445":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:9700:11208":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:9306:9696":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:11014:11987":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:1918:2829":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:10921:11980":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:9873:13681":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:47012:13728":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:10270:13694":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:1714:4444":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:6405:237":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"22:4189:6781":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:1102:9713":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:7853:2842":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:12363:2243":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"22:6267:3450":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"12:2205:9497":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"12:2198:12911":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:20433:10090":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:2762:11067":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"12:810:9704":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:52309:10111":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:62:3131":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:6164:10783":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:4988:11582":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"6:4592:6823":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:13007:12443":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"22:538:3536":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:4437:9956":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:13091:12467":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13327:12543":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6323:10787":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:8956:9645":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:7720:11978":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:46809:10360":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:8454:9659":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:50708:10229":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:8368:11143":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:2250:2812":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"12:697:9706":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"22:5718:7471":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:2935:2871":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"18:699:11301":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:49059:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:2898:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"18:574:11808":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:676:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"18:491:13293":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:48406:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13527:12603":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"12:632:2871":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:5841:6687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:5690:7468":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"22:553:3538":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"2:46757:10065":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:2019:59974":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:12164:12190":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:7822:10008":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"18:538:11312":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:9401:11911":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:8353:9560":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:1635:571":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:10796:11242":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:6448:7893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:21855:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:8536:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:50003:9756":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:7934:10795":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:8887:9641":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:1185:9712":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"22:4377:6803":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:6269:3450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:6768:10876":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:11034:11988":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:6276:10810":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:2480:230":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"22:1516:4424":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:7227:10882":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"20:327:2410":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"1:12332:53858":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:3751:11572":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"22:544:3537":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"6:600:3545":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:20194:10080":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:13478:12588":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:10108:9751":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"22:6320:7888":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:11217:12005":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:1601:2871":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:21147:12997":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:2810:9779":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:52531:13115":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:6188:10863":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:48368:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:49985:9533":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:47032:9736":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"22:4681:6835":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:10734:10203":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:5861:7507":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:2763:9480":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:7138:155":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"12:646:2872":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:6317:10437":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"12:300:10687":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:11210:9526":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:48135:2522":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:22386:10048":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"22:43:2659":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"typedef"},"9:505:10512":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:13413:12569":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"13:108:61295":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:2273:11042":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:6674:9931":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:10752:11144":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:4318:12645":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"22:1634:4435":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:10708:9692":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:12291:12212":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:10257:13693":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"21:4:1619":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"16:4712:12657":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:5199:2411":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:54014:13162":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:5962:2407":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"18:590:11810":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:4427:6806":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:9831:11268":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:11721:13449":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:3949:9668":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:50593:10298":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:46429:198":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8114:9880":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:49029:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:6434:13742":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:13059:12459":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11515:12077":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:10927:9554":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:1376:9702":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:3365:9467":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:4658:8461":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:9451:13747":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:10949:11983":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6354:10868":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:1808:592":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:6006:9921":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"22:607:3546":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"6:5595:7462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:2788:9774":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:46846:9773":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:9434:9763":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"22:7247:6976":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:5443:7396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12674:12373":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:8418:9533":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"12:274:13347":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:21349:10328":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:21200:12999":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:6763:59968":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:12768:12389":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:46451:10285":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:2696:11064":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:4768:6843":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:49875:9755":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:2952:10056":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:11873:200":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:2741:2432":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:10497:47206":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"22:4724:6839":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:4286:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"12:822:9708":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:21657:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:6998:8271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:11180:9861":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:5592:11032":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:884:2871":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:51756:10114":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:3898:2871":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"12:387:61290":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:7144:10880":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"22:7264:6978":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:49348:13387":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:46365:194":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4280:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:47540:13383":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:7226:6973":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:46939:10292":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:5344:13741":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10894:11188":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"9:896:10524":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:9587:212":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:9930:11916":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:7850:10799":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"14:0:2210":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:1736:2827":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:7061:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:49330:9639":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:7831:9447":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"9:863:10522":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:3337:2871":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:48017:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"12:834:9709":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4200:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:3081:9561":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:2915:2581":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:11557:13253":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"22:4359:6801":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12148:12186":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:49971:9531":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:8981:13665":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:999:9711":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:11134:9459":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"22:4344:6799":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:13114:12475":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:52287:10108":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:4177:202":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:9562:9758":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:4288:12644":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:8525:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:46922:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"22:134:3198":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:7237:6974":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5749:11802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:4365:6802":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:21987:10259":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"12:1029:9714":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:8212:11243":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:50736:10308":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:8441:11246":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:8418:11191":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:928:9703":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:2596:11114":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:2648:11073":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"22:1736:4446":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:5959:11038":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:4186:2346":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:5699:7469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:8110:46939":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"22:6446:7893":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:12372:2252":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:1884:13739":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:5083:9452":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"12:1859:9492":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"12:2053:9712":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:8200:9684":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"22:566:3540":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"1:3150:9884":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:4629:6828":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:2839:9794":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10506:11959":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"12:1044:10681":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:53967:10098":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:6983:9819":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:2253:9524":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:49895:9754":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:2911:1791":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:3267:9551":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:49014:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:9539:11157":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:4904:9169":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:20950:9978":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:7581:10809":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"22:4609:6826":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:10771:10206":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:5379:10835":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:11125:11993":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:12022:12169":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"12:725:9702":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:7335:10804":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:2784:11069":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:4540:6817":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:9336:9611":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"22:5770:7475":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:8595:2896":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:8720:9450":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:2725:60374":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:4519:199":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"22:5682:7467":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:4198:6782":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"22:7218:6972":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:4902:9167":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"22:6413:7890":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:54104:13168":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:6209:2013":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:513:3534":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:9021:13666":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:4010:9898":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:5713:7470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:571:2849":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:49793:9746":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"22:4651:6831":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:6375:4362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:52065:10136":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:7140:11612":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:5504:7455":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:47084:9808":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:8991:61305":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"20:280:2409":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"2:46785:10068":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:8313:9562":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"5:1584:11572":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:2244:10480":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:5817:10854":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:20233:9447":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:545:3537":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:9501:11167":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"9:0:2206":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:5511:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12176:12192":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:4437:6807":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:8579:111":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:3219:10005":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:5927:10856":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:554:3538":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"22:4504:6813":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:3529:9490":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:21822:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"18:564:11313":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:10520:11962":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:9644:11154":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:50613:10299":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:6392:4365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:54040:13164":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:3226:9554":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:1359:2409":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:50416:10018":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:50899:13102":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"22:559:3539":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"1:12361:2241":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:51732:10122":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:4680:12656":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:8593:2895":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:49866:9752":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:50284:10217":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:8034:10764":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:13203:12497":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:7289:8462":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:9475:11119":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:13231:12505":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:501:3533":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:2432:9608":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:6702:9727":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:7922:16283":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:2981:10385":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:10969:2032":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:50153:10209":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:7033:2583":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:21168:10160":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"22:4735:6840":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:7255:6977":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"22:5566:7426":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:25196:10062":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:5165:9621":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11576:12088":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:6115:10779":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:47002:11591":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:771:10493":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:13506:12597":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:21094:10256":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:6032:9922":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:6262:10794":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:2984:11071":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8346:9558":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"5:6989:10377":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:20402:9447":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:7907:16281":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:7404:10808":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:52257:10104":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:3017:11820":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:11512:54040":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:3590:12636":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:50249:10213":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:1686:4440":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12322:12218":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:2424:11056":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:7718:2524":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:11168:13404":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:1511:4423":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:49765:9745":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:6912:10452":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:4:976":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:11500:9696":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:2805:9502":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:11832:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:8362:9526":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"12:1534:10695":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:1629:9493":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:1120:9715":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:6087:10807":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:4816:6848":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:4092:11574":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:9698:13739":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:11186:12003":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:11330:12034":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:4298:9579":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"22:1693:4441":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:47053:9805":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12934:12430":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:3002:9494":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:20426:9447":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:6597:161":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:8412:9531":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:8585:2892":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:3472:10468":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:13404:12567":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"22:574:3541":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"1:1634:9494":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:6723:9735":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:7020:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:8295:46944":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12748:12383":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:8589:2894":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:9627:11165":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:8813:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:7731:13760":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:4879:12662":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:2655:220":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:6987:9818":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:1541:4427":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"12:751:2407":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:52355:10096":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:12361:12228":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11734:11920":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:4510:12650":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"18:599:61311":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:46821:10218":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:8242:632":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"16:7535:10786":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:12836:12406":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:11247:12009":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:1088:9712":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:46224:2874":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:49853:9737":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:50089:9760":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:2245:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:6409:7889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:7321:10791":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:487:3531":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:6747:2407":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:6981:8270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:4626:12654":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:10075:13685":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"12:1555:10696":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:2378:2797":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:11149:11997":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:6441:10869":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:5498:7454":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:50207:10212":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:10075:9750":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:50720:10230":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"22:1666:4438":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:9582:162":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:8688:9911":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:13158:12486":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:1933:2844":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:9947:47134":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:521:11599":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:3457:2886":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:49133:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:20274:9447":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:2800:9501":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:10583:11146":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:9712:11912":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:20435:9977":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"12:1003:9713":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:21756:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:12375:2255":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:4320:9586":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:12278:12211":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:9497:13749":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:11026:10008":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:49309:9593":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:10794:10207":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:46955:10293":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:6008:11572":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:7868:10798":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:46407:196":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:4611:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:12926:12427":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"22:6552:7900":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:46517:13727":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:5995:10858":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:6571:10872":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:50481:10020":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:51778:10102":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"22:6951:3488":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:1623:9492":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:5701:9692":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:12550:12281":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"18:582:2724":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"22:6580:2657":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"typedef"},"16:6843:11097":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:48558:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"22:1720:4445":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:10774:11142":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:46852:10355":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:8591:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:12364:2244":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:1861:13738":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:12198:12203":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:1033:60371":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:6867:9497":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:9371:13667":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:9303:11167":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:1608:4434":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:4367:6802":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:9339:11260":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:6449:11584":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"22:6350:4389":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"15:175:10703":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"20:330:2411":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"17:10822:46947":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"22:512:3534":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"17:10490:11958":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:7965:10483":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:9108:9447":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:10221:13690":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:2583:11601":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:9108:13667":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"5:4614:9515":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:6219:10864":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:6809:2344":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"12:2184:12909":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:3001:11070":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:6415:7890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:52333:10093":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"22:1676:4439":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:8510:11897":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:47207:9825":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:8633:9902":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4581:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"22:4284:6792":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:5313:13741":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5534:7458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1707:4443":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:5554:7425":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:50433:10019":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"22:4459:6809":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:7907:10893":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10207:13686":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12756:12384":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"22:4563:6820":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:6738:10495":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:8622:9900":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"22:5593:7462":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:11035:10010":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:46490:9469":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:9274:9693":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:6030:10860":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:4716:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:4559:6819":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:5223:19585":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:53929:10133":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4659:6832":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:3353:9468":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:1825:13737":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"22:4415:6805":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:53845:10095":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"12:2190:61294":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:10553:9657":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:4185:6780":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:49840:9736":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:539:3536":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"12:1085:10683":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:4308:9584":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:10639:9700":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"12:1832:2871":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:2771:2433":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:2921:1783":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"21:0:1619":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"16:6101:10781":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:2757:9477":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:11616:38265":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:9504:13750":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:13518:12599":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"22:1572:4430":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12265:12210":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:6549:10183":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:8374:9527":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:3951:10143":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:8631:11900":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4761:6842":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:9488:11122":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:4112:1725":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10608:11147":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:50755:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"9:586:10560":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:1887:4585":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:11427:11620":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:9357:9762":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:46569:9995":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:5639:9688":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:5756:9694":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:6129:11603":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"1:3590:9663":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:3891:9515":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:4890:9583":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:7430:193":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"22:4814:6848":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:8162:11192":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:8425:9534":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:8853:9592":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:8560:9948":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"16:5642:10847":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:5999:9919":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"12:659:2409":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:1840:2407":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:1518:4424":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:53391:10138":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:8241:11247":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"22:6570:7901":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:52141:10128":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:6149:10832":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"18:531:11311":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:11644:13405":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:21921:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:941:2407":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:519:3535":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:51862:10127":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"9:827:10519":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:1668:4438":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:10182:11950":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:11155:9587":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:2402:11078":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:5536:10844":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:8941:13664":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:12896:12416":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:12514:12250":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13354:12555":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"22:5859:7507":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12609:12333":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:8929:9642":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"12:2178:12908":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:11761:12113":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:2947:10384":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"22:4532:6816":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:9738:11211":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:5472:10840":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:9118:216":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:12374:2254":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:6307:10436":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:8537:9947":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:3963:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:48212:2872":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:12373:2253":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:1750:12994":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:9362:11169":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:5174:9841":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"5:1301:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:58283:13179":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:2900:2360":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:50732:10226":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:6881:10878":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:50950:10240":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:5733:7473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:4177:6779":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12884:12413":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11971:13256":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:9552:13248":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:5687:9691":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:8581:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:8583:2891":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"9:19:10610":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:21:660":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:1230:9715":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:10625:11149":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:420:10752":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:11488:9695":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:12337:11245":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:11087:11991":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:3151:9803":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:9844:11269":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:50135:10208":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"22:4759:6842":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:11708:12105":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:2730:59904":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:48996:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4737:6840":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11800:12118":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:8576:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:8729:13725":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:8945:9644":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:10503:56609":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:2473:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:2767:2431":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:11954:9589":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:7221:9895":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:9382:9615":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:7719:2523":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11520:10308":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:12321:16286":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:49081:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:5884:9612":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:4515:6814":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:5450:10839":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:9474:53683":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:9458:11129":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:2664:2357":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"18:515:11310":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:560:3539":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:58262:13178":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"22:4473:6810":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:29312:10323":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:7992:10827":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:10476:47205":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:7215:10881":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:11951:12155":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:51686:13104":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:8076:9588":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4126:6776":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"22:4137:6777":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:20685:9980":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:4307:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:4312:9585":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:915:9702":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:5831:9817":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:5771:10852":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:4242:9580":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:6329:3315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:9350:9613":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4653:6831":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:10332:11285":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:646:3575":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"22:5874:7508":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:12356:2238":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:53533:10106":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:1654:4437":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:47093:9809":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:11150:13399":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"22:5603:7463":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:10310:13697":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:2722:2719":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"18:766:11306":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:52430:13112":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:4936:9729":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:581:3542":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:4450:9957":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:52689:10125":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:7207:9894":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:7249:6976":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:12365:2245":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:6012:10859":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:54051:13165":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"22:4100:6774":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:966:9706":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:20157:9974":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"22:5496:7454":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:8670:9623":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:7005:9596":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:976:9708":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:8587:2893":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:10845:9762":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:51963:10107":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:11259:12010":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:3350:2872":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:9118:61302":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:29534:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"22:1652:4437":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:5194:11896":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"22:4596:6824":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:50365:10009":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:8431:151":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:48520:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13141:12482":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:12357:2239":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:2310:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:9601:11159":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:7071:10879":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:7245:10883":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:13221:12500":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12008:12167":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:2976:9491":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:2830:9789":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"22:4150:6778":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"22:1523:4425":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:12353:2235":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:3157:10002":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:51840:10123":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:5681:10848":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:12850:12410":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:10233:13691":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:6430:7892":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13039:12452":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:6926:10292":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:48634:2368":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"12:1138:9715":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"22:4124:6776":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:47258:9828":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:8309:10185":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:9894:11617":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:5715:10849":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:507:2668":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:12349:12221":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:11603:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6450:10701":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:11547:12084":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:2456:11083":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:4804:6846":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:3393:12634":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:47216:9826":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:48093:2409":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"22:4557:6819":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:48161:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"22:4795:6845":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:2816:11068":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:3845:12640":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:12370:2250":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:2783:9488":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:46524:2352":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"9:676:10608":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:21624:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:3067:2418":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:48292:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:5567:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"22:4204:6627":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"13:0:2204":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:9791:13299":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:52735:10129":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"4:0:2205":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"22:6498:7895":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"22:1530:4426":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:2465:10479":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"12:1518:10694":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:970:9707":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:47492:9728":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:11997:12165":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:8130:9545":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:1049:10474":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:4135:12641":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"12:762:9490":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:6322:7888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"22:7277:8460":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"12:393:61291":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:6869:13743":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6293:3408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:5574:10845":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:7521:10785":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:11161:12000":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:5358:226":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:11054:11989":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:47269:9530":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13047:12453":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:4653:12655":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:29548:10282":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:50508:10021":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:13192:12493":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:4834:9463":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:20007:59582":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:2740:11066":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:11813:12120":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:7461:10793":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:10185:11598":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"22:7253:6977":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"22:4776:6844":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:11368:12042":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:10385:11221":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:46325:195":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:1574:4430":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:11873:12128":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:12874:12412":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"5:3417:11572":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:12964:12435":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"22:4538:6817":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:21236:10156":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:51911:10115":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:0:481":{"crate_id":2,"path":["core"],"kind":"module"},"1:11836:9898":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:4745:6841":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:6474:11590":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:7788:11615":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"}},"external_crates":{"22":{"name":"libc","html_root_url":null},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"smallvec","html_root_url":null},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":23}