{"root":"0:0:1817","crate_version":"0.9.9","includes_private":false,"index":{"b:5:682-0:192:1809":{"id":"b:5:682-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3038","5:685:3039","5:686:3040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77:1804":{"id":"0:77:1804","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:2757-0:284:1810":{"id":"a:2:8878:2757-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:211:1812":{"id":"b:2:2616-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12722:32144":{"id":"2:12722:32144","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12751:25167":{"id":"2:12751:25167","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2816-0:230:1811":{"id":"a:2:2872:2816-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2872:2816-0:284:1810":{"id":"a:2:2872:2816-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2872:2816-0:298:1816":{"id":"a:2:2872:2816-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:176-0:252:1808":{"id":"0:176-0:252:1808","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1808","glob":false}}},"2:12777:32150":{"id":"2:12777:32150","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12415:19198","str::split":"2:12768:25155","prim@char":"1:12034:448","`DoubleEndedIterator`":"2:7785:127","str::rsplit_terminator":"2:12780:32151"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43901:13030","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3452:1625":{"id":"2:3452:1625","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39691:12237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5533:32827":{"id":"5:5533:32827","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7524:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:656":{"id":"0:295:656","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:452":{"id":"0:289:452","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2816-0:192:1809":{"id":"a:2:2872:2816-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2815:243-0:298:1816":{"id":"a:2:2815:243-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:179-0:230:1811":{"id":"0:179-0:230:1811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1811","glob":false}}},"b:2:2606-0:298:1816":{"id":"b:2:2606-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:211:1812":{"id":"b:2:2606-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2625:1610":{"id":"2:2625:1610","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:252:1808":{"id":"a:2:2815:243-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8878:2757-0:192:1809":{"id":"a:2:8878:2757-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12733:9490":{"id":"2:12733:9490","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12814:32159":{"id":"2:12814:32159","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12792:25166":{"id":"2:12792:25166","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:211:1812":{"id":"b:2:2621-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:213:2069":{"id":"0:213:2069","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:210:712":{"id":"0:210:712","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:2756-0:192:1809":{"id":"a:2:8879:2756-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:253-0:230:1811":{"id":"a:2:2832:253-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:219:452":{"id":"0:219:452","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:252:1808":{"id":"b:2:2616-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12741:25147":{"id":"2:12741:25147","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12742:25148"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12730:25124":{"id":"2:12730:25124","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1634"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:284:1810":{"id":"b:2:2616-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12743:13046":{"id":"2:12743:13046","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43821:13024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3040":{"id":"5:686:3040","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1806":{"id":"0:76:1806","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12843:32166":{"id":"2:12843:32166","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4615:32166"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44150:12960","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5530:32826":{"id":"5:5530:32826","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7524:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2612:739":{"id":"2:2612:739","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12804:32154":{"id":"2:12804:32154","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12415:19198","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::match_indices":"2:12801:32153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44019:13037","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12721:32143":{"id":"2:12721:32143","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:3038":{"id":"5:684:3038","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12719:867":{"id":"2:12719:867","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:448"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12748:27090":{"id":"2:12748:27090","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44105:13041","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:298:1816":{"id":"b:2:2300-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:71:2064":{"id":"0:71:2064","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12786:25163":{"id":"2:12786:25163","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:448","str::splitn":"2:12783:25161","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43973:13034","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:211:1812":{"id":"a:2:2815:243-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:286:1744":{"id":"0:286:1744","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:180-0:211:1812":{"id":"0:180-0:211:1812","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1812","glob":false}}},"2:12760:3021":{"id":"2:12760:3021","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73:1814":{"id":"0:73:1814","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2303-0:298:1816":{"id":"b:2:2303-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198:2062":{"id":"0:198:2062","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8879:2756-0:211:1812":{"id":"a:2:8879:2756-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:80:1805":{"id":"0:80:1805","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3080:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3080:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12818:32161":{"id":"2:12818:32161","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:270:1813":{"id":"b:2:2621-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:72:1815":{"id":"0:72:1815","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1029","0:92:2342","0:93:2349","0:94:2355"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112-0:327:2363":{"id":"0:112-0:327:2363","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2363","glob":false}}},"0:110-0:331:2350":{"id":"0:110-0:331:2350","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2350","glob":false}}},"0:172-0:80:1805":{"id":"0:172-0:80:1805","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1805","glob":false}}},"2:12724:32145":{"id":"2:12724:32145","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12722:32144"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:252:1808":{"id":"b:2:2606-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12798:32152":{"id":"2:12798:32152","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12415:19198","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::matches":"2:12795:2524"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44073:13040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:298:1816":{"id":"a:2:2832:253-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2610-0:252:1808":{"id":"b:2:2610-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12739:32147":{"id":"2:12739:32147","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1529","str::slice_mut_unchecked":"2:12740:32148","crate::ops::Index":"2:3112:13861"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:230:1811":{"id":"b:2:3450-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215:2076":{"id":"0:215:2076","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:8879:2756-0:284:1810":{"id":"a:2:8879:2756-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8879:2756-0:298:1816":{"id":"a:2:8879:2756-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:272:1744":{"id":"0:272:1744","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:193:2058":{"id":"0:193:2058","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1744"]},"discriminant":null}}},"2:12774:25159":{"id":"2:12774:25159","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12415:19198","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split":"2:12768:25155"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43869:12928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2624:134":{"id":"2:2624:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32351:12050","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:192:1809":{"id":"b:2:3450-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:2096":{"id":"0:257:2096","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:252:1808":{"id":"0:252:1808","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:2092","0:255:2094","0:257:2096"],"impls":["a:2:8878:2757-0:252:1808","a:2:8879:2756-0:252:1808","a:2:2872:2816-0:252:1808","a:2:2832:253-0:252:1808","a:2:2815:243-0:252:1808","b:2:2300-0:252:1808","b:2:2616-0:252:1808","b:2:2606-0:252:1808","b:2:3450-0:252:1808","b:2:2610-0:252:1808","b:2:2621-0:252:1808","b:2:2303-0:252:1808","b:5:682-0:252:1808","0:268","0:260","0:265","0:263","0:259","0:266","0:262"]}}},"2:12824:25168":{"id":"2:12824:25168","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:270:1813":{"id":"a:2:2815:243-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:230:1811":{"id":"b:5:682-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3038","5:685:3039","5:686:3040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:284:1810":{"id":"b:2:2610-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12744:13056":{"id":"2:12744:13056","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43827:13025","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:298:1816":{"id":"b:2:2616-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:1817":{"id":"0:0:1817","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1802","0:170-0:74:1803","0:171-0:77:1804","0:172-0:80:1805","0:173-0:76:1806","0:174-0:79:1807","0:176-0:252:1808","0:177-0:192:1809","0:178-0:284:1810","0:179-0:230:1811","0:180-0:211:1812","0:181-0:270:1813","0:183-0:73:1814","0:184-0:72:1815","0:185-0:298:1816"],"is_stripped":false}}},"a:2:8878:2757-0:298:1816":{"id":"a:2:8878:2757-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2606-0:270:1813":{"id":"b:2:2606-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12742:25148":{"id":"2:12742:25148","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12741:25147"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:712":{"id":"0:269:712","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:284:1810":{"id":"b:2:2606-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:712":{"id":"0:229:712","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5525":{"id":"5:5525","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5526:32825","5:5527:2707","5:5530:32826","5:5533:32827","5:5541:32828","5:5542:32829","5:5543:2618","5:5544:26447","5:5545:26448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12749:32149":{"id":"2:12749:32149","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44115:13042","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2072":{"id":"0:214:2072","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:12830:32163":{"id":"2:12830:32163","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:270:1813":{"id":"b:5:682-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3038","5:685:3039","5:686:3040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:253-0:252:1808":{"id":"a:2:2832:253-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185-0:298:1816":{"id":"0:185-0:298:1816","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1816","glob":false}}},"a:2:2815:243-0:284:1810":{"id":"a:2:2815:243-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12754:24715":{"id":"2:12754:24715","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2200":{"id":"0:83:2200","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:1029":{"id":"0:91:1029","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:656":{"id":"0:281:656","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:284:1810":{"id":"0:284:1810","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1744"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8878:2757-0:284:1810","a:2:8879:2756-0:284:1810","a:2:2872:2816-0:284:1810","a:2:2832:253-0:284:1810","a:2:2815:243-0:284:1810","b:2:2300-0:284:1810","b:2:2616-0:284:1810","b:2:2606-0:284:1810","b:2:3450-0:284:1810","b:2:2610-0:284:1810","b:2:2621-0:284:1810","b:2:2303-0:284:1810","b:5:682-0:284:1810","0:293","0:288","0:287","0:291","0:296","0:290","0:294"]}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:192:1809":{"id":"b:2:2616-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2300-0:230:1811":{"id":"b:2:2300-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:202:452":{"id":"0:202:452","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12745:12909":{"id":"2:12745:12909","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43837:10851","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2083":{"id":"0:233:2083","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:261:452":{"id":"0:261:452","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2349":{"id":"0:93:2349","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:32164":{"id":"2:12833:32164","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12841:26316":{"id":"2:12841:26316","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12811:32157":{"id":"2:12811:32157","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2872:2816-0:270:1813":{"id":"a:2:2872:2816-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:284:1810":{"id":"b:2:2303-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12731:2029":{"id":"2:12731:2029","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12750:30547":{"id":"2:12750:30547","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44143:13045","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178-0:284:1810":{"id":"0:178-0:284:1810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1810","glob":false}}},"0:74:1803":{"id":"0:74:1803","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9110:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1816":{"id":"0:298:1816","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:8878:2757-0:298:1816","a:2:8879:2756-0:298:1816","a:2:2872:2816-0:298:1816","a:2:2832:253-0:298:1816","a:2:2815:243-0:298:1816","b:2:2300-0:298:1816","b:2:2616-0:298:1816","b:2:2606-0:298:1816","b:2:3450-0:298:1816","b:2:2610-0:298:1816","b:2:2621-0:298:1816","b:2:2303-0:298:1816","0:300"]}}},"a:2:2832:253-0:270:1813":{"id":"a:2:2832:253-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2300-0:192:1809":{"id":"b:2:2300-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275:452":{"id":"0:275:452","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12789:25165":{"id":"2:12789:25165","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1744":{"id":"0:195:1744","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8878:2757-0:252:1808":{"id":"a:2:8878:2757-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5541:32828":{"id":"5:5541:32828","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7524:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:1812":{"id":"0:211:1812","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:2067","0:213:2069","0:214:2072","0:215:2076"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8878:2757-0:211:1812","a:2:8879:2756-0:211:1812","a:2:2872:2816-0:211:1812","a:2:2832:253-0:211:1812","a:2:2815:243-0:211:1812","b:2:2300-0:211:1812","b:2:2616-0:211:1812","b:2:2606-0:211:1812","b:2:3450-0:211:1812","b:2:2610-0:211:1812","b:2:2621-0:211:1812","b:2:2303-0:211:1812","b:5:682-0:211:1812","0:228","0:218","0:217","0:222","0:220","0:226","0:225","0:223"]}}},"b:2:2303-0:230:1811":{"id":"b:2:2303-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:230:1811":{"id":"b:2:2616-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3450-0:270:1813":{"id":"b:2:3450-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2064"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:656":{"id":"0:267:656","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12757:24717":{"id":"2:12757:24717","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1802":{"id":"0:82:1802","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2200","0:84:2206"],"is_stripped":false}}},"0:231:2081":{"id":"0:231:2081","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12821:24713":{"id":"2:12821:24713","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:252:1808":{"id":"b:2:3450-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2606-0:230:1811":{"id":"b:2:2606-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:211:1812":{"id":"b:2:2610-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12768:25155":{"id":"2:12768:25155","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12415:19198","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split_whitespace":"2:12746:30221","str::rsplit":"2:12774:25159"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43851:12925","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:452":{"id":"0:243:452","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2092":{"id":"0:253:2092","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2303-0:211:1812":{"id":"b:2:2303-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2303-0:252:1808":{"id":"b:2:2303-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2300-0:270:1813":{"id":"b:2:2300-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177-0:192:1809":{"id":"0:177-0:192:1809","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1809","glob":false}}},"2:12771:25157":{"id":"2:12771:25157","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12231:12927","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5544:26447":{"id":"5:5544:26447","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12841:26316"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2089":{"id":"0:239:2089","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:283:712":{"id":"0:283:712","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2087":{"id":"0:237:2087","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2616-0:270:1813":{"id":"b:2:2616-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79:1807":{"id":"0:79:1807","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3083:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:284:1810":{"id":"b:2:3450-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12840:26315":{"id":"2:12840:26315","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:2757-0:270:1813":{"id":"a:2:8878:2757-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173-0:76:1806":{"id":"0:173-0:76:1806","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1806","glob":false}}},"a:2:2872:2816-0:252:1808":{"id":"a:2:2872:2816-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12729:339":{"id":"2:12729:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12730:25124","`u8`":"1:12051:1634"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171-0:77:1804":{"id":"0:171-0:77:1804","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1804","glob":false}}},"a:2:8879:2756-0:252:1808":{"id":"a:2:8879:2756-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:192:1809":{"id":"b:2:2303-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:211:1812":{"id":"b:2:3450-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:253-0:192:1809":{"id":"a:2:2832:253-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8878:2757-0:211:1812":{"id":"a:2:8878:2757-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12720:2324":{"id":"2:12720:2324","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12845:13829":{"id":"2:12845:13829","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4616:13829"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44159:12954","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:1811":{"id":"0:230:1811","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2081","0:233:2083","0:235:2085","0:237:2087","0:239:2089"],"impls":["a:2:8878:2757-0:230:1811","a:2:8879:2756-0:230:1811","a:2:2872:2816-0:230:1811","a:2:2832:253-0:230:1811","a:2:2815:243-0:230:1811","b:2:2300-0:230:1811","b:2:2616-0:230:1811","b:2:2606-0:230:1811","b:2:3450-0:230:1811","b:2:2610-0:230:1811","b:2:2621-0:230:1811","b:2:2303-0:230:1811","b:5:682-0:230:1811","0:250","0:244","0:247","0:248","0:245","0:242","0:241"]}}},"b:2:2621-0:252:1808":{"id":"b:2:2621-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5526:32825":{"id":"5:5526:32825","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1960","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1960","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:211:1812":{"id":"b:5:682-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3038","5:685:3039","5:686:3040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5542:32829":{"id":"5:5542:32829","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1960","`String`":"5:7524:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1960","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5543:2618":{"id":"5:5543:2618","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7524:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:1814":{"id":"0:183-0:73:1814","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1814","glob":false}}},"b:2:2303-0:270:1813":{"id":"b:2:2303-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2621-0:298:1816":{"id":"b:2:2621-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:284:1810":{"id":"b:5:682-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3038","5:685:3039","5:686:3040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2621-0:230:1811":{"id":"b:2:2621-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:2094":{"id":"0:255:2094","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:92:2342":{"id":"0:92:2342","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:270:1813":{"id":"b:2:2610-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181-0:270:1813":{"id":"0:181-0:270:1813","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1813","glob":false}}},"5:5545:26448":{"id":"5:5545:26448","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12842:26317"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12801:32153":{"id":"2:12801:32153","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12415:19198","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatch_indices":"2:12804:32154"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44001:13036","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:252:1808":{"id":"b:2:2300-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:192:1809":{"id":"a:2:2815:243-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192:1809":{"id":"0:192:1809","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2058","0:196:2060","0:198:2062"],"impls":["0:70","a:2:8878:2757-0:192:1809","a:2:8879:2756-0:192:1809","a:2:2872:2816-0:192:1809","a:2:2832:253-0:192:1809","a:2:2815:243-0:192:1809","b:2:2300-0:192:1809","b:2:2616-0:192:1809","b:2:2606-0:192:1809","b:2:3450-0:192:1809","b:2:2610-0:192:1809","b:2:2621-0:192:1809","b:2:2303-0:192:1809","b:5:682-0:192:1809","0:200","0:209","0:201","0:203","0:207","0:206","0:204"]}}},"0:170-0:74:1803":{"id":"0:170-0:74:1803","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1803","glob":false}}},"2:12746:30221":{"id":"2:12746:30221","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12747:30237"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44125:13043","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12838:26312":{"id":"2:12838:26312","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12839:26313":{"id":"2:12839:26313","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39878:25075","Self::is_ascii":"2:12838:26312"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39878:25075","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:2085":{"id":"0:235:2085","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:685:3039":{"id":"5:685:3039","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:2757-0:230:1811":{"id":"a:2:8878:2757-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:2757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12836:32165":{"id":"2:12836:32165","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12376:133","`FromStr`":"2:12375:14013"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12375:14013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12375:14013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12780:32151":{"id":"2:12780:32151","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12415:19198","str::split":"2:12768:25155","prim@char":"1:12034:448","str::split_terminator":"2:12777:32150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43919:13031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12727:25076":{"id":"2:12727:25076","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11970:19199"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:284:1810":{"id":"a:2:2832:253-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2619:134":{"id":"2:2619:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:12718":{"id":"2:12718","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12719:867","2:12720:2324","2:12721:32143","2:12722:32144","2:12724:32145","2:12727:25076","2:12728:32146","2:12729:339","2:12730:25124","2:12731:2029","2:12733:9490","2:12735:25122","2:12737:25123","2:12739:32147","2:12740:32148","2:12741:25147","2:12742:25148","2:12743:13046","2:12744:13056","2:12745:12909","2:12746:30221","2:12747:30237","2:12748:27090","2:12749:32149","2:12750:30547","2:12751:25167","2:12754:24715","2:12757:24717","2:12760:3021","2:12764:2986","2:12768:25155","2:12771:25157","2:12774:25159","2:12777:32150","2:12780:32151","2:12783:25161","2:12786:25163","2:12789:25165","2:12792:25166","2:12795:2524","2:12798:32152","2:12801:32153","2:12804:32154","2:12807:32155","2:12809:32156","2:12811:32157","2:12813:32158","2:12814:32159","2:12815:32160","2:12818:32161","2:12821:24713","2:12824:25168","2:12827:32162","2:12830:32163","2:12833:32164","2:12836:32165","2:12838:26312","2:12839:26313","2:12840:26315","2:12841:26316","2:12842:26317","2:12843:32166","2:12845:13829","2:12846:32167"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2620:1612":{"id":"2:2620:1612","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:192:1809":{"id":"b:2:2610-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212:2067":{"id":"0:212:2067","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:251:712":{"id":"0:251:712","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:2756-0:230:1811":{"id":"a:2:8879:2756-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2609:2980":{"id":"2:2609:2980","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2583:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111-0:313:1935":{"id":"0:111-0:313:1935","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1935","glob":false}}},"2:12728:32146":{"id":"2:12728:32146","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12809:32156":{"id":"2:12809:32156","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2355":{"id":"0:94:2355","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:712":{"id":"0:297:712","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:211:1812":{"id":"a:2:2832:253-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208:656":{"id":"0:208:656","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:298:1816":{"id":"b:2:3450-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:230:1811":{"id":"b:2:2610-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12737:25123":{"id":"2:12737:25123","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12735:25122":{"id":"2:12735:25122","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12842:26317":{"id":"2:12842:26317","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12764:2986":{"id":"2:12764:2986","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:211:1812":{"id":"b:2:2300-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:252:1808":{"id":"b:5:682-0:252:1808","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3038","5:685:3039","5:686:3040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12740:32148":{"id":"2:12740:32148","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1529","crate::ops::IndexMut":"2:3116:13862","str::slice_unchecked":"2:12739:32147"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12815:32160":{"id":"2:12815:32160","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12440:19195","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12807:32155":{"id":"2:12807:32155","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12846:32167":{"id":"2:12846:32167","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4613:32167"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44168:12959","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:270:1813":{"id":"0:270:1813","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1744"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8878:2757-0:270:1813","a:2:8879:2756-0:270:1813","a:2:2872:2816-0:270:1813","a:2:2832:253-0:270:1813","a:2:2815:243-0:270:1813","b:2:2300-0:270:1813","b:2:2616-0:270:1813","b:2:2606-0:270:1813","b:2:3450-0:270:1813","b:2:2610-0:270:1813","b:2:2621-0:270:1813","b:2:2303-0:270:1813","b:5:682-0:270:1813","0:282","0:274","0:276","0:273","0:277","0:280","0:279"]}}},"b:2:2610-0:298:1816":{"id":"b:2:2610-0:298:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:174-0:79:1807":{"id":"0:174-0:79:1807","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1807","glob":false}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:196:2060":{"id":"0:196:2060","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2302:2514":{"id":"2:2302:2514","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12795:2524":{"id":"2:12795:2524","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12415:19198","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatches":"2:12798:32152"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44055:13039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12747:30237":{"id":"2:12747:30237","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12746:30221"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44134:13044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:2206":{"id":"0:84:2206","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:2756-0:270:1813":{"id":"a:2:8879:2756-0:270:1813","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:2756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227:656":{"id":"0:227:656","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184-0:72:1815":{"id":"0:184-0:72:1815","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1815","glob":false}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12827:32162":{"id":"2:12827:32162","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:19196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:230:1811":{"id":"a:2:2815:243-0:230:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5527:2707":{"id":"5:5527:2707","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7524:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7524:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2816-0:211:1812":{"id":"a:2:2872:2816-0:211:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2816","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:284:1810":{"id":"b:2:2300-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2514"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:249:656":{"id":"0:249:656","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:284:1810":{"id":"b:2:2621-0:284:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2606-0:192:1809":{"id":"b:2:2606-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2980"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2305:24694":{"id":"2:2305:24694","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168-0:82:1802":{"id":"0:168-0:82:1802","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1802","glob":false}}},"b:2:2621-0:192:1809":{"id":"b:2:2621-0:192:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1610"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12813:32158":{"id":"2:12813:32158","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12783:25161":{"id":"2:12783:25161","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:19198","str::rsplitn":"2:12786:25163"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43955:13033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:13604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"2:41133:13002":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"11:1566:19713":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:22:726":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"18:755:12683":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"9:507:12112":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:7343:3674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:10715:13474":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:2201:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:7462:11850":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"22:7369:8784":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:39608:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:5634:2226":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:45985:12421":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:42481:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:40374:12960":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:7582:11854":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"22:7631:7469":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12099:11007":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:13229:11222":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:42949:31059":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:3932:13955":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:10973:13609":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:10341:10883":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:4566:7243":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:7597:33551":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:31167:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:11536:12720":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:42931:3064":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:5117:7301":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:10959:13608":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:2982:19320":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:48294:12522":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:6169:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:8221:13041":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:9476:13681":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"11:434:33531":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"22:4471:7231":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"11:2554:33526":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"22:1708:4634":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:9793:3239":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:9412:696":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"14:202:19212":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:123:3382":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"11:2443:2609":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"6:4480:7232":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:6646:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:23228:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:2810:11665":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:7633:7469":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"22:1602:4624":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:8960:12601":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:8892:12598":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13189:11217":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:12045:688":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:14379:11591":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:13555:11346":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:10249:14020":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:10789:20813":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:9049:26616":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:11711:10935":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:3049:19785":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:13668:11389":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:13982:11460":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:12038:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:12847:11144":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:574:3727":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:10759:13102":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:5435:11729":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:2969:19784":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:10340:29210":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"22:1732:4636":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4908:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"13:110:33536":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40755:2094":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:40608:12973":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:7894:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:14500:11617":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:7624:9694":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:4858:7273":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:7706:19303":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:7067:12851":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:10562:12695":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:4641:10613":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:1481:2395":{"crate_id":2,"path":["core","mem"],"kind":"module"},"16:5866:12754":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:3201:13649":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:11887:10990":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10508:12691":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:23042:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:40487:8020":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:940:13569":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"20:281:2611":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"17:11216:12708":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:48180:12514":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:1537:4617":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"15:306:19738":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:40730:12989":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:7645:2697":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:43683:13627":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:10095:13915":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:12005:13836":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:8233:13694":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:44828:12411":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:3150:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"9:486:19634":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"11:710:13564":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:42074:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:11160:12595":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:42206:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:5084:13663":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10411:13453":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:4613:11711":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:12577:11108":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:40739:12990":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:7782:12860":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:4478:1942":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"22:4614:7249":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:4939:1092":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:9712:33565":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:2987:19321":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10457:13461":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:4010:2609":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:8007:13686":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"18:614:33569":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:4364:7222":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"22:488:3717":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"22:4564:7243":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:44777:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"5:7328:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:11983:13160":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"22:7677:7475":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:12791:11135":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:2884:1948":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:46286:12436":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:12779:11134":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"5:7471:30473":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:2369:13900":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:43869:12928":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:12486:19204":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:46706:12449":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:46116:12426":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:14356:11578":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:785:9658":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:42362:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"22:4554:7242":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:1265:12853":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:1651:8985":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:9532:33559":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:4610:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:11357:13114":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:9306:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:7613:13555":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:5982:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:6868:8407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:4458:2569":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:5829:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:2251:12897":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:5417:13667":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:40336:12957":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:6228:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13974:11459":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"22:547:3723":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"2:40400:12963":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:7664:2686":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:2406:11648":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:39705:12238":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1576:4621":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:10521:12692":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:1680:9655":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:3065:10750":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"22:4774:7262":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:12514:11097":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:588:13828":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4549:7241":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"22:118:3381":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"2:22067:14125":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:7718:13834":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:6468:9749":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:14157:11506":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:6968:20650":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:5322:11727":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:10432:13697":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:1019:9655":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:3327:2575":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:6658:3765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"22:4349:7221":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"22:4882:7276":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:6352:12797":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:21197:31490":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:44134:13044":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:569:3726":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:4824:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:1546:9690":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:13839:11422":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11352:10939":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:10293:10876":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"18:624:33571":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:5989:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:14270:11551":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"22:4684:7254":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:7371:8784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:2618:11657":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:44125:13043":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:9913:13432":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"22:6680:3595":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:2832:11666":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:14421:11597":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:1644:629":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"15:327:13762":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:2623:13647":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:7828:11870":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11408:20714":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:11368:10940":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:5052:7295":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:14347:11576":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:42323:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"22:1637:4626":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:4922:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:5648:13497":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:9575:33560":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10479:10885":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:7679:7475":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:40599:12971":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:12052:1631":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:4746:13968":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:11548:10962":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"22:6887:8408":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:5612:11676":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:8974:13700":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:13950:11450":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:6949:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:41142:13003":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"22:1574:4621":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:10298:9722":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:13568:11352":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:2670:11659":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:4943:848":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:6450:9714":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"6:6666:4570":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"9:237:12399":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"22:4822:7268":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:48241:12519":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:40393:12962":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:47146:12469":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:12766:11133":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:1522:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:42702:3243":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"14:31:13561":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:47818:12505":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:14146:11505":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"22:4608:7248":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:13025:11187":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"14:0:2422":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:12281:11045":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:7866:13091":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4434:7227":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:837:3086":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:10833:29546":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"22:7614:7467":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:6159:7986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:44658:19409":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:7424:13847":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:8905:14035":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:5827:9741":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:48104:12510":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:10060:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"22:4426:7226":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:43795:12406":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:1913:4803":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:3212:12885":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:894:2609":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:2943:19314":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:32387:13616":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:5941:7927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:9868:10862":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"22:4953:7284":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:2875:2954":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:40407:19256":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:6898:8409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"22:6835:8406":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:46015:12422":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:9311:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:43673:12932":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:10317:10881":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:7600:9757":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"22:6762:4742":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:6961:8414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:40520:9708":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"22:7649:7472":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:904:9690":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"22:6911:8410":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:3049:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:507:3719":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:5696:20643":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:7457:12904":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:11518:13658":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:1820:9162":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:6079:7979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"22:4736:7258":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:2139:2677":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:43445:13022":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:12238:11029":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"22:5990:7974":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:2427:2431":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"22:4945:7283":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:14470:11612":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:47210:12471":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:43426:12403":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:9843:3240":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:7318:11832":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:40637:12977":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:44590:13080":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"22:4674:7253":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"11:2369:13582":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"5:7274:12901":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:6819:8405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5140:7304":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:2472:11651":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"15:288:19737":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:7844:13681":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"18:481:12665":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:4082:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:12226:11026":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"22:526:3720":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:1967:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:13852:11428":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:41157:9716":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:9811:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"11:2304:12853":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"11:1923:12886":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"22:4868:7274":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:6128:7985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:9946:10865":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:8979:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:13694:11394":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13793:11416":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:8979:20712":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"22:5002:7289":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:6439:12919":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:4179:2578":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:7018:9704":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:11614:13119":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:9110:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:9973:13010":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:4356:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:1514:4614":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:5897:7967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:11455:9767":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:12033:1025":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4870:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:641:13633":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:4434:9680":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:11245:10964":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:7902:13092":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:2927:19311":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:42559:2581":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:42520:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:22524:12143":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:12971:11180":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13011:11184":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"22:6010:7975":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:9469:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:10946:12109":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"22:6941:8413":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:44578:13077":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"11:123:9644":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:11338:20837":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:46338:12438":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:8331:3501":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:2043:12889":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"11:774:12881":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:40669:12983":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8138:11850":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:8404:12585":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11296:12716":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:2364:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:1759:13638":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:7608:9690":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"5:881:9663":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:42167:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:43186:13015":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:2899:11804":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:6114:7983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:1551:12883":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:2974:19318":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:6401:11672":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:6711:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6268:33554":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:533:2681":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:10475:9760":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:2580:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:44115:13042":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:357:2695":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:4745:11714":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:5049:11724":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:7568:11687":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:10469:10884":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:21214:31500":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"22:5865:7964":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:724:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:8191:12970":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:1546:4618":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:3287:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:6204:13506":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:13056:11193":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:9481:9759":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:8097:12865":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:22304:14121":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"18:671:13409":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:8134:12871":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:7360:33553":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:261:13411":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:7513:9687":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:12306:11049":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:7669:2687":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:10769:13090":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:646:13831":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:12699:11123":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:40909:12996":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:9922:13433":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:44001:13036":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:9781:13430":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"22:541:3722":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"1:7896:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"18:636:10742":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"13:0:2416":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:44073:13040":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"22:7690:8974":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:10323:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:10500:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:9851:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:11315:13723":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:4949:11721":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:11720:20718":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:3282:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:10727:13475":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:8873:12597":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:7932:12889":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:687:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12960:11179":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:4800:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:7500:12910":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:10228:13446":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"22:1519:4615":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:4202:9678":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:9329:10851":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:4783:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:23197:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:8293:13695":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"20:350:2615":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"16:6456:12804":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:4841:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:9973:13436":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:261:9655":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:10617:12699":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:10537:13651":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"22:6656:3765":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:41830:30469":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:4496:7234":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:3062:2576":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:1744:653":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:12016:27330":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"22:4582:7245":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"22:6779:4740":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:9847:3242":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:7474:13548":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:9197:12606":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:42440:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:12375:14013":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13203:11220":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:43765:12935":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:9100:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"9:177:13775":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:4968:7285":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:12294:11046":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:307:1580":{"crate_id":1,"path":["std","thread"],"kind":"module"},"2:46605:12446":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"22:1535:4617":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9173:10847":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:44150:12960":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:10740:12927":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:2526:11653":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"11:1917:12885":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:2596:11656":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"22:6077:7979":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"22:4920:7281":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:4497:11707":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"9:426:19637":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:5130:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:22418:12937":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:5928:7970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"18:0:2426":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:3839:13659":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:6189:12795":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:11539:13659":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:11099:13488":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:4755:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:504:2677":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:39513:12952":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:12946:11177":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:2827:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:6798:8402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:11956:13612":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:13072:11194":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:8563:13099":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"22:4541:7240":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"22:5895:7967":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:7487:12907":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:4955:7284":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:10917:13478":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"11:0:2420":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"22:6112:7983":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:39427:3089":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:6718:3501":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:14461:11608":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:2958:11813":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:915:13564":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:43654:12930":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12532:11098":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:9129:2624":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:3915:11702":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:10817:13606":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:6700:8400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:7556:8946":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:8238:13949":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:11390:13494":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:40322:12368":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:0:528":{"crate_id":2,"path":["core"],"kind":"module"},"6:4461:7230":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:5044:7294":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"11:351:33527":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:8353:12575":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"22:4386:7224":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:3968:13956":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:4764:7261":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:40285:12955":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"11:687:3087":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:9824:20724":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"22:6959:8414":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"11:2536:12046":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:4455:7070":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:31195:2968":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:46138:12427":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:46554:12445":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:11024:10926":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:9753:13429":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:3080:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:2369:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:3112:13861":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:11762:10974":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:21551:12141":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:9791:33563":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:47566:12503":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:860:2611":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:6059:7977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:2583:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"18:582:2968":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"22:6167:7987":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:2936:11809":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:47100:12468":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"22:6126:7985":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:10060:10869":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:12497:11094":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"22:554:3724":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"5:3743:13586":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:1632:4625":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:10187:12687":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"16:7102:20651":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:11174:20836":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:6100:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"22:6157:7986":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:489:3717":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:46193:12430":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8921:14034":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:10085:13439":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:1535:3086":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:11328:12718":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:10157:13710":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:13452:11260":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:48169:12513":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6913:8410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:483:3716":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:12075:11003":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:2428:11649":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:5123:7302":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:5951:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:11935:10992":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:9522:13425":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"22:1911:4803":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:11192:10932":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:548:3723":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11125:13490":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:2967:3038":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"22:7700:8975":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:14084:11490":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:434:10802":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:3576:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:39878:25075":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:11640:10932":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:1521:4615":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:12415:19198":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:7838:2817":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:7336:12902":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:40445:12967":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:45841:12415":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:898:3086":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:8147:12568":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:42125:3087":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"22:1512:4614":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"11:1051:13574":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:10313:9726":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:9165:2698":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:46484:12442":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:3368:13004":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:22204:3048":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"10:44:12054":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"6:1570:4620":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:43211:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:13102:11200":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:2864:11667":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:3116:13862":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:21981:14041":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:2877:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:46240:12431":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:6600:20648":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6742:12821":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"22:0:872":{"crate_id":22,"path":["libc"],"kind":"module"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:3364:2577":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:40707:12987":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:9148:2625":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"22:6811:8404":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:4745:7259":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:0:1521":{"crate_id":1,"path":["std"],"kind":"module"},"2:1961:3070":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:13686:11393":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:4682:19249":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:44594:13081":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"22:6057:7977":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"20:0:1819":{"crate_id":20,"path":["smallvec"],"kind":"module"},"16:2284:19756":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6901:11680":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:40769:12992":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"11:299:12875":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:14135:11501":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:4070:13599":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:2766:11663":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:21226:31501":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:21195:31504":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:5867:7964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:13175:11216":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:10100:12923":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:11236:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"1:4153:13974":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:44347:13060":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:9608:13427":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:2316:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:46652:12447":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:13260:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:9446:13424":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:11478:13657":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:10804:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:10281:9721":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:8896:20709":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:3396:9678":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:46037:12423":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:7610:7466":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4989:7287":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:5727:12740":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:5627:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:7522:2557":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:6898:9752":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:12044:10999":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:12672:10893":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:41167:12370":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:2894:11807":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:7365:2611":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:4325:2558":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:44602:9413":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:41989:3086":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:1682:4630":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"22:7602:7465":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:4814:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:11047:9763":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:44883:13086":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:11172:29544":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:2548:11654":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:6120:7984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:8072:11909":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:9278:10850":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:3243:13652":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"22:1526:4616":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:6691:8399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:6851:9698":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:3461:11696":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:4847:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:2150:20771":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:5828:12913":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:12124:11010":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:2519:13646":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"8:0:1818":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:1910:12884":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:2663:13648":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"22:4975:7286":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:4884:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"22:7637:7470":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:2149:12890":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:44598:13082":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"22:5953:7928":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11359:20838":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:7286:2609":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:32405:2567":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:13017:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:2380:11647":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:39691:12237":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:9022:13704":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:10495:12689":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:32499:2957":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:7544:12859":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:475:3715":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"22:6246:8018":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"22:1672:4629":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:44231:19210":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:47958:12507":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:2953:19316":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"22:587:3729":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"2:21212:31493":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4878:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:2978:19319":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:12268:11041":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:5921:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:11992:10996":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:11390:13117":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:2931:19313":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:30633:30486":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:4843:417":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:10580:2245":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"22:4996:7288":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:40577:13621":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:7266:2611":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:42133:2611":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"22:1716:4635":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:11112:13489":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:42695:3242":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:14449:11606":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"11:2498:19708":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"6:1691:4631":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:8660:20690":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:1903:13890":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:2907:11669":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:10279:13448":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"22:4478:7232":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:10576:12696":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"18:652:10725":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"22:1630:4625":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"22:4696:7255":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:3299:19238":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:4830:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:23104:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:23073:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:44436:13063":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:6545:14030":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:2297:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"20:363:2616":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"2:21158:2968":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:10740:13718":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:3982:13957":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:4584:7245":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:1055:13573":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:12048:791":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"18:564:10732":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:4401:7225":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:3737:13658":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"22:5115:7301":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:2601:9722":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:39466:19171":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"16:6279:11737":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:4893:7277":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:5963:13499":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:2964:11814":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:1596:4623":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"22:4762:7261":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:41997:3087":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:13222:9731":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:5334:9655":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"14:165:19718":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:8991:13604":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:8954:20711":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:12466:11088":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:3168:29698":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"22:4900:7278":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:42688:3240":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"22:6817:8405":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5085:7298":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:46910:12465":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:7137:29005":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:5573:14018":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"22:1695:4632":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:40381:19255":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:2968:33519":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"22:4781:7263":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:12196:13038":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:13923:11446":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:13287:11231":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:11789:10975":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"11:1676:9649":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:11816:10978":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:41700:12376":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"22:4912:7280":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"22:6069:7978":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10535:12693":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:4666:7252":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"18:609:13404":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"11:1896:9690":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:4557:11709":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:1542:2609":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"22:5926:7970":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:8201:2619":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:1501:4612":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"14:187:19725":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"22:1594:4623":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:10013:10876":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:41119:13000":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:21979:13911":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"5:1419:3086":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:9849:3243":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:4105:19169":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:4702:13990":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:9391:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:3996:13959":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:26168:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:6012:7975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:10930:10920":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:40919:12997":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:781:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:44459:13071":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"20:344:2614":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"1:4742:13965":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"18:590:10733":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:8214:12925":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:12811:11138":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:14336:11575":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4488:7233":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:30797:30478":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:13086:11196":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:44479:13072":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:6263:8019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:2825:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:1650:4627":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:22202:30554":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:946:13571":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11152:13492":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:10490:13911":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:13759:11404":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:44767:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"18:727:10746":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:4628:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13488:11291":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:7541:13726":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:11818:9771":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:43645:12929":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:11053:9764":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:5570:3440":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:7412:12903":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:10945:13034":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:4921:11720":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:5760:20644":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:43746:12934":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:13827:11419":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:4994:9678":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:9035:12602":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:9052:20691":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:5433:13668":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:12044:686":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:10097:13709":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:41929:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:14283:11557":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:4:1105":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:1910:699":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:10384:13451":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:2923:19312":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:23321:12162":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8843:12596":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:12034:448":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:3600:11697":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:10739:13476":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"22:6716:3501":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:10852:12928":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:8494:14012":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:1710:4634":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:40646:12979":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"0:0:1817":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"1:3734:13657":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"15:394:19747":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"11:700:2611":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:44446:13067":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:9103:10845":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:6513:12806":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:5004:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"5:1784:9690":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:43901:13030":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"11:844:13848":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:1407:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:22471:12938":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:12041:1615":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:39542:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:8210:19301":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13245:11224":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:580:3728":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:40279:12954":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:11342:12614":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"11:396:9647":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:6083:19755":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:14297:11563":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:11180:9413":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"22:6709:8401":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6425:12802":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:13817:11418":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"22:5013:7291":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13423:11240":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:44425:19211":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:22258:3048":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:11508:20716":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"11:2140:13573":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"14:40:10992":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"22:5109:7300":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"16:7006:13538":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:6569:11678":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:7028:9753":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:4774:11715":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:48200:12516":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:910:13578":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:2203:13645":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:12057:1689":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:21540:13911":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:11382:10943":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:9618:33558":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"22:5021:7292":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:7692:8974":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:3282:13654":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"22:4547:7241":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"22:4798:7265":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:41980:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:46462:12441":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:4862:11718":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:5640:2613":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:4535:7239":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"22:6118:7984":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:4514:7236":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:5130:7303":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"20:331:2613":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"2:22333:14122":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:4902:13602":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"17:9999:10833":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12751:11130":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6818:12835":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:41908:12385":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:10398:13452":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:43202:13018":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:6248:8018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:6164:9746":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:6474:2609":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:5403:10843":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:2587:9735":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:10371:13450":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:44055:13039":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:22556:12144":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:4449:2568":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:8815:12594":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:4529:7238":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"11:875:13571":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:8287:13978":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:22632:30479":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8201:12996":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:10266:13447":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:11292:9765":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:43004:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:2872:2816":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:13091:13614":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:1703:4633":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:7306:33302":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:7388:8785":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:9763:33561":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12599:11109":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:3232:13421":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:14309:11566":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:8327:13696":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:9071:10843":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:3241:13651":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:7128:12602":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"22:6220:8017":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"9:0:2418":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:44159:12954":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4449:7229":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:8859:13699":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:6832:2613":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:8281:11920":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11282:10934":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:21421:13911":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:3830:11700":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"11:856:13569":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:62:3327":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"22:5883:7965":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:14435:11599":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"18:80:24668":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:7598:7464":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4854:7272":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11087:13487":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:1749:3068":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:923:13566":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:2668:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:4161:13975":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:13136:11213":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:3191:33452":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:3728:12889":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:11972:10995":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:7651:7472":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:2305:19782":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:11952:10994":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:5641:13087":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:588:3729":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:9651:10876":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"20:97:2610":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"17:12984:11182":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:32391:11851":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:8227:13692":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:7436:11852":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:6844:11780":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:6879:11784":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:8239:11851":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"11:2548:12048":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:4428:7226":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13149:11214":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:10241:10865":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:2577:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:1664:4628":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:7702:8975":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:2970:19317":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:45931:12419":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:48317:12523":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:10647:10948":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:5797:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:13724:11400":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:2294:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:0:2425":{"crate_id":17,"path":["object"],"kind":"module"},"5:7320:2611":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:4966:13995":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:7357:2611":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:8195:12872":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:9845:3241":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:4523:7237":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:4986:11722":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"11:328:12878":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:40655:12980":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:4233:13660":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:2209:13420":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:4571:13985":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:12056:842":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:8275:13094":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"18:699:12674":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:11075:13486":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:32351:12050":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"12:0:2421":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:3655:10755":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"9:52:13765":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:10779:13605":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:7924:13684":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:2911:11808":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:43720:12933":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:3179:3086":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:22698:12944":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:3672:13951":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"22:4533:7239":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:9070:12605":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:149:9641":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:48226:12518":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"18:113:24670":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:43955:13033":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:1822:13641":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13114:11202":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:5310:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:12049:792":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:8992:26752":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"22:5083:7298":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"11:1582:13579":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:7622:7468":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:3565:13423":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"22:4486:7233":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:14402:11592":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:10215:9718":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:9456:33564":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:4698:7255":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"22:6689:8399":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:1310:13577":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:7176:19305":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:13004:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:3315:11695":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:10215:13445":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:2353:3041":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:5397:13666":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:3986:9678":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:2210:13894":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:12053:1632":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:6136:10525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:4169:13976":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:44586:13079":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:10648:3086":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:5748:13670":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:9853:20725":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:2889:2627":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:4719:11713":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:6612:9750":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:23290:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:44858:13085":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:3797:11699":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"18:736:24679":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:45885:12417":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:9015:13703":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:8826:20707":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"22:579:3728":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"5:6594:2611":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"11:2403:3087":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"11:1160:13577":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:12485:11093":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:9351:10853":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:11262:12714":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:4493:13980":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:3589:3086":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:10697:12925":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:13915:11444":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:8002:13685":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:9897:20726":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:10037:10867":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:21429:14042":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"11:1087:33530":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4977:7286":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:6251:2226":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:11001:10925":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:5384:20642":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:4182:13977":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:10448:1956":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:363:2696":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:10367:13449":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:5419:10844":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:10548:12694":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:40698:12986":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:10794:12529":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:21168:31495":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:12185:11016":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:207:9653":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:2321:11638":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:5974:7972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11227:12712":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"22:7608:7466":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:14164:11508":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"22:4708:7256":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4947:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:14069:11486":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"11:832:13578":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:10672:3087":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"22:4399:7225":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:43026:3249":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"22:7386:8785":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:5242:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:10699:13472":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"22:1662:4628":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:3209:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"20:164:9637":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"1:4800:9739":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10140:20743":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:43755:13629":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:21857:12142":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:30338:13952":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:12738:11128":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:12055:1630":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:10751:10887":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:533:3721":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:46086:12425":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:11307:10935":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:9792:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:22151:14127":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:22592:30481":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:23135:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:3502:13909":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"22:4521:7237":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:14325:11570":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"11:1107:13575":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"18:707:12676":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:8879:2756":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:10052:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:5363:11728":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:46530:12444":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:40720:12988":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:12037:1142":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:22190:14128":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:8766:20705":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"9:330:12091":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"9:393:19636":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:12420:13604":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"22:5073:7297":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:4806:11716":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:8115:12868":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:10662:13466":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:850:3087":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:13315:13849":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:6415:12801":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4440:7228":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:30621:3064":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:9841:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:14537:11624":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:10113:13441":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"22:4593:7246":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"22:482:3716":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:2359:11646":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"11:2569:12903":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:48020:12508":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:41866:13094":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:21180:31495":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"16:7862:12861":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:5891:7966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:5634:12731":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:39586:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:5378:19186":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"22:4722:7257":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:5939:12762":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:6682:3595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:12137:11011":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"22:4930:7282":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:14317:11569":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:3186:12884":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:2400:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:3165:29710":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"22:5042:7294":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:10970:27332":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"22:7341:3674":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:4616:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:4321:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:5053:13663":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:12046:793":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"22:4828:7269":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:44411:13062":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"22:6261:8019":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:7523:12858":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:9887:13431":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"22:6802:8403":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:13163:11215":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:7041:12845":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10981:10876":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:22580:12943":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"22:4906:7279":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:42142:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:7581:9755":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:6261:13533":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:7296:9666":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:40933:12998":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:5152:7306":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:644:10725":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:46432:12440":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:7879:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"22:4787:7264":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"22:4966:7285":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:13907:11442":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11574:12721":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:5382:19187":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:495:2903":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:5859:7963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:3220:12883":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:596:3730":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:3312:31438":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:6499:11690":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:43233:13019":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:5755:13672":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:542:3722":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:43241:13020":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:4864:31662":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:48264:12520":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"22:4459:7230":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:6084:7980":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:9836:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11688:20717":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:2974:33398":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:6929:11789":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:4030:13960":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:2881:11668":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:12000:13786":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:9187:27337":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:7756:2818":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:6813:8404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"18:491:12666":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:6753:12822":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:5905:12756":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:2178:12892":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:4242:3086":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:2913:9738":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:11202:12704":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:7733:13835":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:4044:13962":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"11:1903:12883":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"22:1499:4612":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:30599:2620":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:41175:13005":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:4806:7266":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:39566:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:4627:13959":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:7710:19302":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:6960:13537":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:3445:13656":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:8595:20692":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:12058:1238":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:7916:13683":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:4595:7246":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"22:7554:8946":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12659:11117":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:4676:7253":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:44168:12959":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"22:4743:7259":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:4641:11712":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:4839:7270":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:44785:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:5637:9678":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:21370:14043":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:1041:12853":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"11:2231:1956":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:11036:9762":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:6764:4742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:5885:7965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12646:11114":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:4647:7251":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"22:4447:7229":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"3:0:473":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"22:1680:4630":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5104:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"7:0:1679":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6485:11673":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:8454:12399":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:4744:13967":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"18:574:10725":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:2644:11658":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:13041:11189":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11394:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:14043:11476":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:6332:11670":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:41889:12384":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:43733:13628":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:13633:11388":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13869:11433":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:46683:12448":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:881:12882":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:6359:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:13216:11221":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:4505:2570":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:44820:13253":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13711:11395":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:42117:3086":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12686:11122":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:2744:11662":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:8170:13910":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"11:1883:3086":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"22:5150:7306":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:42977:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"22:1544:4618":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:1382:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:13211:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:22615:12149":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:4637:10609":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:5992:7974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:10540:13653":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:2970:12133":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:5661:12735":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:8181:11691":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:40678:12984":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"18:515:10728":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:6545:11745":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:7462:11853":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:8795:20706":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:23166:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:39526:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:43775:13630":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12453:11086":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"22:4937:1092":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:12423:11078":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:6086:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:629:13583":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6943:8413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12155:11012":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:6148:9731":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"22:6664:4570":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:6361:12798":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13803:11417":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:3677:9655":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:4585:11710":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"22:5908:7968":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:4753:7260":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:6804:8403":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10421:10795":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:5111:7300":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:14091:11491":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:276:1960":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:4710:7256":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10638:12703":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:10534:13649":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:4914:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12544:11100":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:43973:13034":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"11:2124:12853":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:12173:11013":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:622:2213":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11911:10991":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11372:13159":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:8205:20656":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:40366:12954":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:43663:13626":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:22540:12939":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:21442:12141":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:5017:11723":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:4738:7258":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:2574:11655":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:1568:12886":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:5782:13673":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"11:811:9690":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:22244:14129":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"5:4172:9678":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:40557:12933":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"14:160:13561":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:5542:9678":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:4527:11708":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7792:20654":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:10772:10889":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:5121:11726":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"11:2151:13574":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12374:11053":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:40473:12968":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"22:5919:7969":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1604:4624":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:929:13848":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:1874:13642":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:1797:13640":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"11:1142:13576":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:7884:20655":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8282:13095":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:5910:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6318:11740":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"22:5007:7290":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:6861:9700":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:13990:11461":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:11163:10928":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:6467:12805":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:9853:3244":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"22:5889:7966":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11063:13485":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:1500:13564":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:5015:7291":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:42245:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:44299:13058":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:43809:13023":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"22:5980:7973":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:3032:11692":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"22:1589:4622":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:14222:11550":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:10931:13033":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:42057:2943":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:14002:11467":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:6445:12918":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:10963:10923":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:4789:7264":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:44582:13078":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:5383:13664":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:21368:13911":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:12063:11000":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:7856:12529":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:13066:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:4917:13989":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:12008:10997":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"11:2383:3086":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"5:1110:33394":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:4639:10611":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:35:9651":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"22:4432:7227":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:42681:3241":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:7538:12911":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:3990:13958":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:7690:2245":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:7015:11794":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:4776:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:12050:788":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:1761:13639":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:48189:12515":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11846:10982":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:5982:9686":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"5:4401:9678":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:5009:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:45953:12420":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:7644:13911":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:9087:10844":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"22:1556:4619":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:48066:12509":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:6003:19600":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:9855:3245":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:6047:7976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:3448:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:1075:13414":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:43821:13024":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:1697:4632":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:3427:12572":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:7070:2997":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:10604:12698":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:6598:14032":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:21549:14040":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:4902:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"14:7:13561":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:23011:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:14515:11618":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:41717:13950":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:4385:13662":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:47896:12506":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:21869:31498":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"22:61:3327":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"17:10127:12684":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"7:78:19628":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:638:13631":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:6721:20649":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:13898:11441":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"22:6134:10525":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:4494:7234":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:14127:11500":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"22:4845:7271":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6041:20646":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:2469:12130":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:8867:2611":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"11:837:13566":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:6520:9655":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"22:4664:7252":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:13576:11353":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:1539:2611":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10950:13480":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:11607:29094":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:3325:13937":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:4394:2566":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:6017:20645":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:40627:12976":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:654:3777":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:40550:13620":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"6:4686:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:14034:11475":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13612:11383":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"19:0:1122":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"18:599:33572":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:8687:20703":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:44268:13054":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:12209:11018":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:1591:4622":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:48215:12517":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:7694:11688":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:3338:9690":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:14174:11513":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:430:33535":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"22:5827:7899":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:2915:2626":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"22:4601:7247":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:7292:19297":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:12435:19196":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13967:11458":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:14523:11621":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:4471:13979":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"18:531:12667":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"11:2352:13574":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:3441:13422":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:10764:13104":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:11743:10971":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"22:5031:7293":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:43194:13017":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:32412:12951":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:11146:12594":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:11273:12715":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"22:6739:4757":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:6045:7976":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47022:12467":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:44841:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:8208:10851":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:5574:11671":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:7391:20652":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:4889:11719":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:328:2612":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"6:6107:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:4210:2579":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:6560:9643":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:5973:2226":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:9489:33562":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:5033:7293":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"11:1025:13573":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:7513:12857":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:582:10840":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:256:13410":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:3203:13650":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:8985:2680":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:6341:14131":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:10098:13440":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"22:562:3725":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"2:47176:12470":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:3512:13929":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:10629:12702":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:15:2527":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:41853:13013":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:6428:13002":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:3764:11698":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"22:5121:7302":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:2450:11650":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:42047:2754":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:4578:7244":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:4330:2559":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:10824:12569":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:1557:12884":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:0:872":{"crate_id":6,"path":["libc"],"kind":"module"},"17:9373:10854":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:8927:20710":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:9105:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:7849:13090":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:4473:7231":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:30605:8989":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:2574:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:43837:10851":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:3225:33451":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:44019:13037":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:40687:12985":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"18:538:10730":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:40779:12993":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:4860:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:10814:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:1490:13578":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:8536:13096":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"20:118:1943":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"6:563:3725":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:4351:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:9004:20713":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:7381:27592":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:11491:13611":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:2905:19310":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:40530:13619":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"9:450:19635":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:6893:11786":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"13:226:12045":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:42066:2689":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:12032:399":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:7657:7473":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:44646:2631":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:4823:13964":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"22:6226:7137":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:595:3730":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"2:12646:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"22:4987:7287":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"22:5050:7295":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:48279:12521":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:6243:13525":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"22:500:3718":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"1:5448:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"11:1603:13580":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12438:11082":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:48356:12524":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:3272:19322":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:22175:13911":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:7524:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:8937:14036":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:13877:11436":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"11:2469:9690":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"16:8167:13560":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:5588:11674":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:9960:13435":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:41683:12374":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"5:1531:13585":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:2978:33397":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:6583:12816":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:44566:13074":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:43919:13031":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"22:4504:7235":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:0:2424":{"crate_id":16,"path":["gimli"],"kind":"module"},"22:6969:2892":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"17:12877:11163":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:7604:7465":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:2822:2815":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"11:102:1961":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:7621:20653":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:1281:13574":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"22:6698:8400":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:41660:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:2832:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"22:1689:4631":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:7660:11858":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:6889:8408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:12039:1496":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:8714:20704":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:6687:12820":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:9243:10849":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"22:43:2894":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"2:47708:12504":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"11:1007:12853":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:46940:12466":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:6346:13536":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:2406:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:30691:30468":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:2815:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:5144:9686":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:1734:4636":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:3246:12886":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:44374:13061":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:9565:13426":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"18:507:10725":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:868:12881":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:42961:11885":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"22:4576:7244":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:13275:10935":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:12912:11174":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:4082:3087":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:21832:14045":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"16:7503:11684":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:12998:11183":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:40457:30473":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:3232:11637":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"22:5102:7299":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:42401:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:48142:12511":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:40426:12369":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:6299:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:14111:11497":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:4313:13661":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"22:7596:7464":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:5146:7305":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4506:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:40306:30476":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:42921:12390":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"5:1472:12881":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:1511:13565":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:4724:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"22:652:3777":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:1558:9678":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:10686:13470":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:44570:13075":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:919:13565":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:1434:3087":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"22:5967:7971":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12112:11009":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:1064:13574":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"22:5138:7304":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:4932:7282":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"22:6925:8411":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:8803:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:43594:13625":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:45861:12416":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:2339:11640":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:7907:13093":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:42986:3064":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10166:20744":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"22:4891:7277":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:14057:11483":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:12231:12927":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:7365:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:7440:2688":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:482:9733":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:44143:13045":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:6226:13521":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:5023:7292":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:7755:13680":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"22:4645:7251":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"10:36:12053":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:1528:4616":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"11:2562:12051":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12622:11113":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:678:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"10:0:2419":{"crate_id":10,"path":["adler"],"kind":"module"},"16:8050:11908":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:8158:12569":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:527:3720":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:2948:19315":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"22:1648:4627":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"18:660:13405":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:12035:1650":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:3077:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:9208:10848":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"5:1146:33395":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:1558:4619":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:7645:7471":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:40617:12974":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:13299:11238":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"22:4852:7272":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"22:6098:7981":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:9138:10846":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:22669:30492":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:1763:12137":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:22289:13911":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:11940:19371":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:8851:3086":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:6934:8412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:8849:20708":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:40358:12959":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:8546:3086":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:2210:3048":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:11384:13116":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:44253:13048":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11873:10989":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:8012:13940":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"22:6866:8407":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:12040:1529":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11449:20715":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:8797:13697":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:9027:13705":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"18:766:24680":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:6927:8411":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:6985:30043":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:1296:13573":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:6542:13676":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:41746:12383":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"22:5857:7963":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:43827:13025":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:9095:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:4998:7288":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:12051:1634":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:6837:8406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:4835:11717":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:7616:7467":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:8829:12595":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:7549:13596":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"22:7620:7468":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:11618:10964":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:39652:13841":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:2837:2573":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"11:673:3086":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:44574:13076":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:1450:2611":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:12047:790":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"22:122:3382":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:9986:13437":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:10441:13456":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:7639:7470":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"15:0:2423":{"crate_id":15,"path":["addr2line"],"kind":"module"},"18:681:12670":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:7257:9161":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"14:215:12873":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:2788:11664":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:10589:12697":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"22:5972:7972":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:12831:11139":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:8309:12574":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:14101:11494":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:2381:13906":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"22:494:2903":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"2:43441:13021":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:10842:29548":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:9276:9162":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"21:4:1818":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"2:46055:12424":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"22:7655:7473":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:11049:13481":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11236:12713":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"22:5128:7303":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:9638:3256":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:1681:1179":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:44870:12414":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:43694:12404":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:8386:13999":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:5075:7297":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"11:2423:2611":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:2709:13597":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"16:6376:20647":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:7090:12852":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:11309:13110":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:2590:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:8154:13557":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:4053:11703":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12197:11017":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:44282:13057":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:14479:11614":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:6156:12792":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:21423:14039":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"4:0:2417":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:5816:12747":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:825:9661":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:13260:11228":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:5502:13669":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:2212:3049":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:6676:9655":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:8878:2757":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:22705:12161":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:2504:11652":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5088:11725":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"22:568:3726":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"11:1887:2611":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:8301:13692":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:7739:13880":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:3293:19239":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:7492:12854":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:7530:10840":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:11595:12615":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:10890:13607":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12025:10998":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:6196:13674":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:2355:13897":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:3083:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:13891:11439":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:5830:12748":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:14077:11489":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:4603:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:1126:33454":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:10673:13467":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:3162:27538":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:6531:12814":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:13547:11343":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:3808:9690":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:3493:29381":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:10942:13680":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:2722:11661":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:4808:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:11621:13119":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:4344:11704":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"22:4438:7228":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:4362:7222":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:22731:13953":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:504:13413":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:6107:9678":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:11317:10938":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:8552:12593":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:7668:7474":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:952:13572":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"14:221:11998":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"22:1568:4620":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:9661:33557":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:13677:11392":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:7651:13556":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:4462:11706":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"22:1701:4633":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:46508:12443":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:11138:13491":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:1507:4613":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:23766:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:2057:13586":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"22:7666:7474":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4556:7242":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:7342:33552":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"22:4373:7223":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"11:2542:12047":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:2537:13911":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:22607:12148":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:1019:2335":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"16:7284:2753":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:2880:2956":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:32398:13617":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:6253:12914":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:119:3381":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"22:6796:8402":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"22:5144:7305":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:21827:13911":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:6944:33550":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"11:787:12882":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:7534:11685":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:22653:30494":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:10198:13442":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:1970:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:10099:13708":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"1:10782:13109":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:30565:8988":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:1674:4629":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:7785:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12474:11090":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:13039:31721":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:536:12723":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:11970:19199":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:8880:2755":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13779:11412":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:3484:3239":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:46386:12439":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:6741:4757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:2826:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:10955:13669":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"22:474:3715":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"2:46175:12429":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:2698:12134":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:9934:13434":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:5982:12765":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:10904:13477":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"22:4453:7070":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:2948:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"11:800:2609":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:11474:10816":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:4040:13961":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:7240:30307":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:3888:11701":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:8204:3088":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"22:5066:7296":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:47360:12472":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:4417:11705":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:2946:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:4908:13988":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:14119:11498":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"18:690:12673":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:46786:12450":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3938:13954":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:742:13565":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:10078:13640":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:557:2683":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:4705:13979":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:12935:11175":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:1840:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:5955:7928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"22:7643:7471":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:2231:33299":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:400:13412":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:42005:2611":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:2657:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"18:719:10743":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10431:13455":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:11491:10960":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:4131:28999":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:22112:14126":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:7736:11861":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:41126:13001":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:7269:33555":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:555:3724":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:12253:11035":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:12889:11165":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:46316:12437":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:2538:19260":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"9:357:19650":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:44621:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:2823:2574":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"22:6932:8412":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:12440:19195":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:10024:13428":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:8477:12588":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"22:4527:7238":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:6915:11681":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:2919:2628":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"22:7363:8783":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"11:883:13572":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"18:521:24681":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:6696:11768":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"22:6105:7982":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12555:11101":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:4052:13963":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:11458:13610":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:2178:13417":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:6993:9701":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"22:532:3721":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"2:43851:12925":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:11199:2624":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:7708:11689":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:45907:12418":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:40346:12958":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:6432:13675":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:1563:12885":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:6813:14037":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:9498:13784":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:2206:3055":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:3557:2609":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:6386:11742":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:12054:1633":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:5867:2609":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:2586:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:7839:9513":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:3031:19170":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:40586:12970":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:2869:2952":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:3602:3087":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:4543:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:11217:9412":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:4404:2567":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:6072:9742":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"5:4040:9655":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:46156:12428":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:4058:13598":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:12120:13027":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:14025:11472":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:5673:11675":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:7747:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:5969:7971":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12087:11004":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:41148:13004":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:46864:12464":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:1718:4635":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:3073:2006":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:40440:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"22:1494:4611":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:12157:13032":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"11:2326:13573":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:2933:19783":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"11:1891:2609":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"22:5939:7927":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"11:1066:19712":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5743:12742":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:39630:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"18:96:24669":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:14014:11468":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:7768:11677":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:5798:11731":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:48160:12512":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:44105:13041":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:3280:13653":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:42014:2753":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:40294:12956":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"22:506:3719":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"6:1639:4626":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:11587:10963":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:1481:12882":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:1073:13577":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:6222:8017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:4855:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"7:31:19621":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:12180:13035":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:43223:12399":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11662:10966":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:2200:630":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:4375:7223":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:7743:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:2371:13901":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:1184:13415":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:4371:9680":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:12429:12676":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:2012:13416":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:2696:11660":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"21:0:1818":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"22:4812:7267":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:1496:4611":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:22980:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:6781:4740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:1772:3067":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:4516:7236":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"22:573:3727":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"2:9493:31830":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:4253:1941":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:7554:11686":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:39684:13618":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:7722:11679":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:501:3718":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4388:7224":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:6792:12834":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:6071:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:9702:13428":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"11:364:9645":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:23259:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:12725:11126":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:42284:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12712:11125":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:5715:12912":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:22338:14120":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"22:6896:8409":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"22:4876:7275":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:5995:12726":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"22:4626:7250":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"22:1505:4613":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:7054:12848":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:8248:31828":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:3692:2611":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:5068:7296":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13740:11403":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:5712:12737":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:22719:12947":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:11532:3065":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:10988:12596":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"20:57:2609":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}