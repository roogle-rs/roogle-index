{"root":"0:0:1836","crate_version":"0.9.9","includes_private":false,"index":{"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9624:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2845:2828-0:270:1832":{"id":"a:2:2845:2828-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8670:2768-0:230:1830":{"id":"a:2:8670:2768-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12600:32284":{"id":"2:12600:32284","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12625:28355":{"id":"2:12625:28355","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2594-0:211:1831":{"id":"b:2:2594-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2585:752":{"id":"2:2585:752","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3424-0:230:1830":{"id":"b:2:3424-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5537:2633":{"id":"5:5537:2633","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7493:255"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2805:259-0:270:1832":{"id":"a:2:2805:259-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12608:24895":{"id":"2:12608:24895","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3051":{"id":"5:686:3051","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2788:249-0:192:1828":{"id":"a:2:2788:249-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12614:32288":{"id":"2:12614:32288","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1821":{"id":"0:82:1821","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2217","0:84:2223"],"is_stripped":false}}},"b:2:2273-0:252:1827":{"id":"b:2:2273-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2800:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9624:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2589-0:284:1829":{"id":"b:2:2589-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12526:32273":{"id":"2:12526:32273","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12035:1544","str::slice_mut_unchecked":"2:12527:32274","crate::ops::Index":"2:3085:13867"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12529:27209":{"id":"2:12529:27209","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12528:27208"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2798:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2845:2828-0:298:1835":{"id":"a:2:2845:2828-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:168-0:82:1821":{"id":"0:168-0:82:1821","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1821","glob":false}}},"2:12602:32286":{"id":"2:12602:32286","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12225:19201","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12507:2341":{"id":"2:12507:2341","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2583-0:298:1835":{"id":"b:2:2583-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12591:32280":{"id":"2:12591:32280","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12200:19204","`DoubleEndedIterator`":"2:7581:128","prim@char":"1:12029:457","str::match_indices":"2:12588:32279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43816:13044","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2805:259-0:230:1830":{"id":"a:2:2805:259-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:230:1830":{"id":"0:230:1830","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2098","0:233:2100","0:235:2102","0:237:2104","0:239:2106"],"impls":["a:2:8670:2768-0:230:1830","a:2:2805:259-0:230:1830","a:2:2845:2828-0:230:1830","a:2:2788:249-0:230:1830","a:2:8669:2769-0:230:1830","b:2:3424-0:230:1830","b:2:2594-0:230:1830","b:2:2276-0:230:1830","b:2:2589-0:230:1830","b:2:2579-0:230:1830","b:2:2583-0:230:1830","b:2:2273-0:230:1830","b:5:682-0:230:1830","0:248","0:244","0:250","0:245","0:241","0:242","0:247"]}}},"2:12535:29551":{"id":"2:12535:29551","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43902:13048","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:461":{"id":"0:202:461","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3424-0:298:1835":{"id":"b:2:3424-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12588:32279":{"id":"2:12588:32279","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12200:19204","`DoubleEndedIterator`":"2:7581:128","prim@char":"1:12029:457","str::rmatch_indices":"2:12591:32280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43798:13043","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12533:30545":{"id":"2:12533:30545","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12534:30565"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43922:13050","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2579-0:270:1832":{"id":"b:2:2579-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215:2093":{"id":"0:215:2093","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:2788:249-0:230:1830":{"id":"a:2:2788:249-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:272:1763":{"id":"0:272:1763","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2342:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:251:725":{"id":"0:251:725","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9599:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9580:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12547:3033":{"id":"2:12547:3033","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41688:202","prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12623:32291":{"id":"2:12623:32291","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12161:134","`FromStr`":"2:12160:14020"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41831:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12160:14020","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12160:14020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2077":{"id":"0:196:2077","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:239:2106":{"id":"0:239:2106","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8670:2768-0:298:1835":{"id":"a:2:8670:2768-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:237:2104":{"id":"0:237:2104","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:176-0:252:1827":{"id":"0:176-0:252:1827","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1827","glob":false}}},"2:12596:32282":{"id":"2:12596:32282","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12605:32287":{"id":"2:12605:32287","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12626:28356":{"id":"2:12626:28356","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39635:28366","Self::is_ascii":"2:12625:28355"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39635:28366","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2845:2828-0:230:1830":{"id":"a:2:2845:2828-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214:2089":{"id":"0:214:2089","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:2788:249-0:284:1829":{"id":"a:2:2788:249-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:79:1826":{"id":"0:79:1826","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8669:2769-0:230:1830":{"id":"a:2:8669:2769-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8669:2769-0:298:1835":{"id":"a:2:8669:2769-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8670:2768-0:270:1832":{"id":"a:2:8670:2768-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:281:667":{"id":"0:281:667","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12594:32281":{"id":"2:12594:32281","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12620:32290":{"id":"2:12620:32290","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5520:32951":{"id":"5:5520:32951","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1977","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1977","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2342:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2342:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2342:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12508:32269":{"id":"2:12508:32269","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1040","0:92:2359","0:93:2366","0:94:2372"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2579-0:298:1835":{"id":"b:2:2579-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3426:1641":{"id":"2:3426:1641","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39448:12242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12515:32272":{"id":"2:12515:32272","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2805:259-0:211:1831":{"id":"a:2:2805:259-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2273-0:284:1829":{"id":"b:2:2273-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178-0:284:1829":{"id":"0:178-0:284:1829","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1829","glob":false}}},"2:12524:27186":{"id":"2:12524:27186","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2337:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2592:135":{"id":"2:2592:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:179-0:230:1830":{"id":"0:179-0:230:1830","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1830","glob":false}}},"0:193:2075":{"id":"0:193:2075","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1763"]},"discriminant":null}}},"a:2:2788:249-0:211:1831":{"id":"a:2:2788:249-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2798:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2800:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5519":{"id":"5:5519","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5520:32951","5:5521:2720","5:5524:32952","5:5527:32953","5:5535:32954","5:5536:32955","5:5537:2633","5:5538:28519","5:5539:28520"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:261:461":{"id":"0:261:461","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8670:2768-0:192:1828":{"id":"a:2:8670:2768-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12541:27229":{"id":"2:12541:27229","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12555:27216":{"id":"2:12555:27216","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12200:19204","`DoubleEndedIterator`":"2:7581:128","prim@char":"1:12029:457","str::split_whitespace":"2:12533:30545","str::rsplit":"2:12561:27220"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43648:12932","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2845:2828-0:211:1831":{"id":"a:2:2845:2828-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12573:27224":{"id":"2:12573:27224","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12029:457","str::splitn":"2:12570:27222","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43770:13041","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12585:32278":{"id":"2:12585:32278","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12200:19204","`DoubleEndedIterator`":"2:7581:128","prim@char":"1:12029:457","str::matches":"2:12582:2541"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43870:13047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:192:1828":{"id":"b:5:682-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3049","5:685:3050","5:686:3051"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2278:24697":{"id":"2:2278:24697","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2579-0:192:1828":{"id":"b:2:2579-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5535:32954":{"id":"5:5535:32954","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7493:255"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77:1823":{"id":"0:77:1823","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2109":{"id":"0:253:2109","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2788:249-0:252:1827":{"id":"a:2:2788:249-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2276-0:252:1827":{"id":"b:2:2276-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3424-0:284:1829":{"id":"b:2:3424-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8669:2769-0:270:1832":{"id":"a:2:8669:2769-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2583-0:192:1828":{"id":"b:2:2583-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9624:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:267:667":{"id":"0:267:667","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2594-0:298:1835":{"id":"b:2:2594-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:684:3049":{"id":"5:684:3049","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12532:12916":{"id":"2:12532:12916","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43634:10856","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2799:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3424-0:252:1827":{"id":"b:2:3424-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:297:725":{"id":"0:297:725","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9599:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9580:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2273-0:270:1832":{"id":"b:2:2273-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2799:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2372":{"id":"0:94:2372","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:1833":{"id":"0:183-0:73:1833","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1833","glob":false}}},"b:2:2589-0:252:1827":{"id":"b:2:2589-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2597:135":{"id":"2:2597:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32106:12055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:212:2084":{"id":"0:212:2084","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:2275:2531":{"id":"2:2275:2531","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2583-0:211:1831":{"id":"b:2:2583-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2276-0:270:1832":{"id":"b:2:2276-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2788:249-0:298:1835":{"id":"a:2:2788:249-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12534:30565":{"id":"2:12534:30565","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12533:30545"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43931:13051","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12579:27227":{"id":"2:12579:27227","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8670:2768-0:252:1827":{"id":"a:2:8670:2768-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12611:27231":{"id":"2:12611:27231","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2276-0:192:1828":{"id":"b:2:2276-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12630:32292":{"id":"2:12630:32292","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4584:32292"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43947:12967","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2799:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229:725":{"id":"0:229:725","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9599:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9580:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12629:28360":{"id":"2:12629:28360","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:2081":{"id":"0:71:2081","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2589-0:230:1830":{"id":"b:2:2589-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2594-0:284:1829":{"id":"b:2:2594-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2582:2992":{"id":"2:2582:2992","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2556:143"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2337:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:2079":{"id":"0:198:2079","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:72:1834":{"id":"0:72:1834","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2594-0:230:1830":{"id":"b:2:2594-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2594-0:192:1828":{"id":"b:2:2594-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12514:28438":{"id":"2:12514:28438","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11760:19205"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8670:2768-0:284:1829":{"id":"a:2:8670:2768-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2630:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12518:2046":{"id":"2:12518:2046","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41688:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2845:2828-0:252:1827":{"id":"a:2:2845:2828-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2800:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8670:2768-0:211:1831":{"id":"a:2:8670:2768-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8670:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9624:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5536:32955":{"id":"5:5536:32955","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1977","`String`":"5:7493:255"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1977","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2276-0:211:1831":{"id":"b:2:2276-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84:2223":{"id":"0:84:2223","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2845:2828-0:192:1828":{"id":"a:2:2845:2828-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12551:2998":{"id":"2:12551:2998","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41688:202","prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172-0:80:1824":{"id":"0:172-0:80:1824","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1824","glob":false}}},"2:12537:30561":{"id":"2:12537:30561","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43940:13052","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3424-0:270:1832":{"id":"b:2:3424-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184-0:72:1834":{"id":"0:184-0:72:1834","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1834","glob":false}}},"2:12567:32277":{"id":"2:12567:32277","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12200:19204","str::split":"2:12555:27216","prim@char":"1:12029:457","str::split_terminator":"2:12564:32276"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43716:13038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12570:27222":{"id":"2:12570:27222","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204","str::rsplitn":"2:12573:27224"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43752:13040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:725":{"id":"0:283:725","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9599:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9580:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:461":{"id":"0:289:461","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2798:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:298:1835":{"id":"0:298:1835","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:8670:2768-0:298:1835","a:2:2805:259-0:298:1835","a:2:2845:2828-0:298:1835","a:2:2788:249-0:298:1835","a:2:8669:2769-0:298:1835","b:2:3424-0:298:1835","b:2:2594-0:298:1835","b:2:2276-0:298:1835","b:2:2589-0:298:1835","b:2:2579-0:298:1835","b:2:2583-0:298:1835","b:2:2273-0:298:1835","0:300"]}}},"b:2:2579-0:252:1827":{"id":"b:2:2579-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195:1763":{"id":"0:195:1763","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2579-0:211:1831":{"id":"b:2:2579-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2594-0:270:1832":{"id":"b:2:2594-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2342:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173-0:76:1825":{"id":"0:173-0:76:1825","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1825","glob":false}}},"0:181-0:270:1832":{"id":"0:181-0:270:1832","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1832","glob":false}}},"2:12544:27230":{"id":"2:12544:27230","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12564:32276":{"id":"2:12564:32276","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12200:19204","str::split":"2:12555:27216","prim@char":"1:12029:457","`DoubleEndedIterator`":"2:7581:128","str::rsplit_terminator":"2:12567:32277"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43698:13037","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:1831":{"id":"0:211:1831","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:2084","0:213:2086","0:214:2089","0:215:2093"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8670:2768-0:211:1831","a:2:2805:259-0:211:1831","a:2:2845:2828-0:211:1831","a:2:2788:249-0:211:1831","a:2:8669:2769-0:211:1831","b:2:3424-0:211:1831","b:2:2594-0:211:1831","b:2:2276-0:211:1831","b:2:2589-0:211:1831","b:2:2579-0:211:1831","b:2:2583-0:211:1831","b:2:2273-0:211:1831","b:5:682-0:211:1831","0:223","0:217","0:218","0:228","0:225","0:220","0:226","0:222"]}}},"a:2:2805:259-0:284:1829":{"id":"a:2:2805:259-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:170-0:74:1822":{"id":"0:170-0:74:1822","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1822","glob":false}}},"a:2:2805:259-0:192:1828":{"id":"a:2:2805:259-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2081"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2366":{"id":"0:93:2366","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112-0:327:2380":{"id":"0:112-0:327:2380","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2380","glob":false}}},"0:185-0:298:1835":{"id":"0:185-0:298:1835","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1835","glob":false}}},"2:12538:27228":{"id":"2:12538:27228","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:32953":{"id":"5:5527:32953","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7493:255"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:461":{"id":"0:219:461","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:230:1830":{"id":"b:5:682-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3049","5:685:3050","5:686:3051"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111-0:313:1953":{"id":"0:111-0:313:1953","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1953","glob":false}}},"0:80:1824":{"id":"0:80:1824","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3053:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3053:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:231:2098":{"id":"0:231:2098","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:252:1827":{"id":"0:252:1827","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:2109","0:255:2111","0:257:2113"],"impls":["a:2:8670:2768-0:252:1827","a:2:2805:259-0:252:1827","a:2:2845:2828-0:252:1827","a:2:2788:249-0:252:1827","a:2:8669:2769-0:252:1827","b:2:3424-0:252:1827","b:2:2594-0:252:1827","b:2:2276-0:252:1827","b:2:2589-0:252:1827","b:2:2579-0:252:1827","b:2:2583-0:252:1827","b:2:2273-0:252:1827","b:5:682-0:252:1827","0:266","0:259","0:263","0:260","0:262","0:265","0:268"]}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2630:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2799:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3424-0:211:1831":{"id":"b:2:3424-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2276-0:230:1830":{"id":"b:2:2276-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:295:667":{"id":"0:295:667","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1822":{"id":"0:74:1822","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9105:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12509:32270":{"id":"2:12509:32270","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2788:249-0:270:1832":{"id":"a:2:2788:249-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2788:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12633:32293":{"id":"2:12633:32293","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4582:32293"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43965:12966","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12576:27226":{"id":"2:12576:27226","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:284:1829":{"id":"b:5:682-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3049","5:685:3050","5:686:3051"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2800:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12530:13053":{"id":"2:12530:13053","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12029:457"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43618:13031","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2583-0:270:1832":{"id":"b:2:2583-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2594-0:252:1827":{"id":"b:2:2594-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2597:135","2:2598:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:1836":{"id":"0:0:1836","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1821","0:170-0:74:1822","0:171-0:77:1823","0:172-0:80:1824","0:173-0:76:1825","0:174-0:79:1826","0:176-0:252:1827","0:177-0:192:1828","0:178-0:284:1829","0:179-0:230:1830","0:180-0:211:1831","0:181-0:270:1832","0:183-0:73:1833","0:184-0:72:1834","0:185-0:298:1835"],"is_stripped":false}}},"b:2:2579-0:230:1830":{"id":"b:2:2579-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2805:259-0:298:1835":{"id":"a:2:2805:259-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:284:1829":{"id":"0:284:1829","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1763"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8670:2768-0:284:1829","a:2:2805:259-0:284:1829","a:2:2845:2828-0:284:1829","a:2:2788:249-0:284:1829","a:2:8669:2769-0:284:1829","b:2:3424-0:284:1829","b:2:2594-0:284:1829","b:2:2276-0:284:1829","b:2:2589-0:284:1829","b:2:2579-0:284:1829","b:2:2583-0:284:1829","b:2:2273-0:284:1829","b:5:682-0:284:1829","0:290","0:293","0:287","0:294","0:288","0:296","0:291"]}}},"b:2:3424-0:192:1828":{"id":"b:2:3424-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3422:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3426:1641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9624:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12516:349":{"id":"2:12516:349","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12517:348","`u8`":"1:12046:1650"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12520:9495":{"id":"2:12520:9495","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41688:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41686:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:725":{"id":"0:269:725","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9599:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9580:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12561:27220":{"id":"2:12561:27220","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12200:19204","`DoubleEndedIterator`":"2:7581:128","prim@char":"1:12029:457","str::split":"2:12555:27216"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43666:12935","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12220:19202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2583-0:230:1830":{"id":"b:2:2583-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12601:32285":{"id":"2:12601:32285","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2086":{"id":"0:213:2086","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2583-0:252:1827":{"id":"b:2:2583-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5521:2720":{"id":"5:5521:2720","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7493:255"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2359":{"id":"0:92:2359","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8669:2769-0:284:1829":{"id":"a:2:8669:2769-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2800:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83:2217":{"id":"0:83:2217","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8669:2769-0:211:1831":{"id":"a:2:8669:2769-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235:2102":{"id":"0:235:2102","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:682-0:211:1831":{"id":"b:5:682-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3049","5:685:3050","5:686:3051"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12531:13063":{"id":"2:12531:13063","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12029:457"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43624:13032","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2100":{"id":"0:233:2100","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12527:32274":{"id":"2:12527:32274","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12035:1544","crate::ops::IndexMut":"2:3089:13868","str::slice_unchecked":"2:12526:32273"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:461":{"id":"0:243:461","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1825":{"id":"0:76:1825","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3056:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2337:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2273-0:298:1835":{"id":"b:2:2273-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12522:27185":{"id":"2:12522:27185","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10290:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12536:32275":{"id":"2:12536:32275","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43912:13049","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:2113":{"id":"0:257:2113","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2799:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5524:32952":{"id":"5:5524:32952","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7493:255"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2111":{"id":"0:255:2111","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12617:32289":{"id":"2:12617:32289","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:1828":{"id":"0:192:1828","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2075","0:196:2077","0:198:2079"],"impls":["0:70","a:2:8670:2768-0:192:1828","a:2:2805:259-0:192:1828","a:2:2845:2828-0:192:1828","a:2:2788:249-0:192:1828","a:2:8669:2769-0:192:1828","b:2:3424-0:192:1828","b:2:2594-0:192:1828","b:2:2276-0:192:1828","b:2:2589-0:192:1828","b:2:2579-0:192:1828","b:2:2583-0:192:1828","b:2:2273-0:192:1828","b:5:682-0:192:1828","0:203","0:201","0:204","0:206","0:207","0:209","0:200"]}}},"5:685:3050":{"id":"5:685:3050","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:667":{"id":"0:227:667","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1763":{"id":"0:286:1763","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:5:682-0:270:1832":{"id":"b:5:682-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3049","5:685:3050","5:686:3051"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:174-0:79:1826":{"id":"0:174-0:79:1826","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1826","glob":false}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2337:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2273-0:230:1830":{"id":"b:2:2273-0:230:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2276-0:284:1829":{"id":"b:2:2276-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171-0:77:1823":{"id":"0:171-0:77:1823","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1823","glob":false}}},"b:5:682-0:252:1827":{"id":"b:5:682-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3049","5:685:3050","5:686:3051"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2273-0:192:1828":{"id":"b:2:2273-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12598:32283":{"id":"2:12598:32283","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12506:880":{"id":"2:12506:880","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12029:457"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12517:348":{"id":"2:12517:348","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12046:1650"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8669:2769-0:192:1828":{"id":"a:2:8669:2769-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2589-0:270:1832":{"id":"b:2:2589-0:270:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9624:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2289:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:461"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2276-0:298:1835":{"id":"b:2:2276-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2270:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2278:24697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12511:32271":{"id":"2:12511:32271","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12509:32270"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12627:28358":{"id":"2:12627:28358","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2593:1628":{"id":"2:2593:1628","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41831:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12505":{"id":"2:12505","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12506:880","2:12507:2341","2:12508:32269","2:12509:32270","2:12511:32271","2:12514:28438","2:12515:32272","2:12516:349","2:12517:348","2:12518:2046","2:12520:9495","2:12522:27185","2:12524:27186","2:12526:32273","2:12527:32274","2:12528:27208","2:12529:27209","2:12530:13053","2:12531:13063","2:12532:12916","2:12533:30545","2:12534:30565","2:12535:29551","2:12536:32275","2:12537:30561","2:12538:27228","2:12541:27229","2:12544:27230","2:12547:3033","2:12551:2998","2:12555:27216","2:12558:27218","2:12561:27220","2:12564:32276","2:12567:32277","2:12570:27222","2:12573:27224","2:12576:27226","2:12579:27227","2:12582:2541","2:12585:32278","2:12588:32279","2:12591:32280","2:12594:32281","2:12596:32282","2:12598:32283","2:12600:32284","2:12601:32285","2:12602:32286","2:12605:32287","2:12608:24895","2:12611:27231","2:12614:32288","2:12617:32289","2:12620:32290","2:12623:32291","2:12625:28355","2:12626:28356","2:12627:28358","2:12628:28359","2:12629:28360","2:12630:32292","2:12632:13836","2:12633:32293"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2342:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2598:1626":{"id":"2:2598:1626","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41831:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5539:28520":{"id":"5:5539:28520","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12629:28360"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5538:28519":{"id":"5:5538:28519","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12628:28359"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7493:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2798:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2589-0:298:1835":{"id":"b:2:2589-0:298:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:270:1832":{"id":"0:270:1832","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1763"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8670:2768-0:270:1832","a:2:2805:259-0:270:1832","a:2:2845:2828-0:270:1832","a:2:2788:249-0:270:1832","a:2:8669:2769-0:270:1832","b:2:3424-0:270:1832","b:2:2594-0:270:1832","b:2:2276-0:270:1832","b:2:2589-0:270:1832","b:2:2579-0:270:1832","b:2:2583-0:270:1832","b:2:2273-0:270:1832","b:5:682-0:270:1832","0:274","0:273","0:280","0:279","0:282","0:277","0:276"]}}},"2:12528:27208":{"id":"2:12528:27208","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12529:27209"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2589-0:211:1831":{"id":"b:2:2589-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:91:1040":{"id":"0:91:1040","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2337:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:249:667":{"id":"0:249:667","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110-0:331:2367":{"id":"0:110-0:331:2367","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2367","glob":false}}},"0:180-0:211:1831":{"id":"0:180-0:211:1831","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1831","glob":false}}},"0:210:725":{"id":"0:210:725","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9599:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9580:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2805:259-0:252:1827":{"id":"a:2:2805:259-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2805:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:275:461":{"id":"0:275:461","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177-0:192:1828":{"id":"0:177-0:192:1828","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1828","glob":false}}},"2:12582:2541":{"id":"2:12582:2541","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12200:19204","`DoubleEndedIterator`":"2:7581:128","prim@char":"1:12029:457","str::rmatches":"2:12585:32278"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43852:13046","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12632:13836":{"id":"2:12632:13836","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4585:13836"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43956:12961","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12628:28359":{"id":"2:12628:28359","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2798:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2799:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12558:27218":{"id":"2:12558:27218","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12029:457","self::pattern":"2:12200:19204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12016:12934","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12205:13611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2589-0:192:1828":{"id":"b:2:2589-0:192:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2563:269","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2559:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2592:135","2:2593:1628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2337:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:667"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2579-0:284:1829":{"id":"b:2:2579-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2553:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2582:2992"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8669:2769-0:252:1827":{"id":"a:2:8669:2769-0:252:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8669:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2583-0:284:1829":{"id":"b:2:2583-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2556:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2273-0:211:1831":{"id":"b:2:2273-0:211:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2795:2827","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2267:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2275:2531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2798:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73:1833":{"id":"0:73:1833","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:208:667":{"id":"0:208:667","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2800:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2845:2828-0:284:1829":{"id":"a:2:2845:2828-0:284:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2845:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"22:118:3390":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"2:21383:14051":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:4847:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13779:11417":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:30352:2635":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:483:3725":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:8714:20711":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:7544:12866":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:3032:11697":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:12659:11122":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:11174:20843":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:307:1596":{"crate_id":1,"path":["std","thread"],"kind":"module"},"22:4996:7297":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"5:687:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"11:2423:19715":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:10532:13658":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:39462:12243":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:41890:2626":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"22:4453:7079":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:41771:2765":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"22:4696:7264":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:5044:7303":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:4977:7295":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:1537:4626":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:21159:13918":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:489:3726":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:39299:222":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:49981:14063":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"22:1630:4634":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:5104:7308":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"22:5980:7982":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:44212:13069":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:11450:9772":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:8097:12872":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:6376:20654":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:7371:8793":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:42041:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:4724:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:3085:13867":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:5484:9683":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:44391:13087":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:557:2698":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:42761:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"22:4494:7243":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"22:4762:7270":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:2878:19316":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:11972:11000":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:1691:4640":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:11548:10967":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:1259:12860":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:9208:10853":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"11:2286:13581":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:42158:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:5982:12772":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:11310:13730":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"22:6817:8414":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13633:11393":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:40426:12990":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:6589:14039":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"6:569:3735":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:1376:98":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:6691:8408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"22:4781:7272":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:12030:1666":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:40690:13005":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:8294:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:2656:13655":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:5301:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:4618:13966":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:11935:10997":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:8932:14043":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:12555:11106":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:7861:13098":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:9489:33527":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:8133:11855":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:47011:12476":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"22:5827:7908":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:2969:19791":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:4474:2585":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:3797:11704":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"11:817:13585":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:6171:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:11513:13665":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:3173:3096":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"22:1594:4632":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"20:363:2631":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"22:4845:7280":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:904:9695":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"22:6698:8409":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"22:4601:7256":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:12271:19210":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:8868:12604":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"18:531:12674":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:5372:19192":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:43426:12936":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:44684:13093":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"9:330:12096":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"18:624:33528":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"9:393:19643":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:12027:408":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:1514:4623":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:8449:12404":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:4351:7230":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:6918:276":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:44578:239":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"5:6666:9660":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:4173:13984":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:3035:2591":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10754:13109":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:12912:11179":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:7506:19308":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:5982:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:5152:7315":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:44395:13088":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:3390:9683":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:9986:13444":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:41457:12381":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:14025:11477":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:11075:13493":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"18:671:13416":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:10005:9723":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:10819:12576":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:1568:12893":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:4774:11720":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:6083:19762":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:11175:9418":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:43902:13048":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:7681:2262":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:12374:11058":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:5044:13670":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5867:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:5146:7314":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"11:2238:12860":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"18:507:10730":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:41831:238":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:2450:11655":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"22:506:3728":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"1:8854:13706":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"22:500:3727":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"17:13136:11218":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:7235:2626":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:47943:12516":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:42980:12404":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:533:2696":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:12040:699":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:40384:12983":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:3235:13658":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:8558:13106":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:2940:238":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:4862:11723":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"22:6716:3510":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:5376:19193":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:4375:7232":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:350:2630":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"17:8927:20717":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"9:52:13772":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:8322:13703":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:1407:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:3195:13656":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:10963:10928":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:40676:13004":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:44280:13079":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:3441:13429":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"5:5138:9691":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:3332:9695":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:12971:11185":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:4461:7239":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:7365:8792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:7372:29774":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"11:1525:19720":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:6012:7984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:1290:13580":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"22:6709:8410":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2379:213":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:12423:11083":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:43965:12966":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"11:2334:3097":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:12831:11144":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:9532:33522":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:40394:12984":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"14:187:19732":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:12672:10898":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"22:5050:7304":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"22:4987:7296":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:1703:4642":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:1551:12890":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:9471:13688":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:5992:7983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:40164:19262":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"22:4684:7263":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:6962:9706":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:14479:11619":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:10721:13040":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:2346:3052":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:10772:10894":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:1911:710":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:12200:19204":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:22434:12167":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:12034:1512":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:45994:12435":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"22:4547:7250":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:43956:12961":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"14:7:13568":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:7660:2702":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"22:4504:7244":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"22:6118:7993":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:48027:12523":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:12268:11046":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1664:4637":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"11:1127:13583":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:10508:12698":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:8050:11913":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:11730:19376":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:4693:13997":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:44659:13092":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:39343:227":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:7554:11691":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:654:3786":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:2380:11652":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:3725:13664":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:6485:11678":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"11:868:13579":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:7633:7478":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:21008:30990":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:6275:12925":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:7828:11875":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:7289:2626":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:43634:10856":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:12214:12683":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:7019:9758":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:2305:19789":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:10457:13468":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:7702:8984":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:43606:13030":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:42080:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"22:6220:8026":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:6423:13682":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:13163:11220":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:9868:10867":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:45957:12433":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:42706:116":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:2896:19318":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:7469:12917":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:2947:19324":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:9580:238":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:12000:13843":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10930:10925":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"11:2058:12860":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"22:5883:7974":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4745:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:5818:9746":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:9763:33520":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:10837:25545":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"22:6779:4749":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:119:3390":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"18:590:10738":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:11212:9417":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:7037:30166":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:8181:11696":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:8987:24896":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:40079:12373":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"11:731:13572":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:9143:2640":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:11816:10983":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:41882:3097":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:12960:11184":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:8072:11914":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:5739:13677":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:11887:10995":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:40924:12375":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:6268:33518":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"22:4736:7267":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:533:3730":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:261:9660":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:8326:3510":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:3503:13936":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:11743:10976":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:9095:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:13974:11464":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:6742:12828":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:10495:12696":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:46139:12443":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:9618:33521":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"22:5967:7980":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12946:11182":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:11099:13495":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:6976:24893":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:4585:11715":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"9:486:19641":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"15:288:19744":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:1496:4620":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:10384:13458":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:5969:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:12028:1037":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:46263:12446":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:6587:2626":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:10607:13613":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"11:829:13855":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:2196:13652":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:6456:12811":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"18:727:10751":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"11:122:9649":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"11:1842:3096":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"22:1568:4629":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:30358:8998":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:20978:30874":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:13677:11397":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:12853:216":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"5:2172:12899":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:2559:270":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:39283:225":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"11:822:13573":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"11:1876:12892":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:44032:19216":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:8239:11856":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:10092:13716":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:5017:11728":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:8798:210":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"22:568:3735":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"16:5384:20649":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:10642:12935":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:10575:2262":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:4902:7287":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:3929:13961":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:1862:12890":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:10085:13446":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:20993:30874":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:2321:11643":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"14:0:2439":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:2810:2588":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"14:202:19218":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:6934:8421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"22:6941:8422":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12075:11008":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:10198:13449":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"11:1687:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:11352:10944":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:8186:12977":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"22:4852:7281":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:6187:13681":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:256:13417":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:22321:30344":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:13877:11441":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:4595:7255":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:46665:12469":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:7597:33512":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:2303:13589":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:9631:3250":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:6242:2243":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:10521:12699":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:7518:13603":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:39323:224":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:10335:29334":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:646:13838":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:9094:83":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:5632:12919":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"9:237:12404":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:11574:12728":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:39268:12959":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:8134:12878":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:3959:13963":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:12877:11168":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:8670:2768":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:4871:13609":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:3156:29936":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:12044:11004":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:8154:13564":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:9702:13435":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:3049:19792":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:12238:11034":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"18:699:12681":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:824:9666":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:42197:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"9:0:2435":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:14014:11473":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:5816:12754":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:588:13835":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:41737:174":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:2012:13423":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:46507:12454":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:10073:13647":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:11590:12622":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:43931:13051":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:4021:13967":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:563:3734":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"18:113:24677":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"22:5972:7981":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:13041:11194":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:7568:11692":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6804:8412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:9065:12612":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:6100:7990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:2968:32240":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:32160:2582":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"20:97:2625":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"17:10535:12700":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"22:7386:8794":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:1682:4639":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:13452:11265":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"22:7655:7482":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:7577:9695":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:12044:805":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:11087:13494":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:8838:12603":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:13102:11205":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:40244:8029":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"16:2504:11657":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"20:328:2627":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"17:12751:11135":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"22:1519:4624":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:40051:12963":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:4870:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:13568:11357":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:41610:13020":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:638:13638":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:784:9663":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:11813:9776":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:7610:7475":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:1413:3096":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:46453:12452":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:9173:10852":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"22:532:3730":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"2:3301:2590":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:12048:1648":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"22:4438:7237":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:8810:12601":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"22:4362:7231":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:7995:2634":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:4473:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1073:13584":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:43536:13636":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:1120:33280":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"22:4593:7255":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:14421:11602":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6513:12813":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"11:693:2626":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:44447:2646":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:1644:640":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:4449:7238":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:6893:11791":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"22:1701:4642":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11296:12723":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:5075:7306":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:4427:2584":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:11245:10969":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:12087:11009":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"11:1850:2624":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:919:13572":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"11:2351:2626":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"22:4722:7266":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"22:6796:8411":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:42316:2596":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:22448:12954":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:4373:2582":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:40356:12978":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"22:4930:7291":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:7581:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"22:652:3786":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:12998:11188":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:11155:12602":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:7534:11690":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:2848:2966":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:11911:10996":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:2798:257":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:2173:641":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:3214:12890":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:1507:4622":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"10:0:2436":{"crate_id":10,"path":["adler"],"kind":"module"},"18:707:12683":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:23072:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"22:595:3739":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"2:10071:9726":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:12112:11014":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:12124:11015":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:40666:13003":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:10686:13477":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"22:7666:7483":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:2526:11658":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:5661:12742":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:7552:2830":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:1140:32265":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:2872:11809":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:14449:11611":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13114:11207":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:21416:14046":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:11216:12715":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:42943:13022":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:8595:20699":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:4628:7259":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:4224:13667":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"22:4787:7273":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"22:4966:7294":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:48001:12521":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:11662:10971":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:10215:13452":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:3973:13964":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"22:5066:7305":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:40464:12994":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:13915:11449":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:4921:11725":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:43475:12409":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:588:3738":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:46947:12474":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:1875:13649":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:2051:13593":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4543:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:2428:11654":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:22031:14049":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:43752:13040":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"5:6468:2624":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:40202:12974":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"22:6959:8423":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:11338:20844":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:8671:2767":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"11:785:2624":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:8916:14041":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9052:20698":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:4496:7243":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:10228:13453":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:11359:20845":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:5121:11731":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:582:10845":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"11:1145:13584":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:43940:13052":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:8969:13707":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:10438:3096":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"22:4626:7259":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:952:13579":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:10037:10872":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:13011:11189":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:1869:12891":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:10751:10892":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:21585:13918":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13189:11222":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:7730:13886":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:40526:12999":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:357:2708":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:12847:11149":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:39387:228":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:11367:13166":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:8196:13003":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:10244:14027":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:8153:12576":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"22:4527:7247":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:4056:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:3183:223":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:30922:207":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:12197:11022":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:6987:9709":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5322:11732":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"11:1010:13580":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:9848:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:9103:10850":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:6545:11750":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:1935:3080":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"7:78:19635":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:5121:215":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"22:7643:7480":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:4835:11722":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"22:4743:7268":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"22:4937:1104":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:10941:12114":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:2857:1965":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11873:10994":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:9633:3251":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:5424:13675":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:6741:4766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:6467:12812":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:14379:11596":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:6189:12802":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:7258:11855":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:10411:13460":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:21253:14059":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"6:6120:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1604:4633":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:15:2544":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:5233:214":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:45939:12432":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"22:4447:7238":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:30950:2980":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:11711:10940":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:2692:12139":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:12051:855":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:10828:25543":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:6711:8410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:42998:13027":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"22:526:3729":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:4812:426":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:10470:9765":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:2850:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"18:599:33530":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:13287:11236":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:837:3096":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:3261:145":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:4666:7261":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:641:13640":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:3315:11700":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:4939:1104":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:7750:13623":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:32254:2969":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:4584:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:4428:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12185:11021":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:14537:11629":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:1525:13592":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:41899:207":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:22200:12945":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10589:12704":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:4914:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"20:118:1961":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"6:1596:4632":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:41823:217":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"22:1544:4627":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:43198:13028":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"11:0:2437":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:7911:13690":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10548:12701":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:9913:13439":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:8205:20663":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:7679:7484":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:22344:12155":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"22:1512:4623":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:9853:20732":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"22:5939:7936":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:868:12888":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:8142:12575":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:42734:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"22:6835:8415":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4789:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:43546:12942":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:5673:11680":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:40115:12966":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:47867:12514":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:9999:10838":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:9934:13441":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:43698:13037":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:10280:13918":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:4462:13986":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:1304:13584":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:2289:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:44237:13070":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:5068:7305":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:12306:11054":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:915:13571":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10604:12705":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"6:4529:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:10140:20750":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:13759:11409":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:9182:30018":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"5:4196:9683":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:4955:7293":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4523:7246":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:21025:30985":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:30446:30346":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:4031:13968":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:2339:11645":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"22:5908:7977":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:6059:7986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"11:2085:13581":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:6107:7991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:6139:9736":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:2926:19322":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:47990:12520":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:22973:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:3422:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:11688:20724":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:5791:263":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:14283:11562":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:5111:7309":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:10680:13614":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:8795:20713":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:40905:13011":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:6798:8411":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"11:1882:12893":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:4710:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:504:2692":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:43618:13031":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:6943:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:0:2441":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:2362:13907":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:3987:13966":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:9946:10870":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:6226:13528":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:42277:96":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:45786:12426":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:14164:11513":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"20:0:1838":{"crate_id":20,"path":["smallvec"],"kind":"module"},"17:10098:13447":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"11:1072:33493":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:10576:12703":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:46285:12447":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:4806:11721":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:6352:12804":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:11762:10979":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:32142:13623":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:3436:13663":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:13072:11199":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:43375:13632":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11474:10821":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:40183:12374":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10060:10874":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"22:5919:7978":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:40435:12991":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:4222:1959":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"18:755:12690":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:4304:13668":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"22:1526:4625":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:21297:14060":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:21592:14056":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:11273:12722":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:7456:12914":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"11:427:33495":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:2550:78":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:2548:11659":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:40412:12987":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:4841:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:12016:12934":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:4764:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:1542:2624":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"22:4876:7284":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"22:5889:7975":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:2961:3049":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:7513:12864":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:4745:11719":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:46741:12471":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:9522:13432":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:42238:89":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:43183:12408":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:9581:3249":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:23006:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"22:1589:4631":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:11978:13167":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:4630:10616":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:2972:32239":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:10917:13485":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"11:2074:13580":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:4738:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:10662:13473":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:4603:7256":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:2133:2692":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"22:6246:8027":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:7556:8955":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:13086:11201":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:6279:11742":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:1651:8994":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"22:4471:7240":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:6813:8413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:7694:11693":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"22:1708:4643":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"22:4432:7236":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:12878:13621":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:1632:4634":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"22:547:3732":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"6:4884:7285":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:9243:10854":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:48042:12524":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:3206:12892":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:2931:11818":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:12036:1631":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"18:538:10735":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:7015:11799":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:4908:7288":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:45642:12420":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11602:25635":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:3565:13430":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:4053:11708":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"18:766:24687":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"22:1732:4645":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2951:19325":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:2342:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:14347:11581":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:1064:13581":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"18:582:2980":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:9087:10849":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:12226:11031":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:923:13573":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"3:234:238":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:6872:3009":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:8282:13985":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:400:13419":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12686:11127":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:8896:20716":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:8660:20697":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:2888:2641":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:25921:279":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:2630:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"22:4664:7261":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:7657:7482":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:4733:13972":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:8826:20714":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:21400:13918":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:8381:14006":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:4988:9683":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:6280:9719":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:11192:10937":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:40932:13012":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"11:1635:9654":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:4893:7286":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"11:2473:12053":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13216:11226":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:10094:13715":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"22:4858:7282":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:4034:9660":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:10950:13676":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:12205:13611":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:4428:9685":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:1820:9171":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:2511:19266":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:6063:9747":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:1904:13897":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:21344:3059":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:6261:13540":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:2845:2828":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:13275:10940":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:6243:13532":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:5123:7311":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:11534:13666":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:9329:10856":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"22:6739:4766":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:30318:8997":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:11141:12601":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:12054:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:8203:10856":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:8115:12875":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:12826:31682":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:12173:11018":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:3219:32227":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"22:4554:7251":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:40042:12962":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:0:885":{"crate_id":6,"path":["libc"],"kind":"module"},"2:44260:13078":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:40883:13008":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:609:13411":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:6764:4751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:6944:33513":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:12035:1544":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4989:7296":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:40138:19261":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:2722:11666":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:6929:11794":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:45816:12427":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5941:7936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"22:6911:8419":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4388:7233":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:5574:11676":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:4686:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:43852:13046":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:22382:30364":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:44387:13086":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:12804:165":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:7493:255":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:10749:13615":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"22:7677:7484":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:8766:20712":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:43770:13041":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"11:1846:2626":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:0:2442":{"crate_id":17,"path":["object"],"kind":"module"},"1:4376:13669":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"22:6045:7985":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"22:4774:7271":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"22:5121:7311":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:44568:231":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:6290:232":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:4455:7079":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11304:13117":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:3065:10755":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:22874:201":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"22:541:3731":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"2:39365:226":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"22:6969:2904":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"1:11995:13793":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6960:13544":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:22709:200":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:1501:4621":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"11:2467:12052":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:4417:11710":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:22361:30350":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8900:14042":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:6753:12829":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:10367:13456":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:14111:11502":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:6666:4579":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"22:4349:7230":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:495:2915":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:3362:13011":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:4004:2624":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:7539:144":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:42119:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:7128:12609":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:3531:2624":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:3888:11706":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:8304:12581":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:1075:13421":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:2900:19317":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"22:6680:3604":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:9044:25171":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:21810:14053":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:2943:19323":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:9973:13443":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:6603:9755":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:10290:251":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:9791:33523":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:4350:277":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11236:12720":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:1546:9695":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"11:2487:12056":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:43435:12937":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:3232:11642":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:13694:11399":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13990:11466":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:11846:10987":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:11001:10930":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"22:6887:8417":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:43947:12967":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2916:19320":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:21594:12146":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"22:4882:7285":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:12712:11130":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:574:3736":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:47161:12477":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"22:7637:7479":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:2267:101":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:41874:3096":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:22808:199":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:2420:2448":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:43666:12935":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:12577:11113":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:5634:12738":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:11227:12719":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:3655:10760":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:7305:12909":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:9635:3252":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:7736:11866":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:22285:12150":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:10727:13482":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:1055:13580":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:43464:13634":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:2199:3066":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"11:2479:33489":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:44100:13065":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:43922:13050":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:40063:30367":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:12052:1706":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:11473:13664":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:10341:10888":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:6091:12921":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:9887:13438":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:44175:13068":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"11:666:3096":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:3237:13659":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:6114:7992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:12046:1650":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:10535:13660":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:5088:11730":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:12011:25548":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:9017:13711":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:10950:13487":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:21907:12148":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:8167:13567":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12699:11128":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:12043:804":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:9099:90":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:2795:2827":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:11262:12721":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:2512:13653":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"13:110:33499":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"11:759:12888":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:7616:7476":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"22:4576:7253":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:12041:806":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:5561:3449":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:3475:3249":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:8296:13699":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:8955:12608":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:40899:13010":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4808:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:6386:11747":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"22:122:3391":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:6820:9703":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:4814:13971":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:2921:19321":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:40036:12961":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:12811:11143":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:42688:70":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:7318:2572":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:2150:20778":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:1750:3078":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:11042:9768":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"22:7596:7473":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:1718:4644":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:40103:12965":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:42743:70":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:46901:12473":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:7436:11857":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:6844:11785":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:40876:13007":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:46331:12449":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:7613:13562":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:9565:13433":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:5746:13679":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"22:5138:7313":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"22:4912:7289":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:1019:2352":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"1:4562:13992":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:42959:13025":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:1650:4636":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:5743:12749":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:1744:664":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:47981:12519":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:4986:11727":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"22:7649:7481":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:5945:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"22:5002:7298":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:8281:11925":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:3722:12896":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:7635:13918":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:21566:14047":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:4676:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:3276:13661":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:2374:13913":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:5773:13680":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"22:4533:7248":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:5997:19607":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:45838:12428":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:9426:3265":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"16:4497:11712":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:2143:12897":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:42990:13026":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:41474:13957":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"20:164:9642":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"6:1674:4638":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:10152:13717":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:43202:13029":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:7677:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:5976:9691":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:5572:9683":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:3046:2023":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:4735:13974":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:4035:13969":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:724:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:40197:105":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:12791:11140":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"22:1648:4636":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:4968:7294":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:2937:11819":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:8002:13693":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:42459:3253":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:7636:2710":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"22:4541:7249":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:46041:12436":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:3737:13593":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:881:12889":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"22:4891:7286":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:40123:12961":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"22:6098:7990":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:860:2626":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:12029:457":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:5866:12761":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:1516:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2796:2589":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:6792:12841":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:62:3336":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:6169:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:13827:11424":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:2788:11669":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"22:6866:8416":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:1822:13648":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:48157:12529":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:7927:12896":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:10318:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:42678:12395":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:9960:13442":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:8002:19307":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"22:5857:7972":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:1275:13581":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"7:0:1696":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:3764:11703":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:46823:12472":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:3484:29390":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"22:6010:7984":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:40287:13626":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"22:7369:8793":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"22:7620:7477":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"11:992:12860":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:22029:13918":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:42002:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:536:12730":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:30388:30357":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:8489:14019":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:9608:13434":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:149:9646":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:45732:12424":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"20:331:2628":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"1:12049:1649":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:8277:13102":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:39441:13625":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:2178:13424":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:3159:25479":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:4462:11711":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:14317:11574":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:4632:10618":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:4647:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:12646:11119":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:3461:11701":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"5:2245:12904":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:5760:20651":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:14157:11511":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:14309:11571":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:9781:13437":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:45917:12431":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"11:2317:3096":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"6:555:3733":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:596:3739":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:12042:803":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"22:5128:7312":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:40403:12986":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:11202:12711":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"11:1036:13581":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:4949:11726":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:43816:13044":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"22:5109:7309":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:1528:4625":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12497:11099":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:12253:11040":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"15:306:19745":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:41440:12379":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"5:6335:14137":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:9446:13431":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"14:221:12003":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:11640:10937":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:1041:12860":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:11048:9769":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:5861:2624":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:4557:11714":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"22:4708:7265":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:8980:2695":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:44459:19415":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:41814:2955":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:2580:9740":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:8862:2626":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:12039:697":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:10735:13725":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:2881:11673":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"18:660:13412":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"22:562:3734":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"2:46355:12450":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:41746:3096":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"22:7690:8983":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:40536:13000":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:7591:9762":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:5493:13676":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:47697:12511":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:10241:10870":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:501:3727":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:5885:7974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"7:31:19628":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:44383:13085":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:2962:33430":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"22:4920:7290":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"18:681:12677":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:41754:3097":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:41587:30345":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:14084:11495":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:7492:12861":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:5363:11733":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:946:13578":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:22775:198":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"11:2461:12051":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:40374:12981":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:6804:14044":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:39409:13848":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:8974:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"21:0:1837":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"1:5964:2243":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:5023:7301":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:10427:13704":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:10317:10886":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:12998:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:12766:11138":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:13869:11438":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:2644:11663":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:8209:12932":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:7891:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:5052:7304":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"22:6077:7988":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:4912:861":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:10777:13116":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13686:11398":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:10764:13097":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:5625:2243":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"22:4373:7232":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:9391:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"6:475:3724":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:2799:256":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:7226:9170":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:3915:11707":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:2270:102":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"22:4753:7269":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:14091:11496":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:7622:7477":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"22:5144:7314":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:6415:12808":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:4290:233":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:8039:30767":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:21006:30988":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:10469:10889":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"22:4386:7233":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7708:11694":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:11618:10969":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:2641:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:5859:7972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:8849:20715":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:11587:10968":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:7521:10845":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:43501:12940":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:12984:11187":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"22:6261:8028":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:9200:707":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"17:10789:20820":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:8792:13704":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:6499:11695":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:22398:30371":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:7604:7474":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:12033:346":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:622:2230":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:9138:10851":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:21161:14052":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"16:5939:12769":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6583:12823":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:4566:7252":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"11:841:13576":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:9661:33526":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:4922:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:44399:13089":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:14402:11597":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7621:20660":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"15:0:2440":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:4800:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:10569:13612":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"22:6167:7996":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:45708:12423":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:12599:11114":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"22:6226:7146":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:3981:13965":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:3162:25481":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"22:61:3336":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"6:123:3391":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:7334:2626":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"5:7426:12911":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:1546:4627":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:41762:2626":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:1558:9683":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:7692:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"13:0:2433":{"crate_id":13,"path":["std_detect"],"kind":"module"},"14:215:12880":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:46309:12448":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:2832:11671":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:11231:162":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"22:6157:7995":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"4:0:2434":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:7284:2765":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"22:5021:7301":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:11163:10933":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:2553:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:9840:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:5632:13094":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"22:1499:4621":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"11:357:9650":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:2510:13918":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:1764:12142":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"22:494:2915":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"22:7363:8792":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:2574:11660":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:43870:13047":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:6159:7995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:5612:11681":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:40890:13009":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:9030:12609":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:910:13585":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:7668:7483":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:12791:148":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:44054:13055":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"18:515:10733":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"22:6105:7991":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:3671:9660":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:1913:4812":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:43592:12411":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:6079:7988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:9160:2711":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"17:10013:10881":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:3570:183":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:10937:13687":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:9629:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:2744:11667":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"18:491:12673":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"9:357:19657":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:10487:12932":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:7503:11689":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:12738:11133":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:2907:11674":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:45686:12422":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:11194:2639":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"5:6801:2628":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:32146:11856":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:30552:30349":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:2884:11813":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:22336:12154":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:13612:11388":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4776:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:11760:19205":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:3232:13428":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"14:31:13568":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:4814:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:7897:13099":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:39221:19177":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:12433:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:40150:12969":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:897:3096":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"22:7700:8984":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:14500:11622":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:7690:179":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:207:9658":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:12160:14020":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:14435:11604":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:10127:12691":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:14101:11499":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:13260:11233":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:14069:11491":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:13047:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:41686:205":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"22:1494:4620":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:6868:8416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:6332:11675":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"18:636:10747":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:10441:13463":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:45887:12430":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:7844:13097":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:4998:7297":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:11049:13488":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:7255:2624":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:4516:7245":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:2810:11670":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:6973:19311":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:6879:11789":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:9712:33519":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:2766:11668":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:4860:7282":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:2933:19790":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:6041:20653":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:11746:13619":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"18:80:24675":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:4506:7244":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:44069:13061":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:4299:2574":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:10448:1973":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:21460:13918":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"22:5926:7979":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:4556:7251":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11138:13498":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:3256:266":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"22:6057:7986":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:7902:13100":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:6600:20655":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:9071:10848":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:7343:3683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"22:4812:7276":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:13488:11296":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:10629:12709":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:4440:7237":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:7602:7474":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:4152:13982":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:11112:13496":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:14356:11583":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:48095:12527":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:7318:11837":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:47961:12517":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:3240:12893":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:7265:9671":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:6781:4749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:13245:11229":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"11:101:1978":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"11:298:12882":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:2373:206":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10739:13483":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:4854:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"11:2494:12910":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"20:281:2626":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"2:43798:13043":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"22:6896:8418":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:1563:12892":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:3185:32226":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:10789:12536":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"11:1541:13586":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"22:1505:4622":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:11394:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"14:160:13568":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:7634:2829":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:4480:7241":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:11281:13618":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:0:320":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:12137:11016":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:9022:13712":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:678:262":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"22:43:2906":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"6:5891:7975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:4044:13606":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:7651:7481":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:12474:11095":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:11390:13501":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:40455:12993":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"22:7631:7478":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:2183:3059":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:44247:13074":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:3802:9695":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"6:4698:7264":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:7645:7480":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:5435:11734":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:46587:12455":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:47367:12508":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:11609:13126":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:13025:11192":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:22841:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"22:474:3724":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"22:1716:4644":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"22:554:3733":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"17:2209:13427":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:10981:10881":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:46711:12470":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"22:4478:7241":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:22269:12946":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:5033:7302":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:5980:232":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:10799:137":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:548:3732":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:13891:11444":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:10088:9727":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:21197:14054":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:42968:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"9:507:12117":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:21211:3059":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"6:5009:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:8547:12600":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:6514:9660":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:10809:126":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:1444:2626":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:2964:12138":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"22:5115:7310":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:1013:9660":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2805:259":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:7543:166":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:47619:12510":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:39182:3099":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:2563:269":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:11616:13126":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:3267:19245":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"22:1602:4633":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"20:344:2629":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"17:13423:11245":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:14146:11510":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:9651:10881":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:42438:3251":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"11:483:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"22:7608:7475":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:11024:10931":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:12935:11180":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:1184:13422":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:40314:12940":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:6350:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"22:1556:4628":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:44367:13081":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:7523:12865":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"22:1695:4641":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:43912:13049":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:542:3731":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:3663:13958":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:14270:11556":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:5829:7908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:7041:12852":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:2203:13901":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:12532:11103":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:14119:11503":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10904:13484":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"10:36:12058":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"5:276:1977":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:6128:7994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"22:4521:7246":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"12:0:2438":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:9639:218":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:1535:3096":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13852:11433":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:2284:19763":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:14043:11481":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:42951:13024":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:6819:8414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40914:9721":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"5:4849:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:32167:12958":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"22:4900:7287":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:2909:11814":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:6047:7985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:3274:13660":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:4344:11709":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"22:1680:4639":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:6721:20656":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:13817:11423":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"21:4:1837":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"2:20965:2980":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:10371:13457":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"22:5031:7302":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:46406:12451":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:12281:11050":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:8288:13702":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:5830:12755":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:8233:13956":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:40444:12992":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:8222:13699":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:5004:7298":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:44375:13083":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"6:6682:3604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:5075:13670":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"11:1855:9695":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"22:6069:7987":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:43454:12939":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:5974:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:5140:7313":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"22:4614:7258":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:5408:13674":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:11125:13497":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"22:482:3725":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:44148:13067":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:5419:10849":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:4791:9744":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:482:9738":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:3053:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:1674:9660":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:1558:4628":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:9922:13440":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:48118:12528":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"18:614:33529":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13299:11243":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:40307:13627":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"6:7639:7479":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"22:4564:7252":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:10759:13111":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:6658:3774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10166:20751":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:11282:10939":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:14135:11506":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:4447:1960":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:2616:13654":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:2618:11662":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"9:426:19644":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:4179:2594":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:22309:12950":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:6927:8420":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:11167:25549":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4755:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:7342:33515":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:10763:13616":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:894:2624":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:40157:12970":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9373:10859":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:1761:13646":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:4878:7284":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:629:13590":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:11952:10999":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:12155:11017":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:3600:11702":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:4535:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:1759:13645":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:41623:13101":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:14002:11472":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13149:11219":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"15:394:19754":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:6156:12799":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:7067:12858":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:1710:4643":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:12225:19201":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:6696:11773":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:9281:30764":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:12220:19202":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:47759:12512":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:850:3097":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:46117:12442":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:4363:2581":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13724:11405":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"22:573:3736":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"9:450:19642":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:47905:12515":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"13:226:12050":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:10638:12710":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:11965:13042":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"11:860:13578":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"22:5013:7300":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:9897:20733":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"8:0:1837":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:4527:11713":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:2364:13908":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:7746:13687":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:6425:12809":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"20:57:2624":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"22:6134:10530":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:7532:13733":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:5564:14025":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:1505:13572":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"18:0:2443":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6915:11686":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:5618:232":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:6818:12842":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:929:13855":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:6569:11683":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:5015:7300":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13793:11421":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:1681:1193":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:3596:3097":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:527:3729":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:11992:11001":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"22:4798:7274":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:0:885":{"crate_id":22,"path":["libc"],"kind":"module"},"22:4514:7245":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"22:1637:4635":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:3246:19328":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6361:12805":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:32153:13624":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:3830:13666":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"22:1689:4640":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:5085:7307":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:47509:12509":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"11:1562:13587":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:30091:13959":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:6101:9683":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:41665:12390":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:8399:12592":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"22:1574:4630":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:7054:12855":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:7572:9760":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4783:7272":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:46977:12475":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:4166:9683":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:8165:13917":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:1838:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:6889:9757":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:13740:11408":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:4076:3097":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:4932:7291":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:22147:12944":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:11307:10940":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:7709:13841":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"22:4822:7277":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:9599:142":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:2788:249":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:6837:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12485:11098":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:2682:13604":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"11:796:9695":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:2853:2968":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:44226:19217":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:7851:12536":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:2960:19327":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:13056:11198":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"22:5102:7308":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"22:4608:7257":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12725:11131":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:880:9668":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:9476:9764":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:11720:20725":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"22:7614:7476":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:5910:7977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:6136:10530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:44586:219":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:12779:11139":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:13982:11465":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"22:4426:7235":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"10:44:12059":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:40365:12980":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:22427:12951":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:2225:33482":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"22:4953:7293":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:6248:8027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:8979:20719":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:324:12885":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:9192:12613":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:1428:3097":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:14077:11494":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:9271:9171":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:10562:12702":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:43624:13032":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:6346:13543":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:7839:13688":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:44629:12416":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"22:6762:4751":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:7722:11684":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:14127:11505":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:40277:9713":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:1104:32264":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11152:13499":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:40230:12975":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:14325:11575":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:14336:11580":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:6017:20652":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:10983:12603":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:40214:30348":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:12294:11051":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:3022:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:2185:3060":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:3144:99":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:32106:12055":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"18:652:10730":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:4144:13981":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"22:4945:7292":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:5897:7976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:4043:13970":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:42783:76":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"5:7507:12918":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"11:344:33490":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"22:4674:7262":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:1539:2626":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:21815:14061":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:14034:11480":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:8824:12602":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:4365:9685":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"22:6925:8420":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:10699:13479":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"3:0:482":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:40512:2111":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:5712:12744":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:7088:19303":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:5798:11736":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:13009:9736":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:46087:12441":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"22:6689:8408":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10279:13455":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:8887:12605":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:2337:212":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:5727:12747":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:4719:11718":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:11942:13039":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:8216:13048":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:504:13420":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:1697:4641":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:5388:13673":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"5:7440:30348":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:1591:4631":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:12053:1253":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:0:538":{"crate_id":2,"path":["core"],"kind":"module"},"1:6459:9754":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:11328:12725":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"22:4645:7260":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:23039:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:9351:10858":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"22:488:3726":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"16:8195:12879":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"22:5990:7983":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:2696:11665":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:8846:3096":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:10617:12706":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"6:4549:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:6637:245":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:13547:11348":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"22:5083:7307":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:5921:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:5130:7312":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:9888:12930":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"5:1494:13571":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:4236:3096":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:3338:2592":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"22:4486:7242":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"11:1051:19719":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"5:7409:106":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:4160:13983":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:14174:11518":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:40131:12967":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:6531:12821":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"5:6830:9705":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"22:4868:7283":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"11:2165:1973":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:14297:11568":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:43527:12941":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11408:20721":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:1734:4645":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13839:11427":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"0:0:1836":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"2:1773:3077":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:7275:32224":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"18:719:10748":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:8228:13701":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:3583:3096":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:45856:12429":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:415:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:7997:13692":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:7381:12910":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12889:11170":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:3180:12891":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"5:2037:12896":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"15:327:13769":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:1963:209":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:13907:11447":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"22:5865:7973":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:43716:13038":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:4610:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:3666:2626":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:2348:13904":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:4889:11724":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:41963:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:4824:7277":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:2942:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:8531:13103":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:7651:13563":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:13950:11455":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:10431:13462":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:4947:7292":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"22:4459:7239":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:6084:7989":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:2406:11653":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:2359:11651":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:4957:14002":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:12514:11102":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7090:12859":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:10266:13454":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:21023:30987":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:42718:11890":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:11491:10965":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:21482:12146":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:7593:9699":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"18:644:10730":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:1484:13585":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"22:4399:7234":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:4148:2593":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:8541:3096":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"11:1092:13582":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"22:1662:4637":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"18:481:12672":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:48065:12525":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:11368:10945":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:47970:12518":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3960:9683":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:8472:12595":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:9641:3254":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:41924:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:4434:7236":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4616:7258":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:8954:20718":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:40334:13628":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:7834:9518":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:48016:12522":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:6222:8026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:10735:13041":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:12453:11091":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:4488:7242":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:5634:2628":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:12438:11087":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"22:4839:7279":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:2907:9743":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:35:9656":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:8348:12582":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:7128:27014":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:40487:12996":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"22:6656:3774":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:42452:3252":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:10187:12694":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"6:6071:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:4582:7254":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:2594:9727":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"22:5073:7306":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:9286:13791":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:43514:13635":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:3056:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:5648:13504":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:13175:11221":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:6961:8423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:6700:8409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:5439:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:2867:11812":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"22:1535:4626":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:1521:4624":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:10398:13459":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:40343:12977":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:44379:13084":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:41417:171":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:7297:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:40477:12995":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:5905:12763":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"11:772:12889":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:1639:4635":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:42445:3250":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"11:680:3097":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:6269:12926":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:39448:12242":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:8669:2769":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"18:574:10730":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:5690:12920":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:3418:12579":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:45976:12434":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:7655:2701":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:6898:8418":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:7482:9692":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:7269:33517":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"22:5042:7303":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"22:5895:7976":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:2862:2642":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11337:12621":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:9883:13922":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:22907:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:11352:13121":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:4613:11716":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"22:4828:7278":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"22:6112:7992":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7862:12868":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:7782:12867":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:44642:181":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"22:6802:8412":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:1576:4630":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:11449:20722":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:1966:208":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5928:7979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:8687:20710":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:6889:8417":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"18:736:24686":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:14470:11617":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:11248:13617":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"22:6664:4579":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:2463:12135":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:11981:13045":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:6968:20657":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:41804:2766":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:44371:13082":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:7660:11863":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:4294:2573":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"19:0:1134":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:12544:11105":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:14057:11488":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:44083:13064":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:48080:12526":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"22:7341:3683":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:30374:70":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:43648:12932":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:2800:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:13803:11422":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:4830:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:5117:7310":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:21462:14048":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:3050:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:13711:11400":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:14515:11623":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:507:3728":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:10529:13656":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"22:579:3737":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"1:4737:13975":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:21561:13918":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:9010:13710":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:40093:12964":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:7391:20659":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:46233:12445":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:6913:8419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:10421:10800":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"22:4906:7288":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12622:11118":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:23519:248":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:47821:12513":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:7724:13842":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:7998:3098":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:1778:9695":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:3004:19176":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"17:11789:10980":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:2670:11664":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:3728:13665":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:780:100":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:9105:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:7006:13545":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:4079:19175":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"22:587:3738":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"2:4651:19255":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:14222:11555":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:7792:20661":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"22:4806:7275":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:13923:11451":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:2864:11672":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9575:33524":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:11031:9767":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:12063:11005":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"18:690:12680":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13668:11394":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:10647:10953":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"22:7554:8955":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:8779:13611":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"22:6126:7994":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44671:12419":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:45662:12421":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:261:13418":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:22940:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:7243:12908":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:8007:13947":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:1570:4629":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13229:11227":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"22:5007:7299":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:3273:19244":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:13967:11463":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:7393:13854":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:940:13576":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:6086:7989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"14:165:19725":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:9624:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:4641:11717":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:12099:11012":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11536:12727":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"14:40:10997":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:4484:13987":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:7388:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:12050:1646":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:12045:801":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"11:703:13571":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"22:6932:8421":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43556:13637":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:4418:2583":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:7102:20658":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:6419:13009":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:7598:7473":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:44403:9418":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:11063:13492":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:11385:13124":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:4899:13995":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:3493:13916":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:10530:12934":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:4908:13996":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:10103:9731":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"22:1911:4812":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:43444:13633":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:9004:20720":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:21209:30573":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:1481:2412":{"crate_id":2,"path":["core","mem"],"kind":"module"},"18:521:24688":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:3923:13962":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:9968:13017":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:22253:12149":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:4:1117":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:2547:79":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:10965:25542":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"5:7326:2626":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:12032:1154":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:12008:11002":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"11:2368:2624":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:6533:13683":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:5995:12733":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:10715:13481":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:4696:13986":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"22:5150:7315":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:1466:12888":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:7874:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:3197:13657":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:5403:10848":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:3286:30814":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:5696:20650":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:12047:1647":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:7884:20662":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13555:11351":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:9124:2639":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:9100:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:22742:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"11:423:33494":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:363:2709":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:2904:19319":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:6228:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:21468:14050":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3089:13868":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"18:564:10737":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:6263:8028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10113:13448":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:7768:11682":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:4833:31713":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:13898:11446":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:3830:11705":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"22:6811:8413":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:0:1536":{"crate_id":1,"path":["std"],"kind":"module"},"1:9090:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:22460:13960":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:11287:9770":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"5:4395:9683":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:2556:143":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:40496:12997":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:1475:12889":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:9643:3255":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:13576:11358":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:5588:11679":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:41646:12389":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:45754:12425":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:9753:13436":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11317:10943":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:12025:11003":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:13203:11225":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:6687:12827":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:8270:13101":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:4401:7234":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:9824:20731":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:46187:12444":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:4364:7231":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6901:11685":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:22:739":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:1797:13647":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:1557:12891":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:580:3737":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:7502:19309":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:41503:12388":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:2892:2643":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:12209:11023":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"11:389:9652":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"11:2260:13580":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:434:10807":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:2955:19326":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:2842:2964":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:14523:11626":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:2194:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:9464:136":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:5955:7937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:46484:12453":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:6718:3510":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:4122:27013":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:7360:33516":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:7474:13555":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:4628:10614":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"18:96:24676":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:10293:10881":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"9:177:13782":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:11322:3075":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:10024:13435":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:6204:13513":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:5328:9660":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:12466:11093":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:3319:13944":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:21330:14055":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:11508:20723":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:44422:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:4578:7253":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:5374:13671":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"11:2394:9695":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"1:7919:13691":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:2596:11661":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:9456:33525":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:21919:30878":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:14461:11613":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:44621:13260":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:6560:9648":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"16:2472:11656":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:11379:13123":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:10462:3097":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:7582:11859":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"22:4975:7295":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:6318:11745":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:5963:13506":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:6401:11677":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:39635:28366":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:10673:13474":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:9637:3253":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"22:5953:7937":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:7462:11858":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:10479:10890":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:4032:13605":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:5049:11729":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:13102:13856":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:11905:13034":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:11382:10948":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:9278:10855":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:6536:14037":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"22:1672:4638":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:6155:9751":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}