{"root":"0:0:1802","crate_version":"0.9.9","includes_private":false,"index":{"a:2:2833:2795-0:211:1797":{"id":"a:2:2833:2795-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:233:2066":{"id":"0:233:2066","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:253:2075":{"id":"0:253:2075","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:192:1794":{"id":"0:192:1794","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2041","0:196:2043","0:198:2045"],"impls":["0:70","a:2:2793:255-0:192:1794","a:2:2833:2795-0:192:1794","a:2:2776:245-0:192:1794","a:2:8659:2735-0:192:1794","a:2:8660:2734-0:192:1794","b:2:2571-0:192:1794","b:2:2261-0:192:1794","b:2:2567-0:192:1794","b:2:2264-0:192:1794","b:2:2582-0:192:1794","b:2:2577-0:192:1794","b:2:3412-0:192:1794","b:5:682-0:192:1794","0:207","0:203","0:204","0:201","0:206","0:200","0:209"]}}},"5:5535:32526":{"id":"5:5535:32526","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7490:251"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:298:1801":{"id":"b:2:2577-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:245-0:192:1794":{"id":"a:2:2776:245-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2582-0:270:1798":{"id":"b:2:2582-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:298:1801":{"id":"b:2:2261-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:252:1793":{"id":"b:5:682-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3016","5:685:3017","5:686:3018"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12540:25072":{"id":"2:12540:25072","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12005:12902","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8660:2734-0:252:1793":{"id":"a:2:8660:2734-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12518:31847":{"id":"2:12518:31847","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43881:13017","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:663":{"id":"0:249:663","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12487":{"id":"2:12487","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12488:875","2:12489:2307","2:12490:31841","2:12491:31842","2:12493:31843","2:12496:24817","2:12497:31844","2:12498:345","2:12499:344","2:12500:2012","2:12502:9462","2:12504:25038","2:12506:25039","2:12508:31845","2:12509:31846","2:12510:25062","2:12511:25063","2:12512:13021","2:12513:13031","2:12514:12884","2:12515:30069","2:12516:30097","2:12517:27313","2:12518:31847","2:12519:30085","2:12520:25082","2:12523:25083","2:12526:25084","2:12529:3000","2:12533:2965","2:12537:25070","2:12540:25072","2:12543:25074","2:12546:31848","2:12549:31849","2:12552:25076","2:12555:25078","2:12558:25080","2:12561:25081","2:12564:2507","2:12567:31850","2:12570:31851","2:12573:31852","2:12576:31853","2:12578:31854","2:12580:31855","2:12582:31856","2:12583:31857","2:12584:31858","2:12587:31859","2:12590:25085","2:12593:25086","2:12596:31860","2:12599:31861","2:12602:31862","2:12605:31863","2:12607:24842","2:12608:26230","2:12609:24843","2:12610:24839","2:12611:24838","2:12612:31864","2:12614:13804","2:12615:31865"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:230:1796":{"id":"b:2:2264-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239:2072":{"id":"0:239:2072","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:252:1793":{"id":"b:2:2582-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173-0:76:1791":{"id":"0:173-0:76:1791","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1791","glob":false}}},"0:270:1798":{"id":"0:270:1798","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1729"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:255-0:270:1798","a:2:2833:2795-0:270:1798","a:2:2776:245-0:270:1798","a:2:8659:2735-0:270:1798","a:2:8660:2734-0:270:1798","b:2:2571-0:270:1798","b:2:2261-0:270:1798","b:2:2567-0:270:1798","b:2:2264-0:270:1798","b:2:2582-0:270:1798","b:2:2577-0:270:1798","b:2:3412-0:270:1798","b:5:682-0:270:1798","0:276","0:274","0:280","0:273","0:282","0:277","0:279"]}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12496:24817":{"id":"2:12496:24817","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11749:19169"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12570:31851":{"id":"2:12570:31851","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12189:19168","`DoubleEndedIterator`":"2:7571:126","prim@char":"1:12009:453","str::rmatch_indices":"2:12573:31852"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43767:13011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:721":{"id":"0:283:721","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9589:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9570:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12511:25063":{"id":"2:12511:25063","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12510:25062"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:252:1793":{"id":"b:2:2571-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:211:1797":{"id":"b:2:2571-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5538:24841":{"id":"5:5538:24841","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12610:24839"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180-0:211:1797":{"id":"0:180-0:211:1797","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1797","glob":false}}},"a:2:8659:2735-0:284:1795":{"id":"a:2:8659:2735-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83:2183":{"id":"0:83:2183","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:284:1795":{"id":"b:2:2577-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:1799":{"id":"0:73:1799","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12576:31853":{"id":"2:12576:31853","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272:1729":{"id":"0:272:1729","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:2573:747":{"id":"2:2573:747","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:663":{"id":"0:208:663","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12607:24842":{"id":"2:12607:24842","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8659:2735-0:298:1801":{"id":"a:2:8659:2735-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2571-0:270:1798":{"id":"b:2:2571-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:2064":{"id":"0:231:2064","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2263:2497":{"id":"2:2263:2497","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171-0:77:1789":{"id":"0:171-0:77:1789","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1789","glob":false}}},"2:2586:1592":{"id":"2:2586:1592","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41800:234","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1788":{"id":"0:74:1788","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9088:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5524:32524":{"id":"5:5524:32524","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7490:251"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:230:1796":{"id":"b:2:2577-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82:1787":{"id":"0:82:1787","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2183","0:84:2189"],"is_stripped":false}}},"0:92:2325":{"id":"0:92:2325","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12490:31841":{"id":"2:12490:31841","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5521:2686":{"id":"5:5521:2686","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7490:251"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:230:1796":{"id":"b:2:3412-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5536:32527":{"id":"5:5536:32527","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1943","`String`":"5:7490:251"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1943","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8659:2735-0:252:1793":{"id":"a:2:8659:2735-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3412-0:298:1801":{"id":"b:2:3412-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:235:2068":{"id":"0:235:2068","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:270:1798":{"id":"b:2:2264-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12512:13021":{"id":"2:12512:13021","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12009:453"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43587:12999","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12614:13804":{"id":"2:12614:13804","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4574:13804"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43925:12929","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:245-0:252:1793":{"id":"a:2:2776:245-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1005","0:92:2325","0:93:2332","0:94:2338"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12509:31846":{"id":"2:12509:31846","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12015:1510","crate::ops::IndexMut":"2:3077:13835","str::slice_unchecked":"2:12508:31845"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:1797":{"id":"0:211:1797","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:2050","0:213:2052","0:214:2055","0:215:2059"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:255-0:211:1797","a:2:2833:2795-0:211:1797","a:2:2776:245-0:211:1797","a:2:8659:2735-0:211:1797","a:2:8660:2734-0:211:1797","b:2:2571-0:211:1797","b:2:2261-0:211:1797","b:2:2567-0:211:1797","b:2:2264-0:211:1797","b:2:2582-0:211:1797","b:2:2577-0:211:1797","b:2:3412-0:211:1797","b:5:682-0:211:1797","0:228","0:225","0:223","0:226","0:220","0:217","0:218","0:222"]}}},"2:12533:2965":{"id":"2:12533:2965","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41657:199","prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:91:1005":{"id":"0:91:1005","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12502:9462":{"id":"2:12502:9462","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41657:199"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:252:1793":{"id":"b:2:3412-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:298:1801":{"id":"0:298:1801","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:2793:255-0:298:1801","a:2:2833:2795-0:298:1801","a:2:2776:245-0:298:1801","a:2:8659:2735-0:298:1801","a:2:8660:2734-0:298:1801","b:2:2571-0:298:1801","b:2:2261-0:298:1801","b:2:2567-0:298:1801","b:2:2264-0:298:1801","b:2:2582-0:298:1801","b:2:2577-0:298:1801","b:2:3412-0:298:1801","0:300"]}}},"2:12508:31845":{"id":"2:12508:31845","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12015:1510","str::slice_mut_unchecked":"2:12509:31846","crate::ops::Index":"2:3073:13834"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:457":{"id":"0:243:457","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1791":{"id":"0:76:1791","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12491:31842":{"id":"2:12491:31842","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12519:30085":{"id":"2:12519:30085","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43909:13020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:270:1798":{"id":"b:5:682-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3016","5:685:3017","5:686:3018"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5527:32525":{"id":"5:5527:32525","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7490:251"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12583:31857":{"id":"2:12583:31857","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5519":{"id":"5:5519","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5520:32523","5:5521:2686","5:5524:32524","5:5527:32525","5:5535:32526","5:5536:32527","5:5537:2599","5:5538:24841","5:5539:24840"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:192:1794":{"id":"b:2:2261-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12573:31852":{"id":"2:12573:31852","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12189:19168","`DoubleEndedIterator`":"2:7571:126","prim@char":"1:12009:453","str::match_indices":"2:12570:31851"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43785:13012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:284:1795":{"id":"b:5:682-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3016","5:685:3017","5:686:3018"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:192:1794":{"id":"b:2:2571-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8659:2735-0:211:1797":{"id":"a:2:8659:2735-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79:1792":{"id":"0:79:1792","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1729":{"id":"0:286:1729","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:12567:31850":{"id":"2:12567:31850","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12189:19168","`DoubleEndedIterator`":"2:7571:126","prim@char":"1:12009:453","str::matches":"2:12564:2507"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43839:13015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12582:31856":{"id":"2:12582:31856","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2043":{"id":"0:196:2043","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2567-0:284:1795":{"id":"b:2:2567-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77:1789":{"id":"0:77:1789","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12514:12884":{"id":"2:12514:12884","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43603:10823","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:245-0:211:1797":{"id":"a:2:2776:245-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8659:2735-0:192:1794":{"id":"a:2:8659:2735-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:80:1790":{"id":"0:80:1790","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3041:137","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3041:137","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3044:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:177-0:192:1794":{"id":"0:177-0:192:1794","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1794","glob":false}}},"2:12516:30097":{"id":"2:12516:30097","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12515:30069"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43900:13019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:270:1798":{"id":"b:2:2567-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8660:2734-0:270:1798":{"id":"a:2:8660:2734-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:112-0:327:2346":{"id":"0:112-0:327:2346","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2346","glob":false}}},"b:2:2567-0:230:1796":{"id":"b:2:2567-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:211:1797":{"id":"b:2:2261-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2833:2795-0:284:1795":{"id":"a:2:2833:2795-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12596:31860":{"id":"2:12596:31860","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12615:31865":{"id":"2:12615:31865","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4571:31865"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43934:12934","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3018":{"id":"5:686:3018","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2070":{"id":"0:237:2070","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:176-0:252:1793":{"id":"0:176-0:252:1793","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1793","glob":false}}},"a:2:8659:2735-0:230:1796":{"id":"a:2:8659:2735-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2793:255-0:192:1794":{"id":"a:2:2793:255-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:202:457":{"id":"0:202:457","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275:457":{"id":"0:275:457","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:298:1801":{"id":"b:2:2567-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12561:25081":{"id":"2:12561:25081","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:2079":{"id":"0:257:2079","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:212:2050":{"id":"0:212:2050","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8660:2734-0:230:1796":{"id":"a:2:8660:2734-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12526:25084":{"id":"2:12526:25084","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:663":{"id":"0:281:663","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12500:2012":{"id":"2:12500:2012","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41657:199"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:284:1795":{"id":"b:2:2264-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:230:1796":{"id":"b:2:2261-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:252:1793":{"id":"b:2:2577-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12549:31849":{"id":"2:12549:31849","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12189:19168","str::split":"2:12537:25070","prim@char":"1:12009:453","str::split_terminator":"2:12546:31848"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43685:13006","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12578:31854":{"id":"2:12578:31854","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12504:25038":{"id":"2:12504:25038","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:230:1796":{"id":"b:2:2571-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172-0:80:1790":{"id":"0:172-0:80:1790","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1790","glob":false}}},"2:12611:24838":{"id":"2:12611:24838","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12610:24839":{"id":"2:12610:24839","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2045":{"id":"0:198:2045","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12489:2307":{"id":"2:12489:2307","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:721":{"id":"0:297:721","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9589:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9570:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:245-0:298:1801":{"id":"a:2:2776:245-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:174-0:79:1792":{"id":"0:174-0:79:1792","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1792","glob":false}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178-0:284:1795":{"id":"0:178-0:284:1795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1795","glob":false}}},"a:2:8660:2734-0:298:1801":{"id":"a:2:8660:2734-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185-0:298:1801":{"id":"0:185-0:298:1801","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1801","glob":false}}},"2:12537:25070":{"id":"2:12537:25070","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12189:19168","`DoubleEndedIterator`":"2:7571:126","prim@char":"1:12009:453","str::split_whitespace":"2:12515:30069","str::rsplit":"2:12543:25074"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43617:12900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12599:31861":{"id":"2:12599:31861","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12608:26230":{"id":"2:12608:26230","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39604:24992","Self::is_ascii":"2:12607:24842"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39604:24992","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:721":{"id":"0:269:721","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9589:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9570:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2585:133":{"id":"2:2585:133","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32075:12022","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:215:2059":{"id":"0:215:2059","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:229:721":{"id":"0:229:721","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9589:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9570:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:270:1798":{"id":"b:2:2261-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2833:2795-0:230:1796":{"id":"a:2:2833:2795-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:179-0:230:1796":{"id":"0:179-0:230:1796","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1796","glob":false}}},"a:2:2793:255-0:270:1798":{"id":"a:2:2793:255-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2047"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2077":{"id":"0:255:2077","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:684:3016":{"id":"5:684:3016","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:93:2332":{"id":"0:93:2332","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:252:1793":{"id":"b:2:2567-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:192:1794":{"id":"b:2:2567-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12499:344":{"id":"2:12499:344","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12026:1616"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12513:13031":{"id":"2:12513:13031","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12009:453"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43593:13000","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:255-0:230:1796":{"id":"a:2:2793:255-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5539:24840":{"id":"5:5539:24840","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12611:24838"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:211:1797":{"id":"b:2:2264-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2618:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2338":{"id":"0:94:2338","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12523:25083":{"id":"2:12523:25083","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:245-0:270:1798":{"id":"a:2:2776:245-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12498:345":{"id":"2:12498:345","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12499:344","`u8`":"1:12026:1616"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:2795-0:270:1798":{"id":"a:2:2833:2795-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12510:25062":{"id":"2:12510:25062","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12511:25063"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12529:3000":{"id":"2:12529:3000","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41657:199","prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2052":{"id":"0:213:2052","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:8660:2734-0:192:1794":{"id":"a:2:8660:2734-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12515:30069":{"id":"2:12515:30069","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12516:30097"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43891:13018","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:2047":{"id":"0:71:2047","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:284:1795":{"id":"b:2:3412-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:289:457":{"id":"0:289:457","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:230:1796":{"id":"b:2:2582-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8659:2735-0:270:1798":{"id":"a:2:8659:2735-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8659:2735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2581:1594":{"id":"2:2581:1594","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41800:234","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8660:2734-0:284:1795":{"id":"a:2:8660:2734-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2582-0:192:1794":{"id":"b:2:2582-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:298:1801":{"id":"b:2:2571-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:1796":{"id":"0:230:1796","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2064","0:233:2066","0:235:2068","0:237:2070","0:239:2072"],"impls":["a:2:2793:255-0:230:1796","a:2:2833:2795-0:230:1796","a:2:2776:245-0:230:1796","a:2:8659:2735-0:230:1796","a:2:8660:2734-0:230:1796","b:2:2571-0:230:1796","b:2:2261-0:230:1796","b:2:2567-0:230:1796","b:2:2264-0:230:1796","b:2:2582-0:230:1796","b:2:2577-0:230:1796","b:2:3412-0:230:1796","b:5:682-0:230:1796","0:241","0:248","0:245","0:250","0:247","0:242","0:244"]}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12493:31843":{"id":"2:12493:31843","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12491:31842"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:245-0:230:1796":{"id":"a:2:2776:245-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:111-0:313:1919":{"id":"0:111-0:313:1919","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1919","glob":false}}},"2:12497:31844":{"id":"2:12497:31844","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:184-0:72:1800":{"id":"0:184-0:72:1800","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1800","glob":false}}},"2:12517:27313":{"id":"2:12517:27313","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43871:13016","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110-0:331:2333":{"id":"0:110-0:331:2333","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2333","glob":false}}},"2:12580:31855":{"id":"2:12580:31855","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12587:31859":{"id":"2:12587:31859","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:192:1794":{"id":"b:2:3412-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12506:25039":{"id":"2:12506:25039","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10279:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12546:31848":{"id":"2:12546:31848","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12189:19168","str::split":"2:12537:25070","prim@char":"1:12009:453","`DoubleEndedIterator`":"2:7571:126","str::rsplit_terminator":"2:12549:31849"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43667:13005","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:457":{"id":"0:219:457","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:255-0:298:1801":{"id":"a:2:2793:255-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:1802":{"id":"0:0:1802","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1787","0:170-0:74:1788","0:171-0:77:1789","0:172-0:80:1790","0:173-0:76:1791","0:174-0:79:1792","0:176-0:252:1793","0:177-0:192:1794","0:178-0:284:1795","0:179-0:230:1796","0:180-0:211:1797","0:181-0:270:1798","0:183-0:73:1799","0:184-0:72:1800","0:185-0:298:1801"],"is_stripped":false}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12555:25078":{"id":"2:12555:25078","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12009:453","str::splitn":"2:12552:25076","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43739:13009","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:2189":{"id":"0:84:2189","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:211:1797":{"id":"b:2:2577-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:295:663":{"id":"0:295:663","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12590:25085":{"id":"2:12590:25085","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2055":{"id":"0:214:2055","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:2570:2959":{"id":"2:2570:2959","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2544:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:255-0:284:1795":{"id":"a:2:2793:255-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181-0:270:1798":{"id":"0:181-0:270:1798","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1798","glob":false}}},"2:12520:25082":{"id":"2:12520:25082","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1795":{"id":"0:284:1795","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1729"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:255-0:284:1795","a:2:2833:2795-0:284:1795","a:2:2776:245-0:284:1795","a:2:8659:2735-0:284:1795","a:2:8660:2734-0:284:1795","b:2:2571-0:284:1795","b:2:2261-0:284:1795","b:2:2567-0:284:1795","b:2:2264-0:284:1795","b:2:2582-0:284:1795","b:2:2577-0:284:1795","b:2:3412-0:284:1795","b:5:682-0:284:1795","0:294","0:296","0:291","0:287","0:293","0:290","0:288"]}}},"2:12552:25076":{"id":"2:12552:25076","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168","str::rsplitn":"2:12555:25078"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43721:13008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:72:1800":{"id":"0:72:1800","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:195:1729":{"id":"0:195:1729","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:210:721":{"id":"0:210:721","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9589:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9570:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12602:31862":{"id":"2:12602:31862","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:2795-0:192:1794":{"id":"a:2:2833:2795-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:230:1796":{"id":"b:5:682-0:230:1796","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3016","5:685:3017","5:686:3018"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12605:31863":{"id":"2:12605:31863","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12150:132","`FromStr`":"2:12149:13984"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41800:234","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12149:13984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12149:13984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12593:25086":{"id":"2:12593:25086","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:255-0:211:1797":{"id":"a:2:2793:255-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:211:1797":{"id":"b:5:682-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3016","5:685:3017","5:686:3018"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261:457":{"id":"0:261:457","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:284:1795":{"id":"b:2:2571-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:747"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:270:1798":{"id":"b:2:3412-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:284:1795":{"id":"b:2:2582-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:211:1797":{"id":"b:2:2567-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:2959"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:685:3017":{"id":"5:685:3017","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12609:24843":{"id":"2:12609:24843","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2580:133":{"id":"2:2580:133","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:251:721":{"id":"0:251:721","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9589:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9570:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:1793":{"id":"0:252:1793","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:2075","0:255:2077","0:257:2079"],"impls":["a:2:2793:255-0:252:1793","a:2:2833:2795-0:252:1793","a:2:2776:245-0:252:1793","a:2:8659:2735-0:252:1793","a:2:8660:2734-0:252:1793","b:2:2571-0:252:1793","b:2:2261-0:252:1793","b:2:2567-0:252:1793","b:2:2264-0:252:1793","b:2:2582-0:252:1793","b:2:2577-0:252:1793","b:2:3412-0:252:1793","b:5:682-0:252:1793","0:262","0:266","0:263","0:259","0:260","0:265","0:268"]}}},"2:12543:25074":{"id":"2:12543:25074","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12189:19168","`DoubleEndedIterator`":"2:7571:126","prim@char":"1:12009:453","str::split":"2:12537:25070"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43635:12903","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12209:19166","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2330:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:298:1801":{"id":"b:2:2264-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3414:1607":{"id":"2:3414:1607","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39417:12210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170-0:74:1788":{"id":"0:170-0:74:1788","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1788","glob":false}}},"a:2:8660:2734-0:211:1797":{"id":"a:2:8660:2734-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8660:2734","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2793:255-0:252:1793":{"id":"a:2:2793:255-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:192:1794":{"id":"b:2:2264-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267:663":{"id":"0:267:663","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:663":{"id":"0:227:663","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12488:875":{"id":"2:12488:875","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12009:453"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5520:32523":{"id":"5:5520:32523","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1943","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1943","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5537:2599":{"id":"5:5537:2599","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7490:251"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7490:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:245-0:284:1795":{"id":"a:2:2776:245-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2582-0:298:1801":{"id":"b:2:2582-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:270:1798":{"id":"b:2:2577-0:270:1798","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1798","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2261-0:284:1795":{"id":"b:2:2261-0:284:1795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:168-0:82:1787":{"id":"0:168-0:82:1787","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1787","glob":false}}},"2:12612:31864":{"id":"2:12612:31864","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4573:31864"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43916:12935","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:192:1794":{"id":"b:5:682-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2277:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3016","5:685:3017","5:686:3018"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2577-0:192:1794":{"id":"b:2:2577-0:192:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:266","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2266:24656":{"id":"2:2266:24656","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:2795-0:298:1801":{"id":"a:2:2833:2795-0:298:1801","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1801","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2787:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2264-0:252:1793":{"id":"b:2:2264-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:24656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12564:2507":{"id":"2:12564:2507","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12189:19168","`DoubleEndedIterator`":"2:7571:126","prim@char":"1:12009:453","str::rmatches":"2:12567:31850"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43821:13014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:252:1793":{"id":"b:2:2261-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2497"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12558:25080":{"id":"2:12558:25080","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41655:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2325:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12584:31858":{"id":"2:12584:31858","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12009:453","self::pattern":"2:12189:19168"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12194:13579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12214:19165","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:1799":{"id":"0:183-0:73:1799","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1799","glob":false}}},"b:2:3412-0:211:1797":{"id":"b:2:3412-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1607"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2582-0:211:1797":{"id":"b:2:2582-0:211:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1592"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2786:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:2795-0:252:1793":{"id":"a:2:2833:2795-0:252:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2788:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:193:2041":{"id":"0:193:2041","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1729"]},"discriminant":null}}}},"paths":{"2:3289:2556":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"11:1145:13552":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"22:7554:8922":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:41868:203":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4783:7239":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13286:11203":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:43685:13006":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12598:11081":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:8926:20673":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:400:13387":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:4021:13573":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"22:7700:8951":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"22:5102:7275":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:4849:225":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"11:2334:3064":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:14013:11440":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10397:13427":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"8:0:1803":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:4417:11677":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"9:426:19600":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:582:10812":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"22:7614:7443":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:6079:7955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:22342:30358":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:9137:10818":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"22:4478:7208":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:43839:13015":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:4351:7197":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:46108:12411":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:41409:12347":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:6334:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:13693:11366":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:687:115":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:8541:13074":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:727:152":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:47985:12490":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:40092:12929":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:2498:13885":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"22:4912:7256":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"11:2461:12018":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:46946:12443":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:2884:19275":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:3049:19748":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:6128:7961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:7638:2667":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:40446:12963":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:42049:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"22:4845:7247":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"22:4762:7237":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:10811:27503":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:6403:12977":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:6086:7956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:7828:11842":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"11:0:2403":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:39356:224":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:12007:10969":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"22:1544:4594":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:8205:13667":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:5130:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"22:6057:7953":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:4666:7228":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:1761:3044":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"22:500:3694":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"22:5990:7950":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"18:0:2409":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:11086:13462":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:7252:2590":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"11:680:3064":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:4613:11683":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:4288:13636":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"22:4781:7239":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:11030:9736":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:14110:11469":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:12373:11025":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:6265:12893":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"5:3240:12861":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6415:12776":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:44368:13057":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:10820:27508":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:11407:20677":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:7437:30367":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:21325:3026":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:11573:12696":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:11719:20681":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"22:1594:4599":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:853:3064":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:261:9627":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:47874:12483":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:6120:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:4416:2550":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:15:2510":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:1703:4609":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:40433:12962":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:4616:10585":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:12834:212":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:9459:9731":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:9564:13401":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:2172:12867":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"15:394:19710":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"22:7602:7441":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:40659:12973":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:46476:12422":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:4892:13960":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:6753:12797":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:1924:13864":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:13085:11168":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:1779:13613":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:8167:13535":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:7597:33419":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:7677:218":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4556:7218":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8136:12544":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:5622:12887":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"22:7369:8760":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"22:6689:8375":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:2888:19274":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:11074:13461":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:7624:2796":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:9000:13679":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:0:2407":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:6818:12810":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:1557:3063":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:46232:12414":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11272:12690":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:10214:13420":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:7492:19266":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:14056:11455":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:9084:82":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12422:11050":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1067:13549":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"18:538:10702":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:39268:218":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:5376:19157":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11381:10915":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:21278:14024":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:9027:27502":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"22:5121:7278":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"11:2494:12878":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:40505:12968":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:8072:11881":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:14126:11472":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:14469:11584":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:11191:10904":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:1826:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:1752:12109":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:11970:13013":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:14378:11563":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12452:11058":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:14042:11448":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:5562:9650":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:5612:11648":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:4196:9650":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:41715:3063":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:3244:262":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:8382:12560":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:918:13539":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:8978:20675":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:9051:20654":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:3010:122":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:1259:12828":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:10561:12670":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"22:526:3696":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:11596:13094":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:11048:13456":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:276:1943":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:10750:10859":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:7391:20615":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:13876:11408":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:21463:12113":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:6443:9721":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:39431:12211":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:11389:13469":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:5730:13647":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:2216:13620":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"18:624:33437":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:14316:11541":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:21364:14015":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:4144:13947":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:6386:11714":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:8125:12543":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:12997:11155":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:5138:9658":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:164:9609":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"22:7386:8761":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:12034:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:1537:4593":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:3654:2592":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:11270:13586":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:4989:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:555:3700":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:4616:7225":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:4527:11680":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:22921:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:4830:7245":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:1573:12858":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"11:2473:12020":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:1444:2592":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:47959:12488":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"20:0:1804":{"crate_id":20,"path":["smallvec"],"kind":"module"},"2:4801:422":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"22:4900:7254":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11351:10911":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:10742:13079":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:8472:13983":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"0:0:1802":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"1:8870:12573":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:4004:2590":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:646:13806":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:4860:13577":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:6270:9686":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:12621:11085":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:10782:135":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6944:33418":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:6274:228":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"22:6069:7954":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"11:122:9616":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:10227:13421":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:11317:12589":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"11:666:3063":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:3472:30056":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:4350:273":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6792:12809":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40062:12932":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:5049:11696":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:43934:12934":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:5146:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:32115:11823":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:7992:19264":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"22:1689:4607":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:21140:13885":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:11295:12691":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"22:652:3753":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"22:1574:4597":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:10227:13991":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:4949:11693":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"22:6077:7955":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:10698:13447":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:3519:2590":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:46278:12416":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:22408:12919":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"14:7:13536":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13973:11431":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"9:507:12084":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:7664:2228":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:12671:10865":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:9048:12580":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:14448:11578":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:12876:11135":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:12810:11110":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:41386:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:14478:11586":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:45631:12389":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:21900:30602":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:2277:108":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:7980:13660":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:12214:19165":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"22:5042:7270":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"22:5895:7943":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:14308:11538":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:10520:12667":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:5017:11695":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:2618:121":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:45945:12402":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"22:4601:7223":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:12208:10990":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"9:330:12063":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:14024:11444":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:42010:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"22:6817:8381":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12737:11100":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:44340:13050":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:8205:20619":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:4468:13951":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:3185:13625":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:22415:12134":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:507:3695":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:10752:13584":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:840:3063":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"11:822:13541":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:1507:4589":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13981:11432":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:4835:11689":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:12030:1612":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"18:548:151":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"22:6739:4733":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:5967:7947":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:8199:13016":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:10507:12666":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"11:1850:2590":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:41773:2732":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:11332:13089":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:922:13540":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"11:2351:2592":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"5:3180:12859":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"13:110:33405":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"11:1855:9662":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:6742:12796":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:9521:13400":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:4288:2540":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:3907:13926":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:1840:9138":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:14134:11473":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"13:226:12017":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"22:6969:2871":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"1:3814:13634":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:8807:12570":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:22690:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:9589:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:12846:11116":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:8260:13070":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:41723:3064":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:4914:7256":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:9921:13408":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:6764:4718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:43925:12929":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:13826:11391":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:10135:13685":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:5963:13474":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"15:0:2406":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:2866:19273":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:10316:10853":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"11:1072:33404":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:5757:13648":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:13298:11210":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:9390:134":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:9165:28332":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:47970:12489":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:6352:12772":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"22:4674:7229":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:14076:11461":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:13914:11416":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"22:573:3703":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"1:12027:1613":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:12010:1632":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:2173:3027":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:2948:19284":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:11742:10943":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:5474:9650":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:12237:11001":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:932:13822":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:3185:33342":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:5217:210":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:5609:2209":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:5945:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:4053:11675":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:7492:12829":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:10631:12903":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"22:5050:7271":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:8899:14005":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"22:595:3706":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"5:3671:9627":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7002:9725":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"18:681:12645":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:8970:27274":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:11845:10954":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:10661:13441":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:641:13608":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:10075:13684":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:9607:13402":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:21796:14025":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:5548:13989":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"20:363:2597":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"16:2810:11637":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:2133:2658":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"11:759:12856":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:13010:11156":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:9619:125":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:12959:11151":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:21573:14020":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:11211:159":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"22:4486:7209":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:14001:11439":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"22:4514:7212":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:3225:13627":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:14100:11466":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:20974:30598":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:8514:13071":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:10265:13422":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:44249:13047":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:3957:13928":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:9621:3217":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:5004:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:7990:13911":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:11023:10898":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:40372:12954":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:12465:11060":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"22:4743:7235":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6531:12789":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:22317:12121":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:2962:33049":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"18:652:10697":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:7378:12878":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:10718:13693":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"11:1687:154":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:48064:12495":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:6721:20612":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:2504:11624":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"22:5972:7948":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:12098:10979":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:12020:695":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:22441:13924":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:7622:7444":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:3596:3064":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5044:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:5939:12737":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:533:3697":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:41859:2592":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:2939:19282":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"22:7655:7449":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:2568:9707":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:22266:12117":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"22:5128:7279":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"14:187:19688":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:1764:660":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:9570:234":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:20987:30706":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:9951:12985":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"18:671:13384":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:11121:12569":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:4523:7213":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12531:11070":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:12911:11146":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:11639:10904":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:10738:13583":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:5661:12710":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:9896:20689":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:43525:13605":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12698:11095":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:13611:11355":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:4721:13939":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"22:5883:7941":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"11:1869:12859":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:3307:13908":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:6573:14003":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"6:1501:4588":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:21449:14014":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:43575:12998":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:13451:11232":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:40645:12972":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:9852:20688":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:43433:13602":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:7618:13885":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:4822:31785":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"22:4576:7220":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:2836:2933":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:4932:7258":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:1558:4595":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:20959:30598":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:863:2592":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:10792:124":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:4395:9650":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:4388:7200":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:7616:7443":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:44229:13046":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"22:5002:7265":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:4884:7252":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:4776:7238":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:6827:9672":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:4602:13930":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10430:13430":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:12983:11154":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:2325:208":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:4870:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:6243:13500":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:2143:12865":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:3565:13398":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:12645:11086":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:40256:13594":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:8281:11892":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:11719:19332":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"10:44:12026":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:43603:10823":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:8837:13674":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:1494:13539":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:8775:13672":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:7660:11830":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:4641:11684":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:4930:7258":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:9172:10819":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"7:78:19591":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:6485:11645":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:9271:30859":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:43483:13603":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:364:2675":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:42937:155":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"11:2479:33395":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:11958:13135":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:7574:9662":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"11:992:12828":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:7692:13809":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:14346:11548":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:2219:3033":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:4860:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:13422:11212":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:42414:3217":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:42285:2562":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"22:1701:4609":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"22:6811:8380":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"18:644:10697":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:8794:20669":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:5477:13644":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"5:1484:13553":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:2330:130":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"22:5953:7904":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:44206:13038":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:9276:13759":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:22822:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"9:52:13740":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10646:10920":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:6226:13496":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:3261:19208":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:23020:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"22:4541:7216":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:6425:12777":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"11:1541:13554":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:4738:7234":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:46634:12437":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"22:1672:4605":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:9175:12581":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:7496:19265":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:42920:12992":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:2830:2931":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:12252:11007":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"22:6084:7956":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"11:389:9619":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:434:10774":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:3041:137":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:10628:12677":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"22:1716:4611":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:2463:12102":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:43909:13020":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:6361:12773":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:9571:3216":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:7725:13853":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"22:6796:8378":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"14:160:13536":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:12859:13589":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"14:0:2405":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:47728:12480":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:3044:138":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:6587:2592":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:4019:13933":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:2832:11638":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:6691:8375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:6226:2209":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:40404:12959":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:10924:12081":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:7318:11804":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"3:0:478":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:563:3701":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:6844:11752":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:10340:10855":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:7436:11824":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"22:43:2873":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"2:30321:2601":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:47950:12487":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:2788:113":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:46254:12415":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:6335:14101":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"22:6866:8383":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:3264:13629":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:2872:11780":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"22:7608:7442":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:13228:11194":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:7621:20616":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:2223:13868":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"22:4399:7201":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6545:11717":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"22:5021:7268":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"22:1556:4595":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:582:2947":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:1013:9627":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:44428:19371":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"22:1662:4604":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"18:574:10697":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:8211:13669":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:8713:20667":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:913:13553":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:11311:3042":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:5015:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2904:19277":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:7041:12820":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:4764:7237":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:44611:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"18:515:10700":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"20:281:2592":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"22:4521:7213":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:1674:4605":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:13101:11172":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:43881:13017":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"11:1842:3063":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"14:31:13536":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:6560:9615":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:2931:19280":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"22:4839:7246":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:14221:11522":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:542:3698":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:2696:11632":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:42703:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:12172:10985":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:10301:109":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"5:4428:9652":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:4546:13956":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:11226:12687":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:14335:11547":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:6514:9627":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:3332:9662":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:43423:12907":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:5140:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:4034:9627":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:23500:244":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"11:1882:12861":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:1429:154":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:9650:10848":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:5948:2209":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:8195:12847":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:504:13388":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:5009:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:8963:2661":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"11:298:12850":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"18:755:12658":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:2788:11636":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"14:221:11970":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:4603:7223":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:495:2882":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:501:3694":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:12062:10972":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:2305:19745":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:13546:11315":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:48087:12496":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"11:1876:12860":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:49950:14027":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:2284:19719":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:3915:11674":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"15:288:19700":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:6189:12770":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"22:6932:8388":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:8134:12846":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12945:11149":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:40424:12961":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:4883:13959":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:10714:13449":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"22:7341:3650":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:6467:12780":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"11:796:9662":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:21575:12113":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:344:2595":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"1:10802:12544":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:308:1562":{"crate_id":1,"path":["std","thread"],"kind":"module"},"20:350:2596":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"17:10012:10848":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"22:4906:7255":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"11:1092:13550":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11971:10967":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:12576:11080":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:11951:10966":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"22:6664:4546":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:12024:10970":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:7834:13656":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:41932:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:6788:14008":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:4446:13950":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"22:4787:7240":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:4455:7046":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"22:4753:7236":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:11453:13632":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:8765:20668":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:1632:4601":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:6687:12795":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:25902:275":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"22:5066:7272":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:9013:12577":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:9126:2606":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:11024:9735":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"22:6167:7963":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4847:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:8845:2592":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:9878:12898":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"10:0:2402":{"crate_id":10,"path":["adler"],"kind":"module"},"1:8851:12572":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:2722:11633":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:7308:2538":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:13897:11413":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:6101:9650":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:6898:8385":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:7360:33421":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"14:215:12848":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"22:6911:8386":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"22:6157:7962":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:11244:10936":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:1734:4612":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:7679:7451":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:21888:12115":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:1562:13555":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:11493:13633":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:11147:27506":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:7610:7442":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:1718:4611":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:40011:12930":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:10515:13626":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:5384:20605":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"7:31:19584":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:20989:30704":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:9078:242":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"11:785:2590":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:14499:11589":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:2881:11640":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:7523:12833":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"11:423:33399":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:6279:11709":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"22:4798:7241":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:6156:12767":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:7067:12826":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:43496:12909":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:1778:9662":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:3255:19209":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"22:1637:4602":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:943:13544":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"20:97:2591":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"2:43561:12379":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:9614:116":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:8216:13920":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:12473:11062":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:2541:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:7533:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"5:4076:3064":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:6711:8377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:13632:11360":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:1475:12857":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:32075:12022":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:10929:10892":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:40048:12341":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:13259:11200":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"22:5980:7949":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:1576:4597":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12765:11105":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:10279:247":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:45856:12398":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:4939:1069":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:47336:12476":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"18:599:33434":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:3232:13396":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:47130:12445":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:7894:13658":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:3350:12979":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"22:4471:7207":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"22:4822:7244":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"22:5115:7277":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:22302:30368":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:7479:9659":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:11586:10935":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4428:7202":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:10519:12902":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:2644:11630":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:10084:13414":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:12024:800":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:1104:33333":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:589:13803":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:4352:2547":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:9003:20676":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:5867:7940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:3073:13834":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:2428:11621":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:40874:12979":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:4719:13938":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:7702:8951":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:43767:13011":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:12111:10981":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:2928:234":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"6:1596:4599":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:10948:27516":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:3150:27056":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:46056:12409":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:46556:12423":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:8265:13949":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"22:4858:7249":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:7515:13701":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:45908:12400":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:3214:12858":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:14522:11593":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:14536:11596":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:4005:13931":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"5:0:316":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:41634:12358":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:44640:12387":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:41706:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:44356:13054":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:14083:11462":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:2544:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"22:6246:7994":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"18:614:33435":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:40166:104":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:10534:12668":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"22:5908:7944":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:5031:7269":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:11735:13587":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:4166:9650":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:40363:12952":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:5897:7943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:11162:10900":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:949:13546":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:7708:11661":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:11910:10963":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:6520:14001":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:12305:11021":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"22:5138:7280":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:2914:19279":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:44144:13036":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:2178:13392":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:41843:3063":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:7869:135":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"22:4975:7262":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:9945:10837":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:8294:133":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"18:96:24631":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"22:4533:7215":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:12267:11013":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:7388:8761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:22855:198":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:2499:19230":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:6041:20609":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:45755:12394":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:4676:7229":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4724:7233":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:6968:20613":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:13838:11394":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:1019:2318":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"5:2245:12872":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:2037:12864":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"22:5919:7945":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:8029:30857":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"14:202:19182":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6583:12791":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:30072:13923":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4745:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:7515:13571":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:2744:11634":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:14163:11480":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:1738:3045":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11327:12693":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:11281:10906":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:5743:12717":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:2897:11781":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:9488:33432":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:6071:7954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:40119:12937":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"22:5889:7942":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:5673:11647":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:6107:7958":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:4998:7264":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:12196:10989":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:2919:11785":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:41971:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:8186:10823":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:2972:32831":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:40845:12975":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"16:2907:11641":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:7768:11649":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:13949:11422":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:44537:227":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:1682:4606":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:39312:223":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:5634:2594":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:6804:8379":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10726:13450":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"22:5013:7267":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:43470:12908":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:4463:2551":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:44117:13035":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"22:6896:8385":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:7355:28050":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:4027:13934":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:4988:9650":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"22:1630:4601":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:10427:3063":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:11284:13085":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:7722:11651":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:43444:12377":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:12685:11094":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:8781:206":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:1528:4592":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:42949:12372":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"11:324:12853":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:39410:13593":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:47996:12491":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:6879:11756":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:7574:9729":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:6934:8388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:14434:11571":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:11201:12679":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"9:393:19599":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:13162:11187":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:42657:69":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"11:427:33400":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:11991:27512":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:13487:11263":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:4128:13945":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:9242:10821":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:5712:12712":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:4211:1925":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:8848:20671":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:3764:11670":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8993:13678":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:40395:12958":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:3461:11668":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:6228:7113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:6960:27535":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:22012:14013":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:2406:11620":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"22:4547:7217":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5111:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:4549:7217":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:47478:12477":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:1075:13389":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:9531:33428":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:1691:4607":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"9:237:12372":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:416:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:9190:703":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"2:0:534":{"crate_id":2,"path":["core"],"kind":"module"},"6:6927:8387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:1549:9650":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:32111:13591":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:2472:11623":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:6318:11712":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:8594:20655":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:2380:11619":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13274:10907":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:40883:9688":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:3274:30698":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:7668:7450":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:2367:209":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:5423:109":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"9:0:2401":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:5545:3416":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:6136:10497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:8769:13579":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10059:10841":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:35:9623":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4480:7208":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:6813:8380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:5802:9713":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42127:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:13575:11325":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:30415:30350":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"5:7453:12882":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:39252:221":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"22:6261:7995":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:2933:19746":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:4375:7199":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:3023:2557":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:2925:11786":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:1472:2378":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:46086:12410":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:13685:11365":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:8659:20653":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:536:12698":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"22:4828:7245":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:784:9630":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:5435:11701":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:4901:856":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:21441:13885":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:1058:13548":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:2161:637":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:42421:3219":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:3410:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:4033:13574":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:44352:13053":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:40495:12967":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11337:20800":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:11448:20678":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:40246:9680":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:12033:1219":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:1561:2592":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:926:13541":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:6929:11761":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:7741:13655":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:2368:13871":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:2214:134":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:3034:1989":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:42959:12994":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:3655:10727":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:6517:13651":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:10920:13655":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:48034:12493":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"22:5144:7281":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"18:481:12640":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:7529:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:12074:10975":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:505:2658":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:40133:19226":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:548:3699":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5052:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:2876:2607":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:1290:13548":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"22:6098:7957":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:7568:11659":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"5:5791:259":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:3488:13900":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:41731:2592":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:8331:12550":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:47666:12479":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:4360:13637":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:4717:13936":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:4535:7215":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:1525:13560":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:12032:1672":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:12888:11137":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:8821:12571":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:40032:30346":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:12123:10982":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"22:6680:3571":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:7862:12836":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:7692:8950":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:10672:13442":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:5616:13062":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"13:0:2399":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:7590:9666":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:1466:12856":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:12007:404":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:5104:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"18:590:10705":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:12830:11111":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:10596:13581":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:12990:9703":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:43635:12903":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:9780:13405":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7582:11826":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:2793:255":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"22:4806:7242":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:2644:13623":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:9574:33433":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:9985:13412":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:22128:12912":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:10637:12678":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"22:4852:7248":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:13244:11196":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:2501:13621":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:10747:13067":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"22:6226:7113":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:11174:2605":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:527:3696":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5992:7950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:1521:4591":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"11:357:9617":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:5997:19563":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:4045:106":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:7054:12823":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:9070:10815":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:12496:11066":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:8364:13970":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:44001:19180":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:11062:13460":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:30343:69":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:5723:13645":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:22325:12122":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:4473:7207":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:6047:9714":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:22723:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:7839:13067":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:9625:3219":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:12184:10988":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:1376:97":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:5105:211":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:10278:13423":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11991:10968":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"18:707:12651":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:1672:1159":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:1931:706":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:45926:12401":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:7598:7440":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:5372:13641":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"18:719:10715":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:11535:12695":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:43593:13000":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:9207:10820":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:41592:13069":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"4:0:2400":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:2450:11622":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:10760:13084":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:884:12857":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:4208:13635":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:4529:7214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"9:450:19598":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:6456:12779":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:1140:33334":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:2798:2554":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13554:11318":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:7736:11833":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"22:6941:8389":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:39604:24992":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:22987:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:6171:214":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"22:4608:7224":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:6893:11758":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:7423:12879":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:14118:11470":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:5634:12706":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:48011:12492":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:13215:11193":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13188:11189":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:1585:12860":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:1496:4587":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:4015:13932":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10616:12674":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"22:122:3358":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:6873:9724":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:44348:13052":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:46156:12412":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:6017:20608":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:40303:13596":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:41851:3064":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:7782:12835":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:13567:11324":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:7343:3650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"11:2074:13548":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:41556:30345":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:6499:11662":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:40183:30367":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"18:690:12648":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:7006:13513":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:4401:7201":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"22:494:2882":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"1:8915:14007":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:7466:12885":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:4461:7206":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:4736:7234":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:12014:1478":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:45825:12397":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:40868:12978":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:12658:11089":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"20:118:1927":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"16:7474:13523":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:6083:19718":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:21311:14019":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:12415:116":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:841:13544":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4516:7212":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"22:5083:7274":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:13792:11388":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:6781:4716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:4168:2560":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"22:6835:8382":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:8116:11822":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"22:1648:4603":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:8309:3477":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:8050:11880":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:3830:11672":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"22:4362:7198":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:4775:9711":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:534:2662":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11358:20801":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:3802:9662":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"6:4584:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:10966:12571":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:4908:7255":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:10318:24664":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:5861:2590":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:7745:13591":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"22:1568:4596":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"9:177:13750":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2258:101":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:4800:7241":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:1817:13615":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:21192:3026":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:7713:13063":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:2864:11639":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9867:10834":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"18:491:12641":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4902:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:9823:20687":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:6819:8381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:22429:12922":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:10451:3064":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:6012:7951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:6913:8386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:45785:12395":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:955:13547":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:2766:11635":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:11815:10950":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"22:562:3701":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"2:32223:2936":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:22954:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:4283:2539":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:2845:1931":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:4106:29881":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"22:7620:7444":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:43891:13018":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:47912:12484":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"22:4432:7203":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6346:13511":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:261:13386":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:40334:12948":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:4878:7251":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:7128:12577":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:7651:7448":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:9254:9138":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:11367:10912":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"14:40:10964":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:22010:13885":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:580:3704":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:30521:30337":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:5285:125":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"22:4453:7046":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:871:12856":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:7284:2731":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:22888:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:39378:13815":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:6259:12894":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"16:5588:11646":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:6961:8390":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:14033:11447":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:9629:214":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:10292:10848":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2892:19276":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:6587:9722":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"22:7363:8759":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:12021:801":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:12149:13984":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:4578:7220":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:12015:1510":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:44547:235":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"22:6105:7958":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:483:9705":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"22:5109:7276":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:3378:9650":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:14173:11485":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:7504:12886":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:10186:12662":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:42407:3218":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"22:7643:7447":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:9454:13656":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:11124:13465":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"11:2286:13549":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:11749:19169":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:2783:2794":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"11:772:12857":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"18:113:24632":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:5068:7272":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"22:474:3691":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"1:11290:13698":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:8253:13069":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:44372:9385":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:1076:13552":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:4889:11691":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:9752:13404":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:4365:9652":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"7:0:1662":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:40325:12946":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11473:10788":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"22:1499:4588":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"22:5073:7273":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"11:1010:13548":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:40481:2077":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:41792:213":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:14401:11564":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:1697:4608":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:10547:12669":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:6268:33422":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"22:1519:4591":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:10933:13644":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:44555:215":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:8097:12840":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:10468:10856":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:10456:13436":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:5121:11698":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:40852:12976":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:8938:12576":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:824:9633":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:9086:10816":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:5891:7942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"18:736:24641":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:44181:13037":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:10077:9694":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:11155:9385":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"11:344:33396":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:6862:2976":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:3965:13929":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:9088:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:7462:11825":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:4854:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:12022:798":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:10383:13426":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"18:636:10714":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:11589:13094":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:0:2404":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:14355:11550":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:6263:7995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4755:7236":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:483:3692":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:9838:155":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:46916:12442":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"22:1911:4779":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:1674:9627":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10370:13425":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:9623:3218":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:3144:98":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:11582:29983":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"22:4614:7225":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"18:564:10704":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:13113:11174":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:5088:11697":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:7286:2592":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:2150:20734":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:11316:10910":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13055:11165":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:10494:12664":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:21190:30424":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:1710:4610":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:6666:9627":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:5696:20606":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:588:3705":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:6817:9670":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:4543:7216":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:12934:11147":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:1591:4598":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:2339:11612":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"22:4722:7233":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:3038:136":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:8154:13532":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:5023:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:5419:10816":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4647:7227":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:13778:11384":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:4862:11690":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4677:13961":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"11:2317:3063":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:3441:13397":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"11:101:1944":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:4841:7246":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"22:587:3705":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"2:13083:13823":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:39417:12210":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:44391:127":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:2051:13561":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:5680:12888":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:5408:13643":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:5982:12740":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:9277:10822":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:8895:20672":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:40126:12938":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:6100:7957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8169:12945":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:7643:2668":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:40901:12980":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:5866:12729":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:41655:201":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:4610:7224":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"11:703:13539":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:41800:234":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:14514:11590":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:21006:30703":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:1986:204":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:11793:9743":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:4364:7198":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:11267:9737":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:7555:9727":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:5885:7941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:3971:13930":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:9102:10817":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:2596:11628":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:44360:13055":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:2359:11618":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4566:7219":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:22:734":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:41893:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:7639:7446":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:7792:20617":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"22:6126:7961":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:46980:12444":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13802:11389":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:2629:133":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:20946:2947":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:40283:12908":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"22:5007:7266":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:13890:11411":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11173:20799":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:7248:11822":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"22:6220:7993":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:13028:150":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"22:7637:7446":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:8432:12372":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:6468:2590":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:13148:11186":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"22:532:3697":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"6:5982:7949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11306:10907":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:45886:12399":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:4595:7222":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:2961:3016":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"22:4684:7230":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:5059:13638":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:3463:3216":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:6376:20610":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:10440:13431":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"22:4527:7214":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:10092:9698":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:48126:12497":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:2833:2795":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:21381:13885":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:10903:13452":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:207:9625":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:1304:13552":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:46792:12440":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:10512:13624":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:11872:10961":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"11:817:13553":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"22:4937:1069":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"22:6959:8390":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:10685:13445":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:1564:2590":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:2366:3019":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:4628:7226":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:5974:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"22:4447:7205":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:1635:636":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:10165:20707":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:14068:11458":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"22:1589:4598":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"19:0:1100":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:4449:7205":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:1514:4590":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:44416:2612":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"22:4953:7260":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:45807:12396":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:42166:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:4137:2559":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:9933:13409":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:11788:10947":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:39334:222":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:6666:4546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"18:609:13379":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4814:7243":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:11000:10897":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:11347:13134":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:12260:19174":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:46710:12439":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"11:2368:2590":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:622:2196":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:10724:13009":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:11137:13466":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:46870:12441":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"22:6887:8384":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:5928:7946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:5150:7282":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"11:483:152":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"22:7596:7440":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:5372:19156":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:1642:8961":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"22:1512:4590":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:5859:7939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"22:5939:7903":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"22:1695:4608":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"9:486:19597":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:2361:202":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:2969:19747":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11661:10938":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:40276:13595":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"6:5033:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:8661:2733":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8952:13675":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:897:3063":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12437:11054":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:6621:241":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:2838:110":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"20:57:2590":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"17:10949:13455":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"22:5926:7946":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:9711:33430":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13922:11418":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:39292:220":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:2670:11631":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10980:10848":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:5921:7945":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:8957:111":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:21397:14010":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:7534:11657":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:3234:19285":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"9:357:19613":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"18:531:12642":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:44023:13023":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:12029:1615":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"22:4812:7243":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:4664:7228":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:2895:9710":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:46375:12419":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:6222:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7269:33423":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:4236:3063":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:43785:13012":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:41472:12356":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:1604:4600":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:22290:12918":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:7111:29878":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:1275:13549":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:4941:13966":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:9660:33425":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:13135:11185":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:44364:13056":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:2964:12105":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11215:12683":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:5910:7944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:3249:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:7342:33424":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:10097:13415":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:4986:11694":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:6915:11653":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:21547:14011":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:6569:11650":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:10669:13582":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:42088:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4893:7253":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2382:13874":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"5:7390:13821":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:40199:12943":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:10410:13428":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:43900:13019":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"22:4564:7219":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:14090:11463":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:3262:13628":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:2935:19281":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:40084:12934":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:10737:13077":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:4789:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:7331:2592":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:14269:11523":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:1842:13616":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:2551:265":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:10447:1939":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:12513:11069":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:46010:12404":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:40152:12342":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:2582:9694":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:3326:2558":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:7718:13064":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"22:4554:7218":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:5123:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:8179:12971":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:5760:20607":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:6114:7959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:4279:229":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:596:3706":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:43587:12999":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:10603:12673":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:9631:3221":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:11934:10964":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:638:13606":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"22:7631:7445":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"11:1051:19675":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4612:10581":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:7846:12504":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:40100:12935":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"22:4996:7264":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:10060:9693":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:9633:3222":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"14:165:19681":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7102:20614":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:3206:12860":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:6047:7952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:2538:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:8181:11663":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"3:234:234":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"22:6716:3477":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:22181:12913":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:12012:1120":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:13966:11430":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:21178:14018":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"11:2423:19671":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:30891:203":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"20:331:2594":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"17:9959:13410":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:1913:4779":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"22:4774:7238":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:2943:19283":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:9416:3232":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:42712:69":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:4719:11685":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:6798:2594":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13758:11376":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:7272:33340":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:897:2590":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:9830:151":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:44628:13060":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:4:1083":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"11:2238:12828":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"11:2394:9662":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:9762:33429":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:5322:11699":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:6741:4733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:47836:12482":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:4362:2548":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:4745:11686":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:12016:1597":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:6171:13649":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"22:1602:4600":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1650:4603":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10916:13453":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:8148:13884":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"22:488:3693":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"2:43344:13600":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:42912:12990":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:12025:796":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"22:4349:7197":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:6123:9703":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"22:4696:7231":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:40465:12965":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:4686:7230":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:11235:12688":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6600:20611":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:4968:7261":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:2548:11626":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:11687:20680":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:2604:13622":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"18:766:24642":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:45677:12391":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:9912:13407":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7554:11658":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:45611:12388":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12086:10976":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:13667:11361":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:2841:2935":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"22:118:3357":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"1:12028:1614":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:62:3303":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:3077:13835":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:6682:3571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:32129:2548":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"5:7323:2592":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:10558:13580":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:42675:114":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:9107:2605":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"22:5827:7875":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"22:6709:8377":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"22:4494:7210":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:7613:13530":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11393:133":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:42752:75":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:7544:12834":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:2670:13572":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"16:5830:12723":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:7988:3065":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:4640:19219":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"5:5976:9658":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:11761:10946":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:6700:8376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:13202:11192":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:2850:2608":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:8239:11823":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:2225:33343":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:12724:11098":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:4614:10583":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:41426:12349":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:40859:12977":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"22:4582:7221":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:14420:11569":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"15:327:13737":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"18:507:10697":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:7015:11766":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:6837:8382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12225:10998":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:7503:11656":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:2255:100":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:10476:12900":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:2535:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"5:6959:9673":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:5602:228":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"22:4438:7204":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11261:12689":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"22:541:3698":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"2:46422:12420":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:6401:11644":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4947:7259":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:43916:12935":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:6169:7963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:4157:13948":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:39237:12927":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"22:6698:8376":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:7232:2592":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"22:1535:4593":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:6059:7953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:7027:30091":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:11013:9734":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:12019:693":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:6901:11652":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:2012:13391":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"11:2058:12828":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:47930:12485":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:5648:13472":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:7262:9638":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:1505:13540":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:6658:3741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:21234:14023":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"22:7677:7451":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:4585:11682":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:1568:9662":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"22:7666:7450":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"22:4945:7259":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:43152:12376":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"22:6045:7952":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:13868:11405":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:9617:33426":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:1579:12859":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:4977:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:4955:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:40312:12945":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:6798:8378":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:43413:13601":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:6915:272":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:2303:13557":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:12280:11017":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:5955:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:11954:13010":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:42967:12995":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"11:2165:1939":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:43404:12905":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"22:6762:4718":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:12785:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:13989:11433":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:149:9613":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"11:860:13546":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"22:7649:7448":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:42246:95":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"18:699:12649":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:7571:126":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:489:3693":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:3223:13626":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:12008:1002":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:3647:13922":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:6984:9676":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:7556:8922":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:7513:12832":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:13174:11188":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:1546:4594":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2860:11776":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13906:11414":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:4344:11676":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:2526:11625":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"22:579:3704":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"16:5905:12731":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:11886:10962":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:46680:12438":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:5941:7903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:43667:13005":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5829:7875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:11111:13464":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:9089:89":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:44336:13049":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:1895:13617":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:21004:30701":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:1516:218":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2776:245":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:22756:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:10788:20776":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:7884:20618":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:1590:12861":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:6943:8389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:11931:13007":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:6407:13650":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:10056:13615":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:10420:10767":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:9447:134":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:7657:7449":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:256:13385":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:44195:19181":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:6696:11740":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"18:727:10718":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:14145:11477":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:40005:12929":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:7490:251":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"22:4882:7252":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"22:4645:7227":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:7604:7441":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:11237:13585":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"11:868:13547":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:42928:12993":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:1044:12828":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:7371:8760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:11570:12590":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:475:3691":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:11980:13811":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:8524:3063":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:2968:32832":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:44590:13228":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:9372:10826":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:6889:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:4434:7203":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:6718:3477":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"22:6925:8387":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"18:660:13380":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:43167:12996":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"11:2085:13549":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:678:258":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"22:6118:7960":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:6139:9718":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:40213:7996":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:8825:20670":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:6081:12889":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:45723:12393":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:22363:30365":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:14156:11478":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:1664:4604":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:1983:205":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:4921:11692":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:3888:11673":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:8660:2734":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:7365:8759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:10139:20706":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:8115:12843":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:8953:20674":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:2786:253":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:880:9635":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"15:306:19701":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"10:36:12025":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:45655:12390":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:3144:28591":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:12009:453":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:7302:12877":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:1639:4602":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:4506:7211":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:6960:13512":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:42730:133":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"22:5857:7939":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:5028:13638":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11507:20679":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:8793:12569":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"22:4504:7211":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:10410:13672":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:32122:13592":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:12005:12902":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"22:547:3699":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46202:12413":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:11617:10936":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:5574:11643":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:3943:13927":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:9455:33427":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"21:0:1803":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"2:44069:13033":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:14460:11580":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:3583:3063":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:3600:11669":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:3570:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:6261:13508":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:10962:10895":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"22:4426:7202":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:4922:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:41443:13921":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:7902:13659":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:11430:9739":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:47790:12481":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:10077:13683":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"11:1127:13551":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:10036:10839":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:39190:19141":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"17:13851:11400":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"18:521:24643":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:654:3753":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:13816:11390":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"22:568:3702":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"5:3722:12864":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:574:3703":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"22:4920:7257":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:3913:13925":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:4698:7231":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:43395:12904":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:629:13558":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:44653:13061":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:3709:13632":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"22:61:3303":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"1:358:2674":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:9073:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:12711:11097":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:42428:3220":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"22:6779:4716":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:2547:266":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11359:13091":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:2992:19140":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"18:80:24630":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"22:4891:7253":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:3737:13561":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"22:4868:7250":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:7985:2600":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:12750:11102":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13710:11367":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:7829:9485":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:41615:12357":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:7707:13810":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"22:6112:7959":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:2855:11779":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:47588:12478":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"21:4:1803":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"11:1036:13549":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:2618:11629":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:10269:13885":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:123:3358":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6159:7962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:5328:9627":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:2209:13395":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:0:1502":{"crate_id":1,"path":["std"],"kind":"module"},"1:8305:13671":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:4798:13935":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:12026:1616":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:40413:12960":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:13723:11372":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:5403:10815":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"22:4876:7251":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:10772:12504":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:42687:11857":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"5:7240:12876":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:1428:3064":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:119:3357":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:6963:19268":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:0:880":{"crate_id":6,"path":["libc"],"kind":"module"},"2:43871:13016":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"22:6010:7951":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:5152:7282":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:9972:13411":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:8455:12563":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"11:2260:13548":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:3406:12547":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:46453:12421":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:11192:9384":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:13040:11161":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:46324:12418":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:6513:12781":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:11365:13092":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:3147:27045":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13739:11375":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:2384:13875":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:5798:11703":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"22:1526:4592":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12293:11018":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:4774:11687":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:41740:2731":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:12778:11106":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:11135:12570":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:1184:13390":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:2909:19278":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:21542:13885":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:40381:12955":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:7633:7445":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:4710:7232":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:21791:14017":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"22:4373:7199":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:7645:7447":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:40020:12931":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:44216:13042":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:14324:11542":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"11:2467:12019":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:12209:19166":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:4436:1926":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:10478:10857":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:21566:13885":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"22:554:3700":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"2:40353:12951":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:6332:11642":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10197:13417":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:12194:13579":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:47939:12486":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:2574:11627":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"22:5865:7940":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:30357:30349":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:9998:10805":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12790:11107":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:6204:13481":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:1413:3063":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:5964:228":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:11514:13634":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"11:829:13822":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:43721:13008":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:4496:7210":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:4068:19139":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:1570:4596":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:41579:12988":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:10240:10837":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"22:1708:4610":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"22:6802:8379":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:2880:2609":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:5392:13642":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"11:1862:12858":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"22:4459:7206":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:9873:19234":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:7856:13068":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:2930:133":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:10112:13416":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:3232:11609":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:10738:13451":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:1781:13614":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:30919:2947":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4136:13946":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:5727:12715":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4440:7204":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:1120:31804":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5075:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:41783:2922":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:9445:13399":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"22:7690:8950":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:13024:11159":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:7078:19260":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:10518:13628":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:5995:12701":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:43739:13009":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:7680:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:22789:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"22:1732:4612":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:42207:88":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:569:3702":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9790:33431":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:0:2408":{"crate_id":17,"path":["object"],"kind":"module"},"2:40107:19225":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:40456:12964":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:9701:13403":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:12970:11152":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:10588:12672":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:11710:10907":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:11490:10932":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:11975:13761":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:48049:12494":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:3171:219":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:10126:12659":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:3481:13883":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:9005:13680":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:9627:3220":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:12023:799":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:10771:10861":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:44598:12384":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"22:6656:3741":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:40171:12942":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:2784:2555":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:3173:3063":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:7985:13661":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"22:4708:7232":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:30287:8964":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"22:1680:4606":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4808:7242":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:14282:11529":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"11:731:13540":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:4557:11681":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:7223:9137":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:2321:11610":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:8279:13667":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"11:2487:12023":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12154:10984":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:9083:243":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:4680:13950":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:5085:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:10710:13008":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12554:11073":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"22:0:880":{"crate_id":22,"path":["libc"],"kind":"module"},"1:3712:13633":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:4407:2549":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:12031:850":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:3797:11671":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:2394:13880":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:3424:13631":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:8686:20666":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:40343:12949":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4824:7244":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:3219:33339":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:8530:12568":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:42647:12363":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:22234:12116":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:3183:13624":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5969:7947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"11:693:2592":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:45963:12403":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:2692:12106":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:5358:13639":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:10558:2228":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:4497:11679":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:7406:105":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:10366:13424":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"22:6134:10497":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:8829:3063":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:32136:12926":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:12013:342":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:8271:13670":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"22:4593:7222":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:4806:11688":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:23053:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:2409:2414":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:43505:13604":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:7910:12864":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:6868:8383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"11:1525:19676":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7651:13531":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:12807:31420":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:13676:11364":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"22:482:3692":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:3315:11667":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:12543:11072":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:10453:9732":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"22:4966:7261":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"22:1494:4587":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:12772:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:9350:10825":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:39151:3066":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:40072:12933":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:14296:11535":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:7090:12827":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:43821:13014":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:45701:12392":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:12136:10983":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"22:4386:7200":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44038:13029":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:3065:10722":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"11:1846:2592":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:11547:10934":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8883:14006":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:7294:218":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"20:328:2593":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"2:22379:30342":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:1923:3047":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:30327:8965":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:2171:3026":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:5117:7277":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:7542:2797":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:2787:252":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:7694:11660":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:4488:7209":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:46300:12417":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:9886:13406":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"22:4987:7263":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:8287:12549":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:3949:9650":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:11151:13467":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:11098:13463":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:9143:2677":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"17:12043:10971":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:558:2664":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:6248:7994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:7504:10812":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:4462:11678":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:12979:111":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:43515:12910":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"11:1635:9621":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:7886:124":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:22250:12914":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:9328:10823":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:12203:12651":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:7619:2676":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:5816:12722":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:780:99":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:44052:13032":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:8192:12900":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:10023:13403":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:43617:12900":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:12189:19168":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:40893:12343":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:13071:11166":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"22:4626:7226":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:3032:11664":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"22:1505:4589":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:8659:2735":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:40635:12971":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:11894:13002":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:5363:11700":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:44344:13051":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:43171:12997":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:9994:9690":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"22:506:3695":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"2:21443:14012":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:21142:14016":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:10575:12671":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:12484:11065":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:907:9662":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}