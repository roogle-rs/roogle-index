{"root":"0:0:1974","crate_version":"0.9.9","includes_private":false,"index":{"5:727:3203":{"id":"5:727:3203","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12921:25889":{"id":"2:12921:25889","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:12923:25893","str::split_at_mut":"2:12922:25890"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:192:1966":{"id":"b:2:3496-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2675-0:210:1969":{"id":"b:2:2675-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:220:60":{"id":"0:220:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2385-0:192:1966":{"id":"b:2:2385-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2388-0:249:1965":{"id":"b:2:2388-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184-0:72:1972":{"id":"0:184-0:72:1972","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1972","glob":false}}},"2:12922:25890":{"id":"2:12922:25890","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12921:25889","str::split_at_mut_checked":"2:12924:25894"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168-0:82:1959":{"id":"0:168-0:82:1959","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1959","glob":false}}},"b:2:2664-0:192:1966":{"id":"b:2:2664-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268:1901":{"id":"0:268:1901","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:171-0:77:1961":{"id":"0:171-0:77:1961","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1961","glob":false}}},"0:295:60":{"id":"0:295:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:1968":{"id":"0:228:1968","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:229:2232","0:231:2234","0:233:2236","0:235:2238","0:237:2240"],"impls":["a:2:31817:2979-0:228:1968","a:2:2883:246-0:228:1968","a:2:31760:237-0:228:1968","a:2:41396:2912-0:228:1968","a:2:41395:2913-0:228:1968","b:2:2675-0:228:1968","b:2:3496-0:228:1968","b:2:2670-0:228:1968","b:2:2660-0:228:1968","b:2:2664-0:228:1968","b:2:2388-0:228:1968","b:2:2385-0:228:1968","b:5:725-0:228:1968","0:242","0:245","0:239","0:240","0:244","0:247"]}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:218:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41395:2913-0:192:1966":{"id":"a:2:41395:2913-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41396:2912-0:249:1965":{"id":"a:2:41396:2912-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2878:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112-0:321:2514":{"id":"0:112-0:321:2514","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:321:2514","glob":false}}},"2:12951:25895":{"id":"2:12951:25895","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12589:20084","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::split_whitespace":"2:12929:31979","str::rsplit":"2:12957:25899"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43154:13776","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2388-0:266:1970":{"id":"b:2:2388-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:207:675":{"id":"0:207:675","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12947:3151":{"id":"2:12947:3151","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41273:191","prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2213":{"id":"0:198:2213","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2670-0:192:1966":{"id":"b:2:2670-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:292:1973":{"id":"b:2:3496-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13016:33143":{"id":"2:13016:33143","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41395:2913-0:249:1965":{"id":"a:2:41395:2913-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177-0:192:1966":{"id":"0:177-0:192:1966","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1966","glob":false}}},"2:13028:27082":{"id":"2:13028:27082","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:38487"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:279:1967":{"id":"a:2:2883:246-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212:2220":{"id":"0:212:2220","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2440:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:271:462":{"id":"0:271:462","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2675-0:279:1967":{"id":"b:2:2675-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5597:2864":{"id":"5:5597:2864","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:776":{"id":"0:227:776","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:462":{"id":"0:218:462","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:249:1965":{"id":"b:5:725-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3203","5:728:3204","5:729:3205"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82:1959":{"id":"0:82:1959","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2351","0:84:2357"],"is_stripped":false}}},"b:2:2670-0:228:1968":{"id":"b:2:2670-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84:2357":{"id":"0:84:2357","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2440:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2435:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12940:25909":{"id":"2:12940:25909","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5615:27209":{"id":"5:5615:27209","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13025:27078"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2666:805":{"id":"2:2666:805","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77:1961":{"id":"0:77:1961","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:675":{"id":"0:289:675","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13023:27076":{"id":"2:13023:27076","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12966:25901":{"id":"2:12966:25901","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084","str::rsplitn":"2:12969:25903"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43258:13885","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:3205":{"id":"5:729:3205","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272":{"id":"0:272","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2440:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241:462":{"id":"0:241:462","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:1901":{"id":"0:281:1901","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:3496-0:279:1967":{"id":"b:2:3496-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2660-0:192:1966":{"id":"b:2:2660-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13010:33141":{"id":"2:13010:33141","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12915:25864":{"id":"2:12915:25864","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12963:33130":{"id":"2:12963:33130","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12589:20084","str::split":"2:12951:25895","prim@char":"1:12263:458","str::split_terminator":"2:12960:33129"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43222:13883","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71:2215":{"id":"0:71:2215","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1974":{"id":"0:0:1974","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1959","0:170-0:74:1960","0:171-0:77:1961","0:172-0:80:1962","0:173-0:76:1963","0:174-0:79:1964","0:176-0:249:1965","0:177-0:192:1966","0:178-0:279:1967","0:179-0:228:1968","0:180-0:210:1969","0:181-0:266:1970","0:183-0:73:1971","0:184-0:72:1972","0:185-0:292:1973"],"is_stripped":false}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31762:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41395:2913-0:279:1967":{"id":"a:2:41395:2913-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:76:1963":{"id":"0:76:1963","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:2912-0:279:1967":{"id":"a:2:41396:2912-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1141","0:92:2493","0:93:2500","0:94:2506"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:193:2209":{"id":"0:193:2209","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1901"]},"discriminant":null}}},"a:2:31817:2979-0:210:1969":{"id":"a:2:31817:2979-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2883:246-0:210:1969":{"id":"a:2:2883:246-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:183-0:73:1971":{"id":"0:183-0:73:1971","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1971","glob":false}}},"2:12984:33132":{"id":"2:12984:33132","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12589:20084","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::rmatch_indices":"2:12987:33133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43304:13888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12994:33136":{"id":"2:12994:33136","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2675-0:266:1970":{"id":"b:2:2675-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2385-0:279:1967":{"id":"b:2:2385-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12907:27069":{"id":"2:12907:27069","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12137:20085"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:271:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2670-0:279:1967":{"id":"b:2:2670-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79:1964":{"id":"0:79:1964","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:1966":{"id":"0:192:1966","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2209","0:196:2211","0:198:2213"],"impls":["0:70","a:2:31817:2979-0:192:1966","a:2:2883:246-0:192:1966","a:2:31760:237-0:192:1966","a:2:41396:2912-0:192:1966","a:2:41395:2913-0:192:1966","b:2:2675-0:192:1966","b:2:3496-0:192:1966","b:2:2670-0:192:1966","b:2:2660-0:192:1966","b:2:2664-0:192:1966","b:2:2388-0:192:1966","b:2:2385-0:192:1966","b:5:725-0:192:1966","0:206","0:200","0:208","0:205","0:201","0:203"]}}},"2:13029:33145":{"id":"2:13029:33145","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4680:33145"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43453:13812","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2440:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2435:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:276:675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2663:3145":{"id":"2:2663:3145","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2637:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2675-0:249:1965":{"id":"b:2:2675-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:675":{"id":"0:276:675","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2675-0:292:1973":{"id":"b:2:2675-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12908:33125":{"id":"2:12908:33125","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:228:1968":{"id":"a:2:2883:246-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31760:237-0:192:1966":{"id":"a:2:31760:237-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3496-0:210:1969":{"id":"b:2:3496-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:725-0:210:1969":{"id":"b:5:725-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3203","5:728:3204","5:729:3205"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12992:33135":{"id":"2:12992:33135","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12987:33133":{"id":"2:12987:33133","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12589:20084","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::match_indices":"2:12984:33132"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43322:13889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12934:25907":{"id":"2:12934:25907","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12996:33137":{"id":"2:12996:33137","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13004:25910":{"id":"2:13004:25910","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5612:33845":{"id":"5:5612:33845","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:294:2111","`String`":"5:7608:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2111","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5595":{"id":"5:5595","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5596:33841","5:5597:2864","5:5600:33842","5:5603:33843","5:5611:33844","5:5612:33845","5:5613:2768","5:5614:27208","5:5615:27209"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12990:33134":{"id":"2:12990:33134","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:258:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13022:27074":{"id":"2:13022:27074","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39244:3135","Self::is_ascii":"2:13021:27073"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39244:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12928:13759":{"id":"2:12928:13759","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43140:11564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:228:1968":{"id":"b:2:2664-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2388-0:192:1966":{"id":"b:2:2388-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170-0:74:1960":{"id":"0:170-0:74:1960","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1960","glob":false}}},"2:2387:2665":{"id":"2:2387:2665","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:675":{"id":"0:263:675","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111-0:307:2086":{"id":"0:111-0:307:2086","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:307:2086","glob":false}}},"2:13001:33140":{"id":"2:13001:33140","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31762:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185-0:292:1973":{"id":"0:185-0:292:1973","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:292:1973","glob":false}}},"2:12927:13908":{"id":"2:12927:13908","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12263:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43130:13877","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12904:33124":{"id":"2:12904:33124","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12902:33123"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2245":{"id":"0:252:2245","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:248:776":{"id":"0:248:776","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2435:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12943:3186":{"id":"2:12943:3186","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41273:191","prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:291:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174-0:79:1964":{"id":"0:174-0:79:1964","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1964","glob":false}}},"0:73:1971":{"id":"0:73:1971","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"5:5611:33844":{"id":"5:5611:33844","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3498:1755":{"id":"2:3498:1755","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39058:13049","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172-0:80:1962":{"id":"0:172-0:80:1962","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1962","glob":false}}},"b:2:2385-0:292:1973":{"id":"b:2:2385-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13027:27081":{"id":"2:13027:27081","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:38487"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12902:33123":{"id":"2:12902:33123","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13013:33142":{"id":"2:13013:33142","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2440:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:2500":{"id":"0:93:2500","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12981:33131":{"id":"2:12981:33131","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12589:20084","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::matches":"2:12978:2675"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43376:13892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12900:2475":{"id":"2:12900:2475","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:292:1973":{"id":"a:2:31760:237-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31817:2979-0:279:1967":{"id":"a:2:31817:2979-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:249:1965":{"id":"0:249:1965","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:250:2243","0:252:2245","0:254:2247"],"impls":["a:2:31817:2979-0:249:1965","a:2:2883:246-0:249:1965","a:2:31760:237-0:249:1965","a:2:41396:2912-0:249:1965","a:2:41395:2913-0:249:1965","b:2:2675-0:249:1965","b:2:3496-0:249:1965","b:2:2670-0:249:1965","b:2:2660-0:249:1965","b:2:2664-0:249:1965","b:2:2388-0:249:1965","b:2:2385-0:249:1965","b:5:725-0:249:1965","0:259","0:261","0:256","0:257","0:262","0:264"]}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2878:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12917:25865":{"id":"2:12917:25865","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12920:33127":{"id":"2:12920:33127","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12269:1657","crate::ops::IndexMut":"2:3158:14735","str::slice_unchecked":"2:12919:33126"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13032:33146":{"id":"2:13032:33146","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4678:33146"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43471:13811","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12901:33122":{"id":"2:12901:33122","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2660-0:292:1973":{"id":"b:2:2660-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2883:246-0:292:1973":{"id":"a:2:2883:246-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12957:25899":{"id":"2:12957:25899","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12589:20084","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::split":"2:12951:25895"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43172:13780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1960":{"id":"0:74:1960","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9367:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13007:25911":{"id":"2:13007:25911","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5600:33842":{"id":"5:5600:33842","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12932:33128":{"id":"2:12932:33128","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43418:13894","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31762:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279:1967":{"id":"0:279:1967","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:281:1901"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31817:2979-0:279:1967","a:2:2883:246-0:279:1967","a:2:31760:237-0:279:1967","a:2:41396:2912-0:279:1967","a:2:41395:2913-0:279:1967","b:2:2675-0:279:1967","b:2:3496-0:279:1967","b:2:2670-0:279:1967","b:2:2660-0:279:1967","b:2:2664-0:279:1967","b:2:2388-0:279:1967","b:2:2385-0:279:1967","b:5:725-0:279:1967","0:287","0:288","0:282","0:283","0:285","0:290"]}}},"a:2:2883:246-0:249:1965":{"id":"a:2:2883:246-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2435:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:225:675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:241:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12969:25903":{"id":"2:12969:25903","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12263:458","str::splitn":"2:12966:25901","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43276:13886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180-0:210:1969":{"id":"0:180-0:210:1969","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:210:1969","glob":false}}},"0:176-0:249:1965":{"id":"0:176-0:249:1965","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:249:1965","glob":false}}},"b:2:2670-0:210:1969":{"id":"b:2:2670-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2660-0:266:1970":{"id":"b:2:2660-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:1969":{"id":"0:210:1969","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:211:2218","0:212:2220","0:213:2223","0:214:2227"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31817:2979-0:210:1969","a:2:2883:246-0:210:1969","a:2:31760:237-0:210:1969","a:2:41396:2912-0:210:1969","a:2:41395:2913-0:210:1969","b:2:2675-0:210:1969","b:2:3496-0:210:1969","b:2:2670-0:210:1969","b:2:2660-0:210:1969","b:2:2664-0:210:1969","b:2:2388-0:210:1969","b:2:2385-0:210:1969","b:5:725-0:210:1969","0:223","0:216","0:219","0:221","0:226","0:224","0:217"]}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2435:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:207:675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12937:25908":{"id":"2:12937:25908","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2660-0:249:1965":{"id":"b:2:2660-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:728:3204":{"id":"5:728:3204","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266:1970":{"id":"0:266:1970","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:268:1901"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31817:2979-0:266:1970","a:2:2883:246-0:266:1970","a:2:31760:237-0:266:1970","a:2:41396:2912-0:266:1970","a:2:41395:2913-0:266:1970","b:2:2675-0:266:1970","b:2:3496-0:266:1970","b:2:2670-0:266:1970","b:2:2660-0:266:1970","b:2:2664-0:266:1970","b:2:2388-0:266:1970","b:2:2385-0:266:1970","b:5:725-0:266:1970","0:270","0:272","0:274","0:275","0:269","0:277"]}}},"b:2:2385-0:266:1970":{"id":"b:2:2385-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179-0:228:1968":{"id":"0:179-0:228:1968","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:228:1968","glob":false}}},"a:2:41395:2913-0:210:1969":{"id":"a:2:41395:2913-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12975:25906":{"id":"2:12975:25906","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:20082","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2211":{"id":"0:196:2211","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2215"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2712:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:220:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12909:334":{"id":"2:12909:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12910:25866","`u8`":"1:12280:1784"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:210:1969":{"id":"a:2:31760:237-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31760:237-0:228:1968":{"id":"a:2:31760:237-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12960:33129":{"id":"2:12960:33129","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12589:20084","str::split":"2:12951:25895","prim@char":"1:12263:458","`DoubleEndedIterator`":"2:7966:131","str::rsplit_terminator":"2:12963:33130"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43204:13882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:292:1973":{"id":"b:2:2664-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12913:9963":{"id":"2:12913:9963","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41273:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31817:2979-0:249:1965":{"id":"a:2:31817:2979-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5596:33841":{"id":"5:5596:33841","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2111","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:294:2111","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2878:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214:2227":{"id":"0:214:2227","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:31817:2979-0:292:1973":{"id":"a:2:31817:2979-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:725-0:279:1967":{"id":"b:5:725-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3203","5:728:3204","5:729:3205"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31762:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31760:237-0:279:1967":{"id":"a:2:31760:237-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2660-0:228:1968":{"id":"b:2:2660-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:292:1973":{"id":"0:292:1973","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:31817:2979-0:292:1973","a:2:2883:246-0:292:1973","a:2:31760:237-0:292:1973","a:2:41396:2912-0:292:1973","a:2:41395:2913-0:292:1973","b:2:2675-0:292:1973","b:2:3496-0:292:1973","b:2:2670-0:292:1973","b:2:2660-0:292:1973","b:2:2664-0:292:1973","b:2:2388-0:292:1973","b:2:2385-0:292:1973","0:294"]}}},"a:2:41396:2912-0:192:1966":{"id":"a:2:41396:2912-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2385-0:210:1969":{"id":"b:2:2385-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2388-0:292:1973":{"id":"b:2:2388-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173-0:76:1963":{"id":"0:173-0:76:1963","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1963","glob":false}}},"b:2:2388-0:210:1969":{"id":"b:2:2388-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237:2240":{"id":"0:237:2240","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:725-0:266:1970":{"id":"b:5:725-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3203","5:728:3204","5:729:3205"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2675-0:192:1966":{"id":"b:2:2675-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:202:462":{"id":"0:202:462","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31817:2979-0:192:1966":{"id":"a:2:31817:2979-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41395:2913-0:228:1968":{"id":"a:2:41395:2913-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5603:33843":{"id":"5:5603:33843","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:675":{"id":"0:225:675","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:776":{"id":"0:265:776","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2351":{"id":"0:83:2351","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12899:963":{"id":"2:12899:963","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12263:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2679:1740":{"id":"2:2679:1740","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13031:14702":{"id":"2:13031:14702","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4681:14702"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43462:13806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2674:1742":{"id":"2:2674:1742","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:2243":{"id":"0:250:2243","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13024:27077":{"id":"2:13024:27077","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:210:1969":{"id":"b:2:2664-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12997:33138":{"id":"2:12997:33138","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12931:29664":{"id":"2:12931:29664","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43408:13893","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12924:25894":{"id":"2:12924:25894","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12923:25893"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2878:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12998:33139":{"id":"2:12998:33139","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12615:20081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12911:2180":{"id":"2:12911:2180","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41273:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:1972":{"id":"0:72:1972","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12926:13898":{"id":"2:12926:13898","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12263:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43124:13876","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:249:1965":{"id":"a:2:31760:237-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31760:237-0:266:1970":{"id":"a:2:31760:237-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:246:675":{"id":"0:246:675","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2670-0:266:1970":{"id":"b:2:2670-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13019:33144":{"id":"2:13019:33144","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12550:137","`FromStr`":"2:12549:14766"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12549:14766","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12549:14766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31817:2979-0:266:1970":{"id":"a:2:31817:2979-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:266:1970":{"id":"b:2:3496-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:291:776":{"id":"0:291:776","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:228:1968":{"id":"b:5:725-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3203","5:728:3204","5:729:3205"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41395:2913-0:266:1970":{"id":"a:2:41395:2913-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12930:31986":{"id":"2:12930:31986","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12929:31979"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43437:13896","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:2912-0:210:1969":{"id":"a:2:41396:2912-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:213:2223":{"id":"0:213:2223","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:13026:27080":{"id":"2:13026:27080","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:38487"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5614:27208":{"id":"5:5614:27208","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13024:27077"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:2912-0:228:1968":{"id":"a:2:41396:2912-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41395:2913-0:292:1973":{"id":"a:2:41395:2913-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2664-0:249:1965":{"id":"b:2:2664-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:2218":{"id":"0:211:2218","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:92:2493":{"id":"0:92:2493","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13025:27078":{"id":"2:13025:27078","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:192:1966":{"id":"b:5:725-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3203","5:728:3204","5:729:3205"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:254:2247":{"id":"0:254:2247","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2388-0:279:1967":{"id":"b:2:2388-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:284:462":{"id":"0:284:462","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:249:1965":{"id":"b:2:3496-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:91:1141":{"id":"0:91:1141","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12910:25866":{"id":"2:12910:25866","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12280:1784"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31762:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2670-0:249:1965":{"id":"b:2:2670-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41396:2912-0:266:1970":{"id":"a:2:41396:2912-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:178-0:279:1967":{"id":"0:178-0:279:1967","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:279:1967","glob":false}}},"b:2:2660-0:210:1969":{"id":"b:2:2660-0:210:1969","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:2234":{"id":"0:231:2234","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2440:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5613:2768":{"id":"5:5613:2768","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31762:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2506":{"id":"0:94:2506","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:2238":{"id":"0:235:2238","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2385-0:249:1965":{"id":"b:2:2385-0:249:1965","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110-0:325:2501":{"id":"0:110-0:325:2501","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:325:2501","glob":false}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2435:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2883:246-0:192:1966":{"id":"a:2:2883:246-0:192:1966","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3496-0:228:1968":{"id":"b:2:3496-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2673:138":{"id":"2:2673:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:209:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2878:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2664-0:279:1967":{"id":"b:2:2664-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12972:25905":{"id":"2:12972:25905","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2675-0:228:1968":{"id":"b:2:2675-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12929:31979":{"id":"2:12929:31979","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12930:31986"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43428:13895","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:284:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31817:2979-0:228:1968":{"id":"a:2:31817:2979-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12923:25893":{"id":"2:12923:25893","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12924:25894"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12954:25897":{"id":"2:12954:25897","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:20084"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12405:13779","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2712:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2664-0:266:1970":{"id":"b:2:2664-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12898":{"id":"2:12898","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12899:963","2:12900:2475","2:12901:33122","2:12902:33123","2:12904:33124","2:12907:27069","2:12908:33125","2:12909:334","2:12910:25866","2:12911:2180","2:12913:9963","2:12915:25864","2:12917:25865","2:12919:33126","2:12920:33127","2:12921:25889","2:12922:25890","2:12923:25893","2:12924:25894","2:12926:13898","2:12927:13908","2:12928:13759","2:12929:31979","2:12930:31986","2:12931:29664","2:12932:33128","2:12933:31993","2:12934:25907","2:12937:25908","2:12940:25909","2:12943:3186","2:12947:3151","2:12951:25895","2:12954:25897","2:12957:25899","2:12960:33129","2:12963:33130","2:12966:25901","2:12969:25903","2:12972:25905","2:12975:25906","2:12978:2675","2:12981:33131","2:12984:33132","2:12987:33133","2:12990:33134","2:12992:33135","2:12994:33136","2:12996:33137","2:12997:33138","2:12998:33139","2:13001:33140","2:13004:25910","2:13007:25911","2:13010:33141","2:13013:33142","2:13016:33143","2:13019:33144","2:13021:27073","2:13022:27074","2:13023:27076","2:13024:27077","2:13025:27078","2:13026:27080","2:13027:27081","2:13028:27082","2:13029:33145","2:13031:14702","2:13032:33146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2385-0:228:1968":{"id":"b:2:2385-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:2665"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12978:2675":{"id":"2:12978:2675","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12589:20084","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::rmatches":"2:12981:33131"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43358:13891","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:14459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2678:138":{"id":"2:2678:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31688:12863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:41396:2912-0:292:1973":{"id":"a:2:41396:2912-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:2912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2670-0:292:1973":{"id":"b:2:2670-0:292:1973","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:292:1973","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12933:31993":{"id":"2:12933:31993","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43446:13897","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:776":{"id":"0:209:776","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1901":{"id":"0:195:1901","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2388-0:228:1968":{"id":"b:2:2388-0:228:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:228:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:25802"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:1962":{"id":"0:80:1962","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3126:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3126:142","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3129:143","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:210:1969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:2232":{"id":"0:229:2232","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2390:25802":{"id":"2:2390:25802","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181-0:266:1970":{"id":"0:181-0:266:1970","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:266:1970","glob":false}}},"0:233:2236":{"id":"0:233:2236","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:258:462":{"id":"0:258:462","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:249:1965","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:266:1970":{"id":"a:2:2883:246-0:266:1970","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:266:1970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12919:33126":{"id":"2:12919:33126","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12269:1657","str::slice_mut_unchecked":"2:12920:33127","crate::ops::Index":"2:38890:14734"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:776":{"id":"0:278:776","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13021:27073":{"id":"2:13021:27073","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2660-0:279:1967":{"id":"b:2:2660-0:279:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:279:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:3145"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2878:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1966","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"6:7537:9068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:43955:20293":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:7330:3760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:3669:11462":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:542:13572":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:41385:2910":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:8247:8091":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"22:5534:7918":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:12851:13569":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:1929:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"22:4950:7854":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"22:7459:9064":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:1526:4785":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:42297:3232":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:1809:672":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:7549:13706":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:4273:2729":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:43418:13894":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"22:5294:7891":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:2723:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:11674:13543":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:4281:14864":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:14111:11855":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:6621:10246":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:5472:7911":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:12478:11652":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:2205:13739":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:13594:11763":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:7561:9070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:39801:13181":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:473:3882":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:12261:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:11149:14464":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:12150:11639":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:10915:34830":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:903:10181":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:1707:4803":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:12695:14345":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"6:8197:9605":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:9638:10258":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:9496:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:3597:14264":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:9284:27944":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:4847:14854":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:5466:7910":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:5940:10235":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:6505:8579":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:11148:27932":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:4103:10143":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:4543:2093":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:3831:14515":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:8387:3256":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7006:14390":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:41895:2731":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:3475:12507":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:14235:11892":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:5219:7881":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:4386:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:22100:32546":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"5:721:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:11898:11602":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:8120:13378":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:11773:11663":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:7047:14919":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:5796:13762":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"22:6761:8647":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:3016:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:8118:13714":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"11:1007:13702":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:12443:11651":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:41856:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:6756:8646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"16:7857:12683":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:728:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"22:5050:7867":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:40086:13841":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:11557:14298":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"22:585:3896":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"1:4615:14867":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:9354:10249":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:9119:13446":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"22:5120:7872":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"22:5210:7880":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:39662:13807":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"14:7:14415":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"15:288:20623":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:7597:10178":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"22:44:3057":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"20:281:2761":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"5:4437:10171":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:5061:10168":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"18:113:25778":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:43124:13876":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:46281:13348":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5266:7887":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:6388:15013":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:7014:21537":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:6317:14378":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"14:31:14415":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:5769:13584":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:42903:14481":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:4252:14861":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:43761:13923":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"22:6719:8642":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:2528:12464":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:8708:13214":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:41454:3254":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:2195:2832":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:12238:14332":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"22:6503:8579":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:7573:13757":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13146:11699":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:31730:12664":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:8169:13946":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"6:4870:7845":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:9671:21581":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"22:6872:8681":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:43042:14484":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:15313:12185":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:10848:3255":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:4882:12530":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:1585:4791":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:21883:14923":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:21730:14784":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:9223:2835":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:43204:13882":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"20:164:10125":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"2:22:791":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:9781:21596":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:3241:31012":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:7359:9061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:4108:14453":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"20:363:2766":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"2:40508:10211":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:14489:11934":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:11497:14294":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:9271:13451":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:7251:3162":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:21249:31434":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:6540:2759":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:15039:12120":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:4308:3254":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:3108:2726":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:14599:11955":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:44063:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"22:8263:8094":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:33216:20206":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:7656:21540":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:11467:11596":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"18:96:25777":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:1968:14763":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:46345:13356":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"22:6704:8640":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:23065:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:11826:13464":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:5686:12482":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"11:1051:14428":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:2188:130":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2:45253:13250":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:13252:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:7497:12666":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:5708:2763":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:5624:7926":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:8194:13738":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:6491:8578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:10671:34832":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:2708:12472":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:11845:13972":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"9:330:12904":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:5846:13591":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"18:481:13514":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:44088:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:15289:12178":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:14012:11842":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:15078:12129":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:16198:12431":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"22:472:3882":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:10137:21579":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:6419:13764":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"22:7304:3933":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"13:109:34800":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:3605:14802":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:15102:12134":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:12589:20084":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:5643:7929":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:5415:12540":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11242:14285":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:5528:7917":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:9999:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:43898:13935":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:4468:12517":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:941:3254":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:6543:13654":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"20:350:2765":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"16:6466:12555":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:45460:13269":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"22:7337:9059":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:14723:11957":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:8450:13822":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:10836:13955":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:13455:11729":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:10604:14507":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:14529:11939":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"22:5470:7911":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:7849:10254":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"22:5327:7895":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"22:7582:9072":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:37597:20211":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:2925:3117":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:5910:13763":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:523:3887":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:5565:7921":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:11025:10262":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:5682:14901":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:1426:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:6261:10225":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:1098:14255":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:8610:13424":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:8384:2769":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:5146:7874":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"9:392:20521":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"22:5596:7924":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:6597:8628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:7306:3933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:5400:11556":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:31737:14473":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"15:394:20633":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:6086:2377":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:39712:13809":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:2458:12461":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:10936:14527":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"5:4922:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:30225:9657":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:13272:11712":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7755:12490":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:7798:11552":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:44066:165":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"22:5081:7869":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"9:178:14635":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:42550:13872":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"22:8292:8098":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:6066:13614":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:8155:13720":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13473:11730":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"20:344:2764":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"6:4971:7857":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:10284:14788":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:42335:3417":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"22:6607:8629":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:14147:11861":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"22:5258:7886":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:4502:12518":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:13497:11734":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11016:14274":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12300:21725":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:4738:11318":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:513:14254":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:30600:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:5423:7906":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"22:4983:7859":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"11:832:14432":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:39932:14477":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:21247:31425":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:8497:14822":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:6819:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:3158:14735":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:11419:11589":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7061:12607":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:12264:14334":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"22:6619:8630":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:2956:20053":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:5526:14525":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:6788:11234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:7132:13701":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:5636:7928":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:5557:7920":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12362:13562":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:4412:14519":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:5162:14521":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"22:8195:9605":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:4395:2710":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:11153:14271":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:13116:11695":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:2471:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:11838:29929":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"11:2562:12864":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12328:13553":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:597:11552":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"22:1619:4793":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:945:14425":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"11:1923:13735":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:44129:13226":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:11293:21633":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:13399:11724":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:30251:31620":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"11:2403:3255":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"5:5842:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:43100:13221":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:9688:14644":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:15822:12338":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:10610:14511":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:31751:13803":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:10880:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"11:2443:2759":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:10218:11559":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:11269:21632":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:39857:8684":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:2961:20054":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"6:4965:7856":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:10622:34828":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:1534:14432":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:2303:20642":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"12:0:2572":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:4771:12526":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:11128:11545":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:11313:13536":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:11174:2774":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:7473:20188":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:7570:12496":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"22:1563:4789":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:7420:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:12647:14341":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:4095:14845":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:42982:13783":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:43113:13875":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:2607:20147":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:7868:10256":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:45378:13265":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"5:3208:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:11595:11597":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:12089:11636":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:13844:11817":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:11137:13444":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"22:6878:7754":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:6532:8625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:45475:13270":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:39733:13811":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:7456:2761":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"22:577:3895":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"22:6415:8616":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:5483:7913":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"16:2508:12463":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12808:11677":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"9:53:14625":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:11605:11598":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:13674:11770":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:8559:14553":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:5719:10168":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:41345:2761":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"18:735:25787":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:43258:13885":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:8282:8096":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:1490:4780":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:2936:20670":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:3126:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:10241:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:39982:13828":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:5897:12542":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:5307:12538":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:41233:13196":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:46005:13336":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:12076:14323":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:10457:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:12276:863":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:12663:20090":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:7297:10252":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:5401:10143":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:16050:11712":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:40076:13840":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"18:538:11437":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:1596:13733":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"10:0:2570":{"crate_id":10,"path":["adler"],"kind":"module"},"16:2355:12451":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:4802:12527":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:15273:12176":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:2438:12460":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:30240:3232":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:2634:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:22505:12962":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:8460:13848":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:2591:14504":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:6026:13611":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"15:327:14622":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"18:680:13519":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:43140:11564":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:7741:12500":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:7348:9060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:10232:14497":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"16:6398:12481":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:10889:129":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"5:1340:14427":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:43534:20096":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"22:7483:9066":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:2944:12621":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7539:12495":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:45928:13335":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:40270:13849":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:4614:12522":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:22365:13790":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:5407:1205":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:6412:21533":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"6:5031:7864":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:12270:1745":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:4959:7855":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:15596:12280":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:1723:4804":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:3025:3203":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:43074:13786":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:45148:13240":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:9105:14559":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:6813:13671":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"11:1676:10136":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:13252:11711":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:14038:11845":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13235:11709":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:8073:12721":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:8397:12663":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:12604:13525":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:11214:14283":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:43570:13906":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:14503:11937":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:10916:13779":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:2876:2724":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:10251:14569":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:43003:13219":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"18:0:2577":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:1581:2759":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:29789:14825":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:11367:11578":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:40125:13844":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"22:5579:7922":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:4830:12528":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:6456:21534":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:6689:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"16:6335:14386":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:22583:13796":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:16269:11726":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"5:3304:13735":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:16259:11721":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:8565:13423":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"22:7410:4910":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:45507:13272":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:1593:4792":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"11:328:13727":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:15836:12341":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:16121:12413":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:5122:7872":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:22088:15010":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:13606:11766":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:15214:12161":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6821:8651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:2572:12466":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:45215:13248":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:2983:10232":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:15324:12189":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:22312:13789":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:8178:14544":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:39782:20143":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:11709:14515":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:41396:2912":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:8012:9443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:43462:13806":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:6608:13770":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:11567:14299":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"5:4422:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:6185:10236":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:5400:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:14933:12105":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:5351:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:45553:13274":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:1585:10181":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:503:2832":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:5329:7895":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"22:6489:8578":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:14284:11899":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:14449:11931":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:5445:7908":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12043:14321":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:15944:11708":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:43727:20097":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:10439:11567":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:4901:10233":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:1574:3254":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:38846:20057":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"5:1525:13731":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:14079:11851":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:80:25776":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"22:522:3887":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"16:3810:12510":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:16176:12429":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:4742:11322":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:9304:13454":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:11066:14462":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:38890:14734":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"11:1160:14431":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:9230:27940":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"22:1501:4782":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:6263:13644":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:2735:14506":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:2287:34283":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:217:10141":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:8113:13943":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:43304:13888":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:41320:174":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:3936:14517":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"22:4957:7855":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"22:4785:7839":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:2443:14774":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:31744:2718":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:38231:20213":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:4932:7852":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"22:6595:8628":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:7446:9062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:43222:13883":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"22:4889:7679":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:9633:14542":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:33079:20205":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:588:14701":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:11877:11600":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10818:14271":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:22521:31617":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:43322:13889":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:40054:13838":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:5212:7880":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"18:726:11453":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:11121:13886":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:6895:12593":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:3366:14511":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:15748:12323":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"22:5158:7875":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:2441:14773":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:38906:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:5193:14521":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"11:1891:2759":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:5052:7867":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:12464:21726":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"14:214:13722":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:15992:12388":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:4806:14866":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:3323:14509":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:485:3066":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:6849:13683":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:14341:11906":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:13387:11721":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:40042:13837":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:6915:8683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"22:7535:9068":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:645:14704":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4916:7850":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"22:5487:7914":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:42754:13874":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5489:7914":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"17:12711:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"14:40:11709":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:1207:14256":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"11:673:3254":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:16093:12406":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:2878:119":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:1590:13732":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:45492:13271":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:6991:34825":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:12433:11648":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:11524:14296":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:3614:12508":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:12824:21605":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:1153:34363":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:7631:14451":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:22603:13799":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:6441:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:4952:7854":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:37542:20210":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"15:306:20624":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:11634:14465":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:13064:11691":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12278:14335":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:7604:12498":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:1680:4799":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:6706:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"6:7467:9065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:10951:27938":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"5:730:120":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:41737:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5671:7932":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:12929:11681":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:43886:13932":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"22:8339:9641":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:11209:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:4747:20136":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:256:14251":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:2477:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:14177:11880":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:1503:4782":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:6768:8648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:12251:14333":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:8430:14783":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:10034:3409":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:4593:14866":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7085:13694":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:3538:14514":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:15126:12136":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"11:1903:13732":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:3791:13738":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:33389:20207":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:2033:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:41011:171":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"22:5641:7929":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:7429:4908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:0:968":{"crate_id":6,"path":["libc"],"kind":"module"},"17:12107:11589":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"22:6469:8621":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:41271:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:44190:13939":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:21771:31436":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:15023:12117":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:2888:2723":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:8351:9642":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:2374:12457":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"22:5312:7893":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:43555:13900":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:6102:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:3603:2759":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:45311:13254":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"18:689:13522":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:40063:13839":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:15092:12133":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:40470:13852":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"6:6417:8616":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:45169:13245":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:6475:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:4031:10168":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"22:6676:8637":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:2838:12478":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:867:14251":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:5385:11555":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:6678:8637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:1939:14499":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:14298:11900":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:7956:2396":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:16187:12430":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"17:10720:34827":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:16165:12424":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:22050:15009":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:42288:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:46270:13347":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"22:8326:8102":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"5:2307:13746":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:14876:12070":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:1863:3235":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:1628:4794":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:6524:8624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:10289:13774":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:12214:14016":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:15266:12175":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12225:14331":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:38921:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:7621:13761":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:12408:11647":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:4718:12524":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:10759:11589":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:7584:9072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:6353:12548":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:41993:3409":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:22186:14784":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:32961:20204":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:6585:14533":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:4062:12514":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:42954:13781":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:13774:11807":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:14414:11919":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"22:6540:8626":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:3129:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:9344:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:2788:12476":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:4740:11320":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"16:6120:21532":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:5515:7916":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"16:5995:13605":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:2281:649":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:7546:9069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:44070:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"11:2548:12861":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:7379:34819":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:15463:12225":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"22:5100:7870":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:2394:12458":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:10681:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"18:531:13516":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"11:430:34796":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:7168:13451":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:43453:13812":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:10955:14460":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:2606:14784":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"18:573:11432":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:21457:14922":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"22:1705:4803":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"22:5500:7915":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"6:8271:8095":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:40518:13182":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:1354:14431":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:15176:12153":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:4924:14850":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:9916:21599":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:9068:2911":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:6758:12581":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:3494:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:13401:117":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"22:5513:7916":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:41211:13947":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"22:5481:7913":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"5:7356:13750":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:2902:20669":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:9251:14563":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:12621:11659":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:21261:31429":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:45133:13239":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:15197:12158":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:12724:21604":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:491:3884":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:14372:11911":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"22:4963:7856":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:14311:11901":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"22:6819:8651":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:12388:13563":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:5244:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4885:7847":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:22228:15004":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:3244:31013":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:1648:10168":{"crate_id":2,"path":["core","mem","maybe_uninit","clone_from_slice","Guard"],"kind":"struct"},"16:6620:12558":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:2440:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:13419:10225":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"9:357:20535":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:3249:34397":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"21:0:1975":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"22:1508:4783":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"22:1684:4800":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:5002:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12201:14329":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:5314:7893":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"22:1578:4790":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:545:3890":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:12707:14346":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:14847:12060":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"10:44:12867":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:46307:13350":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"22:1494:4781":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:14788:12008":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:5831:13589":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"22:5374:7901":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:6098:21531":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:42532:13214":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:497:3885":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:9828:3424":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"22:537:3889":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"1:5895:14531":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:39819:13819":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:2382:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:7585:13760":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:3488:10168":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"11:1025:14427":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"18:706:13525":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:39244:3135":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"18:563:11439":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"22:5189:7878":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:8188:14414":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:5347:12539":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:4352:12515":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:45069:13233":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:598:34839":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:40135:13845":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:5174:7876":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:40493:13855":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:31847:3118":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:45763:13298":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:5037:12535":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:5361:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:11166:11580":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:3586:28142":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:39051:14474":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:3369:2725":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:11031:10263":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"22:496:3885":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"2:10025:121":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:5006:12534":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5436:7907":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"22:6913:8683":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"22:5675:7933":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:8551:14556":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:1494:2761":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:9807:21586":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:5376:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12683:14344":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:15624:12287":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:8341:9641":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:21193:3131":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:3029:11457":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:4260:14862":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:9385:2774":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:6160:20641":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:3354:31610":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:16069:12401":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"22:4977:7858":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:6364:2377":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:7461:9064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:7404:29651":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:13538:11746":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:8473:13776":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:11405:14292":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"18:623:34840":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:8786:13949":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"11:2304:13702":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"16:7144:21538":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"11:396:10134":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:12405:13779":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:836:3254":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:13753:11803":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:13363:11717":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:723:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"22:1591:4792":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:10032:3408":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:9063:13443":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:43446:13897":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:3278:13732":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:4459:2717":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:1535:4786":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:4897:7848":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:9938:21600":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:13972:11606":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:3647:3254":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"22:544:3890":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"6:564:3893":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:5283:7889":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"22:1524:4785":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:8300:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:2674:10216":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:5588:7923":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:43870:13928":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:12285:937":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:3341:20124":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:6629:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:10887:34834":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:6782:21536":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:8019:14541":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3077:20056":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"22:4822:7842":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:13439:13788":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:45340:13263":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"11:700:2761":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:43172:13780":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:9076:13444":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:13526:11743":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:2728:12473":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:2401:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:22074:14784":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"16:6927:12597":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:8418:13418":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11089:14279":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:3283:14508":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"14:160:14415":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:11621:13538":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:1663:4797":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"22:5334:7896":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"1:8796:3254":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:45701:13296":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:42972:14482":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:15646:12293":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"22:6766:8648":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"1:9178:14918":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:261:14252":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:6309:14532":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:7887:20194":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:11537:14297":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:6409:8615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:4500:10171":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:6714:8641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:42233:13203":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:12543:14340":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:9403:2775":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:3095:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:608:14245":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:6802:13670":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:12280:1784":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:2274:3222":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:7575:9071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:7428:21539":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:5754:13940":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"11:2124:13702":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"18:651:11432":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:12887:13570":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:15:2678":{"crate_id":2,"path":["core","write"],"kind":"macro"},"11:2569:13753":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:5506:14524":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13375:11720":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:9263:14565":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:4467:10168":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:4067:14842":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"22:531:3888":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"1:10502:14558":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:12121:14467":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:621:2364":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"22:5062:7868":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:7412:4910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:4843:14851":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:4143:14848":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"11:2536:12859":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"22:6445:8619":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"22:8269:8095":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:1580:4790":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:918:14419":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:39741:13806":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:10877:14272":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11443:11594":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:13187:11707":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:7254:30473":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:15151:12145":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:4390:2709":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:1547:4787":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:11590:13967":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:10251:11560":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:7321:2909":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"11:844:14721":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:5277:7888":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:4743:12525":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:7111:13700":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:10350:11563":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:11743:13548":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:35611:12627":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:16079:12402":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"22:5544:7919":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:43882:13931":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:6079:13575":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"11:299:13724":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:7397:34818":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"9:502:12925":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:31849:116":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:12671:14343":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"22:1637:4795":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:6746:8645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"22:5304:7892":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:922:14420":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:7984:14707":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:41462:3255":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"22:5350:7898":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"1:12274:730":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"22:7357:9061":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"20:331:2763":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"17:15434:12218":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:7485:9066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:8253:8092":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:0:543":{"crate_id":2,"path":["core"],"kind":"module"},"2:43920:132":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:45101:13237":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:41659:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:824:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:9359:10250":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:45054:13230":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:6560:12484":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:4864:7844":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"22:6712:8641":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:10982:21614":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"6:8288:8097":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:42735:13218":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:5239:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:11469:2853":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"2:4155:20052":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:14855:12063":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"5:7031:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:45792:13299":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:6775:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"6:6664:8635":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"22:1661:4797":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:2878:12480":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:13412:11726":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:42992:14483":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:7633:34823":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:5781:12486":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"22:6407:8615":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:4073:2759":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:15635:12292":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:7608:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"22:464:3881":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"5:3244:13733":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:14475:11933":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:6670:8636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:7450:9063":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:939:14423":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:5020:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:637:14488":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:11491:28177":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"2:5623:10168":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:31761:2978":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"22:5281:7889":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13089:11692":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:7559:13707":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:5700:12485":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:37652:20212":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:356:2850":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:8186:14545":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:31688:12863":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:9332:10243":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:12823:121":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:5542:14526":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"22:8280:8096":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"11:774:13730":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:553:3891":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"22:6627:8631":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:38943:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:13474:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:4856:12529":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"11:1066:20597":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:5009:14873":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:1621:4793":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:8746:14896":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:8540:13948":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:7545:13754":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"22:6458:8620":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:11440:12922":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:10873:13776":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:7706:10185":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:5225:7882":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:10461:10215":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"6:5502:7915":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"16:2338:12449":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:7100:10199":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4787:7839":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:14994:12111":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:3032:34398":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"9:482:20519":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:11749:14516":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:3595:14782":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:3270:13734":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:2112:14441":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:15206:12159":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12508:11656":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:41397:3106":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:16249:12441":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:4316:2092":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:2764:14452":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:13877:11825":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"5:6407:15014":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"17:12422:13565":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:6749:10143":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:5008:943":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:39673:13808":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:1062:10143":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13581:11762":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:10612:14268":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:42007:3410":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:11770:14517":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:31726:14472":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:15720:12314":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:3660:3255":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:11549:14583":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:2660:10229":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:43713:13914":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"15:0:2574":{"crate_id":15,"path":["addr2line"],"kind":"module"},"11:2423:2761":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"22:1533:4786":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11661:13542":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:5722:12487":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:8259:12664":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"22:6530:8625":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:7398:34281":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:42503:13869":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"22:8027:9444":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:5617:7925":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:6562:8627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:6940:10191":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"11:1896:10181":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"22:5318:7894":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:538:3889":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:8313:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"18:521:25789":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"18:754:13532":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"22:6522:8624":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:1063:14428":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:43084:14486":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:14463:11932":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:11634:13540":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:39071:13050":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"22:7559:9070":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11341:14289":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:7339:9978":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:6478:8622":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:5248:7885":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:5344:7897":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:11063:14277":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:2295:3215":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:12049:10270":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:46360:13357":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:6738:8644":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:8731:13437":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"11:1887:2761":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:1602:13734":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:7649:28001":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"22:1651:4796":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13797:11811":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9886:21598":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:15582:12274":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:1699:4802":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:8216:13721":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:9089:13445":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:14271:11897":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:1741:9653":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:15734:12316":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:39722:13810":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:6962:12492":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:10534:34833":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:22541:31616":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:46095:13338":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:8406:13417":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"11:1603:14434":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:8643:14883":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:33735:12626":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:1559:4788":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:5014:7862":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:4909:7849":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11510:14295":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:6749:13669":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:46124:13339":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:45851:13302":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:4514:2719":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:3737:2761":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:33562:20208":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:46182:13341":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:16235:12440":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:13325:11715":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:10828:34835":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:3577:3407":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:6621:8630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:10899:13418":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"1:10607:14509":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:12494:11653":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:2696:14505":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:15376:12206":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:45361:13264":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:8130:13944":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:13785:11810":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"22:5586:7923":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:6049:20484":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:39941:13822":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:15058:12121":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:414:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:3329:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"0:0:1974":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"17:12584:14271":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:11256:13533":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"22:4862:7844":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:5598:7924":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:4992:7860":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:669:14437":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:5390:7903":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:40010:13832":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:10671:14784":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:481:10227":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"11:1917:13734":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:8103:9991":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:42750:13873":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:11547:11505":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:45718:13297":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:12572:11589":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:8813:13952":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:5914:13596":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:2087:13738":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"22:8286:8097":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:15426:12217":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:4693:14872":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:7690:10181":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:40111:2245":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:16151:12421":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:42963:13782":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:1478:3255":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:7368:2759":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:12291:13879":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:7727:12499":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:21334:14921":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:14051:11847":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10419:11566":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:44121:14077":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:10399:11564":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:7452:9063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:31762:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:46437:13373":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:7473:12665":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:6763:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:11647:13541":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:41479:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"22:5223:7882":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:39845:13820":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"22:6696:8639":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:39905:14476":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:43276:13886":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"22:4969:7857":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:5211:10177":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"22:1678:4799":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:41817:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:39830:31675":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:1072:14431":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:41620:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"22:4868:7845":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:45116:13238":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:21203:31432":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:9148:14917":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:10993:14461":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:12615:20081":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:2644:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11825:14315":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:3314:20214":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:6636:8632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:11026:21615":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:867:13730":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:15190:12156":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:43358:13891":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"22:1690:4801":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:9258:14564":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:1653:4796":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:7529:2843":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:6648:13665":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:15383:12207":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:14091:11852":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:2418:12459":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:6460:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:5198:7879":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:924:10151":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"10:36:12866":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:2435:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:828:10146":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:31817:2979":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:8142:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:45443:13268":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:21232:31427":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:4821:14265":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:44142:14487":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"11:2140:14427":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:46224:13343":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:38961:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:4913:12531":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:800:2759":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:11028:13780":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:3036:34399":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:38810:3257":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:12371:11681":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:434:34788":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:32423:12617":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"22:6809:8650":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:12275:881":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:3925:12513":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:12328:13884":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:1516:13730":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"22:5242:7884":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"22:6476:8622":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:6655:8634":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"22:5110:7871":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:39001:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:5477:7912":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:3740:10143":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:9179:14459":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:2425:3206":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:15333:12192":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:5419:130":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:6342:34824":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:8006:9442":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:10997:11575":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:9465:10369":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:2271:14503":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4985:7859":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:6698:8639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"22:5012:7862":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:15769:12329":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:6379:8550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:45574:13275":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"22:6727:8643":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:1578:2761":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:4928:31887":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:3458:13856":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"22:7610:3055":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"2:10249:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:7355:12645":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:5296:7891":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"11:2554:34798":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:3238:30134":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:4924:7851":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"22:5455:7909":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"22:7465:9065":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"11:1087:34797":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:14436:11930":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"22:5398:7904":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"22:6898:8682":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:46375:13358":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:928:14721":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:11526:10264":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"20:328:2762":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"5:3806:14440":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:4268:14863":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:12262:1137":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:2631:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:41776:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:8158:129":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:4942:7853":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:12189:14328":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"20:0:1976":{"crate_id":20,"path":["smallvec"],"kind":"module"},"22:5288:7890":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:12278:875":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:15473:12230":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:40499:13856":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"22:5388:7903":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:22155:3215":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"22:6634:8632":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"18:718:11450":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:1828:10181":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:2756:12947":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"22:5342:7897":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:42495:13867":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:30219:2770":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:12516:14337":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"5:1169:34255":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"22:563:3893":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"14:165:20604":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:8584:14557":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:44080:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:13959:11834":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:11354:14290":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:10524:14267":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:5074:14879":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"18:659:14246":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:7357:20196":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:10859:13962":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"6:1485:4779":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:3871:10181":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"6:4824:7842":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:403:14253":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:8486:14553":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"22:1557:4788":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:45422:13267":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10317:11562":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:6447:8619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"8:0:1975":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:13046:11688":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:640:14490":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:7910:21542":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:4986:14266":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:11156:10366":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"18:507:11432":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:45084:13234":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:5367:21528":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:8262:14546":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4837:7843":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:7618:12667":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:7813:13709":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:39814:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:1724:10143":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:11324:14286":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:13509:11735":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9984:21601":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:3769:14824":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:12659:14342":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:11042:14275":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:16138:12415":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"11:102:2112":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:13553:11752":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:11543:13963":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12768:21583":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"22:5526:7917":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5581:7922":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:41033:13186":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"22:516:3886":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:12351:13887":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:43748:13919":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"22:552:3891":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"5:4268:10168":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:40095:13842":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:2637:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"22:7312:4737":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:951:14426":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"19:0:1235":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:11667:14466":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"22:5368:7900":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:4139:14847":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:40484:13854":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:1840:3236":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:3264:14262":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"18:765:25788":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:11788:14309":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:6504:13651":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:42260:31612":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:2929:2099":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11115:14281":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:1607:13735":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:3119:2157":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"22:7387:4925":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:1515:4784":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:41414:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:1446:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:46241:13344":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:12246:27943":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:5817:13586":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:5415:7905":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:586:3896":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:14560:11945":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:5181:7877":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:9602:756":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"17:13015:11648":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:12610:20082":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"7:0:1834":{"crate_id":7,"path":["unwind"],"kind":"module"},"11:2231:2107":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:5083:7869":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:860:14349":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"6:5191:7878":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:2453:14779":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:6729:8643":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"5:6586:10143":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:5075:12536":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"11:1582:14433":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:40284:13850":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:14066:11850":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"22:4874:7846":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:6736:8644":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:9501:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"22:6517:8623":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:46296:13349":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"22:1721:4804":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:1496:4781":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:4587:12521":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:13437:11728":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:2548:12465":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:5102:7870":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:15616:12286":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"11:2352:14428":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"22:5037:7865":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:15116:12135":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:22590:12974":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:479:3883":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:32609:20202":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"22:6786:11234":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:2768:12475":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:10908:27942":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"22:569:3894":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"2:21735:14927":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:8265:8094":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:1862:14497":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:6435:8617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:8294:8098":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"22:7544:9069":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:11686:10266":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:7602:9073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:5018:14874":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:22497:12961":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:3325:14510":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:40:10139":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:12454:13567":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4811:7841":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:10968:13445":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:12286:1844":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:10038:3411":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:12353:13561":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:2297:3216":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:11799:14310":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"9:447:20520":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:3899:12512":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:42520:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:15400:12211":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"22:5443:7908":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:7966:131":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:11764:13552":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:725:14784":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2:21459:12954":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:4242:2728":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:7509:14401":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"22:7600:9073":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:4800:7840":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"11:1566:20598":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:12287:1357":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:8272:14813":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:5200:7879":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:39749:13812":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:10545:10259":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"6:6657:8634":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:22556:31635":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:12949:11645":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:41049:13188":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:8029:9444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:11191:10365":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:40260:13848":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:11135:14463":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:12269:1657":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"22:558:3892":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"1:3368:14512":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:5996:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"22:6662:8635":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:22141:15011":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:11392:14291":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"9:238:13214":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7590:12497":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:21759:12955":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:41698:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"22:1697:4802":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11715:13546":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:40024:13835":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:5960:13603":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:2379:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:2203:14258":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:6650:8633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12399:13564":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"6:7389:4925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:15418:12215":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7823:21541":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"18:635:11449":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"22:5622:7926":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:2427:14770":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"22:5264:7887":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"11:2369:14436":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:37487:20209":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:45651:13294":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:21215:31432":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"22:4883:7847":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:39756:20142":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:4238:10168":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"5:2525:12943":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11102:14280":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:1054:14427":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11702:13545":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"22:6773:8649":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:12289:11641":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:21340:14924":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3251:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:8492:14555":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"22:5179:7877":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:279:10143":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:9097:3254":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7580:13708":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:13922:11830":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"22:4914:7850":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6427:14389":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:10395:10213":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:13344:11716":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:13485:11733":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:4940:12532":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:21332:14784":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:21352:12954":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:3196:12448":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:15168:12150":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:5546:7919":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:6693:14534":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:8136:13717":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"22:6560:8627":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:7891:20193":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:32902:2778":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:45297:13253":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:41251:13197":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:7931:2841":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:6519:8623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:578:3895":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:10928:14541":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:8259:8093":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:6442:13647":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"22:5275:7888":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12530:14339":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:21279:14784":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:8802:13442":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:15931:11707":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"1:1040:13702":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:45830:13301":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:12282:1772":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:11621:13970":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"14:187:20611":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:2808:12477":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:517:3886":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"11:123:10131":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:14968:12106":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:2612:12468":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:42000:3408":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:46261:13346":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"11:1107:14429":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:14325:11904":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:9737:21580":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:4031:14841":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:4230:29657":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:22614:14839":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:2628:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:8393:20192":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:7052:14391":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:7075:10196":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:3778:12509":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:7306:34820":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:307:1708":{"crate_id":1,"path":["std","thread"],"kind":"module"},"1:5861:14528":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:4332:14518":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:11865:14319":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:4148:3255":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:12969:11683":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:4570:2721":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"18:515:11435":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:39992:13829":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:9046:14558":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:45282:13252":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:22012:15008":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:21230:31422":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:13568:11758":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"22:0:968":{"crate_id":22,"path":["libc"],"kind":"module"},"2:4:1218":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"20:118:2094":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"22:5234:7883":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:5405:1205":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:5336:7896":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"22:478:3883":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"16:7769:12674":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:13173:11706":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:12318:11645":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:14131:11856":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"18:670:14250":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:14986:12110":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"11:856:14423":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"22:8004:9442":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"22:4835:7843":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:11378:14582":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:1824:14495":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:10824:3254":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:11124:13443":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:43601:13910":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:8660:13434":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:5630:7927":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"6:5536:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:43866:13927":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:8306:8100":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:14587:11948":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:557:2838":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:893:2759":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:6907:2763":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"9:424:20522":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:6721:8642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"17:12485:21727":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"22:4809:7841":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:6277:10240":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:2269:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:6494:13650":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:15410:12214":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:5756:14350":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:2323:20668":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"22:6754:8646":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"6:4876:7846":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:14868:12069":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"7:31:20506":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:45393:13266":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:12105:20251":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"22:5615:7925":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:1885:10369":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:11583:14304":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:6750:14537":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"11:811:10181":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:2037:14257":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:41581:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:43064:14485":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:7912:14784":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:6433:13646":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:40001:13831":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:7314:4737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:43894:13934":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:6278:14359":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"14:220:12811":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:2748:12474":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:13277:14469":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5653:7930":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"17:11227:14284":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"22:5413:7905":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:9683:31790":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:1671:4798":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:10170:11556":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:16032:11711":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:11493:14293":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"22:4798:7840":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"11:687:3255":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:3283:34396":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:43029:13784":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:44178:13229":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"18:589:11440":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:2918:3115":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:5868:14530":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"22:1488:4780":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:39021:14714":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:1189:34364":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:6634:12489":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:11075:11578":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"22:6668:8636":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:4641:12523":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:10036:3410":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:5457:7909":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:6619:10209":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"22:5421:7906":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:6300:14374":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:46322:13351":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:9217:117":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"22:6433:8617":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:38981:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:46250:13345":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:2883:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11730:13547":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"11:787:13731":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"22:8315:8101":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"22:1626:4794":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:7695:12671":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:5370:7900":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:21281:14925":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:39912:13784":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"22:5434:7907":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:7558:31675":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:1854:12950":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:15608:12283":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:15222:12163":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:11853:14318":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:43878:13930":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"13:226:12858":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:5742:13580":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:14516:11938":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:3396:10181":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:42014:3411":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"22:5132:7873":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13211:11708":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:15249:12167":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:38894:13804":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:5863:21530":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:30627:3131":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:12277:869":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"9:0:2569":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:6028:10177":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:2684:12471":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"14:0:2573":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13899:11826":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:14752:11977":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:2478:12462":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:15799:12334":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:7998:14708":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:10478:10216":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:1555:14419":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:13424:11727":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:7913:2852":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:2854:12479":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:15368:12203":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:15138:12139":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"22:5018:7863":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:5250:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:43437:13896":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:46398:13359":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:11812:14313":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:41470:2761":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:570:3894":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:10410:28002":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"17:15456:12223":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:2234:13741":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:11615:13969":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"11:875:14425":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:32237:12620":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:11688:13544":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:41406:2844":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:5927:13597":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:15010:12112":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:16223:12437":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"22:5651:7930":{"crate_id":22,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:22472:13795":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"22:7328:3760":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"5:7378:10154":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:8467:11564":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"22:8251:8092":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:533:2836":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:39885:14475":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"22:7982:3839":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:8175:14411":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:22418:12956":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:8267:14547":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:10870:13378":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"17:16212:12435":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:15390:12208":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"11:710:14418":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:15301:12184":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:41354:2909":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"6:5306:7892":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"22:7514:9067":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:6872:13684":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:4845:14853":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:41542:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:46050:13337":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:8004:14753":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:5802:21529":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:41329:3254":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:1826:14496":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:3406:2727":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:4485:14520":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10769:34829":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:31760:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:39972:13826":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:10044:21602":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:150:10129":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:2640:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:10040:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"22:4990:7860":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:9626:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:12792:11526":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13832:11815":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:7686:14410":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:10710:14270":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:3014:20671":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:12175:14324":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:10846:13943":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:10044:3413":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"11:1910:13733":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:7356:20195":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"5:3028:12946":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"7:78:20513":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"18:613:34838":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:2279:14767":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:11576:13463":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:1517:4784":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:41337:3255":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"22:5669:7932":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:3123:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:42272:12698":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:5260:7886":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:1575:14439":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"22:6377:8550":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:3329:12506":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"14:202:20098":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:42542:13871":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:4089:14844":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"22:6687:8638":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:42511:13870":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:6764:10247":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"6:5039:7865":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:3018:12622":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:5912:2759":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"22:1669:4798":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:4728:14845":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:4132:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:10493:10220":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:1544:14418":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:43154:13776":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:43408:13893":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12993:21606":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:32843:2776":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"11:2469:10181":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"1:12266:1256":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:9980:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:8431:31789":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"11:2151:14428":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"22:8010:9443":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"22:5029:7864":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:1692:4801":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:7448:2761":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:12595:14459":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10185:11557":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:15445:12222":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:6047:14352":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:859:2761":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:12281:1766":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"22:6439:8618":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:13814:11814":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:12056:11633":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:7809:14586":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:3520:13421":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"22:1483:4779":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:9136:13447":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"18:581:3131":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:7428:13752":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:41065:14823":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:10841:13957":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:7703:2708":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:11841:14317":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:11755:13551":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:8164:13945":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:437:11512":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:14575:11648":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:10068:21585":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:2498:20593":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:1097:2486":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"17:12557:11578":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:46153:13340":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:45591:13276":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"22:8349:9642":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:14977:12109":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:11574:2107":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:5679:3605":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:3018:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:9340:10168":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:8533:13947":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:9349:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"4:0:2568":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:21968:15007":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:43649:13912":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:43471:13811":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:6614:13769":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"22:4940:7853":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"22:1583:4791":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:4037:14840":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:9981:3407":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:532:3888":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"13:0:2567":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:2660:12470":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"22:1545:4787":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"22:5555:7920":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:11604:14015":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:3335:20125":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:14025:11843":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:9199:13450":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"11:1142:14430":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:13024:21607":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"22:5000:7861":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"22:8257:8093":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6609:8629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:9858:21597":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:39058:13049":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:39775:13815":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:11852:13972":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"22:5563:7921":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"22:7444:9062":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:12127:11638":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:7388:13751":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:362:2851":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"22:7573:9071":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"22:5144:7874":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:1887:14498":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"22:8245:8091":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:41395:2913":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:42243:3232":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:12235:14709":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:13738:11799":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:10954:21613":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:39684:31642":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:14912:12100":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:2966:20055":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"5:3237:3254":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:7799:12488":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:39875:10203":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:7924:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:12030:14320":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:14545:11941":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:4560:12520":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:6900:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:43874:13929":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:44151:181":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:8019:2980":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:9327:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"5:7412:2761":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:6874:8681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:12284:1760":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"11:742:14419":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10573:34831":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:41093:13195":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:6665:21535":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:40477:13853":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:8226:21543":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:7528:13703":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:45236:13249":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13986:11839":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"22:5663:7931":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:12213:14330":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:15778:12331":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:2101:14440":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:12230:14646":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:21448:14784":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13999:11840":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11915:21702":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:6667:2761":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:10917:27934":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:43902:10366":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:12549:14766":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"22:5628:7927":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:7937:2981":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:22233:15002":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"5:1463:3254":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"22:4922:7851":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:13529:14722":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10284:11561":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:43428:13895":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:3634:183":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:5134:7873":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13946:11831":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:8202:12502":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:6976:12602":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:10253:14568":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"6:4891:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:8545:14865":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:31818:3119":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:4966:14457":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"21:4:1975":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"17:14402:11917":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:30187:9656":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:43130:13877":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:4151:14849":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:15281:12177":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:1639:4795":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"22:4930:7852":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:4120:14454":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:15760:12325":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"11:0:2571":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:42314:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:8093:12722":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"22:5464:7910":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:4081:14843":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"11:351:34794":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:12264:1805":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:1686:4800":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"22:5380:7902":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:2998:12503":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:7516:9067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:6542:8626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:14356:11910":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:15678:12308":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:7098:13697":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:2234:14261":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:43738:13915":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:465:3881":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:10042:3412":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:5160:7875":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:39963:13825":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:3281:14507":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:6581:13854":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"22:484:3066":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"11:1883:3254":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"11:837:14420":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:3473:14263":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:45813:13300":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:2030:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"22:7364:3666":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:45268:13251":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:9212:14560":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:14212:11891":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:7928:166":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:45186:13246":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"22:8304:8100":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:5046:7866":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:13766:11805":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:6696:14913":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:43890:13933":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:43376:13892":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:6231:13641":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:15356:12200":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:43944:2781":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:10155:11555":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:22483:31676":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:14260:11896":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:1574:2546":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:12263:458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:4979:7858":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:12283:1778":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:43584:13909":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:2049:3238":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:13292:11713":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:5557:115":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:15814:12335":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:2636:12469":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:849:3255":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:5320:7894":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:3415:14810":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:15342:12193":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:11107:13885":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:41199:13865":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:2175:21660":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:4976:12533":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:9755:21578":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:12279:856":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:43055:13785":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:9052:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:13308:11714":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:12288:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:0:2575":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:11142:11589":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:1510:4783":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:10125:13862":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:45680:13295":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"11:364:10132":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:11189:11582":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"22:7346:9060":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"18:643:11432":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:3834:14516":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:11711:3233":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:10652:2396":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:13855:11818":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:40526:13857":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:11014:10261":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:8328:8102":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:6606:13663":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:5611:14527":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:12367:13890":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"22:4895:7848":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:6648:8633":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:0:1649":{"crate_id":1,"path":["std"],"kind":"module"},"2:12137:20085":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:1975:759":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:11239:13459":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:12863:11679":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"22:5044:7866":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:2499:2582":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:5740:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:4469:2718":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:4531:12519":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:7514:14720":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:0:2576":{"crate_id":17,"path":["object"],"kind":"module"},"2:2712:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:7888:13710":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:10319:14903":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:4129:14846":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:41177:31671":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:8301:12733":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:2592:12467":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:5445:20072":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:7648:14409":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:10018:21582":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:6574:12501":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"22:5475:7912":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:8317:8101":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:22433:13791":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"5:5449:20073":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:12900:11680":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:9163:14916":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:10661:14269":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:9367:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:11051:14276":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:13225:31489":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:39954:13823":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:15521:12267":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:1566:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:5492:14522":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:6811:8650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"11:2326:14427":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:6480:12483":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:7936:2842":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:12267:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:1325:14428":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"22:5217:7881":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8108:14542":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:7225:10251":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:8075:179":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:39768:13814":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"22:5172:7876":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"3:0:485":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:15655:12295":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:4424:12516":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:15957:12358":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"11:883:14426":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:41503:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:726:14826":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:14189:11882":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:21881:14784":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"18:698:13523":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:45201:13247":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:8588:3666":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"20:97:2760":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"5:7503:13753":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:16105:12408":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"11:2383:3254":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:7421:31782":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"11:2542:12860":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:559:3892":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:6588:13655":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:43676:13913":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"18:491:13515":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"22:6744:8645":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"16:3842:12511":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:43779:13925":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:12342:13557":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:6940:12599":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:22449:12957":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:6948:12491":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"22:7427:4908":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:45524:13273":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:5677:7933":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:7643:12663":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:9113:2761":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:3026:34401":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:3324:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:4803:14875":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"20:57:2759":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"6:5112:7871":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"22:490:3884":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"5:294:2111":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:22200:15003":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"5:1309:13702":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:12268:1623":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:44167:13938":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:13723:11795":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:5382:7902":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:4523:2720":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:39699:13180":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:10092:21603":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:14386:11913":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:10905:14273":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"22:5634:7928":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:909:14432":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:1565:4789":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"22:5359:7899":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:46203:13342":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:39656:13806":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:4174:20127":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:45606:13277":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:6880:7754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:6471:8621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:7984:3839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:5107:12537":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:40033:13836":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:15701:12309":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:5747:2377":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:5236:7883":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:33020:20203":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:880:13731":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:6412:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:7366:3666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:1771:1298":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:8480:13893":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:22102:3215":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"2:25465:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:1734:648":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14246:11894":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:15569:12268":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:10030:130":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:5290:7890":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:2934:2777":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:914:14418":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:6930:10189":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:6153:10168":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:5665:7931":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:4907:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:12597:11658":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"22:8298:8099":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:7348:2761":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:7339:9059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:6532:13653":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:872:14252":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"16:6385:12551":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:12273:714":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:5064:7868":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:10817:14577":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"6:5352:7898":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"5:868:10149":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"22:4907:7849":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:10393:115":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}