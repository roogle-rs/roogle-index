{"root":"0:0:1689","crate_version":"0.9.8","includes_private":false,"index":{"b:2:2539-0:298:1688":{"id":"b:2:2539-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:1938":{"id":"0:214:1938","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:8315:2619-0:270:1685":{"id":"a:2:8315:2619-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:239:1955":{"id":"0:239:1955","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2249-0:192:1681":{"id":"b:2:2249-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2539-0:211:1684":{"id":"b:2:2539-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2671-0:211:1684":{"id":"a:2:2740:2671-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:184-0:72:1687":{"id":"0:184-0:72:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1687","glob":false}}},"b:2:2549-0:284:1682":{"id":"b:2:2549-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12179:24826":{"id":"2:12179:24826","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:270:1685":{"id":"b:2:2539-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2554-0:298:1688":{"id":"b:2:2554-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2249-0:284:1682":{"id":"b:2:2249-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12126:24569":{"id":"2:12126:24569","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11778:18834","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11980:418","str::split_whitespace":"2:12104:31790","str::rsplit":"2:12132:26418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43550:12563","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5528:34740":{"id":"5:5528:34740","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1825","`String`":"5:7451:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1825","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:8923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8316:2618-0:192:1681":{"id":"a:2:8316:2618-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73:1686":{"id":"0:73:1686","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:211:1684":{"id":"0:211:1684","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:1933","0:213:1935","0:214:1938","0:215:1942"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8316:2618-0:211:1684","a:2:2683:220-0:211:1684","a:2:2740:2671-0:211:1684","a:2:8315:2619-0:211:1684","a:2:2700:228-0:211:1684","b:2:2554-0:211:1684","b:2:3319-0:211:1684","b:2:2249-0:211:1684","b:2:2539-0:211:1684","b:2:2549-0:211:1684","b:2:2543-0:211:1684","b:2:2252-0:211:1684","b:5:680-0:211:1684","0:228","0:226","0:217","0:223","0:218","0:225","0:220","0:222"]}}},"0:231:1947":{"id":"0:231:1947","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:255:1960":{"id":"0:255:1960","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2553:1488":{"id":"2:2553:1488","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41733:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:270:1685":{"id":"b:2:2249-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:92:2211":{"id":"0:92:2211","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181-0:270:1685":{"id":"0:181-0:270:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1685","glob":false}}},"2:12077:816":{"id":"2:12077:816","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11980:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2549-0:230:1683":{"id":"b:2:2549-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2554-0:192:1681":{"id":"b:2:2554-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2671-0:230:1683":{"id":"a:2:2740:2671-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2249-0:230:1683":{"id":"b:2:2249-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2671-0:284:1682":{"id":"a:2:2740:2671-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12135:34067":{"id":"2:12135:34067","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11778:18834","str::split":"2:12126:24569","prim@char":"1:11980:418","`DoubleEndedIterator`":"2:7306:121","str::rsplit_terminator":"2:12138:34068"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43600:12669","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180-0:211:1684":{"id":"0:180-0:211:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1684","glob":false}}},"0:84:2074":{"id":"0:84:2074","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8315:2619-0:230:1683":{"id":"a:2:8315:2619-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8315:2619-0:284:1682":{"id":"a:2:8315:2619-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:112-0:327:2232":{"id":"0:112-0:327:2232","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2232","glob":false}}},"5:5511":{"id":"5:5511","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5512:34736","5:5513:2570","5:5516:34737","5:5519:34738","5:5527:34739","5:5528:34740","5:5529:2482","5:5530:25839","5:5531:25838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12085:25799":{"id":"2:12085:25799","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11345:18835"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:252:1680":{"id":"b:2:3319-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12200:25836":{"id":"2:12200:25836","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12103:12549":{"id":"2:12103:12549","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43536:10508","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:2890":{"id":"5:684:2890","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:230:1683":{"id":"b:2:2554-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:298:1688":{"id":"b:2:3319-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12199:25837":{"id":"2:12199:25837","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:192:1681":{"id":"b:5:680-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2888","5:683:2889","5:684:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12095:26383":{"id":"2:12095:26383","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:211:1684":{"id":"b:2:3319-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12150:34070":{"id":"2:12150:34070","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:422":{"id":"0:202:422","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12078:2192":{"id":"2:12078:2192","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12203:13475":{"id":"2:12203:13475","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:13475"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43858:12592","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:230:1683":{"id":"b:2:2539-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2549-0:270:1685":{"id":"b:2:2549-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:613":{"id":"0:281:613","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:944","0:92:2211","0:93:2218","0:94:2224"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:298:1688":{"id":"a:2:2700:228-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177-0:192:1681":{"id":"0:177-0:192:1681","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1681","glob":false}}},"0:251:671":{"id":"0:251:671","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2558:1487":{"id":"2:2558:1487","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41733:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:284:1682":{"id":"b:2:2554-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2543-0:298:1688":{"id":"b:2:2543-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179-0:230:1683":{"id":"0:179-0:230:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1683","glob":false}}},"2:12089:1895":{"id":"2:12089:1895","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41591:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12109:26424":{"id":"2:12109:26424","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12167:34075":{"id":"2:12167:34075","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12082:34062":{"id":"2:12082:34062","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12080:34061"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12165:34074":{"id":"2:12165:34074","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:192:1681":{"id":"b:2:2252-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12115:25994":{"id":"2:12115:25994","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:252:1680":{"id":"a:2:2700:228-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2549-0:211:1684":{"id":"b:2:2549-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8316:2618-0:230:1683":{"id":"a:2:8316:2618-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:93:2218":{"id":"0:93:2218","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110-0:331:2219":{"id":"0:110-0:331:2219","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2219","glob":false}}},"b:5:680-0:211:1684":{"id":"b:5:680-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2888","5:683:2889","5:684:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:270:1685":{"id":"0:270:1685","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1617"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8316:2618-0:270:1685","a:2:2683:220-0:270:1685","a:2:2740:2671-0:270:1685","a:2:8315:2619-0:270:1685","a:2:2700:228-0:270:1685","b:2:2554-0:270:1685","b:2:3319-0:270:1685","b:2:2249-0:270:1685","b:2:2539-0:270:1685","b:2:2549-0:270:1685","b:2:2543-0:270:1685","b:2:2252-0:270:1685","b:5:680-0:270:1685","0:280","0:279","0:274","0:276","0:273","0:282","0:277"]}}},"2:12104:31790":{"id":"2:12104:31790","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12105:31780"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43824:12682","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:34068":{"id":"2:12138:34068","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11778:18834","str::split":"2:12126:24569","prim@char":"1:11980:418","str::split_terminator":"2:12135:34067"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43618:12670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:1962":{"id":"0:257:1962","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12076":{"id":"2:12076","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12077:816","2:12078:2192","2:12079:34060","2:12080:34061","2:12082:34062","2:12085:25799","2:12086:34063","2:12087:314","2:12088:26384","2:12089:1895","2:12091:8934","2:12093:26382","2:12095:26383","2:12097:34064","2:12098:34065","2:12099:26407","2:12100:26408","2:12101:12685","2:12102:12695","2:12103:12549","2:12104:31790","2:12105:31780","2:12106:24570","2:12107:34066","2:12108:31783","2:12109:26424","2:12112:25992","2:12115:25994","2:12118:2872","2:12122:2837","2:12126:24569","2:12129:26416","2:12132:26418","2:12135:34067","2:12138:34068","2:12141:26420","2:12144:26422","2:12147:34069","2:12150:34070","2:12153:2394","2:12156:34071","2:12159:34072","2:12162:34073","2:12165:34074","2:12167:34075","2:12169:34076","2:12171:34077","2:12172:34078","2:12173:34079","2:12176:34080","2:12179:24826","2:12182:26425","2:12185:34081","2:12188:34082","2:12191:34083","2:12194:34084","2:12196:25840","2:12197:27540","2:12198:25841","2:12199:25837","2:12200:25836","2:12201:34085","2:12203:13475","2:12204:34086"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:192:1681":{"id":"0:192:1681","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:1924","0:196:1926","0:198:1928"],"impls":["0:70","a:2:8316:2618-0:192:1681","a:2:2683:220-0:192:1681","a:2:2740:2671-0:192:1681","a:2:8315:2619-0:192:1681","a:2:2700:228-0:192:1681","b:2:2554-0:192:1681","b:2:3319-0:192:1681","b:2:2249-0:192:1681","b:2:2539-0:192:1681","b:2:2549-0:192:1681","b:2:2543-0:192:1681","b:2:2252-0:192:1681","b:5:680-0:192:1681","0:203","0:206","0:207","0:209","0:201","0:200","0:204"]}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2549-0:192:1681":{"id":"b:2:2549-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:284:1682":{"id":"b:2:3319-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5512:34736":{"id":"5:5512:34736","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1825","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:8923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1825","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:8923","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1674":{"id":"0:82:1674","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2068","0:84:2074"],"is_stripped":false}}},"2:2542:2831":{"id":"2:2542:2831","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2516:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:671":{"id":"0:283:671","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1682":{"id":"0:284:1682","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1617"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8316:2618-0:284:1682","a:2:2683:220-0:284:1682","a:2:2740:2671-0:284:1682","a:2:8315:2619-0:284:1682","a:2:2700:228-0:284:1682","b:2:2554-0:284:1682","b:2:3319-0:284:1682","b:2:2249-0:284:1682","b:2:2539-0:284:1682","b:2:2549-0:284:1682","b:2:2543-0:284:1682","b:2:2252-0:284:1682","b:5:680-0:284:1682","0:296","0:293","0:294","0:287","0:290","0:288","0:291"]}}},"2:12112:25992":{"id":"2:12112:25992","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12188:34082":{"id":"2:12188:34082","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8316:2618-0:270:1685":{"id":"a:2:8316:2618-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208:613":{"id":"0:208:613","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:211:1684":{"id":"a:2:2683:220-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:680-0:284:1682":{"id":"b:5:680-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2888","5:683:2889","5:684:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2539-0:284:1682":{"id":"b:2:2539-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77:1676":{"id":"0:77:1676","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2549-0:298:1688":{"id":"b:2:2549-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185-0:298:1688":{"id":"0:185-0:298:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1688","glob":false}}},"2:12099:26407":{"id":"2:12099:26407","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12100:26408"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2539-0:192:1681":{"id":"b:2:2539-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:252:1680":{"id":"0:252:1680","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:1958","0:255:1960","0:257:1962"],"impls":["a:2:8316:2618-0:252:1680","a:2:2683:220-0:252:1680","a:2:2740:2671-0:252:1680","a:2:8315:2619-0:252:1680","a:2:2700:228-0:252:1680","b:2:2554-0:252:1680","b:2:3319-0:252:1680","b:2:2249-0:252:1680","b:2:2539-0:252:1680","b:2:2549-0:252:1680","b:2:2543-0:252:1680","b:2:2252-0:252:1680","b:5:680-0:252:1680","0:266","0:265","0:262","0:268","0:259","0:260","0:263"]}}},"0:79:1679":{"id":"0:79:1679","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:613":{"id":"0:267:613","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12169:34076":{"id":"2:12169:34076","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:613":{"id":"0:227:613","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:298:1688":{"id":"a:2:2683:220-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12171:34077":{"id":"2:12171:34077","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:1926":{"id":"0:196:1926","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8316:2618-0:252:1680":{"id":"a:2:8316:2618-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5516:34737":{"id":"5:5516:34737","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12122:2837":{"id":"2:12122:2837","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41591:179","prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12156:34071":{"id":"2:12156:34071","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11778:18834","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11980:418","str::matches":"2:12153:2394"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43772:12679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1930":{"id":"0:71:1930","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12097:34064":{"id":"2:12097:34064","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11986:1407","str::slice_mut_unchecked":"2:12098:34065","crate::ops::Index":"2:2980:13504"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3321:1501":{"id":"2:3321:1501","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39420:11895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12106:24570":{"id":"2:12106:24570","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43804:12680","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12176:34080":{"id":"2:12176:34080","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:192:1681":{"id":"a:2:2683:220-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8316:2618-0:211:1684":{"id":"a:2:8316:2618-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2252-0:211:1684":{"id":"b:2:2252-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5527:34739":{"id":"5:5527:34739","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:422":{"id":"0:261:422","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2545:697":{"id":"2:2545:697","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:252:1680":{"id":"b:2:2554-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12196:25840":{"id":"2:12196:25840","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:26420":{"id":"2:12141:26420","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834","str::rsplitn":"2:12144:26422"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43654:12672","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:1928":{"id":"0:198:1928","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8315:2619-0:252:1680":{"id":"a:2:8315:2619-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:298:1688":{"id":"0:298:1688","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:8316:2618-0:298:1688","a:2:2683:220-0:298:1688","a:2:2740:2671-0:298:1688","a:2:8315:2619-0:298:1688","a:2:2700:228-0:298:1688","b:2:2554-0:298:1688","b:2:3319-0:298:1688","b:2:2249-0:298:1688","b:2:2539-0:298:1688","b:2:2549-0:298:1688","b:2:2543-0:298:1688","b:2:2252-0:298:1688","0:300"]}}},"2:12191:34083":{"id":"2:12191:34083","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:613":{"id":"0:249:613","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1677":{"id":"0:80:1677","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2928:2058","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2928:2058","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2671-0:298:1688":{"id":"a:2:2740:2671-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12105:31780":{"id":"2:12105:31780","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12104:31790"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43833:12683","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:230:1683":{"id":"b:2:2252-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:72:1687":{"id":"0:72:1687","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12162:34073":{"id":"2:12162:34073","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11778:18834","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11980:418","str::match_indices":"2:12159:34072"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43718:12676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:1930"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8316:2618-0:284:1682":{"id":"a:2:8316:2618-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8316:2618-0:298:1688":{"id":"a:2:8316:2618-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8316:2618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:1689":{"id":"0:0:1689","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1674","0:170-0:74:1675","0:171-0:77:1676","0:172-0:80:1677","0:173-0:76:1678","0:174-0:79:1679","0:176-0:252:1680","0:177-0:192:1681","0:178-0:284:1682","0:179-0:230:1683","0:180-0:211:1684","0:181-0:270:1685","0:183-0:73:1686","0:184-0:72:1687","0:185-0:298:1688"],"is_stripped":false}}},"2:12185:34081":{"id":"2:12185:34081","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12144:26422":{"id":"2:12144:26422","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11980:418","str::splitn":"2:12141:26420","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43672:12673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:252:1680":{"id":"b:2:2252-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111-0:313:1800":{"id":"0:111-0:313:1800","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1800","glob":false}}},"0:168-0:82:1674":{"id":"0:168-0:82:1674","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1674","glob":false}}},"b:2:2554-0:211:1684":{"id":"b:2:2554-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2683:220-0:252:1680":{"id":"a:2:2683:220-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:286:1617":{"id":"0:286:1617","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:178-0:284:1682":{"id":"0:178-0:284:1682","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1682","glob":false}}},"2:12098:34065":{"id":"2:12098:34065","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11986:1407","crate::ops::IndexMut":"2:2984:13505","str::slice_unchecked":"2:12097:34064"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12079:34060":{"id":"2:12079:34060","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:682:2888":{"id":"5:682:2888","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:215:1942":{"id":"0:215:1942","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:12107:34066":{"id":"2:12107:34066","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43814:12681","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:270:1685":{"id":"b:5:680-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2888","5:683:2889","5:684:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2700:228-0:230:1683":{"id":"a:2:2700:228-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2683:220-0:230:1683":{"id":"a:2:2683:220-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:195:1617":{"id":"0:195:1617","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2543-0:252:1680":{"id":"b:2:2543-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243:422":{"id":"0:243:422","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12086:34063":{"id":"2:12086:34063","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12101:12685":{"id":"2:12101:12685","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11980:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43520:12663","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:1686":{"id":"0:183-0:73:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1686","glob":false}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:284:1682":{"id":"b:2:2543-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193:1924":{"id":"0:193:1924","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1617"]},"discriminant":null}}},"a:2:8315:2619-0:192:1681":{"id":"a:2:8315:2619-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2700:228-0:270:1685":{"id":"a:2:2700:228-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2252-0:270:1685":{"id":"b:2:2252-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:295:613":{"id":"0:295:613","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2224":{"id":"0:94:2224","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1675":{"id":"0:74:1675","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Instant","id":"1:9107:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12088:26384":{"id":"2:12088:26384","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11997:1510"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8315:2619-0:211:1684":{"id":"a:2:8315:2619-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2249-0:211:1684":{"id":"b:2:2249-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:230:1683":{"id":"b:2:2543-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:252:1680":{"id":"b:5:680-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2888","5:683:2889","5:684:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2683:220-0:270:1685":{"id":"a:2:2683:220-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2549-0:252:1680":{"id":"b:2:2549-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173-0:76:1678":{"id":"0:173-0:76:1678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1678","glob":false}}},"a:2:2740:2671-0:252:1680":{"id":"a:2:2740:2671-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:230:1683":{"id":"0:230:1683","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:1947","0:233:1949","0:235:1951","0:237:1953","0:239:1955"],"impls":["a:2:8316:2618-0:230:1683","a:2:2683:220-0:230:1683","a:2:2740:2671-0:230:1683","a:2:8315:2619-0:230:1683","a:2:2700:228-0:230:1683","b:2:2554-0:230:1683","b:2:3319-0:230:1683","b:2:2249-0:230:1683","b:2:2539-0:230:1683","b:2:2549-0:230:1683","b:2:2543-0:230:1683","b:2:2252-0:230:1683","b:5:680-0:230:1683","0:241","0:245","0:244","0:242","0:247","0:248","0:250"]}}},"0:297:671":{"id":"0:297:671","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:284:1682":{"id":"a:2:2683:220-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2740:2671-0:270:1685":{"id":"a:2:2740:2671-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:230:1683":{"id":"b:2:3319-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2543-0:192:1681":{"id":"b:2:2543-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2252-0:298:1688":{"id":"b:2:2252-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:2068":{"id":"0:83:2068","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:170-0:74:1675":{"id":"0:170-0:74:1675","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1675","glob":false}}},"0:210:671":{"id":"0:210:671","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12159:34072":{"id":"2:12159:34072","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11778:18834","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11980:418","str::rmatch_indices":"2:12162:34073"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43700:12675","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:128":{"id":"2:2557:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32099:11704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2700:228-0:192:1681":{"id":"a:2:2700:228-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12182:26425":{"id":"2:12182:26425","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172-0:80:1677":{"id":"0:172-0:80:1677","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1677","glob":false}}},"0:229:671":{"id":"0:229:671","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12153:2394":{"id":"2:12153:2394","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11778:18834","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11980:418","str::matches":"2:12153:2394"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43754:12678","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:422":{"id":"0:289:422","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2252-0:284:1682":{"id":"b:2:2252-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24531"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12080:34061":{"id":"2:12080:34061","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2249-0:252:1680":{"id":"b:2:2249-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212:1933":{"id":"0:212:1933","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:8315:2619-0:298:1688":{"id":"a:2:8315:2619-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8315:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2543-0:211:1684":{"id":"b:2:2543-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2251:2383":{"id":"2:2251:2383","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2254:24531":{"id":"2:2254:24531","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12118:2872":{"id":"2:12118:2872","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41591:179","prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12194:34084":{"id":"2:12194:34084","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11739:127","`FromStr`":"2:11738:13650"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41733:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11738:13650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11738:13650","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:1958":{"id":"0:253:1958","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:233:1949":{"id":"0:233:1949","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12100:26408":{"id":"2:12100:26408","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12099:26407"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12102:12695":{"id":"2:12102:12695","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11980:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43526:12664","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:314":{"id":"2:12087:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12088:26384","`u8`":"1:11997:1510"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:270:1685":{"id":"b:2:2543-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12173:34079":{"id":"2:12173:34079","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11803:18831","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:422":{"id":"0:275:422","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:422":{"id":"0:219:422","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12108:31783":{"id":"2:12108:31783","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43842:12684","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2671-0:192:1681":{"id":"a:2:2740:2671-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2671","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:269:671":{"id":"0:269:671","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:252:1680":{"id":"b:2:2539-0:252:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:2831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12201:34085":{"id":"2:12201:34085","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:34085"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43849:12598","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:298:1688":{"id":"b:2:2249-0:298:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2383"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5531:25838":{"id":"5:5531:25838","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12200:25836"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:26418":{"id":"2:12132:26418","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11778:18834","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11980:418","str::split":"2:12126:24569"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43568:12566","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11798:18832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5513:2570":{"id":"5:5513:2570","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2552:128":{"id":"2:2552:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:2700:228-0:284:1682":{"id":"a:2:2700:228-0:284:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:76:1678":{"id":"0:76:1678","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1864","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12147:34069":{"id":"2:12147:34069","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5530:25839":{"id":"5:5530:25839","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12199:25837"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5519:34738":{"id":"5:5519:34738","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:272:1617":{"id":"0:272:1617","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:5:680-0:230:1683":{"id":"b:5:680-0:230:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2888","5:683:2889","5:684:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12093:26382":{"id":"2:12093:26382","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:174-0:79:1679":{"id":"0:174-0:79:1679","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1679","glob":false}}},"b:2:2554-0:270:1685":{"id":"b:2:2554-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:192:1681":{"id":"b:2:3319-0:192:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12172:34078":{"id":"2:12172:34078","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12197:27540":{"id":"2:12197:27540","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39628:26364","Self::is_ascii":"2:12196:25840"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39628:26364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12204:34086":{"id":"2:12204:34086","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:34086"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43867:12597","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:1953":{"id":"0:237:1953","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3319-0:270:1685":{"id":"b:2:3319-0:270:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2700:228-0:211:1684":{"id":"a:2:2700:228-0:211:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235:1951":{"id":"0:235:1951","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:683:2889":{"id":"5:683:2889","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171-0:77:1676":{"id":"0:171-0:77:1676","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1676","glob":false}}},"2:12091:8934":{"id":"2:12091:8934","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41591:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12198:25841":{"id":"2:12198:25841","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:176-0:252:1680":{"id":"0:176-0:252:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1680","glob":false}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:91:944":{"id":"0:91:944","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12129:26416":{"id":"2:12129:26416","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11980:418","self::pattern":"2:11778:18834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11601:12565","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11783:13237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5529:2482":{"id":"5:5529:2482","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:213:1935":{"id":"0:213:1935","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}}},"paths":{"16:7289:11486":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:3168:18882":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:4396:11359":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:45606:12077":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:42636:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:9690:9305":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"22:1647:4471":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:3181:32068":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:10760:12747":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:6384:13310":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"22:4487:7026":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:6137:9310":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:6726:8167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:7515:12499":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:14189:11220":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:10772:12190":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"22:578:3572":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"1:11162:12275":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:8740:20335":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:7263:12542":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:46253:12104":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:39295:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:43618:12670":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"11:1012:13211":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:10506:13283":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"19:0:1036":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:3025:11345":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:6028:7747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1527:4460":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:3580:11351":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:13905:11126":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:5382:10499":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:3517:13569":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:7268:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:11290:20343":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:22043:31565":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:43328:12567":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:4605:18893":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:7540:7252":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:10051:2933":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:40322:13254":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:4409:1807":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:527:2545":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:4620:11366":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:9967:12649":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:9442:35590":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:1068:13211":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:41865:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:43458:13262":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:7523:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:5775:11385":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:1543:9259":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"22:594:3574":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"1:6421:12640":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:13332:10914":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"9:507:11766":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:2523:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:5816:9322":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"22:553:3568":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"1:854:2933":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:1288:13210":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:304:1459":{"crate_id":1,"path":["std","thread"],"kind":"module"},"16:2637:11311":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"18:766:24301":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46563:12123":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:1574:12523":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:40443:12624":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:11832:10648":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:47879:12173":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"10:0:2288":{"crate_id":10,"path":["adler"],"kind":"module"},"6:5044:7084":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:10955:12257":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:12671:10789":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"9:52:13399":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:11220:20465":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:11763:9352":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:11237:9346":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"14:187:19356":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:1603:4468":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:1302:13214":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:10051:13077":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:21104:13553":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"22:4746:7051":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:13778:11095":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:7572:9336":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:6171:7782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"22:4721:7048":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:10969:13124":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"22:4393:6857":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11979:941":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:615:2081":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:7926:12529":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:7910:13319":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:3744:11352":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:7708:13479":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:4126:30389":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:9869:13553":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:4818:7060":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:6456:11326":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:43550:12563":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:6232:13170":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:7313:35579":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:42099:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:44114:12701":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:653:3621":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:5994:7743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:21459:13691":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"20:327:2476":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"6:4740:7050":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:2826:11467":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:1014:2204":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"6:1520:4459":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:14216:11229":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:2795:18947":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:11962:25521":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:43600:12669":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47899:12175":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"9:357:19281":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:12394:10751":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:8976:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:1495:4455":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:1558:2932":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6018:20275":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:14282:11246":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:6571:20277":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:9145:2490":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:7631:11512":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:10812:30395":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:6067:7749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:7255:2615":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"5:3570:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:2966:35032":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"20:163:9217":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"1:11985:1377":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:8021:11562":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:32139:12589":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:1077:13214":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:21930:11799":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:43956:12687":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"22:6596:8161":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:2850:18956":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:5704:12382":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:7996:13321":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"22:6848:8175":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:12003:1564":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:3171:2932":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:10080:13079":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:12000:1509":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:10863:10529":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:9274:10508":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:3441:11350":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:40126:12598":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:43833:12683":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:885:12522":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:41640:2841":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:10123:10522":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13639:11058":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4606:7037":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:47719:12167":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:864:2475":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:2541:11307":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"22:1498:4456":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:11144:2489":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:5979:7741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:22072:12582":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:41563:12042":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:8771:20336":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:12579:9310":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:8856:13336":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:8840:12257":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:7433:11507":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:11125:12068":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:10786:13114":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:8146:12229":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:2152:588":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:47925:12177":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:8316:2618":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:8001:13322":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:872:12521":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4506:7028":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:40414:12621":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:14329:11260":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:3186:13058":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:914:13215":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:4965:11376":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13303:10894":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:629:13218":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"18:681:12316":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:3299:13287":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"9:393:19267":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:40879:12640":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10931:13118":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"22:1534:4461":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"7:32:19252":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:7511:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"22:531:3565":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"2:21126:11795":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:4564:11364":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"16:6332:12438":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:6651:2849":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:1681:4474":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4787:7056":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"22:4885:7068":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:9476:12561":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"11:1845:12524":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:1717:4479":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:2691:2438":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:12053:10667":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"22:4693:7045":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:11400:9348":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"22:5992:7743":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"22:4289:7006":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:4325:2431":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:46207:12102":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:12077:10671":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:956:13209":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:6720:8166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:2243:12537":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:4733:13604":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"22:4533:7031":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:7213:2473":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:40400:12618":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"22:4522:7030":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:43403:12571":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"9:177:13409":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:21027:13681":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:4938:7073":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:1649:4471":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:43416:13260":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:40382:12615":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"18:590:10390":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"11:2049:13210":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"22:4822:7061":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:2570:9301":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:7517:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:5890:7736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4518:7029":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:41716:2801":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"22:4541:7032":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:42347:3086":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:14395:11272":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:4166:9259":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:7484:12497":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:3196:2439":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:11178:12357":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"22:1707:4478":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11020:13128":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:0:2293":{"crate_id":16,"path":["gimli"],"kind":"module"},"18:531:12313":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:841:2932":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"22:4840:7063":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:3933:13591":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:6667:11422":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"11:805:13492":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:3802:9271":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:11980:418":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:30545:31577":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:4587:7036":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:44149:12706":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"18:652:10382":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:7552:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:727:10403":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:3204:12525":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:11032:9344":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:6470:11343":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:4374:7012":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:11996:743":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:44273:12714":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"11:657:2475":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"22:5791:7728":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:9097:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:11591:10590":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12921:10843":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:547:3567":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:4389:2434":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:42645:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:3729:13291":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"22:4927:7072":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:41776:2932":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:10511:12343":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"22:6075:7750":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4704:7046":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:2683:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"20:118:1808":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"22:5803:7730":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:13513:11042":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:20974:13685":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"22:4494:7027":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:9102:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:45874:12088":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"22:4752:7052":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:10912:13316":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:256:13047":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:8252:11574":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:4841:11372":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"18:80:24289":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:47595:12165":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:10633:10540":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:46799:12127":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"15:306:19369":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:5372:13298":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:5551:3285":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:9879:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"11:844:13209":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"22:1715:4479":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"22:6128:7780":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"22:4399:7015":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:506:3563":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"22:572:3571":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"22:1601:4468":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13847:11112":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:7622:13193":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:39628:26364":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:5900:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:6888:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:11542:10620":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"22:4808:7059":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"11:836:13208":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:632:13263":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:40088:12595":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:45714:12081":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:7370:28400":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"22:4971:7078":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"22:561:3569":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"6:4723:7048":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:41484:12041":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:3377:12643":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:8543:2932":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:1928:656":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:8284:13615":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:13055:10870":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:7201:12541":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:4436:7019":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:10609:13112":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:40524:12631":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:47978:12180":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:44557:12724":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:4848:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:12592:10779":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:2787:2493":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:10097:13082":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:7339:12543":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:2217:13536":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"22:1543:4462":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"22:4434:7019":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"18:491:12312":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:8800:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:0:2294":{"crate_id":17,"path":["object"],"kind":"module"},"5:895:2932":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:4735:13605":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"22:525:3564":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:1911:4646":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:20855:2898":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"16:7592:20282":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:13179:10892":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:21563:31797":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"11:1822:2475":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:5863:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:2388:13548":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:40302:12571":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:1636:8747":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"14:0:2291":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:3671:9236":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:3596:2933":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:207:9234":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:9716:35591":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:7505:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:11600:20347":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:6565:3609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:7634:13553":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"22:4426:7018":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:44305:12068":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:12815:10829":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:8324:13333":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:7763:20283":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:9561:13064":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"18:644:10382":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:4731:13602":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:7012:12485":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:48016:12182":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:7679:11342":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:6834:18933":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:40118:12592":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:11416:12362":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12878:10837":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:11490:12666":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:5737:7664":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:6081:9259":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:3991:13596":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:11992:10663":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:2516:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:9926:13073":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13155:10590":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:10832:13117":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:12711:10793":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:7264:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:47407:12163":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:12374:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:5130:9267":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:2362:13539":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:6590:13669":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:8934:13673":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:12017:10665":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:2360:2891":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:1411:2932":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10671:20440":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:3867:11355":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:43277:13257":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11118:12354":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:5008:7081":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:5959:12407":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12333:10740":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:49861:13693":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"20:362:2480":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"17:11127:10618":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"22:487:3561":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"17:8924:20341":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:42354:3088":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:13604:11054":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:3233:2441":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:4996:11377":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"11:1826:2473":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:8176:20285":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:12004:1134":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:261:9236":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"18:671:13046":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:2556:9315":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:5080:7089":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:41527:12652":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"5:7223:9247":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:6077:7750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:7707:11515":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:8904:33773":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:8422:13237":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:43858:12592":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:43104:12661":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:5368:18823":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:47517:12164":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"22:1679:4474":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:13732:11082":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:4368:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"22:6154:7781":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:14227:11230":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"11:986:13210":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"22:1700:4477":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2783:2491":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:43654:12672":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:7295:8547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:11084:12345":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"11:1852:12525":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4341:7010":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:6156:7781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"18:574:10382":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11199:10593":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"22:4504:7028":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:5818:7731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:10076:12563":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"22:4411:7016":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:14026:11159":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:3492:3085":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"11:2174:11701":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9409:35588":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"11:2194:11705":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"22:1731:4480":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:1102:35433":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"22:4738:7050":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:7515:7249":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:6250:11391":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"22:4339:7010":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:41575:12043":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:4698:11367":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:4328:7009":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"22:6742:8168":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:4506:11362":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:20652:32064":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:2443:11303":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:434:10458":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:9866:13069":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:5567:11327":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:42060:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:4944:7074":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:4785:11370":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"22:651:3621":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:12133:10689":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:12002:793":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"11:332:9225":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:5956:9267":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"22:1511:4458":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:2838:18953":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:4045:18805":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:11738:13650":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:6502:12454":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:40209:31580":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4488:13617":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:10119:12565":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:8451:12057":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:8982:2544":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"18:636:10399":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:39434:11505":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:7038:12491":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:1663:4472":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:12616:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:13771:11093":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:4536:11363":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:1492:13201":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"22:6013:7745":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:1580:12524":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:40192:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:7855:12730":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13566:11047":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6175:13143":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"18:564:10389":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:11967:10658":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:9436:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"22:4548:7033":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:782:9239":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"18:736:24300":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:10249:13086":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"22:6134:6923":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:1843:13273":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13894:11122":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:5882:7735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:4350:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:11803:18831":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"22:6065:7749":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:2883:9318":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:4323:11358":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4917:7071":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:22093:12585":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:12065:10670":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:11276:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:3141:18958":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:5738:13305":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:3301:13288":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:21989:11804":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:10196:13240":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:1045:12493":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:4304:7007":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:2799:18949":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:3344:13574":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"22:7538:7252":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:1780:13270":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:12840:10833":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:8306:12235":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:40272:9289":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:40031:12592":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:45939:12090":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:42685:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:10158:13239":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:9361:13238":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:12148:10695":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:6308:13767":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:4389:7014":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:40152:12601":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"22:6669:4586":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"7:0:1554":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:45584:12076":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:5119:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:11984:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:9019:13341":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:7539:11340":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"22:5066:7087":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:5058:7086":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:5639:12377":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:5386:13300":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:44162:12710":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:22453:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:1629:587":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"5:4365:9261":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:1273:13211":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:47657:12166":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"22:61:3172":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"5:6771:2477":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"11:1103:13213":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:1466:2264":{"crate_id":2,"path":["core","mem"],"kind":"module"},"22:4566:7035":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:6692:20278":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:43448:12573":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:7061:12492":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:13368:10945":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"22:4313:7008":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:358:2559":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:5342:11382":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:4380:2433":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"22:5056:7086":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"22:4942:7074":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:12424:10754":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:3151:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:5925:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:7659:2551":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:6932:9282":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:2265:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:4263:2426":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:6711:8165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:3510:13551":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:9296:10510":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:40282:13253":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:11568:20346":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:7532:13360":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:12186:10703":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:11979:10661":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"22:5953:7739":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:1590:4466":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:47888:12174":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"7:79:19259":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:3217:35065":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"14:160:13198":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:11798:18832":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:927:13203":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7240:35581":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:2465:11304":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:13167:10885":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:10199:10534":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:21675:13679":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:45754:12083":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:1118:35018":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:41792:2475":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:40058:31570":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:4380:13296":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:9990:10524":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"11:0:2289":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:2632:13280":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:4:1019":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:46485:12109":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"22:4947:7075":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:530:12365":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10529:10602":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:8560:12737":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"18:599:35595":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:12001:1506":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:42580:12048":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"22:1909:4646":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:4034:9236":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"5:7367:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:3238:12526":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:20803:13553":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:6618:8163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4568:7035":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13870:11115":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:5615:2094":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:14:2397":{"crate_id":2,"path":["core","write"],"kind":"macro"},"20:349:2479":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"16:6427:12444":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:6705:8164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:45684:12080":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:2567:11308":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"22:540:3566":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"17:9083:10503":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:43700:12675":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"22:5898:7737":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:7739:11330":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:482:3560":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:2293:19387":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:10223:10536":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12851:10834":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:40921:12644":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:4614:7038":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5068:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:2131:2541":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"10:36:11707":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:43346:13258":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:40423:12622":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:22585:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:39359:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"18:719:10400":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:4441:11360":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:4626:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:5771:13308":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:2049:13221":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:2925:2672":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:44139:12702":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:4628:10268":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:12552:10546":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:7558:7255":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:6886:11334":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:11601:12565":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:10916:11763":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:2962:19414":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:4984:7079":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:4592:11365":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:6540:11331":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:4395:9259":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:551:2547":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:11520:10585":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:39315:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:1595:4467":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:40353:12611":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:6864:11440":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:7855:20284":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:10140:13345":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:11109:12353":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:44077:12700":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:822:9242":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:9850:20355":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:9840:13068":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:1892:13274":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:3181:28647":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:45540:12074":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:8736:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:573:3571":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:4781:7055":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:10339:13098":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:46382:12107":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13882:11121":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13854:11113":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:7043:2424":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4475:7024":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13029:10868":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:7427:12550":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"22:4366:7011":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:9899:10522":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"11:793:13215":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:400:13049":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:2715:11314":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"22:4846:7064":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:6850:8175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:474:3559":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:4811:799":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:2779:11462":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5799:7729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:11998:1507":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:7463:12494":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6347:20276":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:582:10496":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:10324:12673":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:8125:13194":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4469:7023":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:9336:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:11335:12755":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:42590:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:40098:12596":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:9528:35582":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:2762:11461":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:635:13265":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:1562:2475":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:2773:18946":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:5737:20273":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:4753:11369":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:11329:12754":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:46229:12103":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:9184:28089":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:6787:31970":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6142:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:11888:10651":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:41589:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:9067:12266":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:6484:12446":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:5015:7082":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:2962:18806":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:46037:12097":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:4401:7015":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:7544:7253":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:4436:2435":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"11:1027:19343":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:20841:13684":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:10404:13334":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:22519:2552":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:4395:6857":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:41504:31536":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:10417:12334":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13971:11145":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:6673:13310":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:41826:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"15:394:19378":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:9223:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:7546:7253":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:6396:12442":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:1464:12521":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:6957:9285":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4550:7033":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:8605:20319":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:12361:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:13456:11007":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:923:13202":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:4748:7051":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:9188:10506":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:43494:12064":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11056:20464":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:7902:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"18:755:12329":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:3977:13594":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:43814:12681":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:30439:31554":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"18:609:13041":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:25974:11819":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:13830:11104":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:39413:13251":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:8794:13334":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:10471:12338":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:11943:10654":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:7833:12501":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"22:6563:3609":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:2164:2899":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:11354:10472":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:12769:10819":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:7531:9271":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:6008:7744":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:5553:11324":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:11093:12255":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:2832:11468":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"22:586:3573":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"6:4489:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"22:6773:8169":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:46161:12100":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13862:11114":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:7568:35575":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:39441:13252":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:8902:13672":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:1473:12522":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:6604:9331":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:5398:10500":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:41674:2615":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:13448:11006":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:11423:13291":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:1732:2919":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:5745:13307":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"22:7521:7250":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:5962:2094":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:43754:12678":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:41421:12032":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:43672:12673":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:4463:7022":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:2313:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:5614:2477":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:7414:12547":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:7329:2673":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:10737:12740":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:494:2761":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:1500:4456":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:6800:9281":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:9032:10500":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:6638:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"22:4870:7067":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:10581:13109":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:22006:31557":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10323:13093":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:3963:13593":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:11986:1407":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:11345:18835":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:5612:12373":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:7505:11338":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"22:4444:7020":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:3373:18865":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:5051:7085":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:568:3570":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:30915:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:0:821":{"crate_id":6,"path":["libc"],"kind":"module"},"2:40432:12623":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:42870:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:40331:12608":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:2821:18952":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"22:5827:7732":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7474:11337":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:44484:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:7680:2113":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:14315:11253":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"22:4816:7060":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:46845:12128":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:13125:10878":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:5977:19231":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13749:11087":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"11:1818:2932":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"22:6794:8170":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"11:1517:13216":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"14:31:13198":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:42845:12654":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"22:118:3226":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"9:426:19268":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:6534:13312":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:11987:1491":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:8279:12733":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:22027:31560":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:4650:7041":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:8328:3346":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:3985:13595":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:4156:13612":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:5720:12384":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:4906:13626":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:1638:4470":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13683:11071":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:6357:11396":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:2164:13057":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:640:13477":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:6744:8168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:1184:13052":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:22486:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:41398:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:32135:13250":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:41943:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:40239:7783":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:5589:12553":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:43985:12696":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:4076:2933":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:2842:18954":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:5651:11328":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:9217:3087":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:2918:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"22:4762:7053":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11098:12349":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"22:493:2761":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"6:4483:7025":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:40133:18899":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:9464:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:22420:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:1513:4458":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"22:4714:7047":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"21:4:1690":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"17:8711:20334":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:11981:1526":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:3260:13285":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:4616:7038":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"22:7584:7258":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:11553:28341":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:40372:12614":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:4380:7013":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:473:3559":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"2:2748:2814":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:2737:11315":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:5074:7088":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:6061:9323":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"22:4990:7080":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:1709:4478":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:13991:11151":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"11:2033:12493":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:12864:10836":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:6607:8162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:40913:12028":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:4691:13627":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"22:4852:7065":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:4456:7021":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:10403:12333":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:7654:2483":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:44540:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:6153:9327":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:488:3561":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:20622:31793":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:14015:11155":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:10782:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:11074:10585":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:21551:11797":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:40074:12026":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:6560:2475":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:595:3574":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:2781:11317":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:2926:19413":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"22:4860:7066":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:13083:10874":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10351:10537":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:12435:10755":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6438:12445":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:4476:11361":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"22:6803:8171":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:43849:12598":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:8848:2932":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:3295:11349":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:2705:2437":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:9219:3088":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:8317:2617":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13043:10869":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:3078:2485":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"11:2186:35555":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:30367:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:55:11552":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"6:554:3568":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:9118:10504":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:6894:9333":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:43085:12061":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:4010:13234":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:7073:20280":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"0:0:1689":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"22:6605:8162":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:5793:12389":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:43568:12566":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:2663:11312":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:41649:2932":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:45837:12086":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:9024:13342":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"22:7503:7247":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:1921:13534":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:41540:12732":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:1138:35434":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"11:695:13202":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"22:4554:7034":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:410:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:11778:18834":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:2378:13543":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:2690:2670":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:44277:12715":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"6:4800:7058":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:10718:13353":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:2213:2907":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:7233:35064":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10313:13092":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:44519:12881":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:10742:12742":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"22:6709:8165":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:45815:12085":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:3513:2473":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:44289:12718":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:562:3569":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:10802:12230":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:4955:13632":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"11:399:35556":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:2791:18948":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:7564:7256":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:47841:12170":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:21454:13683":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:0:496":{"crate_id":2,"path":["core"],"kind":"module"},"5:2461:11784":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:13719:11076":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:8533:12734":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:7799:11524":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:44002:12697":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:20669:32061":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:919:13201":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:9614:35583":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:42340:3087":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:12671:13493":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:2510:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:3737:13221":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:6850:11438":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:5608:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:8383:13636":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:4413:7016":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:22684:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"22:5006:7081":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:6573:4414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"22:481:3560":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:5967:7740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:2210:13277":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"22:5985:7742":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:3722:12529":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:21205:13553":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"22:4779:7055":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:11791:10645":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:6790:9279":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:13787:11096":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:898:2473":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:40391:12617":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:10310:12672":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:20637:31793":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:1973:13053":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:13964:11144":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:1982:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:3178:12524":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:4848:7064":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"11:798:13203":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:5994:20274":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:6136:6923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:2695:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:8205:10508":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"22:4893:7069":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:43824:12682":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:7862:12190":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"14:40:10646":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:22618:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:42179:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:2589:11309":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"22:4792:7057":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:10447:9341":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:12526:10768":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:11566:12677":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:42361:3089":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:7918:13320":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:10555:13104":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:579:3572":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:8989:24737":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:9977:13065":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:10870:13245":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:14044:11162":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3222:13284":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:1591:12526":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"22:7509:7248":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:1776:9271":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:42892:12658":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:3212:12523":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:42882:12057":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:10654:10542":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:4496:7027":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"11:2130:19338":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:673:13478":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"22:1593:4467":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:5437:13303":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:11045:10581":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:477:9312":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:8198:12634":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"18:660:13042":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13435:11000":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:10957:13123":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:8864:2475":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"18:582:2823":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:10361:10538":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"11:667:13201":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:3927:13592":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:11527:12671":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:944:13206":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5689:12379":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:45785:12084":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:39255:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:22552:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:40654:12634":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:4754:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:7698:33774":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:43971:12693":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:21898:11798":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:2959:2888":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"11:2060:13211":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:8826:12256":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:8006:13577":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:12905:10841":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"22:1518:4459":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:9952:10489":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"11:1838:12523":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13937:11137":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:2970:35030":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11260:13357":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"11:1611:9229":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:8957:12262":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"22:6686:4584":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:8889:12259":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:30120:13589":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:44301:12721":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:8224:13329":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:9475:13062":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:44476:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:41725:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:5940:13136":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:14037:11160":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:11485:13293":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:10066:13078":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:3667:13588":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:42218:2446":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:2984:13505":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:7407:11506":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:8210:11505":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:4113:2443":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:8542:20321":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:4764:7053":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"14:221:11652":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"22:6818:8172":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:12479:10763":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:47963:12179":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13016:10867":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:3111:13281":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"5:676:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:21981:11803":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"11:285:12515":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:11181:1810":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:21238:11795":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"5:1442:2475":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:6057:19386":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:13140:10882":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:2421:11302":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:46351:12106":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:7729:12726":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:40145:12600":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:1696:4476":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:9887:13071":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"22:6876:2750":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"typedef"},"1:4308:13295":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:9012:13340":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"22:5765:7726":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:1011:9236":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"9:0:2287":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:4420:7017":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"22:4676:7043":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:6020:7746":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:5843:12396":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:47993:12181":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"22:1525:4460":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12354:10744":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12605:10780":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:1702:4477":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4678:7043":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:6718:8166":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:3519:13060":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"22:4302:7007":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"18:481:12311":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4833:7062":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:11254:12748":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:45560:12075":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:2133:13054":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:9913:13072":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:44345:2496":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"11:1858:12526":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:11978:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:9194:12267":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"22:4662:7042":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:9032:12263":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"5:4004:2473":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:7193:2475":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:4764:388":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:4928:11375":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:2857:11320":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:1672:9236":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"13:226:11699":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:3162:18883":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:13914:11129":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:21044:13553":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:13492:11037":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:4812:13601":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"22:4636:7040":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:46085:12098":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12727:10798":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"22:6026:7747":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:4814:11371":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:21792:12575":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:5849:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4955:7076":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:14350:11266":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:8230:13331":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:1426:2933":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:13803:11100":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"22:1493:4455":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10316:27921":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:1755:2918":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:13923:11130":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:2243:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"9:237:12057":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:11317:12796":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:4842:7063":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:13620:11057":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:2105:20398":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:2745:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:39337:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:11155:12356":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:41665:2475":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"22:6034:7748":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:5978:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:40452:12625":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:12757:10817":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:9518:13063":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"11:968:12493":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:10071:13272":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:3453:13290":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:11792:12322":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:7231:18938":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:12106:10680":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:4789:9319":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:5383:9259":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:44466:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:30351:8751":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:6872:11333":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"22:1573:4465":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:23164:11818":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"22:7527:7251":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:43356:12570":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"22:4624:7039":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:8298:13329":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:6983:11504":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"22:5816:7731":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:11144:12355":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:7591:9338":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:14417:11278":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"22:7562:7256":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:119:3226":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:44527:12070":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:4144:2444":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:10812:10573":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:2602:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:13707:11073":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"22:4915:7071":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:14403:11275":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:2816:18951":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:9274:8924":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:7635:2560":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:43520:12663":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:8872:20339":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:11234:10594":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:6185:13309":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:2855:18957":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:8138:13197":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:5972:12368":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"11:311:12518":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:6740:18941":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"15:288:19368":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:9706:13066":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12982:10854":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:1482:13215":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:7872:12731":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:4626:10266":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:6658:12460":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:7451:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:43337:12568":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"22:4473:7024":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"22:1504:4457":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:2980:13504":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:11210:12359":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4973:7078":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:11021:9343":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"22:4387:7014":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:10253:13087":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:7099:12263":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:4039:13599":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:62:3172":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:2507:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"5:7284:2475":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:10925:13304":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:11388:20345":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:4929:7072":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"5:7465:12551":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:8474:12249":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:3583:2932":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"4:0:2286":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12118:10683":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:2825:11319":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:4186:1806":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:42620:11539":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:2759:11316":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:11951:13481":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:1765:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"22:7270:8545":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:12004:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:9092:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:13427:10997":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:504:13050":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:1565:2473":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:46015:12096":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:7272:8545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:11991:645":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"22:4768:7054":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:12936:10847":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"22:6646:4601":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:2355:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"18:624:35593":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:2694:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:43366:13259":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:2928:2058":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:7440:9268":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:6531:9223":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"16:3042:19415":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"22:6839:8174":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:12659:10788":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:2314:11291":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:4466:13616":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:6796:8170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:5626:13134":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:43438:13261":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:2689:11313":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:6425:13311":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:4335:2432":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"11:1048:35554":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:48055:12183":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"22:5977:7741":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:2332:11293":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:7521:10496":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:2920:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"11:630:2932":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"22:499:3562":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"1:728:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:500:3562":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:7584:13192":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:1514:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"22:5049:7085":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:11371:10614":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:8290:13332":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:14301:11251":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:5990:12554":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:7665:11341":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:44569:12073":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"22:6169:7782":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"20:57:2473":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"2:44182:12711":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"5:7476:13231":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"22:4454:7021":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"22:6623:3346":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:1841:8924":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:43804:12680":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:2352:11299":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:41455:13587":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:9428:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:7362:20281":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:43867:12597":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:11331:13246":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:6022:7746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"22:1629:4469":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:365:9227":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:1557:4463":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:43934:18846":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:6834:8173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:42140:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:12423:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:1075:13051":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:9162:2561":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"17:12631:10784":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:9126:2489":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"22:4877:1006":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:5916:12404":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"22:7556:7255":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:13591:11049":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:1666:1092":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:43842:12684":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:12891:10838":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:5807:12390":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:1820:2442":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:12005:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:5531:12552":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11241:20466":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:9604:10529":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:10148:13084":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:44128:18847":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:5775:7727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:32226:2815":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"22:4702:7046":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"9:330:11745":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"11:2180:11702":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:5364:18822":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"22:4648:7041":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"22:5861:7693":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:13795:11098":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:2246:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"22:4953:7076":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2921:1872":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:7250:3518":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:10390:12332":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:45855:12087":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:7020:9334":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:22354:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:7845:9092":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"22:0:821":{"crate_id":22,"path":["libc"],"kind":"module"},"2:40894:12643":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"22:1694:4476":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:3385:13232":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:7445:13185":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:532:3565":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:2743:2812":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"22:4604:7037":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:5363:20271":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:5301:11381":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:3407:9259":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:11117:30397":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:5877:7734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"3:234:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:8167:13552":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:7351:13491":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:22105:13590":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"18:538:10387":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:1979:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:42861:12657":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:10512:13287":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:4685:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:44324:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:30943:2823":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4630:10270":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:8166:12512":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:2690:11788":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:2910:2440":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11467:10617":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4794:7057":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:11983:1054":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:11329:20344":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:47914:12176":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:2376:13542":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:4900:11374":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"22:7276:8546":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:8918:13671":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:6900:11443":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:6303:11323":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"22:5834:7733":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:8068:12505":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:45985:12095":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:4664:7042":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:2471:18904":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"22:5078:7089":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10303:10451":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:2874:11321":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"11:2168:11700":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:21106:13678":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:10552:2113":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:7753:12500":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:9223:10507":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:7693:11332":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:10027:2932":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:8870:12258":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4824:7061":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:6214:13162":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:8842:653":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"2:9208:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:2513:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:42663:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:40046:12594":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:10038:13076":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:6688:4584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:9471:18908":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"20:97:2474":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"22:4798:7058":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"22:1661:4472":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:10352:13243":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"22:4961:7077":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:8741:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:7278:8546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:10520:12344":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:2318:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:40465:12626":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:42900:12659":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"22:5773:7727":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:14205:11224":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:7586:7258":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:39240:12590":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:8152:11344":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:11287:12276":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"12:0:2290":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:6724:12462":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:40682:12636":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"22:122:3227":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:7761:13250":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:10090:27920":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:12566:10776":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:42853:12656":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:1257:12493":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:9213:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:42021:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:2740:2671":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:41801:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"11:749:2473":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:40362:12612":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"18:515:10385":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:1818:13272":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:9173:3085":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:1545:4462":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:6648:4601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:21:684":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:39448:2432":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:10231:12566":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:6289:11394":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:6240:2094":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"22:4326:7009":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:5805:7730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:40865:12638":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"14:165:19349":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:2960:35031":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:11464:13292":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:4177:13614":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5955:7739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"22:546:3567":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"5:7255:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:11560:12757":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"22:7597:8736":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:2223:35521":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:43536:10508":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:6589:3440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:11955:10657":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:276:1825":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:13659:11066":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:41438:12034":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:7648:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4872:7067":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:40668:12635":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:6348:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"18:507:10382":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"22:7550:7254":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:2737:2810":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:44293:12719":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:4695:7045":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:6537:13667":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:9665:35589":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"22:6703:8164":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:45652:12079":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:8188:12608":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"18:614:35592":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:5554:13655":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:1569:9271":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:20897:13689":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:7277:2674":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:2208:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:7292:2475":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"8:0:1690":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:10486:12339":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:2592:13279":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:6487:9236":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:39420:11895":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"13:110:35562":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40514:12630":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:46304:12105":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:9744:35584":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:10945:13122":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6868:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:5320:9236":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:46909:12130":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12539:10771":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:4724:11368":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5987:7742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"18:96:24290":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:20853:31445":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:11550:12674":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:12303:10732":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"15:327:13396":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:878:9244":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:10747:12730":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:4164:13613":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:6516:11399":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:12448:13248":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"22:7293:8547":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:6044:10182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:9227:3091":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12035:10666":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12377:10748":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:11992:748":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:2752:1813":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"22:7573:7257":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:6809:13674":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:44050:12699":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:12174:10700":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:6128:12432":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:7609:8737":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:11567:12757":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:11905:10652":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:44269:12713":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:5073:13297":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:47765:12168":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:10509:13285":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"22:1688:4475":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:3262:13286":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:3184:30976":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:39271:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:42608:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"11:1501:19344":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7553:11508":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:43508:12662":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:14007:11154":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"22:6724:8167":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:11669:10629":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:8105:12511":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:11454:12363":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:2900:11322":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:2373:11300":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"22:5013:7082":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:44285:12717":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:2470:13553":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13757:11090":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:8315:2619":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:4770:7054":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:43772:12679":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:1059:13210":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:20609:2823":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12412:10752":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:7525:11339":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:39381:13485":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:3187:30984":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:7398:31580":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:1068:13212":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:3894:11356":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:1575:4465":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:11164:10589":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:908:9271":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:2611:11310":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:2399:11301":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:11105:12256":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:22717:11817":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:582:13474":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:47868:12172":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:43100:12660":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:11753:10643":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:11250:10595":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:4315:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:9571:35585":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:41657:2933":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:30381:31564":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:4228:13294":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:2162:2898":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:8211:12563":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:2897:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10981:13125":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:2349:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:9658:9300":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:6317:13173":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:4291:7006":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"22:4516:7029":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:43526:12664":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:46131:12099":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:6820:8172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4862:7066":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:6625:3346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:2497:11305":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:1733:4480":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:7384:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:20805:13682":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"9:450:19266":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:6197:13158":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:46721:12126":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:44582:12725":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"16:6713:12461":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:11990:643":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:10299:13303":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:7306:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:14236:11232":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:4047:13600":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:21229:13553":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"22:4481:7025":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:1746:11791":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:1782:13271":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:47059:12131":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:5471:9259":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:12646:10787":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:9471:13317":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"22:6571:4414":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:4616:13596":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10330:1821":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:46875:12129":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:7547:9275":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"11:760:9271":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:12826:10831":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:7741:13523":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:2803:11318":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:9172:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:10994:13126":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"10:44:11708":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"22:5918:7738":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"22:1588:4466":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"22:6042:10182":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:9048:10501":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"22:43:2752":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"typedef"},"6:541:3566":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:9221:3089":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:526:3564":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:12365:10747":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:21914:12577":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:12691:10792":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"22:505:3563":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"6:7529:7251":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:21673:13553":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:4148:13611":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"22:7461:8708":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:20941:13690":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"5:5841:2473":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:40484:12628":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13697:11072":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:2693:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:46609:12124":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:11849:18840":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:9107:1810":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:32099:11704":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:2962:11787":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:43718:12676":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:6441:2473":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:1503:13202":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:10621:13113":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:40344:12609":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:12952:10848":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:4560:13622":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10430:12335":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"20:0:1691":{"crate_id":20,"path":["smallvec"],"kind":"module"},"20:330:2477":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"17:11428:10616":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:10568:13107":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:5042:13297":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:4196:9259":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:9016:10499":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:4895:7069":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"22:7607:8737":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:2035:12529":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"22:5888:7736":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:40500:1960":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:4879:1006":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:6978:27681":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:5299:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:3810:11354":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:2141:12530":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:12346:10742":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"18:521:24302":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11767:10644":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6323:12437":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:7575:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:5422:13302":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:10266:13088":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:9485:35586":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:6598:8161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:40225:12606":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:5882:12398":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:5771:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:14380:11271":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"22:6866:8176":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:11498:10618":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:11302:12752":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:8111:13323":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:8139:11504":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:3220:13283":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:11541:12277":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:8265:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:11642:10628":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:6841:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:12089:10672":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:11924:10653":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:7384:12544":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:12568:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:7850:13317":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:21112:13680":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:46639:12125":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:14150:11205":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:8218:12680":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:8949:20342":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:6789:12475":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:40178:12027":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:47265:12162":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:3777:11353":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:6671:4586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:8794:20337":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10293:13090":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:2519:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:12994:10856":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:13673:11070":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"22:4831:7062":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"22:4378:7013":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:2757:2492":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:3647:2475":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:20667:32063":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:9225:3090":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:10269:13241":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"14:215:12513":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:1430:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"22:4683:7044":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:8350:12236":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:9821:10519":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:6915:35576":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:14359:11268":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:4716:7047":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:10544:13103":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:10937:25509":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:7128:30392":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:4535:7031":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:9777:20353":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:8086:12508":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:7657:2934":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:8272:12732":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:4887:7068":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:30311:8750":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:12457:10762":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"22:5042:7084":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"22:4785:7056":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:7494:12498":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"15:0:2292":{"crate_id":15,"path":["addr2line"],"kind":"module"},"22:567:3570":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"2:9215:3086":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:10338:13242":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11997:1510":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:2811:18950":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13096:10875":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:7599:8736":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:6015:7745":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:21966:31575":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:10013:10526":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:11264:10598":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:21210:13677":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:2700:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11852:10649":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:45736:12082":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:11946:13420":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:4428:7018":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:44297:12720":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:2519:11306":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:8841:20338":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:933:13492":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:1523:13220":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:47940:12178":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:1536:4461":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:7247:2475":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:3998:13233":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"22:6832:8173":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:9344:35587":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:4810:7059":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:4694:13616":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:22079:11816":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:40903:9295":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:11994:746":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:8899:20340":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:736:12522":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:14163:11211":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"22:5965:7740":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12318:10736":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:2931:1864":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"22:1671:4473":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"22:4467:7023":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11034:13129":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:11315:19000":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:46183:12101":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:13109:10876":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"18:113:24291":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:47859:12171":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"22:5735:7664":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40872:12639":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:3934:9259":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:7757:13316":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"22:4585:7036":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"22:4936:7073":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"16:6372:11325":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:20988:2898":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:5100:11380":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:5491:13304":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:11623:10625":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"11:403:35557":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:4035:13598":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:40475:12627":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:13548:11043":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:2590:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:9655:13065":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:5836:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:7184:8923":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:10837:13244":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:123:3227":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:2170:12532":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:21060:13676":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:10280:13089":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"18:699:12320":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:10458:12337":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:12792:10828":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:4785:31529":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:4908:7070":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:21954:12581":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"21:0:1690":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"5:6639:9236":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:41982:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"11:1831:9271":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:1631:4469":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:261:13048":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:44357:19039":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:2403:2300":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:13999:11152":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:6931:13174":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"22:5023:7083":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:7654:2550":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:3732:13292":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"20:343:2478":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"17:3395:13059":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:41707:2616":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:6986:11448":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:11872:10650":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:8997:20320":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:3635:10411":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:4543:7032":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:6461:9330":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"22:1555:4463":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:6288:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:44281:12716":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:3435:12233":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"5:35:9232":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:14197:11223":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:8632:20332":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6239:35580":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"9:486:19265":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"11:644:2933":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:5673:20272":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"22:4727:7049":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:8043:11563":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:6554:12456":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:0:1399":{"crate_id":1,"path":["std"],"kind":"module"},"1:5231:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:14341:11262":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:9806:20354":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:10883:10578":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:2493:13278":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:12254:10707":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:4428:9261":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:11929:12797":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:9153:10505":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11272:13131":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:21236:13686":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:8812:12255":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:6160:12435":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"13:0:2285":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:7661:18937":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:3220:11348":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:2201:12543":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12579:10777":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:4372:7012":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:1690:4475":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:498:2541":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:7885:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:5067:11379":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:13949:11140":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:47803:12169":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:10228:13657":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:4897:13625":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:2804:11463":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"14:202:18848":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:41904:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9476:9340":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:3834:13293":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:6775:8169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:39455:11896":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:4854:7065":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:4556:7034":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:45892:12089":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"11:1121:13214":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:11815:10646":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:4729:7049":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:12502:10767":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:10845:10576":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:5414:11383":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:3501:30654":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3330:9271":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"18:0:2295":{"crate_id":18,"path":["memchr"],"kind":"module"},"11:97:1826":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:5622:9321":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:14177:11217":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12618:10782":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:46405:12108":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"11:119:9224":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:11993:745":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:39193:18807":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:10377:12330":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"22:6006:7744":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8549:12254":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:352:2558":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:9399:13061":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:8401:12246":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:10906:10579":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4446:7020":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:707:12322":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:39154:2935":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:13574:11048":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:1673:4473":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10175:10529":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:40037:12593":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:7723:13480":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:9046:25515":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:11999:1508":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:6036:7748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:12161:10699":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:9966:10529":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:5920:7738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:4868:11373":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:8155:12230":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:21845:12576":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:149:9221":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:12004:10664":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:1586:12525":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"22:5847:7692":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:7734:12727":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:10799:13115":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:5028:11378":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"22:4461:7022":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:43377:12062":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:11726:10636":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:5590:11329":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:41733:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13069:10871":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:4963:7077":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:4949:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"18:690:12319":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:12966:10850":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:8491:13649":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:6805:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:7463:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:6939:20279":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:13957:11143":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:3183:35063":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"11:723:12521":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:950:13208":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13981:11148":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:4025:13597":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:20650:32066":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"20:280:2475":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"22:6587:3440":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:11007:13127":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:6130:7780":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:5829:7732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:5025:7083":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"14:7:13198":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:1506:4457":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:6763:12474":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40197:12605":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:11038:9345":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:9675:9301":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:14259:11245":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"11:1538:13217":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:8909:13418":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:7227:18939":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:2767:11458":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:30345:2484":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"22:6616:8163":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:9734:13067":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:4258:2425":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:7025:12488":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:11189:10590":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:9318:10511":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"11:817:13206":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1569:4464":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:12396:32872":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:10444:12336":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"6:4638:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:11783:13237":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"22:4906:7070":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"22:4418:7017":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:41784:2933":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"22:1636:4470":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:2846:18955":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:4524:7030":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:3058:10407":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:40110:12597":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:40159:18900":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"22:5072:7088":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:10499:12340":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:8659:20333":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:8235:13586":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:9592:9297":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:40888:12641":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:10792:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:11995:747":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:9939:13074":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:8971:13337":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"22:5875:7734":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:4236:2932":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:1917:2921":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:14054:11167":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:11696:10632":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:6815:11434":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:14102:11204":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"22:5880:7735":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10161:13085":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:5406:13301":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:43429:12572":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"22:4982:7079":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"3:0:442":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13557:11046":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:6386:12441":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:45630:12078":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"22:1567:4464":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:4032:11357":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:5793:7728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:587:3573":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:22651:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"22:5797:7729":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:5767:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:7331:35578":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:22387:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:9875:13070":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:4992:7080":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"22:7248:3518":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:10110:13083":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:4987:9259":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:10597:13111":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:6977:13175":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:9183:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}