{"root":"0:0:1793","crate_version":"0.9.9","includes_private":false,"index":{"a:2:2832:2788-0:230:1787":{"id":"a:2:2832:2788-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214:2047":{"id":"0:214:2047","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:2:2566-0:252:1784":{"id":"b:2:2566-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:283:715":{"id":"0:283:715","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178-0:284:1786":{"id":"0:178-0:284:1786","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1786","glob":false}}},"b:2:2260-0:252:1784":{"id":"b:2:2260-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:176-0:252:1784":{"id":"0:176-0:252:1784","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1784","glob":false}}},"2:12426:26418":{"id":"2:12426:26418","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12427:26419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:451":{"id":"0:202:451","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:451":{"id":"0:261:451","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5532:32803":{"id":"5:5532:32803","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:998":{"id":"0:91:998","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:252:1784":{"id":"b:2:2581-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174-0:79:1783":{"id":"0:174-0:79:1783","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1783","glob":false}}},"a:2:2792:250-0:270:1789":{"id":"a:2:2792:250-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12425:32123":{"id":"2:12425:32123","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12072:1502","crate::ops::IndexMut":"2:3076:13655","str::slice_unchecked":"2:12424:32122"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:2060":{"id":"0:235:2060","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12465:32126":{"id":"2:12465:32126","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12105:18989","str::split":"2:12453:26426","prim@char":"1:12066:447","str::split_terminator":"2:12462:32125"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43587:12827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183-0:73:1790":{"id":"0:183-0:73:1790","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1790","glob":false}}},"5:5516":{"id":"5:5516","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5517:32800","5:5518:2679","5:5521:32801","5:5524:32802","5:5532:32803","5:5533:32804","5:5534:2592","5:5535:25808","5:5536:25807"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:213:2044":{"id":"0:213:2044","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:8605:2728-0:230:1787":{"id":"a:2:8605:2728-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:284:1786":{"id":"b:2:2263-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:2069":{"id":"0:255:2069","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:211:1788":{"id":"0:211:1788","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:2042","0:213:2044","0:214:2047","0:215:2051"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2775:240-0:211:1788","a:2:8605:2728-0:211:1788","a:2:2832:2788-0:211:1788","a:2:2792:250-0:211:1788","a:2:8606:2727-0:211:1788","b:2:2566-0:211:1788","b:2:2260-0:211:1788","b:2:2576-0:211:1788","b:2:2570-0:211:1788","b:2:2263-0:211:1788","b:2:3411-0:211:1788","b:2:2581-0:211:1788","b:5:680-0:211:1788","0:223","0:218","0:222","0:217","0:228","0:225","0:220","0:226"]}}},"b:2:2570-0:284:1786":{"id":"b:2:2570-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171-0:77:1780":{"id":"0:171-0:77:1780","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1780","glob":false}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2580:1586":{"id":"2:2580:1586","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12404:868":{"id":"2:12404:868","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12066:447"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185-0:298:1792":{"id":"0:185-0:298:1792","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1792","glob":false}}},"b:2:2263-0:270:1789":{"id":"b:2:2263-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12521:32140":{"id":"2:12521:32140","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12066:131","`FromStr`":"2:12065:13805"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12065:13805","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12065:13805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:230:1787":{"id":"b:5:680-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3011","5:683:3012","5:684:3013"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5536:25807":{"id":"5:5536:25807","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12527:25805"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12432:30131":{"id":"2:12432:30131","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12431:30128"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43802:12840","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2788-0:270:1789":{"id":"a:2:2832:2788-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:233:2058":{"id":"0:233:2058","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2832:2788-0:284:1786":{"id":"a:2:2832:2788-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:93:2325":{"id":"0:93:2325","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12435:30124":{"id":"2:12435:30124","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43811:12841","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270:1789":{"id":"0:270:1789","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1720"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2775:240-0:270:1789","a:2:8605:2728-0:270:1789","a:2:2832:2788-0:270:1789","a:2:2792:250-0:270:1789","a:2:8606:2727-0:270:1789","b:2:2566-0:270:1789","b:2:2260-0:270:1789","b:2:2576-0:270:1789","b:2:2570-0:270:1789","b:2:2263-0:270:1789","b:2:3411-0:270:1789","b:2:2581-0:270:1789","b:5:680-0:270:1789","0:273","0:280","0:279","0:276","0:282","0:274","0:277"]}}},"a:2:8605:2728-0:211:1788":{"id":"a:2:8605:2728-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12407:32119":{"id":"2:12407:32119","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:1785":{"id":"0:192:1785","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2033","0:196:2035","0:198:2037"],"impls":["0:70","a:2:2775:240-0:192:1785","a:2:8605:2728-0:192:1785","a:2:2832:2788-0:192:1785","a:2:2792:250-0:192:1785","a:2:8606:2727-0:192:1785","b:2:2566-0:192:1785","b:2:2260-0:192:1785","b:2:2576-0:192:1785","b:2:2570-0:192:1785","b:2:2263-0:192:1785","b:2:3411-0:192:1785","b:2:2581-0:192:1785","b:5:680-0:192:1785","0:204","0:206","0:201","0:209","0:200","0:207","0:203"]}}},"b:2:2263-0:211:1788":{"id":"b:2:2263-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2569:2953":{"id":"2:2569:2953","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2543:137"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3411-0:230:1787":{"id":"b:2:3411-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2566-0:270:1789":{"id":"b:2:2566-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:1790":{"id":"0:73:1790","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:2832:2788-0:298:1792":{"id":"a:2:2832:2788-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:275:451":{"id":"0:275:451","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:998","0:92:2318","0:93:2325","0:94:2331"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:298:1792":{"id":"b:2:2263-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170-0:74:1779":{"id":"0:170-0:74:1779","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1779","glob":false}}},"2:2572:741":{"id":"2:2572:741","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12433:27849":{"id":"2:12433:27849","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43773:12837","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12434:32124":{"id":"2:12434:32124","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43783:12838","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12530:13624":{"id":"2:12530:13624","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4573:13624"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43827:12749","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:252:1784":{"id":"a:2:2792:250-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12413:32121":{"id":"2:12413:32121","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12453:26426":{"id":"2:12453:26426","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12105:18989","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::split_whitespace":"2:12431:30128","str::rsplit":"2:12459:26430"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43519:12720","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:192:1785":{"id":"b:2:3411-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3411-0:284:1786":{"id":"b:2:3411-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:298:1792":{"id":"b:2:2581-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5518:2679":{"id":"5:5518:2679","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12442:25961":{"id":"2:12442:25961","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2067":{"id":"0:253:2067","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5534:2592":{"id":"5:5534:2592","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:252:1784":{"id":"a:2:2775:240-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2581-0:270:1789":{"id":"b:2:2581-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5535:25808":{"id":"5:5535:25808","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12526:25806"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:211:1788":{"id":"b:5:680-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3011","5:683:3012","5:684:3013"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2576-0:230:1787":{"id":"b:2:2576-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:192:1785":{"id":"b:2:2260-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:2727-0:211:1788":{"id":"a:2:8606:2727-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:680-0:192:1785":{"id":"b:5:680-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3011","5:683:3012","5:684:3013"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:2727-0:284:1786":{"id":"a:2:8606:2727-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2581-0:284:1786":{"id":"b:2:2581-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12499:32134":{"id":"2:12499:32134","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2579:132":{"id":"2:2579:132","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:184-0:72:1791":{"id":"0:184-0:72:1791","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1791","glob":false}}},"0:257:2071":{"id":"0:257:2071","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:229:715":{"id":"0:229:715","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5521:32801":{"id":"5:5521:32801","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:211:1788":{"id":"b:2:2576-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3411-0:270:1789":{"id":"b:2:3411-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:715":{"id":"0:251:715","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1786":{"id":"0:284:1786","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1720"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2775:240-0:284:1786","a:2:8605:2728-0:284:1786","a:2:2832:2788-0:284:1786","a:2:2792:250-0:284:1786","a:2:8606:2727-0:284:1786","b:2:2566-0:284:1786","b:2:2260-0:284:1786","b:2:2576-0:284:1786","b:2:2570-0:284:1786","b:2:2263-0:284:1786","b:2:3411-0:284:1786","b:2:2581-0:284:1786","b:5:680-0:284:1786","0:290","0:288","0:291","0:287","0:293","0:294","0:296"]}}},"b:2:2263-0:252:1784":{"id":"b:2:2263-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:71:2039":{"id":"0:71:2039","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:3013":{"id":"5:684:3013","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12436:26438":{"id":"2:12436:26438","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:284:1786":{"id":"a:2:2775:240-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2260-0:284:1786":{"id":"b:2:2260-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77:1780":{"id":"0:77:1780","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:2728-0:270:1789":{"id":"a:2:8605:2728-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12445:2995":{"id":"2:12445:2995","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41559:194","prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12496:32132":{"id":"2:12496:32132","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:230:1787":{"id":"b:2:2581-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12449:2959":{"id":"2:12449:2959","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41559:194","prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:2788-0:211:1788":{"id":"a:2:2832:2788-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12518:32139":{"id":"2:12518:32139","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:298:1792":{"id":"b:2:2566-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12471:26434":{"id":"2:12471:26434","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12066:447","str::splitn":"2:12468:26432","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43641:12830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:230:1787":{"id":"b:2:2570-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180-0:211:1788":{"id":"0:180-0:211:1788","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1788","glob":false}}},"2:12459:26430":{"id":"2:12459:26430","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12105:18989","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::split":"2:12453:26426"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43537:12723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:1784":{"id":"0:252:1784","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:2067","0:255:2069","0:257:2071"],"impls":["a:2:2775:240-0:252:1784","a:2:8605:2728-0:252:1784","a:2:2832:2788-0:252:1784","a:2:2792:250-0:252:1784","a:2:8606:2727-0:252:1784","b:2:2566-0:252:1784","b:2:2260-0:252:1784","b:2:2576-0:252:1784","b:2:2570-0:252:1784","b:2:2263-0:252:1784","b:2:3411-0:252:1784","b:2:2581-0:252:1784","b:5:680-0:252:1784","0:266","0:262","0:265","0:260","0:263","0:268","0:259"]}}},"b:2:2263-0:192:1785":{"id":"b:2:2263-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110-0:331:2326":{"id":"0:110-0:331:2326","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2326","glob":false}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2584:132":{"id":"2:2584:132","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31984:11840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:215:2051":{"id":"0:215:2051","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:2:2581-0:192:1785":{"id":"b:2:2581-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2576-0:284:1786":{"id":"b:2:2576-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12474:26436":{"id":"2:12474:26436","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12531:32142":{"id":"2:12531:32142","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4570:32142"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43836:12754","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5517:32800":{"id":"5:5517:32800","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1934","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:9058","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1934","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:9058","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:2728-0:252:1784":{"id":"a:2:8605:2728-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227:657":{"id":"0:227:657","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12424:32122":{"id":"2:12424:32122","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12072:1502","str::slice_mut_unchecked":"2:12425:32123","crate::ops::Index":"2:3072:13654"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:715":{"id":"0:269:715","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12498:32133":{"id":"2:12498:32133","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1792":{"id":"0:298:1792","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:2775:240-0:298:1792","a:2:8605:2728-0:298:1792","a:2:2832:2788-0:298:1792","a:2:2792:250-0:298:1792","a:2:8606:2727-0:298:1792","b:2:2566-0:298:1792","b:2:2260-0:298:1792","b:2:2576-0:298:1792","b:2:2570-0:298:1792","b:2:2263-0:298:1792","b:2:3411-0:298:1792","b:2:2581-0:298:1792","0:300"]}}},"2:12509:26439":{"id":"2:12509:26439","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12416:2004":{"id":"2:12416:2004","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41559:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2617:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:230:1787":{"id":"b:2:2263-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12406:32118":{"id":"2:12406:32118","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2788-0:252:1784":{"id":"a:2:2832:2788-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5524:32802":{"id":"5:5524:32802","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:1793":{"id":"0:0:1793","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1778","0:170-0:74:1779","0:171-0:77:1780","0:172-0:80:1781","0:173-0:76:1782","0:174-0:79:1783","0:176-0:252:1784","0:177-0:192:1785","0:178-0:284:1786","0:179-0:230:1787","0:180-0:211:1788","0:181-0:270:1789","0:183-0:73:1790","0:184-0:72:1791","0:185-0:298:1792"],"is_stripped":false}}},"a:2:2792:250-0:192:1785":{"id":"a:2:2792:250-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12420:26394":{"id":"2:12420:26394","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2570-0:211:1788":{"id":"b:2:2570-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:1787":{"id":"0:230:1787","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2056","0:233:2058","0:235:2060","0:237:2062","0:239:2064"],"impls":["a:2:2775:240-0:230:1787","a:2:8605:2728-0:230:1787","a:2:2832:2788-0:230:1787","a:2:2792:250-0:230:1787","a:2:8606:2727-0:230:1787","b:2:2566-0:230:1787","b:2:2260-0:230:1787","b:2:2576-0:230:1787","b:2:2570-0:230:1787","b:2:2263-0:230:1787","b:2:3411-0:230:1787","b:2:2581-0:230:1787","b:5:680-0:230:1787","0:247","0:241","0:245","0:250","0:248","0:244","0:242"]}}},"2:12439:25959":{"id":"2:12439:25959","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168-0:82:1778":{"id":"0:168-0:82:1778","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1778","glob":false}}},"0:243:451":{"id":"0:243:451","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:298:1792":{"id":"a:2:2775:240-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3411-0:298:1792":{"id":"b:2:3411-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12456:26428":{"id":"2:12456:26428","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11921:12722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12489:32129":{"id":"2:12489:32129","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12105:18989","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::match_indices":"2:12486:32128"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43687:12833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:270:1789":{"id":"b:2:2260-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:211:1788":{"id":"b:2:2581-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12524:26336":{"id":"2:12524:26336","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39513:26329","Self::is_ascii":"2:12523:25809"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39513:26329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12427:26419":{"id":"2:12427:26419","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12426:26418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2331":{"id":"0:94:2331","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:657":{"id":"0:295:657","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12428:12842":{"id":"2:12428:12842","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12066:447"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43489:12820","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:192:1785":{"id":"b:2:2566-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12506:24596":{"id":"2:12506:24596","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:252:1784":{"id":"b:5:680-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3011","5:683:3012","5:684:3013"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:2727-0:270:1789":{"id":"a:2:8606:2727-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2576-0:298:1792":{"id":"b:2:2576-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12526:25806":{"id":"2:12526:25806","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:252:1784":{"id":"b:2:2576-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:1781":{"id":"0:80:1781","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3040:2167","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3040:2167","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12503:32136":{"id":"2:12503:32136","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:192:1785":{"id":"b:2:2570-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12422:26395":{"id":"2:12422:26395","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:181-0:270:1789":{"id":"0:181-0:270:1789","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1789","glob":false}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12492:32130":{"id":"2:12492:32130","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:2727-0:192:1785":{"id":"a:2:8606:2727-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:2727-0:230:1787":{"id":"a:2:8606:2727-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:680-0:270:1789":{"id":"b:5:680-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3011","5:683:3012","5:684:3013"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:289:451":{"id":"0:289:451","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12500:32135":{"id":"2:12500:32135","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12130:18986","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12418:9067":{"id":"2:12418:9067","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41559:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2617:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2570-0:252:1784":{"id":"b:2:2570-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:298:1792":{"id":"b:2:2260-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12412:25385":{"id":"2:12412:25385","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11665:18990"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2064":{"id":"0:239:2064","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:237:2062":{"id":"0:237:2062","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12462:32125":{"id":"2:12462:32125","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12105:18989","str::split":"2:12453:26426","prim@char":"1:12066:447","`DoubleEndedIterator`":"2:7517:125","str::rsplit_terminator":"2:12465:32126"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43569:12826","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:284:1786":{"id":"a:2:2792:250-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12515:32138":{"id":"2:12515:32138","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112-0:327:2339":{"id":"0:112-0:327:2339","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2339","glob":false}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173-0:76:1782":{"id":"0:173-0:76:1782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1782","glob":false}}},"0:219:451":{"id":"0:219:451","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12431:30128":{"id":"2:12431:30128","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12432:30131"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43793:12839","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272:1720":{"id":"0:272:1720","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:12403":{"id":"2:12403","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12404:868","2:12405:2300","2:12406:32118","2:12407:32119","2:12409:32120","2:12412:25385","2:12413:32121","2:12414:339","2:12415:338","2:12416:2004","2:12418:9067","2:12420:26394","2:12422:26395","2:12424:32122","2:12425:32123","2:12426:26418","2:12427:26419","2:12428:12842","2:12429:12852","2:12430:12704","2:12431:30128","2:12432:30131","2:12433:27849","2:12434:32124","2:12435:30124","2:12436:26438","2:12439:25959","2:12442:25961","2:12445:2995","2:12449:2959","2:12453:26426","2:12456:26428","2:12459:26430","2:12462:32125","2:12465:32126","2:12468:26432","2:12471:26434","2:12474:26436","2:12477:26437","2:12480:2500","2:12483:32127","2:12486:32128","2:12489:32129","2:12492:32130","2:12494:32131","2:12496:32132","2:12498:32133","2:12499:32134","2:12500:32135","2:12503:32136","2:12506:24596","2:12509:26439","2:12512:32137","2:12515:32138","2:12518:32139","2:12521:32140","2:12523:25809","2:12524:26336","2:12525:25810","2:12526:25806","2:12527:25805","2:12528:32141","2:12530:13624","2:12531:32142"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:208:657":{"id":"0:208:657","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12480:2500":{"id":"2:12480:2500","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12105:18989","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::rmatches":"2:12483:32127"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43723:12835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:230:1787":{"id":"a:2:2775:240-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212:2042":{"id":"0:212:2042","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:8606:2727-0:252:1784":{"id":"a:2:8606:2727-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2792:250-0:230:1787":{"id":"a:2:2792:250-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12525:25810":{"id":"2:12525:25810","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:2728-0:298:1792":{"id":"a:2:8605:2728-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:230:1787":{"id":"b:2:2566-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12409:32120":{"id":"2:12409:32120","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12407:32119"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:715":{"id":"0:210:715","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111-0:313:1910":{"id":"0:111-0:313:1910","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1910","glob":false}}},"2:12477:26437":{"id":"2:12477:26437","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2570-0:298:1792":{"id":"b:2:2570-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:284:1786":{"id":"b:5:680-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3011","5:683:3012","5:684:3013"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12483:32127":{"id":"2:12483:32127","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12105:18989","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::matches":"2:12480:2500"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43741:12836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12468:26432":{"id":"2:12468:26432","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989","str::rsplitn":"2:12471:26434"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43623:12829","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12414:339":{"id":"2:12414:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12415:338","`u8`":"1:12083:1608"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1720":{"id":"0:195:1720","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:231:2056":{"id":"0:231:2056","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12528:32141":{"id":"2:12528:32141","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4572:32141"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43818:12755","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12494:32131":{"id":"2:12494:32131","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2176":{"id":"0:83:2176","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3413:1599":{"id":"2:3413:1599","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39326:12028","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:211:1788":{"id":"b:2:2566-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5533:32804":{"id":"5:5533:32804","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1934","`String`":"5:7487:246"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1934","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:9058","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:298:1792":{"id":"a:2:2792:250-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:179-0:230:1787":{"id":"0:179-0:230:1787","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1787","glob":false}}},"0:76:1782":{"id":"0:76:1782","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:211:1788":{"id":"b:2:2260-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267:657":{"id":"0:267:657","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2585:1584":{"id":"2:2585:1584","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2788-0:192:1785":{"id":"a:2:2832:2788-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3411-0:252:1784":{"id":"b:2:3411-0:252:1784","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172-0:80:1781":{"id":"0:172-0:80:1781","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1781","glob":false}}},"2:12430:12704":{"id":"2:12430:12704","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43505:10641","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2265:24483":{"id":"2:2265:24483","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:657":{"id":"0:249:657","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:2728-0:192:1785":{"id":"a:2:8605:2728-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2792:250-0:211:1788":{"id":"a:2:2792:250-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12405:2300":{"id":"2:12405:2300","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12523:25809":{"id":"2:12523:25809","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:192:1785":{"id":"a:2:2775:240-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2262:2490":{"id":"2:2262:2490","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:715":{"id":"0:297:715","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12429:12852":{"id":"2:12429:12852","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12066:447"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43495:12821","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1779":{"id":"0:74:1779","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9146:155","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:2182":{"id":"0:84:2182","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1720":{"id":"0:286:1720","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:3411-0:211:1788":{"id":"b:2:3411-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:657":{"id":"0:281:657","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:2728-0:284:1786":{"id":"a:2:8605:2728-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:2728","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:92:2318":{"id":"0:92:2318","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2037":{"id":"0:198:2037","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:72:1791":{"id":"0:72:1791","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2576-0:192:1785":{"id":"b:2:2576-0:192:1785","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177-0:192:1785":{"id":"0:177-0:192:1785","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1785","glob":false}}},"b:2:2566-0:284:1786":{"id":"b:2:2566-0:284:1786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12527:25805":{"id":"2:12527:25805","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:682:3011":{"id":"5:682:3011","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2260-0:230:1787":{"id":"b:2:2260-0:230:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2787","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2490"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:270:1789":{"id":"b:2:2570-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12415:338":{"id":"2:12415:338","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12083:1608"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:683:3012":{"id":"5:683:3012","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12486:32128":{"id":"2:12486:32128","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12105:18989","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::rmatch_indices":"2:12489:32129"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43669:12832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:1783":{"id":"0:79:1783","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3043:1973","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:270:1789":{"id":"a:2:2775:240-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:82:1778":{"id":"0:82:1778","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2176","0:84:2182"],"is_stripped":false}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:211:1788":{"id":"a:2:2775:240-0:211:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193:2033":{"id":"0:193:2033","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1720"]},"discriminant":null}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:196:2035":{"id":"0:196:2035","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2576-0:270:1789":{"id":"b:2:2576-0:270:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:2727-0:298:1792":{"id":"a:2:8606:2727-0:298:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12512:32137":{"id":"2:12512:32137","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:18989"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:13397","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:18987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"16:6226:13316":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:47841:12305":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"20:350:2589":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"5:2223:33124":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"18:515:10517":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:7669:13705":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:6268:33235":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:39993:12754":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:4800:416":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:9505:136":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:2380:11437":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:7758:13630":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:5459:13462":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:12576:10898":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:2934:19102":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:9549:3212":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:7420:12699":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:7792:20437":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:12484:10883":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:7920:134":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:41345:13742":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:32045:12746":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:22869:184":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:9993:9436":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:12906:9445":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:14134:11291":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:1075:13209":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:43495:12821":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:6043:7882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:14282:11347":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:9762:33242":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:3313:13447":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"11:2479:33208":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:4333:7134":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:11417:12912":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:4053:11493":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:489:3682":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:11651:13405":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:4667:10402":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:8294:132":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:4066:13753":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"22:6847:8308":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:43519:12720":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:2854:11597":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:7328:2585":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:2366:3014":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:7463:12705":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:5474:108":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"22:4698:7170":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:9488:33246":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:14514:11408":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"18:652:10514":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:42029:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:10114:13432":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11235:12508":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:588:3694":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"11:483:148":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:46582:12257":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:12089:1664":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:9505:133":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"22:5788:7862":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:22704:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:6017:20428":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:12119:12471":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:8903:2585":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"15:327:13557":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:574:3692":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:3760:13451":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:22:728":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"11:298:12670":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:43069:12817":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:4529:7155":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13792:11206":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:2359:11436":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:2450:11440":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:6808:2971":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:9445:13219":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:4339:13455":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:6092:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:9233:12400":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:6156:12587":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:7067:12646":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"18:727:10535":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:7764:12884":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:11847:12828":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:40092:31232":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"22:4371:7136":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"11:2238:12648":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:41795:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:12437:10872":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:40754:12796":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:9136:237":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:10878:24967":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:6811:8305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:0:310":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:40306:12779":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:44266:12877":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:676:253":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:13202:11010":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:6721:20432":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:6531:12609":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"5:2959:3011":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:14156:11296":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"11:1072:33212":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:46694:12259":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"22:5780:7861":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:41951:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:256:13205":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:40075:103":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:4070:13754":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10165:20527":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:3763:13452":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:21193:13845":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"0:0:1793":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"5:7387:13641":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:45709:12215":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:4613:11501":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:12701:158":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4643:7165":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"22:6611:8296":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:6499:11480":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:30800:198":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"18:590:10522":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:40265:12772":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:533:3686":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:44330:19191":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:40326:12781":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10788:20596":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:505:2651":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:12136:10801":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4663:10398":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:11024:12390":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"22:4641:7165":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:2366:204":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:43073:12818":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"11:2303:13377":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"11:1876:12680":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:12778:10924":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:4282:2532":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:41753:3054":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:7310:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:9063:13500":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:1514:4579":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:4992:13787":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:42068:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2930:19101":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"18:681:12465":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11086:13282":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:3720:12684":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:2243:12692":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:8928:12392":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:3248:139":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:39319:13411":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:8659:20473":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:10285:13812":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:4815:7184":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:2472:11441":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:5423:13460":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:5661:12530":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:7885:13475":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:42330:3210":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:5853:9455":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:11244:10754":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:7570:2790":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:41374:12174":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"11:759:12676":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:7391:20435":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:6856:8309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:12079:791":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:5508:9392":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:39221:218":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:7614:8871":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:12943:146":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:9789:19055":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:21356:13705":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:1596:4588":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:4540:7156":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:7293:8681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"22:532:3686":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"2:43773:12837":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"22:4898:7194":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:14522:11411":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:1585:12680":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:11348:13518":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"10:0:2395":{"crate_id":10,"path":["adler"],"kind":"module"},"6:5063:7211":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:8848:20491":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"22:5806:7863":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:7478:8843":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:42309:3208":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:3076:13655":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"22:4492:7151":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:7320:2585":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:6098:9392":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:4745:11504":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:1257:12648":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:11173:20619":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:7660:11648":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:3565:13218":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:11639:10722":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:46134:12233":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:39265:219":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11910:10781":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:12846:10934":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:1697:4597":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12280:10835":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:40042:19047":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:4949:7199":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:12015:12955":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:44097:19002":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"22:6143:7915":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"9:0:2394":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:3232:11427":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"22:5992:7876":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:12293:10836":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"22:4392:7139":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13085:10986":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:39914:12749":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"9:330:11881":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:44293:126":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:42577:113":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"11:680:3054":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:907:9404":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"22:1695:4597":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:11186:13404":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:10139:20526":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:42549:12181":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:9328:10641":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:40227:12766":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:47380:12296":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:21226:13840":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:2879:2602":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"21:0:1794":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"17:14110:11287":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:7436:11642":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:5135:9400":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"22:4431:7143":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:21312:13831":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:7488:2791":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:10561:12490":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"22:6049:7883":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:41458:31229":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:4406:7140":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:13710:11185":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:10278:13243":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:3830:11490":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:6385:178":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:5995:12521":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:9886:13226":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4805:7183":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:582:2941":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:22770:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:2216:13437":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:654:3742":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:2844:1922":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"22:4509:7153":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:8422:13791":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:46378:12241":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:9574:33240":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"22:652:3742":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"22:5890:7869":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:13922:11236":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:40397:12787":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:10982:11899":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"22:4757:7177":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4433:7143":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:6720:8299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:21296:13705":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"5:6795:2587":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:11153:13403":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:41608:2963":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"22:1648:4592":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:6687:12615":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:7544:12654":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:5156:206":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:9028:24593":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"22:6080:7884":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:9312:9059":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:563:3690":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"22:5750:7797":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"22:6854:8309":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:8895:20492":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:7621:20436":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:43463:12197":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:7938:19085":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:1138:33095":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:43793:12839":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:4415:2543":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:21093:13839":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"6:1912:4767":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:10214:13240":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:7403:104":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:4527:11498":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:4523:7154":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"22:1568:4585":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:40297:12778":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:2360:197":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:5790:7862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:30430:30519":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"5:3204:12680":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:11367:10730":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:43971:12854":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:4853:7189":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12685:10912":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:11023:10716":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:12071:1470":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:2568:9449":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:7624:8872":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"9:507:11902":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"22:7536:7375":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:261:9369":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"22:4546:7157":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4480:7149":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:6454:12797":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:43641:12830":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:6318:11530":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:41873:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:13071:10984":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:11473:10605":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:8318:12891":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:13554:11136":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:10008:9440":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:1570:4585":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13667:11179":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:45533:12208":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:4745:7175":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:4459:7146":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:1671:1151":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:21240:3021":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"6:4892:7193":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:8926:20493":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:12130:18986":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:8715:13397":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:44439:222":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:3655:10544":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:10850:123":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:8195:12667":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"22:4790:7181":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:8183:12362":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:1986:199":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:4768:13757":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:2223:13688":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"22:5011:7206":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:3539:13721":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:483:9447":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:6622:8297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"22:1499:4577":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:3142:97":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:43306:12725":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:7606:9469":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:10520:12487":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:2783:2548":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:13244:11014":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"22:4845:7188":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4786:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:1751:11927":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:43741:12836":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:11272:12510":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:42632:132":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:4344:11494":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"11:2461:11836":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:47238:12295":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:10805:12888":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"22:4773:7179":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:1842:13433":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"18:766:24462":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"11:357:9358":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10628:12497":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:12196:10807":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:22257:30520":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:1036:13369":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:897:2583":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:45865:12222":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"22:4629:7164":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"18:96:24451":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:1102:33097":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:6376:20430":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:22205:12738":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:5858:2583":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:9564:13221":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:1546:4583":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:5648:13292":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:40155:9422":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"20:328:2586":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"17:11327:12513":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:10197:13237":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"22:5862:7825":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:40214:12765":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:6494:9463":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:2722:11451":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:39340:12029":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"14:7:13356":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:40236:12768":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:9972:13231":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13135:11003":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:7796:13409":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"22:5876:7826":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"18:736:24461":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:43940:12850":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"11:344:33209":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:542:3687":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:40255:12771":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:4731:13771":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:40009:12755":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:11687:20500":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"22:4732:7174":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"11:731:13360":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"22:7565:7379":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:8263:13487":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:7743:13629":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:12091:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:5667:12883":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:3198:25767":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:45847:12221":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"22:4559:7159":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"22:6809:8305":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:40803:12801":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:41557:196":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:10626:12829":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:10227:13241":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:1496:4576":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:2394:13700":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"11:666:3053":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:14068:11276":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:11710:10725":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:14145:11295":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:7523:12653":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:11250:12408":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:4653:13751":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"22:7285:8680":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:932:13642":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:4511:7153":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:10507:12486":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:11375:12409":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:2368:13691":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:4949:11511":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:501:3683":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:13546:11133":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"11:1850:2583":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:14024:11262":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:39146:12747":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"22:7571:7380":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:39957:12159":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"15:288:19520":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"11:2260:13368":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:10059:10659":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"11:2351:2585":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:10776:13513":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:12422:10868":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"22:6586:4535":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:20902:30079":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:5085:7214":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:4501:7152":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:9976:9435":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:1568:9404":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"18:699:12469":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:39941:30516":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:4474:7148":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11971:10785":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"11:1842:3053":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:12473:10880":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12452:10876":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:1058:13368":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11179:12388":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:7590:7382":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:3475:13450":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:7479:159":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"5:1503:13360":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:2214:133":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:11886:10780":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:6909:19089":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:42316:3207":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"22:4890:7193":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"22:1505:4578":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:39177:213":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:1650:4592":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:12067:1624":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:45758:12217":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"18:481:12460":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:14076:11279":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7736:11651":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:4592:7161":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:1514:213":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:527:3685":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:22096:12733":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10616:12494":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:21488:13841":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4728:13782":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:1018:2311":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"11:1862:12678":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13567:11142":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:2534:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:8329:13490":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:7782:12655":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:2835:2927":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:10840:134":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:12048:24970":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:6915:11471":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:12658:10907":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:14469:11402":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:32024:11641":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:7517:125":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:7945:13477":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:0:528":{"crate_id":2,"path":["core"],"kind":"module"},"2:47913:12311":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:22737:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:13024:10977":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:21706:13838":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:14269:11341":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:4774:11505":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:10672:13262":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:4954:7200":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:13259:11018":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:8239:11641":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:558:2657":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:1521:4580":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:4913:7195":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:12105:18989":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:6753:12617":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:9754:151":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:7475:138":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:400:13207":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:8606:2727":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:4862:11508":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:9959:13230":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:3532:13703":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:7625:9471":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"22:7577:7381":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:9085:24971":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"18:644:10514":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"22:4681:7168":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11000:10715":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:9752:13224":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:42589:11675":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:7053:9467":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:22181:11935":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"22:4976:7203":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:5653:223":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"22:6788:8304":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"11:2286:13369":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"16:5363:11518":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:9780:13225":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:5403:10632":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:6839:13829":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:5660:2202":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:926:13361":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:9165:2598":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:2257:100":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:9517:9473":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:20919:30076":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:11870:12831":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:4:1075":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:3022:2550":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:6981:9418":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:32020:13409":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:10903:13272":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:3865:13453":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12184:10806":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"15:0:2399":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:4016:13750":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:43802:12840":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:11535:12515":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:40537:12791":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:3201:25770":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"22:1544:4583":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:45727:12216":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:21462:13832":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:13739:11193":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:5864:7825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:41617:3053":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:5673:11465":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:47490:12297":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"22:4553:7158":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"22:4797:7182":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:207:9367":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:1288:13368":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:47832:12304":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:12790:10925":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:46156:12234":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:2696:11450":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13055:10983":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:5897:7870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:599:33247":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:5743:12537":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:14499:11407":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:6849:8308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:39920:12750":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:4835:11507":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:10340:10673":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:10916:13273":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:3254:19030":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:12125:18987":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:41990:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:5814:7864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:9607:13222":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:3171:3053":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:119:3346":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:0:1494":{"crate_id":1,"path":["std"],"kind":"module"},"1:10576:13447":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:6386:11532":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:4943:13781":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:11635:19152":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:7597:33232":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12086:10794":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:4418:7141":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:14126:11290":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:8765:20488":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:0:2401":{"crate_id":17,"path":["object"],"kind":"module"},"6:4700:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:9146:155":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:4922:7196":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12154:10802":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:6638:9464":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:6051:7883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:10009:12806":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:9711:33238":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:8599:12895":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:2829:2925":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:1710:4599":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:276:1934":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:10726:13270":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:6742:12616":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:45657:12213":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:4167:2553":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5830:12543":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"18:690:12468":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:6186:7917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:6332:13922":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:3234:13443":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:42861:12815":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:7318:11622":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"11:2085:13369":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:41912:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12876:10953":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:10616:2221":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:30324:30518":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:11351:10729":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:2918:11603":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:47989:12315":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"22:4478:7149":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:11617:10754":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:8167:13355":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13816:11208":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:7269:33234":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:6171:209":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:12080:792":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:2690:11924":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:2546:260":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:1471:2371":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:4461:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:10036:10657":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:913:13373":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:3653:2585":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:43623:12829":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6944:33231":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:4385:7138":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:45579:12210":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"11:389:9360":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:5727:12535":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:12997:10973":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:4806:11506":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:7768:11467":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:778:98":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:4585:11500":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11761:10764":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:5851:7868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11390:12910":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"18:80:24450":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:9141:238":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:22605:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"21:4:1794":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"6:6151:7048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"11:122:9357":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:4655:7166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:12888:10955":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:582:10629":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:7513:12652":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:10292:10666":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"22:1716:4600":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:12084:1605":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:9487:3206":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:9137:10636":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7462:11643":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:3461:11486":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:5568:12707":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8227:12765":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:149:9354":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10771:10679":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:10640:12830":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:782:9372":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"11:1145:13372":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:39981:12753":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:41288:164":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:21457:13705":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"22:6578:3730":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:7520:7372":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:11071:9476":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:44530:12881":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:6600:20431":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:589:13623":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4631:7164":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:4846:220":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:11269:155":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"1:8174:11640":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:23415:239":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:10240:10655":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:6009:7878":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:11547:10752":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:42109:87":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:43054:12194":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:3523:24632":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"22:1556:4584":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"14:160:13356":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:7555:7377":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"22:5812:7864":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:6672:236":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:42559:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:5963:13294":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:10869:24975":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:1591:4587":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:2321:11428":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:6222:13468":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:4555:7158":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"9:450:19418":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:14090:11281":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:2832:2788":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6960:13332":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:8205:20439":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:5866:12549":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:3518:2583":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"22:5903:7871":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:2908:19099":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:2219:3028":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:42605:72":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"11:1127:13371":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:46010:12230":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"22:5933:7873":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:7769:12885":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:596:3695":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:2887:19095":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:11921:12722":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:44318:2605":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"22:1574:4586":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"22:6169:7916":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:3325:2551":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:14221:11340":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:483:3681":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:43587:12827":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"22:1680:4595":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:11586:10753":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:8337:13487":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:7934:3055":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"22:5980:7875":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12062:10790":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:44254:12874":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:1779:13430":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"22:4499:7152":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:22330:11952":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:6513:12601":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:22671:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:2837:109":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"18:0:2402":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:46058:12231":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:6037:7881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:46202:12236":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:10376:25644":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"9:393:19419":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:12724:10916":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:8794:20489":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:4721:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:7582:11644":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:14536:11414":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:30196:8885":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:14316:11359":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:13723:11190":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:5325:9369":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:42839:151":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:62:3292":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:9535:124":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:43811:12841":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"22:4667:7167":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"22:5849:7868":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:13973:11249":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:12088:843":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:40122:7918":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:5833:7866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:1781:13431":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:13989:11251":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4859:7190":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"11:1541:13374":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13010:10974":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"22:1494:4576":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12373:10843":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:11111:13284":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:4772:13760":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:22278:30528":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"22:562:3690":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"22:4688:7169":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:10685:13265":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:10397:13247":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:4136:2552":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:9051:13498":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:45912:12223":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:7054:12643":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:6332:11460":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:11342:12906":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"22:4472:7148":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:8895:13494":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:555:3689":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:7689:2660":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"20:164:9350":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"1:12090:1211":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:12077:689":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:2966:32109":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:3072:13654":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:4056:13752":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"11:796:9404":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"22:61:3292":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"2:40080:12762":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12698:10913":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:6661:4722":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4900:7194":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:9867:10652":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:46104:12232":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"11:1846:2585":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:1473:12677":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:5373:18978":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:11232:2598":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:43246:13417":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:7360:33233":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:12252:10825":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:3800:9404":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:25817:269":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:5844:7867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:8363:13491":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:7434:31232":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:101:1935":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:12043:10789":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:6145:7915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:9207:10638":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:8879:12390":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:44108:12859":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:10084:13234":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:39513:26329":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:8594:20475":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:12110:13397":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:646:13626":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"18:614:33249":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"10:44:11844":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:3065:10539":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:41481:12809":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:43489:12820":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:8206:13704":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"11:703:13359":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13693:11184":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:4417:11495":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:10359:108":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:30236:8886":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:11448:20498":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:13778:11202":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:7715:2221":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:3178:12679":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:9531:33243":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:5878:7826":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"11:423:33217":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:12225:10816":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:5634:12526":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:1011:9369":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:4978:7203":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:11640:28012":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:11006:24974":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:8686:20486":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"22:7599:7383":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:10316:10671":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:10383:13246":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"20:344:2588":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"2:21490:11931":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:5892:7869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:9201:2670":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:9537:3207":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:4921:11510":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7677:213":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"22:6757:8303":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"22:6021:7879":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:641:13425":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"18:538:10519":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"15:306:19521":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:4187:13767":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"22:4609:7162":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:6640:3466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"22:7291:8681":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:40205:13413":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:6929:11579":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"22:4767:7178":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:5079:13457":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:45828:12220":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"22:5018:7207":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:47951:12313":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"3:0:472":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:6818:12630":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"22:7308:8682":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:47032:12264":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:2782:2787":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:3260:19029":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12237:10819":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:638:13423":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:12037:13631":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:2131:2651":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:21105:30672":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:1548:9392":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:3037:2789":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:22935:182":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:7474:13343":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12750:10920":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6261:13328":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:6361:12593":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:21803:11933":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:2929:132":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"11:427:33213":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:14478:11404":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"22:7263:3639":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"18:671:13204":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"22:4707:7171":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:6205:12714":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"22:6891:2865":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"6:4346:7135":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"22:4439:7144":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13632:11178":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"11:2487:11841":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:5631:2587":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:3232:13216":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:43954:12853":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:7708:11479":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:46772:12260":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:871:12676":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:43398:12729":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:43925:12844":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:5056:7210":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:5612:11466":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:2832:11456":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:9823:20507":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"22:4398:6981":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:12331:115":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"22:4726:7173":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:2797:2547":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:12078:794":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:12172:10803":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:41328:12167":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:10193:13505":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:955:13367":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:2170:3021":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:8887:3053":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"14:187:19508":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:3409:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:1302:13372":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:47814:12303":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:9746:147":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:1734:4601":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2254:99":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"22:4941:7198":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:39971:12752":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:5760:20427":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:9521:13220":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"22:4466:7147":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:2537:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:14420:11387":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:9985:13232":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:1442:2585":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:6425:12597":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:3669:9369":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:1411:3053":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:10654:13401":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:46612:12258":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:21711:13846":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"5:2962:11923":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:43827:12749":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:8031:13479":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:8345:12368":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:4621:7163":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:40185:12728":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"11:1855:9404":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:8957:13826":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9372:10644":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:574:10514":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:12208:10808":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:5110:13457":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:9030:81":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:7194:11640":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:6624:13824":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:4462:2544":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:8973:13828":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:4394:7139":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:9921:13228":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"22:4803:7183":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:45788:12218":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"22:1594:4588":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:6835:8307":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"22:6733:8301":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:44274:12201":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:6216:9428":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"18:531:12462":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13286:11021":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"22:7518:7372":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:30266:30515":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:43783:12838":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"22:6833:8307":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"5:6814:9412":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:14448:11396":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:2907:11459":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:41675:2725":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:2209:13215":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:13949:11240":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:12998:13643":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:4986:11512":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"7:31:19404":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:45513:12207":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:7015:11584":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:3212:12678":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:4775:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"11:841:13364":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:4234:3053":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:7554:11476":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:12621:10903":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:7503:11474":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:40561:12793":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:42323:3209":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"18:507:10514":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"22:5083:7214":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:9512:13475":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:8041:13732":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:8582:3053":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:44449:230":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:4826:9453":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:21481:13705":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"11:2494:12698":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:7128:12396":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"22:7559:7378":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:8250:12720":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:4400:6981":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:5528:13463":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:1817:13432":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:2913:19100":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:47936:12312":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:5020:7207":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:878:9377":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:3797:11489":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:10818:12905":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:7890:12888":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:22638:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:9021:2654":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:3698:13743":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"22:488:3682":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"1:12073:1589":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:10573:13445":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"22:4331:7134":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:13906:11232":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:8513:12382":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:3457:12366":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:11628:12410":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:8909:12391":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:45958:12228":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:14355:11368":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"22:118:3346":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"16:8050:11698":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"11:1869:12679":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:9070:10632":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:6663:4722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:7538:7375":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:41702:229":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:2947:19105":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:4759:7177":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:4383:7138":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:12671:10683":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:3514:3206":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:4032:13394":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:42869:12816":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:44555:12882":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:40770:12798":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:1639:4591":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:11325:9479":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:41642:2724":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:3948:9392":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:40108:12763":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:12959:10969":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:11205:24972":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"13:110:33218":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:14460:11398":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:43537:12723":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:5905:12551":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"22:6631:8298":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:5599:13810":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:14173:11303":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:11573:12516":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:43505:10641":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:12737:10918":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:14434:11389":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:12688:142":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:12087:1604":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:6465:2583":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"22:4865:7191":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:21279:13836":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:2927:229":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"6:4683:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:2628:132":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:39326:12028":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:6741:8302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:43569:12826":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"11:1882:12681":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"11:772:12677":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:42614:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:47872:12308":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:7579:7381":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:7442:19086":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"4:0:2393":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12911:10964":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:5788:254":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:10860:12363":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:1076:13372":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:9790:33241":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:6279:11527":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"22:4486:7150":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:8244:10641":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:1764:654":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:2891:19097":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:4519:13772":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:11261:12509":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"22:5895:7870":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:41536:12176":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:4497:11497":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:45603:12211":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:1672:9369":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:13162:11005":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:2970:32110":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:504:13208":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"22:1689:4596":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:4829:7186":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:13298:11028":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:7249:2583":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"14:221:11788":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:32132:2930":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:1931:700":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:40795:12161":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:7526:7373":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"11:2473:11838":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:1641:8882":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:4753:7176":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:10126:12479":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:13914:11234":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6735:8301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:47861:12307":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:6663:9369":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5030:7208":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:21378:11931":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:11934:10782":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"22:4911:7195":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:9541:3209":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:6686:4707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:4361:2541":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:8490:12190":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:1523:13380":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:1561:2585":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:30828:2941":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"5:7259:9380":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:9131:179":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:2501:13438":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:10468:13492":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:21149:13844":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:13851:11218":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"22:6701:4705":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:2896:11599":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:9998:10622":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"22:5818:7865":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:11062:13280":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:21815:31563":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:9910:9432":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:1579:12679":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:8115:12663":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:42148:94":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:13838:11212":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"22:4932:7197":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:3964:13746":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:3441:13217":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:7792:13474":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:2644:13440":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"22:4294:7131":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13575:11143":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:13188:11007":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:3764:11488":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12554:10891":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:536:12518":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:10547:12723":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:5574:11461":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:8851:12388":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"22:4521:7154":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:7024:19081":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:12082:789":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:6865:8310":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:13174:11006":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:1691:4596":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:6604:3560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:0:2400":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:12598:10899":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:43346:12195":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:44258:12875":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:7438:19087":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:12064:398":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:15:2503":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:41694:208":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:6696:11558":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:8978:20495":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:40283:12775":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11951:10784":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"22:6000:7877":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2324:203":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:6030:7880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:4411:13456":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:4847:849":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:45988:12229":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:6243:13320":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:40776:12800":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:6580:3730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:21055:13705":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:10447:1930":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:11226:12507":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:10430:13250":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"22:1910:4767":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:2881:11458":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:10474:13398":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12267:10831":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:9172:10637":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:7975:31371":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:5942:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:1922:3042":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:9051:20474":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:35:9365":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:118:1918":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"2:10195:242":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:2497:13705":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:10980:10666":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"22:573:3692":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"5:7501:12706":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:922:13360":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:6467:12600":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:3233:19106":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:6059:10314":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:4709:7171":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6968:20433":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:2428:11439":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:7220:9058":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:10135:13503":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"14:215:12668":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:12032:13581":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"22:4952:7200":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:11572:13453":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:5781:13466":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:8237:12791":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:6583:12611":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:2942:19104":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:7534:11475":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:6893:11576":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:9701:13223":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:47630:12299":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"22:494:2876":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"1:9058:13499":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:2540:156":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:580:3693":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"22:6718:8299":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:7561:7378":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:3040:2167":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"9:237:12190":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:685:114":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"22:5054:7210":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:1840:9059":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:6633:8298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:11845:10772":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:6571:13822":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:49852:13848":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"5:4164:9392":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:5752:7797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:3401:12800":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:6041:20429":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:46458:12242":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:4799:7182":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11742:10761":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:4373:7136":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:7694:2661":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:10265:13242":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:5588:11464":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:2618:11447":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:3276:13446":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:11358:20621":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:9010:13495":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"11:817:13373":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:2644:11448":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"5:7587:9408":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:7544:7376":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"22:579:3693":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"1:2409:2407":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:9350:10643":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"11:785:2583":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:11162:10718":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:4179:13766":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:10023:13223":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:9184:2599":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:40785:9430":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:9106:12399":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"22:4966:7202":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:7342:33236":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:4078:13755":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:5336:124":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:40245:12769":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:6883:8311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:1576:4586":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:11405:12954":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"22:4784:7180":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:6346:13331":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:123:3347":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"22:7588:7382":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:10978:13474":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:12934:10965":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:10440:13251":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:10575:12491":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:9912:13227":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:4259:13454":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13422:11030":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"22:5968:7874":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:8194:12363":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"11:1635:9362":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:5798:11521":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:47738:12301":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:14013:11258":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"22:526:3685":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:2329:129":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"22:7553:7377":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:9102:10634":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:40383:2069":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"22:4416:7141":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:10800:12900":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:1632:4590":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:9136:697":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"1:8572:12892":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:622:2189":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"13:226:11835":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:6613:8296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:7573:7380":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"13:0:2392":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:7269:33087":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"22:4836:7187":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:6820:8306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"7:0:1654":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:2894:9452":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:2574:11445":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:2785:248":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:7265:3639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:11088:9478":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:11423:12913":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:5712:12532":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:4597:13777":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:6759:8303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:2766:11453":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:46277:12238":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"18:521:24463":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:5073:7212":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:10795:12898":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:7287:8680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:8274:13741":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:10343:3053":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:9015:110":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"11:1092:13370":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:5994:7876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:13826:11209":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8440:12379":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:6584:2585":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12945:10967":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:884:12677":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"22:6090:7885":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:6083:19538":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"22:6041:7882":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:14056:11273":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:5905:7871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:43315:13418":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:2744:11452":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:7571:9404":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:2382:13694":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:13113:10992":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:10410:13248":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:14033:11265":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:2543:137":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:14401:11382":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:4435:1917":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:1776:9404":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"16:2548:11444":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:6956:9415":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:46536:12256":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:12970:10970":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"5:6824:9414":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:41517:12175":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:863:2585":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:2883:19096":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10186:12482":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"18:548:147":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:495:2876":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:4985:9392":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:43477:12819":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"9:177:13570":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:6560:9356":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"17:10750:10677":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:1557:3053":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"22:1701:4598":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:44262:12876":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:5409:13458":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:44131:12867":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:5915:7872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:9390:133":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:11719:20501":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"20:57:2583":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"17:10097:13235":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:6204:13301":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"22:4307:7132":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:8181:11481":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:40165:13412":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:2550:259":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:6545:11535":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:7406:24749":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:364:2668":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:3958:13747":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:2938:19103":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"22:1672:4594":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10534:12488":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:5049:7209":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:2305:19565":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:10512:13399":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"14:31:13356":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"22:4947:7199":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:43335:13419":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:9071:12396":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:6189:12590":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:10830:12323":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:13758:11194":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:30252:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:41494:12890":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:9543:3210":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:4943:7198":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:10714:13269":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:7532:7374":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:22902:185":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:40028:12757":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:308:1554":{"crate_id":1,"path":["std","thread"],"kind":"module"},"17:11281:10724":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:1528:4581":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:20921:30081":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:44250:12873":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:41770:198":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:3594:3054":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:4639:19040":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"22:4857:7190":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:10370:13245":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:9035:88":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"20:363:2590":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"2:6027:12709":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:30230:2594":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:13274:10725":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:12765:10923":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:7880:9225":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:14378:11381":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:7006:13333":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:39287:13635":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"9:486:19417":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:10185:13705":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:5808:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:10991:13463":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:13148:11004":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:20861:2941":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:40358:12784":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:44151:12868":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:13981:11250":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:3915:11492":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:14346:11366":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:11124:13285":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:3315:11485":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:3994:13748":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:12513:10887":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:6211:12713":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:11389:13289":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:8839:201":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"5:1273:13369":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:6973:31253":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:42654:74":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"22:5071:7212":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"11:324:12673":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13685:11183":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"18:564:10521":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"22:1519:4580":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:9455:33245":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13228:11012":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:4867:7191":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:13487:11081":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:3195:24951":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:6588:4535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:4934:13780":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:5384:20425":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:2526:11443":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:11872:10779":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"6:4494:7151":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:5994:19383":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:7492:12649":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"22:7622:8872":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"22:1512:4579":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"22:4619:7163":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:7694:11478":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:7566:13521":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"22:4827:7186":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:45557:12209":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:13040:10979":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:22043:12732":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"3:234:229":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"9:52:13560":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10366:13244":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:1664:4593":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:4074:3054":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:8605:2728":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"18:755:12478":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:7907:12889":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:548:3688":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"14:202:19003":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:1537:4582":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:12065:13805":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:10547:12489":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"7:78:19411":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:7862:12656":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:4379:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:2406:11438":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"22:6684:4707":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"11:2165:1930":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:4488:7150":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:1682:4595":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:7651:13351":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:4548:7157":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2160:631":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:7884:20438":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:2840:2929":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"22:7542:7376":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"22:4449:7145":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:7670:2669":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:12176:18995":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:6352:12592":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"22:5047:7209":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:14308:11356":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:44270:12878":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:12830:10929":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:1426:3054":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:475:3680":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:10698:13267":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:7568:11477":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"22:500:3683":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"17:14296:11353":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"11:0:2396":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:11511:13451":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:42187:2555":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"9:426:19420":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:10637:12498":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:4838:7187":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:1590:12681":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:41633:2585":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:13890:11229":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:6456:12599":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:5970:7874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:22294:30513":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"11:860:13366":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:5935:7873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:12711:10915":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:6703:4705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12024:10788":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:11393:132":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"22:5831:7866":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:10661:13261":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:3600:11487":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:3049:19568":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:3888:11491":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:11151:13287":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:41745:3053":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:11098:13283":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:3183:33091":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:4441:7144":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:3429:9392":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:45625:12212":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:46818:12261":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:12750:207":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:29981:13744":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:21927:13834":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:14083:11280":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:10949:13275":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:47898:12310":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"22:0:873":{"crate_id":22,"path":["libc"],"kind":"module"},"11:2394:9404":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:4968:7202":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:11665:18990":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:3273:31562":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"22:4813:7184":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:46226:12237":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:2582:9436":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:12072:1502":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"22:506:3684":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"1:7961:12684":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:10511:9474":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:7828:11660":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:6098:9456":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"11:1010:13368":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:12076:687":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:32038:2541":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:10133:13504":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:8389:12369":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"5:2960:32112":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:2670:11449":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:7555:10629":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"11:868:13367":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:9794:12718":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:40016:19046":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:853:3054":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:9086:10633":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"22:547:3688":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5079:7213":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11193:12389":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:32031:13410":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"14:0:2398":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:11337:20620":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:4641:11502":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:6881:8311":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"22:1637:4591":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:12074:10793":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:1558:4584":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:12065:995":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:11551:13452":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:22165:12734":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:10929:10710":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:358:2667":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4309:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:7953:13478":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"22:1589:4587":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:11306:10725":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:7254:2531":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:2969:19567":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11295:12511":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"22:122:3347":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:44513:173":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:8281:11710":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"22:6057:10314":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:629:13378":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:5443:13461":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"22:4538:7156":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:41625:3054":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"22:554:3689":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"2:3170:214":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:22968:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"22:1602:4589":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:0:873":{"crate_id":6,"path":["libc"],"kind":"module"},"22:6863:8310":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:4451:7145":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:12066:447":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:1825:181":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:11850:9485":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:21057:13837":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:7567:7379":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"22:4344:7135":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12543:10890":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:39060:3056":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:4690:7169":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:4719:11503":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:47852:12306":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:7237:12696":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:4194:9392":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"22:6028:7880":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:2871:11598":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:10367:3054":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:21358:13833":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:1895:13434":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:40747:12795":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"9:357:19433":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:40761:12797":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:12081:793":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:10646:10738":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:14335:11365":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:3236:13444":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:5820:7865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:918:13359":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:4468:7147":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:6924:9466":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:5420:9392":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:4008:13749":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:11407:20497":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"22:4958:7201":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13101:10990":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"22:4987:7204":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:3033:1981":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:10435:12722":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:2864:11457":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:7162:29413":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:43903:19001":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:4934:7197":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:1924:13684":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:40335:12782":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"22:4882:1061":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:9222:13579":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:42822:12813":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:10668:13402":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"22:6149:7048":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:44457:210":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:2035:12684":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"22:5913:7872":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:1604:4589":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:11213:12201":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"5:3581:3053":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"11:2334:3054":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:2384:13695":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:46355:12240":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:5121:11516":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:840:3053":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:45810:12219":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:7722:11469":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:6325:223":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:4665:10400":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"15:394:19530":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:3238:12681":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:43325:12727":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:2604:13439":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:7601:7383":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:40274:12774":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"11:1051:19495":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:21107:3021":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:12645:10904":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:6879:11574":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:12007:10787":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:40315:12780":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"22:4719:7172":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8311:12890":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"22:6739:8302":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:12070:336":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"11:1562:13375":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:4363:9394":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:3125:13441":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"5:7283:2585":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"22:6638:3466":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:46324:12239":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:9217:31373":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"22:6184:7917":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:44500:12203":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:8530:13804":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:4770:13759":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:261:13206":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:9933:13229":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:7487:246":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:2933:19566":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"22:568:3691":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"18:624:33250":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"22:541:3687":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"1:3358:13729":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:949:13366":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:2339:11430":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12465:10878":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:40061:12160":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:43723:12835":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:47568:12298":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:4208:13769":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:534:2655":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:6792:12629":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:4497:13771":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:5017:11513":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:11815:10768":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"22:4318:7133":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:20874:31565":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:11654:12915":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:4393:9392":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:2775:240":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:2792:250":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"22:4590:7161":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"11:829:13642":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:11215:12503":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:7937:123":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"22:4875:7192":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:2991:18961":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:3288:2549":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:12983:10972":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:10456:13256":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:7229:2585":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:22232:11939":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:44246:12872":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:42851:12190":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:44242:12871":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:10478:10675":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:8257:12837":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:6174:9445":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"22:1662:4593":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"22:6602:3560":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"18:636:10531":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:727:148":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:44238:12870":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:5419:10633":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:3735:13381":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:9945:10655":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:43297:12724":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"22:7524:7373":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:40035:12758":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:11316:10728":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:12496:10884":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:4997:7205":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:1573:12678":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:5013:7206":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:3315:13448":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:40367:12785":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:11661:10756":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:2903:19098":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:6568:13470":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:6726:8300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10494:12484":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:10112:13236":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:8154:13352":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:45687:12214":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:9223:29584":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:40407:12788":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:9003:20496":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:2172:3022":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:9660:33244":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:6082:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:2504:11442":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5049:11514":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"18:113:24452":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:9617:33239":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4769:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"11:1687:150":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:11082:9477":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:7931:2593":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"22:474:3680":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"22:6724:8300":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:9242:10639":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:1703:4598":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:43407:13421":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:41761:2585":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:4195:13768":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:1674:4594":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:4157:29412":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:5435:11519":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:8588:12387":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:41311:12165":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:6277:2202":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"5:6511:9369":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:4889:11509":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:7375:12698":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"22:1535:4582":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:4426:9394":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:4573:7160":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:3032:11482":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:1718:4600":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:12086:1607":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:1501:4577":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:39201:215":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:21925:13705":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:1760:3039":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:13215:11011":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:4020:13393":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:10570:13443":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"16:7090:12647":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:14001:11257":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:8367:3466":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:9539:3208":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:20889:31565":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:44492:13048":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"22:7476:8843":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:4287:2533":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:10603:12493":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:47966:12314":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"22:5061:7211":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:9530:115":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:4462:11496":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:43372:12728":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"20:0:1795":{"crate_id":20,"path":["smallvec"],"kind":"module"},"2:43427:13422":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:11227:3037":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:13868:11223":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:416:177":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:7011:25531":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:1118:32113":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:22836:183":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:6912:266":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:9486:229":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"22:4653:7166":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"20:97:2584":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"2:4351:2540":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"11:822:13361":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"22:587:3694":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"2:2849:2601":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:8833:13492":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:6171:7916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13676:11182":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:8146:13481":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"6:4877:7192":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:6002:7877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"11:693:2585":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"22:4851:7189":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"11:1525:19496":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:1464:12676":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:4960:7201":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"22:4404:7140":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"22:5077:7213":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4734:7174":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:1634:630":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"22:43:2867":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"17:2012:13211":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:9277:10640":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:2141:12685":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:6458:13469":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:4989:7204":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:3217:33092":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:21364:13835":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:4847:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:8607:2726":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:5939:12557":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:9896:20509":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:22240:11940":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:4849:13756":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"22:6007:7878":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:43669:12832":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"22:4423:7142":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:12775:13407":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:3330:9404":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:434:10591":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:4669:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:507:3684":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:12305:10839":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"22:6035:7881":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:9852:20508":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:43836:12754":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:7776:13673":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"22:5842:7867":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"18:660:13200":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:22323:12739":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:5973:9400":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:22149:11934":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:22803:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"22:5028:7208":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"11:2467:11837":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:4884:1061":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:12085:1606":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:9650:10666":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:41685:2916":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"12:0:2397":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:4821:30955":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:6190:9460":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:11647:12915":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:5808:13467":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:4278:224":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:8713:20487":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:4296:7131":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:2924:11604":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"22:4743:7175":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:4920:7196":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:1044:12648":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:13897:11231":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:1737:3040":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:12069:1112":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:12083:1608":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:46848:12262":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:6415:12596":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"22:595:3695":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"17:12111:10799":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:7897:12323":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:44046:12857":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:14118:11288":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"22:7612:8871":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:2150:20554":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"22:4751:7176":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"11:2317:3053":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:6485:11463":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:7626:171":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:8323:13770":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:14100:11284":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:11507:20499":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:44542:12206":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:3568:175":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:1983:200":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:41834:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:2787:112":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:22356:13745":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"22:1708:4599":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"18:707:12471":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"22:6818:8306":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:10585:13400":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"11:2368:2583":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:2617:120":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:43385:13420":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:43818:12755":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"18:719:10532":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"14:40:10782":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:42814:12811":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:8953:20494":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"22:4821:7185":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:4728:7173":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:39243:217":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:2461:11920":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:3009:121":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:7450:12702":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:7102:20434":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:4348:267":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:12723:31510":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:822:9375":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:5982:7875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:2859:11594":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:40348:12783":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:10420:10584":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"22:7530:7374":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:7299:12697":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:4067:18960":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:9545:209":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:9547:3211":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"11:2058:12648":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:11048:13276":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:1507:4578":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"18:609:13199":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:10962:10713":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11991:10786":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:11788:10765":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:7512:13391":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:11488:9481":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:5369:18977":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3243:256":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13611:11173":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:4032:9369":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:2865:19094":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:44118:12863":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:12810:10928":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:5999:2202":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:7291:213":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:31984:11840":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:22344:12742":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:39929:12751":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:13451:11050":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:2178:13212":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:1429:150":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"22:4527:7155":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:2170:12687":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:42830:12814":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:44019:12856":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:5322:11517":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:5816:12542":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:8941:13827":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:12123:10800":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"22:6620:8297":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:1564:2583":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4425:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6844:11570":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:4823:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13802:11207":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:6023:7879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12098:10797":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:48028:12316":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11074:13281":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:14163:11298":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:4320:7133":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:8097:12660":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:39161:216":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:569:3691":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:8825:20490":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"19:0:1092":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:2875:2600":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:14324:11360":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:2049:13381":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:11137:13286":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:8269:13489":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:40001:12749":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:14042:11266":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:7613:13350":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:4406:2542":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:47887:12309":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:5268:205":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:5088:11515":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:10012:10666":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3043:1973":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:8036:13480":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:6015:223":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:2786:247":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:943:13364":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"22:4377:7137":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4792:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"11:992:12648":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:40547:12792":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:4557:11499":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"22:1526:4581":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:6790:8304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:5982:12560":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12531:10888":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"11:2423:19491":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"16:6901:11470":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"8:0:1794":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:43417:12730":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:2810:11455":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:10738:13271":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:7284:2724":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:44083:12858":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13876:11226":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:10392:12720":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:4022:13751":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:3274:13445":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:2669:13392":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:43687:12833":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:6569:11468":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:1067:13369":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"18:491:12461":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:2596:11446":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:47776:12302":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:22217:31233":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:4002:2583":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:11381:10733":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:8865:12389":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:4561:7159":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"22:4995:7205":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:4210:1916":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"20:281:2585":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"2:11886:12834":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:6401:11462":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:8134:12666":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:895:3053":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:1492:13359":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"20:331:2587":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"1:5596:3405":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"10:36:11843":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:39099:18962":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"17:1184:13210":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:5782:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11201:12499":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:5696:20426":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:10468:10674":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:12895:110":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:11191:10722":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:8996:12395":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:2788:11454":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:2284:19539":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:2276:107":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:4611:7162":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:10588:12492":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:13966:11248":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"14:165:19501":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:11810:12823":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"11:2074:13368":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:2498:19051":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:47692:12300":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:7476:9401":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"22:4571:7160":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:11490:10750":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:46882:12263":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"22:482:3681":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"22:1630:4590":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:46180:12235":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:20904:30082":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:1482:13373":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:4044:105":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:5774:13464":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:7041:12640":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"22:1732:4601":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:1374:96":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:5626:12708":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:8072:11699":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}