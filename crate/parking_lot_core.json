{"root":"0:0:1568","crate_version":"0.9.3","includes_private":false,"index":{"2:3250:2369":{"id":"2:3250:2369","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3252:163","2:3253:1315"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3012:9543":{"id":"2:3012:9543","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3011:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3119:119":{"id":"2:3119:119","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"5:5786:52966":{"id":"5:5786:52966","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15715:2180"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13111:53091":{"id":"2:13111:53091","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:391:1559":{"id":"0:391:1559","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:393:1493"],"impls":["a:2:3218:2522-0:391:1559","a:2:9036:2463-0:391:1559","a:2:9037:2462-0:391:1559","a:2:3177:192-0:391:1559","a:2:3189:199-0:391:1559","b:2:3121-0:391:1559","b:2:3906-0:391:1559","b:2:2783-0:391:1559","b:2:3110-0:391:1559","b:2:3106-0:391:1559","b:2:3116-0:391:1559","b:2:2780-0:391:1559","b:5:776-0:391:1559","0:394","0:395","0:397","0:398","0:400","0:401","0:404"]}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3106-0:336:1560":{"id":"b:2:3106-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3185:198","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13174:58522":{"id":"2:13174:58522","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8151:112","str::matches":"1:15715:2180","prim@char":"1:15710:2175","self::pattern":"2:12731:9463"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49235:9790","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3260:9444":{"id":"2:3260:9444","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3262:163","2:3263:529"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2785:52545":{"id":"2:2785:52545","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10033:171":{"id":"2:10033:171","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10034:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:376:1562":{"id":"a:2:3189:199-0:376:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3110-0:376:1562":{"id":"b:2:3110-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13177:58523":{"id":"2:13177:58523","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"1:15715:2180","self::pattern":"2:12731:9463","prim@char":"1:15710:2175","`DoubleEndedIterator`":"2:8151:112"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49163:9786","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5543:9021":{"id":"1:5543:9021","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5544:56388","1:5545:10040"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:324:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13116:58516":{"id":"2:13116:58516","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15715:2180","crate::ops::IndexMut":"2:3485:9546","str::slice_unchecked":"1:15715:2180"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:10632:194":{"id":"2:10632:194","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10634:163","2:10635:1761","2:10636:10816","2:10637:53091","2:10638:53092","2:10639:721","2:10640:722"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10623:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:336:1560":{"id":"0:336:1560","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:337:1813","0:339:1815","0:341:1817","0:343:1819","0:345:1821"],"impls":["a:2:3218:2522-0:336:1560","a:2:9036:2463-0:336:1560","a:2:9037:2462-0:336:1560","a:2:3177:192-0:336:1560","a:2:3189:199-0:336:1560","b:2:3121-0:336:1560","b:2:3906-0:336:1560","b:2:2783-0:336:1560","b:2:3110-0:336:1560","b:2:3106-0:336:1560","b:2:3116-0:336:1560","b:2:2780-0:336:1560","b:5:776-0:336:1560","0:347","0:348","0:350","0:351","0:353","0:354","0:356"]}},"0:376:1562":{"id":"0:376:1562","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:378:1493"],"impls":["a:2:3218:2522-0:376:1562","a:2:9036:2463-0:376:1562","a:2:9037:2462-0:376:1562","a:2:3177:192-0:376:1562","a:2:3189:199-0:376:1562","b:2:3121-0:376:1562","b:2:3906-0:376:1562","b:2:2783-0:376:1562","b:2:3110-0:376:1562","b:2:3106-0:376:1562","b:2:3116-0:376:1562","b:2:2780-0:376:1562","b:5:776-0:376:1562","0:379","0:380","0:382","0:383","0:385","0:386","0:389"]}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:315:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3110-0:296:1558":{"id":"b:2:3110-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3189:199-0:391:1559":{"id":"a:2:3189:199-0:391:1559","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3644:9548":{"id":"2:3644:9548","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3646:55061"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3396:109":{"id":"2:3396:109","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3397:200","2:3398:514"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:780:2743":{"id":"5:780:2743","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9036:2463-0:391:1559":{"id":"a:2:9036:2463-0:391:1559","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3218:2522-0:358:1557":{"id":"a:2:3218:2522-0:358:1557","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:382":{"id":"0:382","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3186:197","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12750:9462":{"id":"2:12750:9462","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12752:9485","2:12753:890","2:12754:58445","2:12755:58446"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10274:9180":{"id":"2:10274:9180","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10275:138","2:10276:37761","2:10277:55858"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4527:9048":{"id":"1:4527:9048","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4528:2760","1:4529:56738","1:4531:56739","1:4532:56740","1:4533:9078","1:4534:56737","1:4535:56629","1:4537:56741","1:4538:2715","1:4539:9220","1:4540:2702","1:4542:1959"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:123:1547","path":"::spinwait"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:132:888","0:133:2073","0:134:2080","0:135:2086"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:332:575","0:333:875"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:335:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8580:2825":{"id":"2:8580:2825","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:393:1493":{"id":"0:393:1493","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:3177:192-0:358:1557":{"id":"a:2:3177:192-0:358:1557","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:319:1804":{"id":"0:319:1804","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2783-0:296:1558":{"id":"b:2:2783-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3185:198","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13120:9492":{"id":"2:13120:9492","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:48989:9778","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:776-0:296:1558":{"id":"b:5:776-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2741","5:779:2742","5:780:2743"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3186:197","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3186:197":{"id":"2:3186:197","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5514:9950":{"id":"5:5514:9950","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5516:163","5:5517:405"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3255:9442":{"id":"2:3255:9442","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3257:163","2:3258:860"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3121-0:391:1559":{"id":"b:2:3121-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:776-0:358:1557":{"id":"b:5:776-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2741","5:779:2742","5:780:2743"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2782:2245":{"id":"2:2782:2245","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:296:1558":{"id":"0:296:1558","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:297:1790","0:300:1792","0:302:1794"],"impls":["0:99","a:2:3218:2522-0:296:1558","a:2:9036:2463-0:296:1558","a:2:9037:2462-0:296:1558","a:2:3177:192-0:296:1558","a:2:3189:199-0:296:1558","b:2:3121-0:296:1558","b:2:3906-0:296:1558","b:2:2783-0:296:1558","b:2:3110-0:296:1558","b:2:3106-0:296:1558","b:2:3116-0:296:1558","b:2:2780-0:296:1558","b:5:776-0:296:1558","0:304","0:305","0:307","0:308","0:310","0:311","0:314"]}},"2:3125:1372":{"id":"2:3125:1372","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47182:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9037:2462-0:316:1561":{"id":"a:2:9037:2462-0:316:1561","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3177:192-0:406:1565":{"id":"a:2:3177:192-0:406:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3423:122":{"id":"2:3423:122","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:350"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3426:123","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3083:127":{"id":"2:3083:127","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3085:651"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:316:1561":{"id":"a:2:3189:199-0:316:1561","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:373:575"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13123:36680":{"id":"2:13123:36680","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15715:2180"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49296:9793","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2783-0:391:1559":{"id":"b:2:2783-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5681:9043":{"id":"1:5681:9043","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5682:52652"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3110-0:316:1561":{"id":"b:2:3110-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13106:10825":{"id":"2:13106:10825","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15724:2189"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3121-0:316:1561":{"id":"b:2:3121-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6579:9041":{"id":"1:6579:9041","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6580:56339","1:6581:8764","1:6582:8765","1:6583:8767","1:6584:8766","1:6585:8768","1:6586:8769","1:6587:8771","1:6588:8425","1:6589:8774","1:6590:8775","1:6591:8776","1:6592:8777","1:6593:8778","1:6594:8779","1:6595:8772","1:6596:8773"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:378:1493":{"id":"0:378:1493","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2783-0:336:1560":{"id":"b:2:2783-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6845:9032":{"id":"1:6845:9032","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6846:54366"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13117:53112":{"id":"2:13117:53112","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"1:15715:2180"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3116-0:316:1561":{"id":"b:2:3116-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3906-0:316:1561":{"id":"b:2:3906-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3090:204":{"id":"2:3090:204","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3092:119","2:3093:1372"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13140:2692":{"id":"2:13140:2692","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175","`None`":"2:47055:158"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10016:103":{"id":"2:10016:103","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10017:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:326:59":{"id":"0:326:59","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3218:2522-0:376:1562":{"id":"a:2:3218:2522-0:376:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13189:58528":{"id":"2:13189:58528","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13147:36547":{"id":"2:13147:36547","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15710:2175","self::pattern":"2:12731:9463"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12523:9749","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3218:2522-0:406:1565":{"id":"a:2:3218:2522-0:406:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3284:9453":{"id":"2:3284:9453","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3286:861"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6331:9029":{"id":"1:6331:9029","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6332:8448","1:6333:8449","1:6334:13163","1:6335:56646","1:6337:56650","1:6339:56647","1:6340:56648","1:6342:56649"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13103:55998":{"id":"2:13103:55998","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12202:9906"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:386":{"id":"0:386","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:387:575","0:388:875"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3276:2368":{"id":"2:3276:2368","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3278:242"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3218:2522-0:296:1558":{"id":"a:2:3218:2522-0:296:1558","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3109:2686":{"id":"2:3109:2686","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3083:127"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:306:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3106-0:391:1559":{"id":"b:2:3106-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3272:9439":{"id":"2:3272:9439","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3273:163","2:3274:881"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13216:52965":{"id":"2:13216:52965","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108:1555":{"id":"0:108:1555","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[728,0],"end":[791,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"a:2:3218:2522-0:316:1561":{"id":"a:2:3218:2522-0:316:1561","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3187:100":{"id":"2:3187:100","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2565:119":{"id":"1:2565:119","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2566:55893","1:2568:1942","1:2569:57001","1:2570:57002"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10023:111","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9036:2463":{"id":"2:9036:2463","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:405:630":{"id":"0:405:630","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9193:9128":{"id":"1:9193:9128","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9194:55795","1:9195:55796","1:9196:55797","1:9197:55798","1:9198:9823","1:9199:43532","1:9200:55794"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3189:199-0:406:1565":{"id":"a:2:3189:199-0:406:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13203:58532":{"id":"2:13203:58532","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:355:575"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:313:875":{"id":"0:313:875","crate_id":0,"name":"ne","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3185:198","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3121-0:376:1562":{"id":"b:2:3121-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:772:201":{"id":"5:772:201","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:773:2741","5:774:2742","5:775:2743"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:312:575","0:313:875"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8302:149":{"id":"2:8302:149","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8303:2696","2:8304:890","2:8305:2697","2:8306:468","2:8308:2698","2:8311:2699","2:8312:2700","2:8313:2701","2:8314:2702","2:8316:2703","2:8318:2704","2:8319:2705","2:8321:809","2:8324:2005","2:8331:1920","2:8333:2706","2:8336:1987","2:8337:2707","2:8338:2708","2:8340:2709","2:8342:2710","2:8345:1268","2:8346:1959","2:8347:1864","2:8351:2711","2:8354:2712","2:8355:2713","2:8356:2714","2:8358:2715","2:8359:1983","2:8361:2716","2:8364:2717","2:8366:2718","2:8376:2719","2:8391:2720","2:8393:2721","2:8397:2722","2:8406:2723","2:8409:2724","2:8411:2725","2:8414:252","2:8421:269","2:8428:2726","2:8435:2727","2:8444:2728","2:8454:983","2:8461:1963","2:8468:2678","2:8469:2676","2:8470:2680","2:8482:2679","2:8489:1988","2:8501:2677","2:8508:2729","2:8509:2730","2:8514:2731","2:8517:1989","2:8520:1981","2:8521:2732","2:8523:2733","2:8525:388","2:8528:2734","2:8531:966","2:8534:2735","2:8537:575","2:8540:2736","2:8543:875","2:8545:794","2:8547:760","2:8549:683","2:8551:666","2:8553:2737","2:8554:2738","2:8562:2739"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:132:888":{"id":"0:132:888","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3288:9455":{"id":"2:3288:9455","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3290:530"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2783-0:358:1557":{"id":"b:2:2783-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3633:203":{"id":"2:3633:203","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3634:163","2:3635:9548","2:3636:656","2:3637:343"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3638:129","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3633:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8107:143":{"id":"2:8107:143","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8108:2696","2:8109:2345","2:8110:736"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:381:382":{"id":"0:381:382","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3185:198","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13220:9139":{"id":"2:13220:9139","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15710:2175"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49321:9140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3116-0:376:1562":{"id":"b:2:3116-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6753:9026":{"id":"1:6753:9026","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6754:57085"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3348:9521":{"id":"2:3348:9521","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3350:1197"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22692:20734":{"id":"2:22692:20734","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22693:12317","2:22694:57921","2:22695:57922"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22685:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2799:98":{"id":"2:2799:98","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2800:382","2:2801:384"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13190:58529":{"id":"2:13190:58529","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2783-0:316:1561":{"id":"b:2:2783-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5767:59171":{"id":"5:5767:59171","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22737:9626":{"id":"2:22737:9626","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23386:9560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22728:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3080:141":{"id":"2:3080:141","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3082:2686"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13095:761":{"id":"2:13095:761","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3121-0:296:1558":{"id":"b:2:3121-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5762":{"id":"5:5762","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5582:1300","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5763:59170","5:5764:2759","5:5767:59171","5:5770:59172","5:5782:59173","5:5783:59174","5:5784:2352","5:5785:52967","5:5786:52966"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3906-0:358:1557":{"id":"b:2:3906-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3331:9512":{"id":"2:3331:9512","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3333:326"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13444:130":{"id":"2:13444:130","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13445:163","2:13446:982"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2780-0:296:1558":{"id":"b:2:2780-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:312:575":{"id":"0:312:575","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3185:198":{"id":"2:3185:198","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13100:58514":{"id":"2:13100:58514","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"1:15715:2180"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:339:1815":{"id":"0:339:1815","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3309:9228":{"id":"2:3309:9228","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3311:163","2:3312:327"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:367:382":{"id":"0:367:382","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3186:197","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:349:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:120:1930":{"id":"0:120:1930","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1104,4],"end":[1107,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["_key",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"2:13187:58527":{"id":"2:13187:58527","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3106-0:296:1558":{"id":"b:2:3106-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3116-0:406:1565":{"id":"b:2:3116-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:315:630":{"id":"0:315:630","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3177:192-0:336:1560":{"id":"a:2:3177:192-0:336:1560","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13197:19341":{"id":"2:13197:19341","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15710:2175","self::pattern":"2:12731:9463"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:102:1563":{"id":"0:102:1563","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"ParkToken(0)","value":null,"is_literal":false}},"1:6451:9133":{"id":"1:6451:9133","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6452:55991","1:6453:55992"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13221:58536":{"id":"2:13221:58536","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15710:2175"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49330:9796","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:575":{"id":"0:373:575","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13105:279":{"id":"2:13105:279","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15715:2180","`u8`":"1:15724:2189"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2834:116":{"id":"2:2834:116","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:367:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9036:2463-0:358:1557":{"id":"a:2:9036:2463-0:358:1557","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13126:36675":{"id":"2:13126:36675","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49305:9794","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134:2080":{"id":"0:134:2080","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3280:2370":{"id":"2:3280:2370","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3282:1316"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3110-0:336:1560":{"id":"b:2:3110-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7669:9272":{"id":"1:7669:9272","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7670:55791"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3116-0:358:1557":{"id":"b:2:3116-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10029:2844":{"id":"2:10029:2844","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10030:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9037:2462-0:296:1558":{"id":"a:2:9037:2462-0:296:1558","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13191:58530":{"id":"2:13191:58530","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15710:2175","self::pattern":"2:12731:9463"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:12761:9467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:9137":{"id":"1:1075:9137","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2741","1:1077:9949","1:1078:52967","1:1079:52966","1:1080:52968","1:1081:52965","1:1082:52964"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:776-0:391:1559":{"id":"b:5:776-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2741","5:779:2742","5:780:2743"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13115:9215":{"id":"2:13115:9215","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15715:2180","str::slice_mut_unchecked":"1:15715:2180","crate::ops::Index":"2:3481:9182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13459:142":{"id":"2:13459:142","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13460:163","2:13461:142","2:13462:735"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:297:1790":{"id":"0:297:1790","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"b:2:3116-0:336:1560":{"id":"b:2:3116-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3121-0:358:1557":{"id":"b:2:3121-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13212:9683":{"id":"2:13212:9683","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12670:9252","FromStr::Err":"2:12670:9252"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47182:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12670:9252","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12670:9252","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:779:2742":{"id":"5:779:2742","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8176:2523":{"id":"2:8176:2523","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8177:761","2:8178:2053"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3319:9507":{"id":"2:3319:9507","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3321:163","2:3322:1193"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12670:9252":{"id":"2:12670:9252","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12671:118","2:12672:56907"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3429:124":{"id":"2:3429:124","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3431:163","2:3432:352"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3409:2302":{"id":"2:3409:2302","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3410:516"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3396:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5763:59170":{"id":"5:5763:59170","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:1691","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7774:9956","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:1691","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7774:9956","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8070:9536":{"id":"2:8070:9536","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8072:2733"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3485:9546":{"id":"2:3485:9546","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3487:722"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3481:9182","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2783-0:376:1562":{"id":"b:2:2783-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6681:9031":{"id":"1:6681:9031","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6682:54376","1:6683:54377"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3106-0:316:1561":{"id":"b:2:3106-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:776-0:336:1560":{"id":"b:5:776-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2741","5:779:2742","5:780:2743"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3420:1738":{"id":"2:3420:1738","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3421:549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5782:59173":{"id":"5:5782:59173","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5784:2352":{"id":"5:5784:2352","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302:1794":{"id":"0:302:1794","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3638:129":{"id":"2:3638:129","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3640:657"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3633:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:316:1561":{"id":"0:316:1561","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:317:1799","0:318:1801","0:319:1804","0:320:1808"],"impls":["a:2:3218:2522-0:316:1561","a:2:9036:2463-0:316:1561","a:2:9037:2462-0:316:1561","a:2:3177:192-0:316:1561","a:2:3189:199-0:316:1561","b:2:3121-0:316:1561","b:2:3906-0:316:1561","b:2:2783-0:316:1561","b:2:3110-0:316:1561","b:2:3106-0:316:1561","b:2:3116-0:316:1561","b:2:2780-0:316:1561","b:5:776-0:316:1561","0:322","0:323","0:325","0:327","0:328","0:330","0:331","0:334"]}},"2:8066:9538":{"id":"2:8066:9538","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8068:2732"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13168:58521":{"id":"2:13168:58521","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3304:9227":{"id":"2:3304:9227","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3306:163","2:3307:325"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13209:58534":{"id":"2:13209:58534","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103:1552":{"id":"0:103:1552","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["validate",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"bool"}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12039:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"bool"}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"2:13162:53127":{"id":"2:13162:53127","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:12731:9463","str::splitn":"1:15715:2180","prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49135:9756","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:1564":{"id":"0:101:1564","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"UnparkToken(0)","value":null,"is_literal":false}},"2:13127:53129":{"id":"2:13127:53129","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2780-0:358:1557":{"id":"b:2:2780-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3906-0:376:1562":{"id":"b:2:3906-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3906-0:406:1565":{"id":"b:2:3906-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:390:630":{"id":"0:390:630","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3182:2521":{"id":"2:3182:2521","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3185:198","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13122:36690":{"id":"2:13122:36690","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15715:2180"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49287:9792","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:390:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3086:205":{"id":"2:3086:205","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3088:119","2:3089:1373"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9037:2462-0:336:1560":{"id":"a:2:9037:2462-0:336:1560","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3218:2522-0:336:1560":{"id":"a:2:3218:2522-0:336:1560","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:358:1557":{"id":"0:358:1557","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:359:1824","0:361:1826","0:363:1828"],"impls":["a:2:3218:2522-0:358:1557","a:2:9036:2463-0:358:1557","a:2:9037:2462-0:358:1557","a:2:3177:192-0:358:1557","a:2:3189:199-0:358:1557","b:2:3121-0:358:1557","b:2:3906-0:358:1557","b:2:2783-0:358:1557","b:2:3110-0:358:1557","b:2:3106-0:358:1557","b:2:3116-0:358:1557","b:2:2780-0:358:1557","b:5:776-0:358:1557","0:365","0:366","0:368","0:369","0:371","0:372","0:374"]}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:405:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9966:2837":{"id":"2:9966:2837","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9967:1484","2:9968:58172","2:9970:54241"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3314:9229":{"id":"2:3314:9229","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3316:163","2:3317:330"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13104:58515":{"id":"2:13104:58515","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13121:9220":{"id":"2:13121:9220","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:48999:9086","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5637:9041":{"id":"1:5637:9041","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5638:8472","1:5639:52652","1:5640:8844","1:5641:56944","1:5642:8448","1:5643:8449","1:5644:56945","1:5645:1264","1:5646:56946","1:5647:56947","1:5648:56948","1:5649:56949","1:5650:56950","1:5651:56951","1:5652:56952","1:5653:56953"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3906-0:296:1558":{"id":"b:2:3906-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3074:73":{"id":"2:3074:73","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3076:280"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3116-0:391:1559":{"id":"b:2:3116-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:776-0:316:1561":{"id":"b:5:776-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2741","5:779:2742","5:780:2743"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12178:9942":{"id":"2:12178:9942","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12179:2696","2:12180:58504"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:776-0:376:1562":{"id":"b:5:776-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2741","5:779:2742","5:780:2743"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:115:1554":{"id":"0:115:1554","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1012,0],"end":[1085,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["filter",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3426:123","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3426:123","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"1:4609:9083":{"id":"1:4609:9083","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4610:55609","1:4611:55610","1:4612:55611","1:4614:9082","1:4615:55612","1:4617:53120","1:4618:10289"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4527:9048","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5770:59172":{"id":"5:5770:59172","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3106-0:376:1562":{"id":"b:2:3106-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2780-0:376:1562":{"id":"b:2:2780-0:376:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3292:9457":{"id":"2:3292:9457","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3294:1072"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:345:1821":{"id":"0:345:1821","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:12756:9466":{"id":"2:12756:9466","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12758:2687","2:12759:57594","2:12760:57595"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:12750:9462","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13150:53123":{"id":"2:13150:53123","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15710:2175","self::pattern":"2:12731:9463","`DoubleEndedIterator`":"2:8151:112","str::split":"1:15715:2180"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49031:9752","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6757:9024":{"id":"1:6757:9024","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6758:56561"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4887:9049":{"id":"1:4887:9049","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4888:2823","1:4889:56897"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:100:1796"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:332:575":{"id":"0:332:575","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3189:199":{"id":"2:3189:199","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13097:58512":{"id":"2:13097:58512","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3185:198","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:403:875":{"id":"0:403:875","crate_id":0,"name":"ne","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:406:1565":{"id":"0:406:1565","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:131","a:2:3218:2522-0:406:1565","a:2:9036:2463-0:406:1565","a:2:9037:2462-0:406:1565","a:2:3177:192-0:406:1565","a:2:3189:199-0:406:1565","b:2:3121-0:406:1565","b:2:3906-0:406:1565","b:2:2783-0:406:1565","b:2:3110-0:406:1565","b:2:3106-0:406:1565","b:2:3116-0:406:1565","b:2:2780-0:406:1565","0:408"]}},"0:318:1801":{"id":"0:318:1801","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:3121-0:406:1565":{"id":"b:2:3121-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:396:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22543:9131":{"id":"2:22543:9131","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22533:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:396:382":{"id":"0:396:382","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13130:52676":{"id":"2:13130:52676","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15710:2175","self::pattern":"2:12731:9463"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3177:192-0:376:1562":{"id":"a:2:3177:192-0:376:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:335:630":{"id":"0:335:630","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:306:382":{"id":"0:306:382","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3906-0:391:1559":{"id":"b:2:3906-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3218:2522-0:391:1559":{"id":"a:2:3218:2522-0:391:1559","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3218:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8577:2353":{"id":"2:8577:2353","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5785:52967":{"id":"5:5785:52967","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15715:2180"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:300:1792":{"id":"0:300:1792","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:12761:9467":{"id":"2:12761:9467","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4600:9533":{"id":"2:4600:9533","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4601:2696","2:4602:57546","2:4603:2697"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6090:202":{"id":"5:6090:202","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6091:2744"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5631:9040":{"id":"1:5631:9040","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5632:8844","1:5633:12803"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3339:9516":{"id":"2:3339:9516","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:331"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13125:58517":{"id":"2:13125:58517","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49277:9791","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10239:138":{"id":"2:10239:138","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10240:622","2:10241:2258","2:10242:57128","2:10243:57129","2:10244:57130","2:10245:57131","2:10246:57132","2:10247:57133","2:10248:57134","2:10249:57135","2:10250:57136","2:10251:57137","2:10252:57138","2:10253:57139","2:10254:57140","2:10255:1484"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3106-0:358:1557":{"id":"b:2:3106-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:398":{"id":"0:398","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:387:575":{"id":"0:387:575","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375:630":{"id":"0:375:630","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13118:53113":{"id":"2:13118:53113","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"1:15715:2180"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5685:9044":{"id":"1:5685:9044","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5686:56729"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13217:52964":{"id":"2:13217:52964","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13107:1761":{"id":"2:13107:1761","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47055:158"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5783:59174":{"id":"5:5783:59174","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8069:196","`Box<str>`":"5:421:1691"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:1691","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7774:9956","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3155:108","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:326:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:343:1819":{"id":"0:343:1819","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:388:875":{"id":"0:388:875","crate_id":0,"name":"ne","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:100:1796":{"id":"0:100:1796","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133:2073":{"id":"0:133:2073","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3679:2301":{"id":"2:3679:2301","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:336:1560":{"id":"a:2:3189:199-0:336:1560","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:324:382":{"id":"0:324:382","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3177:192-0:296:1558":{"id":"a:2:3177:192-0:296:1558","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:135:2086":{"id":"0:135:2086","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341:1817":{"id":"0:341:1817","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:0:1568":{"id":"0:0:1568","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:119:1551","0:103:1552","0:110:1553","0:115:1554","0:108:1555","0:112:1556","0:358:1557","0:296:1558","0:391:1559","0:336:1560","0:316:1561","0:376:1562","0:102:1563","0:101:1564","0:406:1565"]}},"b:2:2780-0:391:1559":{"id":"b:2:2780-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3481:9182":{"id":"2:3481:9182","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3483:163","2:3484:721"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10027:2843":{"id":"2:10027:2843","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10028:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:119:1551":{"id":"0:119:1551","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1090,0],"end":[1138,1]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:120:1930","0:121:1936"]}},"2:8103:128":{"id":"2:8103:128","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8105:654"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3904:67":{"id":"2:3904:67","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3905:1385"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:2774:92":{"id":"2:2774:92","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2776:2245"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8151:112":{"id":"2:8151:112","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8152:2687","2:8153:2688","2:8154:2689","2:8155:2690","2:8159:2691","2:8162:2692"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8302:149","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3186:197","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:409:59":{"id":"0:409:59","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5518:9952":{"id":"5:5518:9952","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5520:163","5:5521:2038"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10031:2845":{"id":"2:10031:2845","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10032:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9037:2462-0:391:1559":{"id":"a:2:9037:2462-0:391:1559","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13194:58531":{"id":"2:13194:58531","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15710:2175","self::pattern":"2:12731:9463"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:778:2741":{"id":"5:778:2741","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"b:2:3110-0:406:1565":{"id":"b:2:3110-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3335:9514":{"id":"2:3335:9514","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3337:328"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:375:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12741:9464":{"id":"2:12741:9464","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12743:9462","2:12744:58293","2:12745:58294","2:12746:58295","2:12747:58297","2:12748:58296","2:12749:58298"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3343:9518":{"id":"2:3343:9518","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3345:1194"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:361:1826":{"id":"0:361:1826","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:4602:9064":{"id":"1:4602:9064","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4603:52566","1:4604:3183","1:4605:52567","1:4606:52568"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3218:2522":{"id":"2:3218:2522","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10035:2846":{"id":"2:10035:2846","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10036:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3106-0:406:1565":{"id":"b:2:3106-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3109:2686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:402:575":{"id":"0:402:575","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110:1553":{"id":"0:110:1553","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[805,0],"end":[850,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key",{"kind":"primitive","inner":"usize"}],["unpark_token",{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"a:2:9037:2462-0:358:1557":{"id":"a:2:9037:2462-0:358:1557","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3077:72":{"id":"2:3077:72","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3079:2685"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13171:2255":{"id":"2:13171:2255","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12731:9463","`DoubleEndedIterator`":"2:8151:112","prim@char":"1:15710:2175","str::matches":"1:15715:2180"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49217:9789","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2780-0:406:1565":{"id":"b:2:2780-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6755:9027":{"id":"1:6755:9027","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6756:55813"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13180:58524":{"id":"2:13180:58524","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15710:2175","`DoubleEndedIterator`":"2:8151:112","str::match_indices":"1:15715:2180","self::pattern":"2:12731:9463"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49181:9787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3908:1385":{"id":"2:3908:1385","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45621:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13156:58519":{"id":"2:13156:58519","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:15715:2180","self::pattern":"2:12731:9463","prim@char":"1:15710:2175","str::split":"1:15715:2180"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49081:9783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5671:9042":{"id":"1:5671:9042","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5672:56031","1:5673:56032","1:5674:56033","1:5675:56034"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3297:9502":{"id":"2:3297:9502","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3298:163","2:3299:921"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9037:2462-0:376:1562":{"id":"a:2:9037:2462-0:376:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3120:1373":{"id":"2:3120:1373","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47182:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3906-0:336:1560":{"id":"b:2:3906-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3904:67","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3908:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9036:2463-0:316:1561":{"id":"a:2:9036:2463-0:316:1561","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13144:53120":{"id":"2:13144:53120","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:15710:2175","`DoubleEndedIterator`":"2:8151:112","self::pattern":"2:12731:9463","str::rsplit":"1:15715:2180","str::split_whitespace":"1:15715:2180"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49013:9088","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3110-0:391:1559":{"id":"b:2:3110-0:391:1559","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3245:1679":{"id":"2:3245:1679","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3247:163","2:3248:241"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:317:1799":{"id":"0:317:1799","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:7631:9545":{"id":"2:7631:9545","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7632:58058","2:7633:58059","2:7634:58056","2:7635:58054","2:7636:58060","2:7637:58057","2:7638:58055"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2875:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5615:9039":{"id":"1:5615:9039","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5616:55740","1:5617:55742","1:5618:55741","1:5619:55743"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9036:2463-0:376:1562":{"id":"a:2:9036:2463-0:376:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:349:382":{"id":"0:349:382","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3112:651":{"id":"2:3112:651","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3186:197","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:363:1828":{"id":"0:363:1828","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:337:1813":{"id":"0:337:1813","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:9036:2463-0:296:1558":{"id":"a:2:9036:2463-0:296:1558","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8116:2524":{"id":"2:8116:2524","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8118:2693","2:8120:2694","2:8121:2695"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13113:53092":{"id":"2:13113:53092","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3189:199-0:296:1558":{"id":"a:2:3189:199-0:296:1558","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13165:58520":{"id":"2:13165:58520","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:375:2346":{"id":"20:375:2346","crate_id":20,"name":"Array","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:376:2696","20:377:1264"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10229:134":{"id":"2:10229:134","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10230:685","2:10232:56574"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3463:9615":{"id":"2:3463:9615","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3465:213","2:3466:188","2:3467:58232"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:355:575":{"id":"0:355:575","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2865:159":{"id":"2:2865:159","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2866:388","2:2867:2678","2:2868:2676","2:2869:2684"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2875:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2783-0:406:1565":{"id":"b:2:2783-0:406:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2777:2351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2785:52545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23386:9560":{"id":"2:23386:9560","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23387:9625"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23382:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13094":{"id":"2:13094","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12191:1300","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13095:761","2:13096:2053","2:13097:58512","2:13098:58513","2:13100:58514","2:13103:55998","2:13104:58515","2:13105:279","2:13106:10825","2:13107:1761","2:13109:10816","2:13111:53091","2:13113:53092","2:13115:9215","2:13116:58516","2:13117:53112","2:13118:53113","2:13119:9813","2:13120:9492","2:13121:9220","2:13122:36690","2:13123:36680","2:13124:10289","2:13125:58517","2:13126:36675","2:13127:53129","2:13130:52676","2:13133:52678","2:13136:2726","2:13140:2692","2:13144:53120","2:13147:36547","2:13150:53123","2:13153:58518","2:13156:58519","2:13159:53125","2:13162:53127","2:13165:58520","2:13168:58521","2:13171:2255","2:13174:58522","2:13177:58523","2:13180:58524","2:13183:58525","2:13185:58526","2:13187:58527","2:13189:58528","2:13190:58529","2:13191:58530","2:13194:58531","2:13197:19341","2:13200:53130","2:13203:58532","2:13206:58533","2:13209:58534","2:13212:9683","2:13214:9949","2:13215:52968","2:13216:52965","2:13217:52964","2:13218:58535","2:13220:9139","2:13221:58536"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3426:123":{"id":"2:3426:123","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3428:351"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9036:2463-0:406:1565":{"id":"a:2:9036:2463-0:406:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:320:1808":{"id":"0:320:1808","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:13109:10816":{"id":"2:13109:10816","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47055:158"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10632:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13124:10289":{"id":"2:13124:10289","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49267:9089","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9037:2462-0:406:1565":{"id":"a:2:9037:2462-0:406:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9037:2462","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13133:52678":{"id":"2:13133:52678","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4584:2837":{"id":"1:4584:2837","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4585:2258","1:4586:54237","1:4588:54238","1:4589:10213","1:4590:54239","1:4591:54240","1:4592:54241","1:4601:2715"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9037:2462":{"id":"2:9037:2462","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13843:133":{"id":"2:13843:133","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13844:253","2:13845:491","2:13846:256","2:13847:1048"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13096:2053":{"id":"2:13096:2053","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10025:2842":{"id":"2:10025:2842","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10026:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:359:1824":{"id":"0:359:1824","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13183:58525":{"id":"2:13183:58525","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3266:9447":{"id":"2:3266:9447","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3268:163","2:3269:1071"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2780-0:316:1561":{"id":"b:2:2780-0:316:1561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6684:9029":{"id":"1:6684:9029","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6685:13164"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13136:2726":{"id":"2:13136:2726","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15710:2175","`None`":"2:47055:158","self::pattern":"2:12731:9463"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3621:9865":{"id":"2:3621:9865","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3552:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13185:58526":{"id":"2:13185:58526","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13218:58535":{"id":"2:13218:58535","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15710:2175"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49312:9795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8584:9544":{"id":"2:8584:9544","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7631:9545","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5549:9019":{"id":"1:5549:9019","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5550:10748","1:5551:55998"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2875:166":{"id":"2:2875:166","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2877:966","2:2878:794","2:2879:760","2:2880:683","2:2881:666"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10016:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:357:630"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13098:58513":{"id":"2:13098:58513","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121:1936":{"id":"0:121:1936","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1120,4],"end":[1123,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["_key",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"2:3177:192":{"id":"2:3177:192","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3716:9532":{"id":"2:3716:9532","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2780-0:336:1560":{"id":"b:2:2780-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2782:2245"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3552:2355":{"id":"2:3552:2355","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3554:57575","2:3555:57576","2:3556:53129"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:357:630":{"id":"0:357:630","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9976:126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9965:187","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13915:9153":{"id":"2:13915:9153","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13916:56504","2:13917:56505","2:13918:2342","2:13919:56506","2:13920:56507","2:13921:56508","2:13922:2715"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2834:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":{"restricted":{"parent":"0:123:1547","path":"::spinwait"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3155:108","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SpinWait","id":"0:406:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:409:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13159:53125":{"id":"2:13159:53125","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175","str::rsplitn":"1:15715:2180"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49117:9755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13119:9813":{"id":"2:13119:9813","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:48983:9777","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3186:197","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5693:9045":{"id":"1:5693:9045","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5694:8844"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3189:199-0:358:1557":{"id":"a:2:3189:199-0:358:1557","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3189:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3121-0:336:1560":{"id":"b:2:3121-0:336:1560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3080:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3124:119","2:3125:1372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2829:165":{"id":"2:2829:165","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2831:575","2:2832:875"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10023:111":{"id":"2:10023:111","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10024:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3187:100","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2829:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:402:575","0:403:875"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3110-0:358:1557":{"id":"b:2:3110-0:358:1557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3083:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FilterOp","id":"0:358:1557","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3112:651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10037:2847":{"id":"2:10037:2847","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10038:630"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13214:9949":{"id":"2:13214:9949","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:333:875":{"id":"0:333:875","crate_id":0,"name":"ne","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":{"restricted":{"parent":"0:3:1546","path":"::parking_lot"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2799:98","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:381:382"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3116-0:296:1558":{"id":"b:2:3116-0:296:1558","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3090:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3086:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkResult","id":"0:296:1558","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3119:119","2:3120:1373"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13206:58533":{"id":"2:13206:58533","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112:1556":{"id":"0:112:1556","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[880,0],"end":[983,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["key_from",{"kind":"primitive","inner":"usize"}],["key_to",{"kind":"primitive","inner":"usize"}],["validate",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3429:124","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"2:13200:53130":{"id":"2:13200:53130","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47055:158","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12756:9466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13153:58518":{"id":"2:13153:58518","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8151:112","str::rsplit_terminator":"1:15715:2180","str::split":"1:15715:2180","self::pattern":"2:12731:9463","prim@char":"1:15710:2175"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49063:9782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:299:1493":{"id":"0:299:1493","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"0:376:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"1:6353:9135":{"id":"1:6353:9135","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6354:1750","1:6355:3348","1:6356:55837","1:6357:55838","1:6358:55839","1:6359:1748"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10413:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3155:108":{"id":"2:3155:108","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3156:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13215:52968":{"id":"2:13215:52968","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3124:119":{"id":"2:3124:119","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38398:9144","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"2:3325:9501":{"id":"2:3325:9501","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3327:163","2:3328:1196"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3177:192-0:391:1559":{"id":"a:2:3177:192-0:391:1559","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"0:391:1559","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5623:9038":{"id":"1:5623:9038","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5624:8844","1:5625:56486","1:5626:56487"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2777:2351":{"id":"2:2777:2351","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2779:52545"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3182:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2774:92","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9036:2463-0:336:1560":{"id":"a:2:9036:2463-0:336:1560","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9036:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RequeueOp","id":"0:336:1560","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5764:2759":{"id":"5:5764:2759","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8069:196"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8069:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12741:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:391:2349":{"id":"20:391:2349","crate_id":20,"name":"ToSmallVec","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:393:59961"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Array","id":"20:375:2346","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3177:192-0:316:1561":{"id":"a:2:3177:192-0:316:1561","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3177:192","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"0:316:1561","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"paths":{"22:1576:4370":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:7928:10458":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:5456:10315":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"18:660:10794":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"22:4285:6501":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:2113:8967":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:47165:2660":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:52680:9645":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:11304:46007":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:14000:12032":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:1018:2800":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"5:1422:9168":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:50698:9637":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:14012:9107":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:7119:10355":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:47812:2843":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:5421:10313":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:1507:9163":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:11231:9030":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:4145:6489":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"20:107:2343":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"6:624:3488":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:10712:9098":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:52990:12573":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:8031:10038":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12756:11636":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"12:784:9160":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:10975:13093":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:3396:109":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:7843:10501":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:48085:66":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:47486:84":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"0:316:1561":{"crate_id":0,"path":["parking_lot_core","UnparkResult"],"kind":"struct"},"1:11843:55607":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:52931:9633":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:4255:6497":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:48386:9242":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:49330:9796":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"22:3970:6469":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:161:3143":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"22:4333:6507":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:46352:9593":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"22:3854:6459":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:983:10021":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:46210:9584":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:3548:10996":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:22737:9626":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:7882:10029":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"0:119:1551":{"crate_id":0,"path":["parking_lot_core","deadlock"],"kind":"module"},"22:4264:6499":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:14674:11052":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:12610:11610":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:48823:9761":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:51074:9663":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:51224:9643":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:4834:2294":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:4478:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:4008:13054":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:5945:3393":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"12:1180:10240":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:2634:10074":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:1428:2824":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:2886:2741":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"22:5363:7129":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"18:849:10785":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:6176:7546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:47360:76":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:7549:10430":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"9:1075:10177":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:24210:2805":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4501:6526":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:48349:9181":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"22:530:3477":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4419:6517":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:2433:13151":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:51954:9647":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:8014:9871":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:1302:135":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"12:463:59930":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:2968:10595":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"22:4195:6493":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:4258:9334":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13564:11903":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:9193:9128":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7236:10496":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:13627:11917":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:2888:12403":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12917:11649":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:13708:56603":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:3365:10346":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:45512:180":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:11902:9196":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:47251:160":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"22:4015:6474":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:4306:6503":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"22:6873:6655":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"0:358:1557":{"crate_id":0,"path":["parking_lot_core","FilterOp"],"kind":"enum"},"6:1690:4379":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:9966:2837":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"8:0:1566":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:10545:10078":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:5671:9042":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:12456:11586":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:4350:12056":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"22:4470:6524":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:681:11406":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"22:4185:6492":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:3481:9182":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:3343:9518":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:13054:11758":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"0:110:1553":{"crate_id":0,"path":["parking_lot_core","unpark_all"],"kind":"function"},"1:894:2812":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6591:10481":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:55748:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:48374:138":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:8902:45997":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:10543:11391":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"9:900:12371":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:5623:9038":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:5241:7100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:12598:11608":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10962:13092":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:2075:10998":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:8342:184":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"18:866:10787":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:5269:7122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:5469:10996":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"22:5261:7122":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:11143:9352":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:3892:6462":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:543:3478":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:696:2419":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:13692:9266":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:14524:9023":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:5936:2347":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"22:4462:6523":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:5848:9406":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"22:4104:6485":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:13221:11815":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"22:4087:6483":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:12961:43495":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"17:1236:13053":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:7904:2345":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:5131:9923":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:8738:9387":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:13547:11899":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:32007:57299":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"22:1900:4525":{"crate_id":22,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:5159:7114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:1501:9162":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:50948:12517":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:6367:9968":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:31768:9894":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:48971:9621":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"0:108:1555":{"crate_id":0,"path":["parking_lot_core","unpark_one"],"kind":"function"},"2:2865:159":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:4545:9525":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6110:10461":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13842:11999":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:55709:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6731:10630":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"0:115:1554":{"crate_id":0,"path":["parking_lot_core","unpark_filter"],"kind":"function"},"22:6213:7550":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:45897:9711":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:5736:10331":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:7310:10009":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:10656:9047":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:7166:13155":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:3314:9229":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:23480:9831":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:6200:7548":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:11936:9199":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:1527:4363":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:4557:9527":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:49609:9481":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:607:13052":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:31949:8970":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"1:10704:9096":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:7529:9264":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:10160:11350":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:6028:4328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:10413:9022":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:49217:9789":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:45558:181":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"5:5217:9967":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:0:1567":{"crate_id":20,"path":["smallvec"],"kind":"module"},"6:4073:6481":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:10061:13065":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:7392:10427":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:13488:11881":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:15189:55903":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:46242:9587":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"0:361:1826":{"crate_id":0,"path":["parking_lot_core","FilterOp","Skip"],"kind":"variant"},"2:46251:9599":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:6870:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"15:269:10265":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:12059:2365":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:46299:9591":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:10812:2823":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:46022:9713":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"22:5339:7127":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:10440:2798":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"22:598:3485":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"12:1762:10994":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:7492:11008":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:47156:2460":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:9210:46004":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:3320:10656":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9943:59949":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:9038:2461":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"0:376:1562":{"crate_id":0,"path":["parking_lot_core","UnparkToken"],"kind":"struct"},"2:10029:2844":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:9034:46000":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:569:3480":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13574:11906":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:9619:11042":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:9476:11344":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:4304:12055":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"22:3949:6467":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:2582:13154":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"22:4137:6489":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:49312:9795":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:9280:11338":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6554:10479":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"22:1519:4363":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:9592:120":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:2188:2775":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"5:3468:2823":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"0:345:1821":{"crate_id":0,"path":["parking_lot_core","RequeueOp","RequeueOne"],"kind":"variant"},"1:4609:9083":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"22:3943:6466":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:10033:171":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:5826:9404":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"22:5122:7072":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:11199:11402":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:47612:80":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:13554:11900":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:5518:9952":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:3074:73":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"12:2323:12319":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"22:6885:6657":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"22:4486:6525":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:11436:9245":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:49622:12842":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"5:3145:9223":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:24380:9273":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"22:6902:6659":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:48832:9762":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:10980:9089":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"0:359:1824":{"crate_id":0,"path":["parking_lot_core","FilterOp","Unpark"],"kind":"variant"},"1:8790:9296":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:1584:4370":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8898:13156":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:5295:44422":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:12408:11581":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"22:3989:6471":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:46549:12779":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:7999:10037":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:8147:9158":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:51636:9660":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:46130:13129":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:10792:9099":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:4470:6523":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:13876:11049":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:6691:10483":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"9:0:2149":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:13348:11846":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:5790:10336":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:5371:7129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10502:12698":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:1041:2802":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"22:5378:7131":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:23794:43217":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"22:5937:3393":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:14343:121":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"22:3873:6461":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:525:3476":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:12182:13152":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:14940:9217":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:3183:2300":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:13978:12026":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:23730:12413":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:5394:9356":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"22:504:3474":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"2:9703:9736":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:7856:10502":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:3018:10596":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"19:0:963":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:13582:11907":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:11122:9757":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11187:9405":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10988:13094":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:10980:9751":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"22:4254:6498":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:10023:111":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"18:677:134":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:11993:11494":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9809:59943":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:11894:2823":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"22:3910:6464":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5428:7136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:13799:11983":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"11:0:2151":{"crate_id":11,"path":["adler"],"kind":"module"},"12:1235:10242":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:0:766":{"crate_id":6,"path":["libc"],"kind":"module"},"16:3241:10601":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:7789:10022":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"14:244:12742":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:49741:9807":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10571:13077":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11406:11408":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:22537:9129":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"14:194:44345":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"22:6804:8073":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:46003:9930":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:5459:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:12079:2366":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:10236:10661":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:45881:9709":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:15067:9348":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:11013:9052":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:14735:9269":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13520:11892":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10912:13085":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:15722:2187":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:13898:12007":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:14896:9209":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:2093:10031":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:10860:9088":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:4:948":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:3205:2669":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:24482:9843":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13620:11915":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:10211:13068":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:14312:12799":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"9:469:13202":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"22:150:3142":{"crate_id":22,"path":["libc","unix","FILE"],"kind":"enum"},"2:49733:9805":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:2429:2777":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3108:120":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:46219:12774":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"22:6206:7549":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:49588:9479":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:12025:9379":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"22:5406:7134":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:5469:7138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:3080:141":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:4227:6495":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:12343:11551":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:3261:9321":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"22:5266:7123":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:6579:9041":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:55735:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12247:11534":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:50836:9650":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"5:2182:10089":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:11847:11472":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:3245:1679":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:10037:2847":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12494:11591":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:5960:10343":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4325:6505":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"18:801:10781":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:3426:123":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:6136:10462":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"18:650:10790":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"0:343:1819":{"crate_id":0,"path":["parking_lot_core","RequeueOp","UnparkOne"],"kind":"variant"},"2:55670:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"22:6636:7912":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"12:2045:9226":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:49081:9783":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"22:4233:6496":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:4998:182":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"5:8069:196":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:12327:11546":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"22:6628:7911":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:3137:9225":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:49725:9804":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:46311:1826":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"22:5392:7132":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:5978:9358":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"22:5520:6374":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:52490:9641":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:4127:6487":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:14668:11051":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:7669:9272":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:48396:12784":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:11499:11417":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:820:11043":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:2318:2303":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"7:38:43970":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:10266:10684":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:8577:2353":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:13296:11831":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"22:5412:7135":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:2765:9143":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:5998:7539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:8929:45998":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:24278:2806":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:3276:2368":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"18:754:59956":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:537:3477":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:5029:12076":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:3064:10654":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:13915:9153":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:6614:3431":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11118:46006":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:7798:2343":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:6091:7541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8787:9376":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"22:154:3143":{"crate_id":22,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:49321:9140":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:3083:127":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:12946:11669":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:542:10358":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:10501:15670":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:2188:9226":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:31943:2354":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:12756:9466":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13240:11816":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:8066:9538":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:13570:13128":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:15725:2190":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:3990:6470":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:49737:9809":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:48922:9769":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:49745:9808":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"22:3897:6463":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:49287:9792":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:3966:6468":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:8080:9957":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:7453:10422":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:4281:6500":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6032:10354":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:7884:10429":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13356:11849":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:6997:18941":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:6887:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:11816:9270":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:51320:9632":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:3423:122":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:8356:9197":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:3549:12049":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:5528:6374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10928:9081":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:9689:59946":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:10656:11355":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:10960:9085":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:8558:9371":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:49757:113":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:7810:9111":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:3563:9090":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4133:6488":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"18:739:13047":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:4417:12058":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3186:197":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"18:766:11264":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:49753:9803":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:10827:10719":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"20:213:10989":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"2:4200:2345":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:1576:9159":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:4535:12062":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:24852:9715":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:7800:56606":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"2:49792:9882":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"17:10448:10740":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"22:6850:6652":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:7951:9178":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:11861:12654":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:14090:1975":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:9961:13061":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:294:13049":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"15:248:10261":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:7495:9262":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:6923:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:2159:2345":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:9296:11339":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"22:5945:4300":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:13733:11960":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:47182:187":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:10031:2845":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:2134:10072":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:2166:9158":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"6:4013:6473":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:10140:10697":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:9158:9464":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:4052:6478":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:49972:150":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:2456:13152":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:6100:7542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:46262:9588":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:3195:10599":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"22:1546:4367":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:6858:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13963:12025":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:4341:6507":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10599:13079":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:50996:9671":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5969:3351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:45466:176":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:45614:9552":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:15728:2193":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:14841:9276":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:4600:9533":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:14317:9046":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:52979:12572":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:10489:10741":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"22:5979:7538":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:1837:9158":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:23778:43208":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:14377:56029":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:9036:2463":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:616:3487":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:53069:12578":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:5472:10318":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:10639:9150":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:8164:10005":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:3145:10607":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:5292:7125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"22:6077:7540":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"18:0:2157":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:51452:12524":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:6889:2343":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:578:3481":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:27663:9541":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:12741:11632":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:10836:2824":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:4887:9049":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"1:2723:9142":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:12956:13127":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:3086:205":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:5350:747":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:9933:13060":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13986:12029":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:1438:2345":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:1456:2066":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"16:6126:10467":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:13331:11841":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:2834:116":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:12582:11604":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:12741:9464":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:12685:11625":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:14537:9271":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:3255:9442":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"0:300:1792":{"crate_id":0,"path":["parking_lot_core","ParkResult","Invalid"],"kind":"variant"},"2:12202:9906":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:6090:202":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:4753:2286":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"22:4451:6522":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:3189:199":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:15729:2194":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:46150:9084":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:48989:9778":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:4762:2288":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:4230:12054":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"12:556:135":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:2866:10593":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:48932:9770":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12699:11628":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:510:13051":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:5877:9410":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"22:1609:4373":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:9849:59944":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:8954:10724":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:4614:12063":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:4371:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:5672:10327":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8248:2800":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"22:4411:6517":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"12:892:10231":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:6999:10486":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:49721:9801":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:13640:58444":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"17:9649:13055":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:2004:9070":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"5:2892:59884":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:6681:9031":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:11794:11458":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:55722:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:15720:2185":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:6864:6653":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:9545:81":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:4523:6529":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:1540:4365":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:46290:9590":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:13810:11984":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:48999:9086":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:6636:7911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:5360:10310":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:6744:10631":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:11696:11435":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:7279:10642":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:46233:9586":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:1622:4374":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:2774:92":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:11572:11421":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:14833:12805":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:1219:10070":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"22:81:3076":{"crate_id":22,"path":["libc","unix","DIR"],"kind":"enum"},"5:3660:9158":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"6:6221:7550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:3650:9550":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:9444:11039":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:4023:6474":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:3972:6313":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:6491:10477":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"7:0:1435":{"crate_id":7,"path":["unwind"],"kind":"module"},"18:620:12693":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:1415:2823":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:13477:11877":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:7158:10489":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:3233:9158":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:4757:2287":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"22:6083:7541":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:49749:9802":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:45853:9140":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:50867:9638":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:3218:10600":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"10:0:2150":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:4314:212":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:3957:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:1482:9158":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:5347:7127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:2829:165":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"18:644:10793":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"12:840:9156":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"22:1532:4365":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13282:11830":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:15215:10269":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:5191:7117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:10071:10769":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"12:853:9157":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"22:4387:6514":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:6910:6659":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:45868:9708":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:11192:9408":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:6366:10258":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:23677:12409":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:46172:9598":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:52806:9630":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:8107:143":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:3260:9444":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:3116:9078":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:4704:12066":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"20:375:2346":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"5:7981:96":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"12:976:9166":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:15727:2192":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:7858:176":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:55590:9556":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:5386:7131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"22:6243:2610":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"typedef"},"17:11434:11411":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:5303:8100":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"22:4369:6512":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:8116:2524":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:3679:2301":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:3924:2343":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:14748:9270":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"12:2331:9178":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6152:10421":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:56984:12588":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:46280:9589":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:23551:9832":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:1736:4385":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:9482:11040":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:9729:59942":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:3113:2760":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:48904:9767":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:13912:12014":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:1080:10996":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"13:120:44317":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:2211:2774":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:12051:11501":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"18:811:10782":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:2887:59923":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:3951:6466":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:48115:119":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:1534:2824":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:4995:12075":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:46362:9429":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:55683:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:53084:12579":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:3621:9865":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:12034:9293":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:14780:11064":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"12:2039:9225":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:10200:13067":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:3904:67":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:3264:10602":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:5595:10325":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"14:189:13112":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"11:54:10229":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"5:1604:176":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:3488:10605":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:49895:183":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:45935:9796":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:12526:9308":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:5407:10312":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:47234:2824":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:11981:11493":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:9600:59945":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:5384:10311":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:22334:58501":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:1630:4375":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:47088:2696":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:3077:72":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:4060:6479":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"12:2009:2345":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:22281:58465":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:3172:10598":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:11801:9269":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:46072:9872":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:15716:2181":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"0:101:1564":{"crate_id":0,"path":["parking_lot_core","DEFAULT_UNPARK_TOKEN"],"kind":"constant"},"1:11446:2823":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"22:4317:6505":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:47826:2844":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:1658:4376":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:1708:4381":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12783:11640":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:45922:9932":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:6252:10472":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:4425:6518":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:1488:9159":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:22685:9022":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:7561:9579":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:1524:2823":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:1459:9157":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:15731:2196":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12287:11539":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:49779:2372":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:632:3489":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"22:3964:6313":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:12528:11048":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"9:996:10175":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:2799:98":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:3481:2824":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:1132:1943":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:10942:9750":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12073:11510":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:2138:1019":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:3233:2745":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"22:5451:7137":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:2183:9225":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:4193:6492":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"22:6020:4328":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4358:6509":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:46558:9112":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"22:5997:3260":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"21:4:1566":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"17:11714:11436":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:10016:103":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"22:6043:4301":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:13535:169":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:7557:9266":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:4439:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:4157:10727":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:5864:9409":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:2912:10594":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:12671:11624":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:13494:58443":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"9:809:9242":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:1665:4377":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:1472:2343":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:13685:11959":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:5185:7116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:1446:9156":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:11965:9201":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:7373:2703":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:12537:11597":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:57005:12589":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:8070:9536":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:47819:2842":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"14:47:13112":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:13555:9275":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:46331:9596":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:1558:9156":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:23287:9130":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"9:1056:10169":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:4386:12057":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:9719:13056":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:10550:9084":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"17:12659:11623":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:24176:9837":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:52892:9668":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:9574:10671":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:5987:7538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:7303:10498":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"13:232:12315":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:9264:11337":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:10801:13084":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"0:363:1828":{"crate_id":0,"path":["parking_lot_core","FilterOp","Stop"],"kind":"variant"},"1:9317:54405":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:3348:9521":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"0:121:1936":{"crate_id":0,"path":["parking_lot_core","deadlock","release_resource"],"kind":"function"},"12:2013:2343":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"22:5428:11244":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:8045:10039":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:7212:168":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:4823:12070":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:13041:11752":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"5:1595:9161":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:13803:9267":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"22:1525:4364":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:50650:9657":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:13756:9817":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:3118:10608":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"22:4298:6503":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:13191:9362":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"12:2309:12317":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:7786:10432":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:9709:11043":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"6:610:3486":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"22:3937:6465":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:23831:9899":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"9:157:10126":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"22:4515:6529":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:5330:11338":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"22:1514:4362":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"22:524:2621":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"18:667:10795":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:3552:2355":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:46271:9601":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:50785:9662":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"22:1709:4382":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:5420:7135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"14:216:44351":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"22:5183:7117":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11337:10737":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:47122:2459":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:11136:9758":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:12178:9942":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:15708:2173":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:11040:9057":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:10028:13062":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:48754:9754":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"22:63:2612":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"typedef"},"12:1667:10252":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:7738:10499":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:7814:59474":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"9:749:10112":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:7042:10641":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:7783:2345":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:9162:10665":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"22:4417:6518":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:4295:9106":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:10900:9111":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:4449:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10081:10695":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:3862:6459":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7971:119":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:4931:2297":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"18:896:10789":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:6443:9070":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:3679:10996":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13258:11824":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:4762:12068":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:12552:11601":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:13532:11895":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:7216:10494":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:11835:11469":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:9088:46002":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"18:636:11254":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"22:1692:4380":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10611:13080":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:10027:2843":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:6176:10469":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"22:6856:6653":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:11822:11468":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:4224:10056":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"22:1650:4376":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:4373:9104":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:51876:9640":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:11910:2345":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12507:11592":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:46:12321":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"22:6915:8099":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:10435:2794":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:46578:12781":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:4156:6490":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3187:100":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"12:354:12744":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6087:10419":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:4908:1673":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:6072:10440":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"22:4025:6475":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:12118:11517":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:5433:10314":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:5522:10321":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:49063:9782":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:6753:9026":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:48956:9873":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:49305:9794":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:3177:192":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:6351:9967":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:1700:4380":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:6807:10485":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:6845:9032":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:3953:187":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:11949:9200":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"22:571:3481":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"22:5284:7125":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:10019:103":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:3339:9516":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:49235:9790":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"14:56:11413":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:47570:85":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:6596:9600":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:46163:9595":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:46567:12499":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:4395:6514":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:2395:13149":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:6934:10996":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"22:5304:7126":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:1744:4386":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"9:1020:10176":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"22:6891:6658":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:9332:10736":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:11180:9050":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:14307:12797":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:11015:9752":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"22:1594:4372":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:4790:12069":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6605:10436":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:4500:9070":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:5766:10335":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:5632:10326":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:49990:9146":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:12030:9292":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:46201:9583":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:52970:12571":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:48600:9946":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:13760:11972":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:10377:10686":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:2171:9223":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:52853:9648":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"22:6862:6654":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:6021:10591":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:3522:11266":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:10541:13159":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3331:9512":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:13843:133":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"22:6844:6651":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:47318:86":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:4334:9108":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:51923:9644":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:13590:11909":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:13746:11966":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:38461:2670":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:1522:4362":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:2852:162":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:5312:7126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:11075:12638":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:9069:9283":{"crate_id":1,"path":["std","lazy","SyncOnceCell"],"kind":"struct"},"2:48814:9760":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:6106:7543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:0:461":{"crate_id":2,"path":["core"],"kind":"module"},"17:13598:11910":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:3800:12052":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:5407:7133":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:6154:2343":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:11257:9033":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"22:5970:7537":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:3604:11270":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:6068:4304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:2855:161":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"22:1721:4384":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:10025:2842":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:10300:11046":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:3772:12051":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12645:11622":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:1547:4366":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:1717:4382":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:7295:10439":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:6589:8774":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:48842:9763":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"22:5159:7115":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"9:41:10159":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:11094:9755":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:7571:10418":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:46120:11015":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:10950:9084":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"12:2315:59932":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"9:776:10156":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"5:8092:9958":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:10644:9308":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:22692:20734":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:23382:9022":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:23715:9686":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:15460:11053":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:1149:13142":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"0:297:1790":{"crate_id":0,"path":["parking_lot_core","ParkResult","Unparked"],"kind":"variant"},"2:51989:9629":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:11604:11423":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:51372:12522":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:4492:9070":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"22:4423:6519":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12155:11522":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:49163:9786":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:31908:8969":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:11605:9771":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:10229:134":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:6569:10626":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:13453:11870":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:8302:149":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"22:4339:6508":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:7806:10023":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"22:1622:4375":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:3662:9551":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:11147:12700":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:7543:9265":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:13394:11856":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6219:10471":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:5549:9019":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"22:603:3486":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10353:10688":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:10420:10679":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"18:704:11254":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:49958:9816":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:4671:12065":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:5543:9021":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:50890:9642":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:49599:9480":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:52950:12569":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:6593:8778":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:3945:6465":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:4272:6499":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"18:136:52291":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12275:11538":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:50909:12516":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:1613:10067":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:1493:9160":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"22:4350:6509":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:3644:9548":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11640:11430":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:50762:9658":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"18:712:2675":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:10458:11303":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:13772:11975":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:11118:12795":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:12982:11700":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:1633:9168":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11043:9058":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"5:912:10020":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:48357:12783":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:2314:10687":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:3997:6471":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:13337:13151":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:1497:9161":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:53054:12577":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:51097:9666":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:12221:11530":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"22:0:766":{"crate_id":22,"path":["libc"],"kind":"module"},"17:10926:13089":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:15711:2176":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:3392:10609":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:51272:9628":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:1152:13144":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:10468:1687":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:46055:9871":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"20:328:2345":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"6:5274:7123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:519:3475":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:1760:4387":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:3429:10350":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:3325:9501":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"22:6060:4304":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:11616:11426":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:3420:1738":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:14360:110":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:0:253":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:12488:9788":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:6014:10466":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:52959:12570":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:11932:11480":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:53005:12574":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:50929:9627":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:4120:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11186:12701":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:13444:130":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"22:4309:6504":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:909:91":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:5615:9039":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:3716:9532":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"12:429:10243":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:24312:9839":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:2108:549":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:5436:11244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:5371:7130":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6577:10480":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:7333:10441":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:12431:11582":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"12:1118:9168":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:9614:11041":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:13306:11832":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:11915:11474":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:511:3474":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"22:3958:6468":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:6899:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"0:112:1556":{"crate_id":0,"path":["parking_lot_core","unpark_requeue"],"kind":"function"},"5:7898:2345":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:9186:10723":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:1190:15672":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"22:4044:6478":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"22:4292:6502":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:45996:9929":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:4152:2823":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:1157:15671":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:45374:2826":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:3185:198":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"12:925:9159":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:22533:9022":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"12:2005:2823":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:6051:4301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:22596:9625":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:2690:550":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7509:9263":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:48070:69":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:11132:9350":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:11108:9756":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:10275:11044":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:49277:9791":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"22:562:3480":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"2:45621:9147":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:3617:9097":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"9:603:13212":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"14:11:13112":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:12020:9298":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"22:4431:6520":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:670:3518":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:4083:6482":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:5554:11003":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"9:686:10108":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:10903:9749":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:375:10036":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:5927:10341":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:13370:11851":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"22:4441:6521":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:12807:9470":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13609:11914":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:48365:9461":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:51193:9639":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:2155:2823":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:11358:10721":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:5221:7120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:6644:10482":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:7226:10495":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"18:744:59954":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13180:11802":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:12005:9375":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:2794:10349":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:3284:9453":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"20:378:2347":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"1:7612:9268":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"12:1855:137":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:11095:55606":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:11947:11484":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:46540:9285":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10623:13081":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"22:5399:7133":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:15723:2188":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"5:3951:10996":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:7185:10491":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:12010:11497":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"22:1564:4369":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:12712:11629":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:10649:9046":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:15180:12658":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:14652:11050":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"12:2025:9223":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13205:11812":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"18:782:11254":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:45982:9795":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:5941:171":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"22:6192:7548":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:3918:6464":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:15692:55608":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:6852:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8349:1956":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"22:536:3478":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"22:3860:6460":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:48076:125":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"13:0:2147":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6718:10629":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:336:1560":{"crate_id":0,"path":["parking_lot_core","RequeueOp"],"kind":"enum"},"1:10517:9172":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:812:9161":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:6964:2459":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:52347:9673":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:421:1691":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:7823:10433":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:49431:9471":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:8063:12404":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:9528:9086":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:6644:7912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:5975:10464":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:3288:9455":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:9037:2462":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:12731:9463":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:5631:9040":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:3012:9543":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:46342:9085":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:10304:10683":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:22296:58465":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:599:3484":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:47097:2823":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:610:1351":{"crate_id":1,"path":["std","thread"],"kind":"module"},"22:1700:4381":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:46191:9582":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:3250:2369":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:10179:11352":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:11519:11418":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7467:10423":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:10149:13059":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"22:4379:6513":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:49949:9815":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"12:968:9165":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:2991:10606":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"22:1555:4368":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:3485:9546":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"12:2018:9158":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:5563:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"12:930:9162":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:37217:160":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:5488:10319":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:15045:9060":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:3319:9507":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:7895:2800":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"12:0:2152":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:4347:6508":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:9659:59948":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"22:3982:6470":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:10907:9113":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:5197:7118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:9245:10674":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:1433:9170":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:10632:194":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:3714:12050":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"12:2032:9224":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"22:4032:6476":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:4040:6476":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:6631:9963":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:10403:10693":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:24244:9838":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:9976:126":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:12467:11587":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:3539:11023":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:4255:9333":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:47654:87":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:50002:9145":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"22:4119:6487":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:1554:4367":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:15709:2174":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:11138:9351":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:6684:9029":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:4401:6515":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:49013:9088":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:3041:10597":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:6391:10475":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:4527:9048":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"5:7448:211":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:3457:152":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:12750:9462":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:23661:12756":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:6780:10484":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:5753:10334":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11588:11422":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:6095:9364":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4545:9079":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4431:6519":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:10844:10697":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:9551:10663":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"0:296:1558":{"crate_id":0,"path":["parking_lot_core","ParkResult"],"kind":"enum"},"2:23738:12414":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:10814:10718":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:13402:11858":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:9440:11343":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6518:10478":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"20:168:1674":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"2:8176:2523":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:7195:10492":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:5130:7072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:47113:2345":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:4112:6485":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:3939:12053":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11001:13095":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:47105:2824":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:12182:11526":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"18:152:52292":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:5522:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:5231:12077":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:9005:45999":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"22:4493:6526":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12442:11584":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:10973:9088":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:48052:66":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:3978:6469":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:12307:11545":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"22:1752:4387":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:4584:2837":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:6825:9028":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:10035:2846":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:10274:9180":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:10507:9171":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:1596:4371":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:14292:9034":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:6214:7549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:4329:10999":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"22:4402:6516":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:46042:9870":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"22:4075:6482":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:12039:1676":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:10887:11388":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4387:6513":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:6005:3260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:0:2156":{"crate_id":17,"path":["object"],"kind":"module"},"5:2418:10075":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"22:4112:6486":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"22:4005:6473":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:52743:9665":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:15732:2197":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:6464:10434":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4364:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:11452:9247":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:3529:9095":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:11678:11434":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:12262:11537":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:5953:4300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"22:5990:7539":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:15713:2178":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:1410:9169":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:1545:2345":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:10001:46051":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:8849:10662":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:11831:9271":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:6893:6657":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"12:1253:9170":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:7795:2799":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"3:0:403":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:11788:163":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:4517:6528":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"22:5420:7136":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:6154:9585":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:9133:46003":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:24346:9840":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"22:1682:4379":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:584:3482":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"18:857:10786":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:6768:10633":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"22:4125:6488":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:1567:9157":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:13192:11807":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"14:231:9960":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:4734:12067":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:10225:13166":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"12:877:9158":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:14800:1676":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:6238:10424":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:69:10004":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:5359:7128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"12:949:9164":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"22:5514:7168":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:10041:13063":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:10486:15668":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:4317:6504":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:4511:6527":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:3123:2823":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:5685:9044":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:45680:9729":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:7360:176":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:6124:7544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:1602:4372":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:11539:11419":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"22:1728:4385":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:24142:9836":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:15126:9356":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"4:0:2148":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:11026:13097":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:10558:13074":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:4066:6480":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:48103:101":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:49117:9755":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:3309:9228":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:3338:10345":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"22:1539:4366":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:14330:12804":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:47402:83":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:11046:9154":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:11738:11021":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:8721:9285":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:48137:70":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:9368:11341":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:49267:9089":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:13386:11854":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:4888:2296":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:3272:9439":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:4448:12059":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"20:147:2344":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"17:11482:11413":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"9:963:10174":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"15:230:10260":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:8580:2825":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:6101:10417":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:2543:10738":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:11284:18942":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"19:117:11250":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:12449:9784":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:10788:13082":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:13062:11760":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:8863:9291":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:1500:89":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:157:3142":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:4641:12064":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:49135:9756":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:10787:9280":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"18:837:9462":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:7843:11026":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:7883:9288":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:22739:9625":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"5:3591:9098":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"22:5274:7124":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9839:10697":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:51797:9652":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:1572:4369":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:5255:7101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:8584:9544":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:53146:12581":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"12:112:59931":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:9759:13057":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:3292:9457":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:10435:13070":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6269:10473":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"22:4175:6491":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:2512:10681":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:11393:9244":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:11100:10672":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:4824:2293":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"12:1159:10239":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"22:592:3484":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"17:11738:11440":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:3011:9022":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:4101:6484":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:15717:2182":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:51476:12525":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:45960:9140":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"18:829:10784":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:12412:9781":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:11378:10720":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:1533:4364":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:4569:9528":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"0:406:1565":{"crate_id":0,"path":["parking_lot_core","SpinWait"],"kind":"struct"},"2:24448:9842":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"22:5351:7128":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"12:181:10246":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:11628:11427":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:3155:108":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"9:234:10134":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"22:6116:7544":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:3182:2521":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:10095:10763":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:11665:11433":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:3868:6460":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:4922:12073":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:5567:9594":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:6166:10468":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:15718:2183":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:14:2258":{"crate_id":2,"path":["core","write"],"kind":"macro"},"12:866:2343":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:13098:11790":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:11981:9202":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:4183:6491":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:10146:13126":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:14946:9218":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:46037:95":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"14:0:2153":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:47833:2845":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:53107:12580":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:783:11043":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:13272:11829":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:21:642":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:50804:12515":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:2027:137":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:15204:10269":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:9971:59940":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:11376:9243":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"0:391:1559":{"crate_id":0,"path":["parking_lot_core","ParkToken"],"kind":"struct"},"2:49913:172":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:11809:11464":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:3297:9502":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:2177:9224":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"9:27:10158":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"16:7514:10442":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"22:4363:6511":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:1723:4383":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:4377:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:11458:11412":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:15730:2195":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:7828:90":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:6620:10624":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"22:6927:8101":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:45966:9927":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"0:103:1552":{"crate_id":0,"path":["parking_lot_core","park"],"kind":"function"},"7:85:43977":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:10414:2814":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"12:774:2345":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:11206:9350":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:4890:12072":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:5228:7121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:3997:6472":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:22313:58499":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"12:747:2823":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"22:617:3488":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"1:5754:9401":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:7387:111":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:2889:10612":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"22:662:3518":{"crate_id":22,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:23386:9560":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:2773:10618":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:11254:10664":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13377:11853":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:7804:10431":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:7894:10459":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:11198:9361":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:1676:4378":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:10916:9080":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:7073:10487":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:341:1817":{"crate_id":0,"path":["parking_lot_core","RequeueOp","RequeueAll"],"kind":"variant"},"16:7342:10455":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:13163:11800":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:4215:6494":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10635:11353":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:5637:9041":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:13746:9534":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:11053:9753":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"12:1651:10251":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:4332:9107":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:11159:11401":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:14761:2365":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"12:937:9163":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:13459:142":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:2397:13150":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:45491:177":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:51683:9664":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:11782:9267":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:15724:2189":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:6353:9135":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5167:7115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:7774:9956":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:11212:9366":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:23756:43216":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:3249:9315":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:9799:13058":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:1518:9164":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12208:11529":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:4005:6472":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:11970:11490":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"18:885:10788":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"15:0:2154":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:3152:9226":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6424:10476":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:13924:12016":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:15726:2191":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"22:1657:4377":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:38398:9144":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:13446:11869":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:13497:11884":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:4323:6506":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:51557:9672":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7264:10437":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"18:820:10783":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:5272:9349":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"21:0:1566":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"2:46321:9592":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:4955:12074":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:47276:79":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:49905:12512":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:4593:54414":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:14367:9080":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:15714:2179":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:7964:9179":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:45402:9616":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"12:1200:10241":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"22:4207:6494":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:24414:9841":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:6591:8776":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:49574:9478":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4293:6501":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"12:761:2824":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"22:6147:7545":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:10623:9022":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:1886:2126":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:4602:9064":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:8061:11026":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:45859:12765":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:3304:9227":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:4331:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:15715:2180":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:10279:10695":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:14912:9210":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:7378:10426":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:46181:9581":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:3440:9094":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:13540:11898":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:5681:9043":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:31955:57304":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"6:4300:6502":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:6348:58398":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"22:5555:7170":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10128:10766":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:4468:9112":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:11555:11420":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:2458:13153":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:8103:128":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:51714:9667":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"22:4219:6495":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:6085:7540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"22:556:3479":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"22:5177:7116":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:10696:9328":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:15719:2184":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:9540:74":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:13933:12020":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:7666:3198":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"0:339:1815":{"crate_id":0,"path":["parking_lot_core","RequeueOp","UnparkOneRequeueRest"],"kind":"variant"},"17:9769:59947":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:7024:10640":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:14520:13159":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:24108:9835":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:4506:12061":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:50627:9669":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:23622:12407":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"5:5096:9070":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:8514:9370":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:6935:8101":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:5996:10465":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:49416:9468":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11030:119":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:5282:7124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"22:4038:6477":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:10317:10682":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:4261:9335":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:7406:10425":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:48852:9764":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:3195:2299":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:5324:9613":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:11653:11432":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"22:4273:6500":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:49393:9465":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"22:4058:6480":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:4852:12071":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:10253:10685":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:13356:55603":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:12168:11359":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:9896:59941":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:48189:71":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:51420:12523":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:13428:9261":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:48913:9768":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:4459:6522":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:8151:112":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:11010:9051":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"22:5151:7114":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:3266:9447":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:11767:11449":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:10106:10764":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:45989:9928":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:2816:10611":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:22268:2675":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"18:729:59953":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:10214:11406":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:5707:10328":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:45943:9926":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:14015:9103":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12195:11527":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:10331:10697":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"22:512:3475":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:5400:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:6239:7551":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:51247:9646":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:6185:7547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:10688:110":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:10407:10680":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:900:2813":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"22:6098:7543":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:23702:9685":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:6155:7545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:47174:170":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:6357:10474":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:11082:10670":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:12670:9252":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:45535:179":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:3603:10044":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:12725:11630":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:11302:9232":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:11016:9056":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"9:692:10110":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:48983:9777":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:10279:9460":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:4371:9103":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:10052:13064":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:0:1291":{"crate_id":1,"path":["std"],"kind":"module"},"16:3091:10655":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:4161:9114":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"22:3884:6462":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:7288:2347":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13819:11986":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:9566:9342":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:3638:129":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:88:3076":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:5855:10338":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:7050:2345":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:5210:7119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:6177:7547":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:11962:11488":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:11750:11441":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:5548:7169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4033:6475":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:591:3483":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:8157:2800":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"6:531:2621":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:47528:78":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:5314:11337":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"12:469:59927":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:1617:4373":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:14009:9105":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:3218:2522":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:781:102":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:45450:178":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"22:5213:7120":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:10938:13090":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:6413:10257":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:1179:59435":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11015:13096":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:10864:11387":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:45581:9864":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:6788:11008":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:22543:9131":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:22336:58497":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:7121:10996":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:6208:10470":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"0:302:1794":{"crate_id":0,"path":["parking_lot_core","ParkResult","TimedOut"],"kind":"variant"},"17:13637:11922":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:37241:2675":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:49537:9477":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"18:610:10791":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:10224:13069":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:15712:2177":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:3090:204":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:8000:2800":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"17:12568:11602":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:51295:9631":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:48173:2841":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:48805:9759":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:8278:10043":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"2:49181:9787":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"22:4093:6484":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"18:790:10780":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:5269:9348":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:49729:9806":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"6:1563:4368":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:49462:9475":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:6331:9029":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:49445:9474":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"22:5189:7118":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"22:4356:6510":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12373:11570":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:12385:11572":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:48878:9765":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:5693:9045":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:8616:154":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:10425:55902":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"12:160:1692":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:15721:2186":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:13788:11979":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:2843:10592":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:8256:9242":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"6:4262:6498":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:7135:13155":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:8652:13156":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:6227:9597":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"12:396:10244":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:49031:9752":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:5414:7134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:772:201":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"0:337:1813":{"crate_id":0,"path":["parking_lot_core","RequeueOp","Abort"],"kind":"variant"},"5:2202:10071":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"22:1668:4378":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"0:120:1930":{"crate_id":0,"path":["parking_lot_core","deadlock","acquire_resource"],"kind":"function"},"16:547:10332":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:12519:120":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:23846:9857":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:3905:6463":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:6636:10438":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"22:5233:7100":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4410:6516":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:11854:56632":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:13884:12005":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:1311:10770":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"9:927:44073":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:12632:11621":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:9487:56599":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:22728:9022":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:11328:11637":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4164:6490":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:4241:6496":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:2896:59885":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:10524:16675":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:2875:166":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"22:4503:6527":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:3280:2370":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:51146:9651":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"14:250:12270":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:6215:9365":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:3955:119":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"18:169:52293":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"22:1614:4374":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:55696:9529":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10967:9086":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:10950:13091":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:6331:68":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:7459:9427":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"5:7852:2345":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"22:518:3476":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"2:7867:57251":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:12234:11532":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:8680:9287":{"crate_id":2,"path":["core","lazy","Lazy"],"kind":"struct"},"2:22315:58502":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:1586:9160":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:9635:610":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"2:47242:2345":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:3335:9514":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:3287:10603":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:1748:10996":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"22:577:3482":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"22:6879:6656":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:1396:9167":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:9065:46001":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:47444:77":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:11277:11403":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12480:11589":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:2162:2343":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:49510:9476":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:11235:3260":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:4046:6477":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"18:720:11256":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"22:5247:7101":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11726:11439":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:4494:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:3463:9615":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"22:5540:7169":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"22:5202:7119":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:13807:183":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"22:4247:6497":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:10670:121":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4203:6493":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:3506:10604":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:2754:10347":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:3881:6461":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:5978:7537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10516:10742":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:9886:13059":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:3409:2302":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:4382:10999":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:7420:10443":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"16:2733:10348":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"22:6231:7551":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:3633:203":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11045:46005":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"22:6168:7546":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:50731:9670":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:2362:571":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:53016:12575":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"18:774:11254":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"0:0:1568":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"2:11638:9772":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"12:2303:12316":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"22:1715:4383":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:7250:10497":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:10673:46189":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:12472:9785":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:299:13050":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"3:300:187":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:32107:57303":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"16:5346:10420":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:1908:4525":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:12040:11500":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:15681:15673":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:7205:10493":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"22:4393:6515":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:3130:9224":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:13465:11876":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:8642:9286":{"crate_id":2,"path":["core","lazy","OnceCell"],"kind":"struct"},"1:3908:9282":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:2202:9617":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:11839:12796":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:50581:12513":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:48404:12785":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:51043:9659":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13154:11796":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:46533:12778":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:15676:13220":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:7517:11013":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4095:6483":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:5568:11006":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"0:102:1563":{"crate_id":0,"path":["parking_lot_core","DEFAULT_PARK_TOKEN"],"kind":"constant"},"1:9581:9343":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"22:1588:4371":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12142:11519":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:7174:10490":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:5580:10324":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:5717:10330":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"22:5961:3351":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:1642:9169":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:11463:9248":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:6949:10637":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:2484:46089":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:9128:9284":{"crate_id":1,"path":["std","lazy","SyncLazy"],"kind":"struct"},"2:10239:138":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:50602:12514":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:47226:2823":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"12:1100:9167":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:13119:11795":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:605:3485":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13780:11978":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11779:11452":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"22:584:3483":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"1:11916:9198":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"12:1688:10253":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:9698:9735":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:10782:9279":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:52140:9653":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:1530:9166":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:15710:2175":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:1000:2823":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"20:397:2339":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"17:13318:11835":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:12523:9749":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:3429:124":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:3235:9312":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:10584:10726":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:5856:9407":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:7146:10488":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"22:4065:6481":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:49296:9793":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:12095:11511":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"22:6606:3431":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:6881:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:5505:10320":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"22:5220:7121":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:6451:9133":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:5815:10337":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:13942:12022":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:50675:9649":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:3251:9316":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:9404:11342":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:23824:12759":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:13730:9268":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:45912:9931":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:6812:8073":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:0:2155":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:12771:11637":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:4015:2824":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:3743:10715":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:48891:9766":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"22:4052:6479":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13429:11862":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:1524:9165":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:7866:10028":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12028:11498":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:1199:10069":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:11231:10666":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:23644:9690":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:52601:9661":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:4688:1672":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:3110:9309":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:4879:2295":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"20:391:2349":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"17:13172:11801":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"22:1736:4386":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:2777:2351":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"22:5461:7138":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:2945:10617":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5273:10352":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:10986:9050":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"1:7321:167":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:7631:9545":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:7477:10444":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"22:625:3489":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"17:10529:12699":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:6757:9024":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:5379:7130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:1619:9167":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:13506:11885":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:5514:9950":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:5561:10323":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:13865:12000":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7870:10428":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:563:3479":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:1651:9170":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:8507:9368":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:53031:12576":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:2565:119":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"9:722:10111":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:10477:10739":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:7761:10500":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:4477:12060":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:10117:10765":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"22:6092:7542":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"12:1144:9169":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:1075:9137":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:11353:9242":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:6755:9027":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:4293:9105":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:47055:158":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:9475:56597":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:12761:9467":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:1729:4384":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12795:11647":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"18:694:10796":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"22:4509:6528":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:14927:9211":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"12:377:10245":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:15105:9349":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:48596:9947":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:12521:11595":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:10458:1975":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"22:609:3487":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"2:9965:187":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"16:6682:10435":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:23859:9856":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"}},"external_crates":{"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"libc","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"smallvec","html_root_url":null},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":15}