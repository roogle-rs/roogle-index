{"root":"0:0:1825","crate_version":"0.9.9","includes_private":false,"index":{"0:83:2206":{"id":"0:83:2206","crate_id":0,"name":"acquire_resource","span":{"filename":"src/parking_lot.rs","begin":[1112,4],"end":[1115,5]},"visibility":"public","docs":"Acquire a resource identified by key in the deadlock detector\nNoop if deadlock_detection feature isn't enabled.\n\n# Safety\n\nCall after the resource is acquired","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42157:2769-0:192:1817":{"id":"a:2:42157:2769-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:270:1821":{"id":"0:270:1821","crate_id":0,"name":"UnparkToken","span":{"filename":"src/parking_lot.rs","begin":[550,0],"end":[550,34]},"visibility":"public","docs":"A value which is passed from an unparker to a parked thread.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:272:1752"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32527:2829-0:270:1821","a:2:42157:2769-0:270:1821","a:2:42158:2768-0:270:1821","a:2:2949:254-0:270:1821","a:2:32445:244-0:270:1821","b:2:2737-0:270:1821","b:2:2424-0:270:1821","b:2:2742-0:270:1821","b:2:3496-0:270:1821","b:2:2731-0:270:1821","b:2:2427-0:270:1821","b:2:2727-0:270:1821","b:5:687-0:270:1821","0:277","0:276","0:274","0:282","0:280","0:279","0:273"]}}},"0:253:2098":{"id":"0:253:2098","crate_id":0,"name":"Unpark","span":{"filename":"src/parking_lot.rs","begin":[539,4],"end":[539,10]},"visibility":"default","docs":"Unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2737-0:284:1818":{"id":"b:2:2737-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:192:1817":{"id":"b:2:2742-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243:456":{"id":"0:243:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272:1752":{"id":"0:272:1752","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[550,23],"end":[550,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:12769:13686":{"id":"2:12769:13686","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43899:13664","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12874:14491":{"id":"2:12874:14491","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4672:14491"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44237:13594","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1752":{"id":"0:286:1752","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[554,21],"end":[554,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:183-0:73:1822":{"id":"0:183-0:73:1822","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,28],"end":[66,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_PARK_TOKEN","name":"DEFAULT_PARK_TOKEN","id":"0:73:1822","glob":false}}},"2:12767:26046":{"id":"2:12767:26046","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12768:26047"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:1038":{"id":"0:91:1038","crate_id":0,"name":"new","span":{"filename":"src/spinwait.rs","begin":[29,4],"end":[31,5]},"visibility":"public","docs":"Creates a new `SpinWait`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12853:32828":{"id":"2:12853:32828","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12841:32826":{"id":"2:12841:32826","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12466:19857","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,9],"end":[495,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:211:1820":{"id":"0:211:1820","crate_id":0,"name":"UnparkResult","span":{"filename":"src/parking_lot.rs","begin":[496,0],"end":[514,1]},"visibility":"public","docs":"Result of an unpark operation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:212:2073","0:213:2075","0:214:2078","0:215:2082"],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32527:2829-0:211:1820","a:2:42157:2769-0:211:1820","a:2:42158:2768-0:211:1820","a:2:2949:254-0:211:1820","a:2:32445:244-0:211:1820","b:2:2737-0:211:1820","b:2:2424-0:211:1820","b:2:2742-0:211:1820","b:2:3496-0:211:1820","b:2:2731-0:211:1820","b:2:2427-0:211:1820","b:2:2727-0:211:1820","b:5:687-0:211:1820","0:222","0:228","0:226","0:225","0:220","0:223","0:218","0:217"]}}},"b:2:2427-0:270:1821":{"id":"b:2:2427-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12759:9816":{"id":"2:12759:9816","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42031:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12774:29191":{"id":"2:12774:29191","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44183:13681","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12862:32831":{"id":"2:12862:32831","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12402:134","`FromStr`":"2:12401:14675"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12401:14675","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12401:14675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2730:2993":{"id":"2:2730:2993","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2704:142"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32447:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12748:32810":{"id":"2:12748:32810","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:192:1817":{"id":"b:2:2427-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:270:1821":{"id":"b:2:2727-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12856:32829":{"id":"2:12856:32829","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:252:1816":{"id":"b:2:2731-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:252:1816":{"id":"b:2:2737-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32445:244-0:298:1824":{"id":"a:2:32445:244-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,15],"end":[517,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:84:2212":{"id":"0:84:2212","crate_id":0,"name":"release_resource","span":{"filename":"src/parking_lot.rs","begin":[1128,4],"end":[1131,5]},"visibility":"public","docs":"Release a resource identified by key in the deadlock detector.\nNoop if deadlock_detection feature isn't enabled.\n\n# Panics\n\nPanics if the resource was already released or wasn't acquired in this thread.\n\n# Safety\n\nCall before the resource is released","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_key",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12872:32832":{"id":"2:12872:32832","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4671:32832"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44228:13600","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2745:135":{"id":"2:2745:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32375:12690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:93:2355":{"id":"0:93:2355","crate_id":0,"name":"spin","span":{"filename":"src/spinwait.rs","begin":[48,4],"end":[59,5]},"visibility":"public","docs":"Spins until the sleep threshold has been reached.\n\nThis function returns whether the sleep threshold has been reached, at\nwhich point further spinning has diminishing returns and the thread\nshould be parked instead.\n\nThe spin strategy will initially use a CPU-bound loop but will fall back\nto yielding the CPU to the OS after a few iterations.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5551:33508":{"id":"5:5551:33508","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12744":{"id":"2:12744","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12745:874","2:12746:2330","2:12747:32809","2:12748:32810","2:12750:32811","2:12753:25910","2:12754:32812","2:12755:340","2:12756:26023","2:12757:2035","2:12759:9816","2:12761:26021","2:12763:26022","2:12765:32813","2:12766:32814","2:12767:26046","2:12768:26047","2:12769:13686","2:12770:13696","2:12771:13549","2:12772:31006","2:12773:31015","2:12774:29191","2:12775:32815","2:12776:31014","2:12777:26066","2:12780:25563","2:12783:25565","2:12786:3034","2:12790:2999","2:12794:26054","2:12797:26056","2:12800:26058","2:12803:32816","2:12806:32817","2:12809:26060","2:12812:26062","2:12815:26064","2:12818:26065","2:12821:2530","2:12824:32818","2:12827:32819","2:12830:32820","2:12833:32821","2:12835:32822","2:12837:32823","2:12839:32824","2:12840:32825","2:12841:32826","2:12844:32827","2:12847:25561","2:12850:26067","2:12853:32828","2:12856:32829","2:12859:32830","2:12862:32831","2:12864:25952","2:12865:25953","2:12866:25955","2:12867:25956","2:12868:25957","2:12869:25959","2:12870:25960","2:12871:25961","2:12872:32832","2:12874:14491","2:12875:32833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3498:1633":{"id":"2:3498:1633","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39789:12877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:718":{"id":"0:251:718","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:252:1816":{"id":"a:2:2949:254-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12812:26062":{"id":"2:12812:26062","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:452","str::splitn":"2:12809:26060","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44051:13674","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:456":{"id":"0:289:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170-0:74:1811":{"id":"0:170-0:74:1811","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,28],"end":[62,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::park","name":"park","id":"0:74:1811","glob":false}}},"2:2740:135":{"id":"2:2740:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:210:718":{"id":"0:210:718","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:192:1817":{"id":"a:2:2949:254-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12756:26023":{"id":"2:12756:26023","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1642"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12821:2530":{"id":"2:12821:2530","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12441:19860","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::rmatches":"2:12824:32818"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44133:13679","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:230:1819":{"id":"b:2:2727-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12870:25960":{"id":"2:12870:25960","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35253"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[26,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1038","0:92:2348","0:93:2355","0:94:2361"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92:2348":{"id":"0:92:2348","crate_id":0,"name":"reset","span":{"filename":"src/spinwait.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Resets a `SpinWait` to its initial state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:270:1821":{"id":"b:2:2737-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:295:662":{"id":"0:295:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12757:2035":{"id":"2:12757:2035","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42031:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12770:13696":{"id":"2:12770:13696","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43905:13665","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:227:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:270:1821":{"id":"b:2:3496-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:456":{"id":"0:219:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179-0:230:1819":{"id":"0:179-0:230:1819","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,37],"end":[64,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::RequeueOp","name":"RequeueOp","id":"0:230:1819","glob":false}}},"0:82:1810":{"id":"0:82:1810","crate_id":0,"name":"deadlock","span":{"filename":"src/parking_lot.rs","begin":[1098,0],"end":[1098,16]},"visibility":"public","docs":"\\[Experimental\\] Deadlock detection\n\nEnabled via the `deadlock_detection` feature flag.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:83:2206","0:84:2212"],"is_stripped":false}}},"b:2:2737-0:211:1820":{"id":"b:2:2737-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:192:1817":{"id":"b:5:687-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3051","5:690:3052","5:691:3053"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:230:1819":{"id":"b:2:2427-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2733:745":{"id":"2:2733:745","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:252:1816":{"id":"b:2:3496-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:283:718":{"id":"0:283:718","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[549,37],"end":[549,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32447:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:252:1816":{"id":"b:2:2424-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,9],"end":[536,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12753:25910":{"id":"2:12753:25910","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11996:19861"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12871:25961":{"id":"2:12871:25961","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35253"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32445:244-0:252:1816":{"id":"a:2:32445:244-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2949:254-0:270:1821":{"id":"a:2:2949:254-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:171-0:77:1812":{"id":"0:171-0:77:1812","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,34],"end":[62,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_all","name":"unpark_all","id":"0:77:1812","glob":false}}},"b:2:2742-0:230:1819":{"id":"b:2:2742-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:662":{"id":"0:281:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12747:32809":{"id":"2:12747:32809","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12772:31006":{"id":"2:12772:31006","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12773:31015"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44203:13683","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42157:2769-0:270:1821":{"id":"a:2:42157:2769-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:231:2087":{"id":"0:231:2087","crate_id":0,"name":"Abort","span":{"filename":"src/parking_lot.rs","begin":[520,4],"end":[520,9]},"visibility":"default","docs":"Abort the operation without doing anything.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:261:456":{"id":"0:261:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,15],"end":[536,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:284:1818":{"id":"b:5:687-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3051","5:690:3052","5:691:3053"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5552:33509":{"id":"5:5552:33509","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:1966","`String`":"5:7535:250"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:1966","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2066":{"id":"0:196:2066","crate_id":0,"name":"Invalid","span":{"filename":"src/parking_lot.rs","begin":[476,4],"end":[476,11]},"visibility":"default","docs":"The validation callback returned false.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2731-0:192:1817":{"id":"b:2:2731-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42158:2768-0:270:1821":{"id":"a:2:42158:2768-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:198:2068":{"id":"0:198:2068","crate_id":0,"name":"TimedOut","span":{"filename":"src/parking_lot.rs","begin":[479,4],"end":[479,12]},"visibility":"default","docs":"The timeout expired.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:174-0:79:1815":{"id":"0:174-0:79:1815","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,73],"end":[62,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_requeue","name":"unpark_requeue","id":"0:79:1815","glob":false}}},"2:12839:32824":{"id":"2:12839:32824","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2429:25528":{"id":"2:2429:25528","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1752":{"id":"0:195:1752","crate_id":0,"name":"0","span":{"filename":"src/parking_lot.rs","begin":[473,13],"end":[473,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3496-0:284:1818":{"id":"b:2:3496-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,37],"end":[470,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12847:25561":{"id":"2:12847:25561","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:270:1821":{"id":"b:2:2731-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239:2095":{"id":"0:239:2095","crate_id":0,"name":"RequeueOne","span":{"filename":"src/parking_lot.rs","begin":[532,4],"end":[532,14]},"visibility":"default","docs":"Requeue one thread and leave the rest parked on the original queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,22],"end":[536,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32472:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42158:2768-0:211:1820":{"id":"a:2:42158:2768-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:301:60":{"id":"0:301:60","crate_id":0,"name":"default","span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32472:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:192:1817":{"id":"b:2:3496-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12786:3034":{"id":"2:12786:3034","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42031:198","prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1824":{"id":"0:298:1824","crate_id":0,"name":"SpinWait","span":{"filename":"src/spinwait.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"A counter used to perform exponential backoff in spin loops.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:90","a:2:32527:2829-0:298:1824","a:2:42157:2769-0:298:1824","a:2:42158:2768-0:298:1824","a:2:2949:254-0:298:1824","a:2:32445:244-0:298:1824","b:2:2737-0:298:1824","b:2:2424-0:298:1824","b:2:2742-0:298:1824","b:2:3496-0:298:1824","b:2:2731-0:298:1824","b:2:2427-0:298:1824","b:2:2727-0:298:1824","0:300"]}}},"5:691:3053":{"id":"5:691:3053","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2829-0:270:1821":{"id":"a:2:32527:2829-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:284:1818":{"id":"b:2:2424-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77:1812":{"id":"0:77:1812","crate_id":0,"name":"unpark_all","span":{"filename":"src/parking_lot.rs","begin":[813,0],"end":[858,1]},"visibility":"public","docs":"Unparks all threads in the queue associated with the given key.\n\nThe given `UnparkToken` is passed to all unparked threads.\n\nThis function returns the number of threads that were unparked.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["unpark_token",{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12844:32827":{"id":"2:12844:32827","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12763:26022":{"id":"2:12763:26022","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42158:2768-0:192:1817":{"id":"a:2:42158:2768-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32472:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,15],"end":[495,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42157:2769-0:252:1816":{"id":"a:2:42157:2769-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:252:1816":{"id":"0:252:1816","crate_id":0,"name":"FilterOp","span":{"filename":"src/parking_lot.rs","begin":[537,0],"end":[546,1]},"visibility":"public","docs":"Operation that `unpark_filter` should perform for each thread.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:253:2098","0:255:2100","0:257:2102"],"impls":["a:2:32527:2829-0:252:1816","a:2:42157:2769-0:252:1816","a:2:42158:2768-0:252:1816","a:2:2949:254-0:252:1816","a:2:32445:244-0:252:1816","b:2:2737-0:252:1816","b:2:2424-0:252:1816","b:2:2742-0:252:1816","b:2:3496-0:252:1816","b:2:2731-0:252:1816","b:2:2427-0:252:1816","b:2:2727-0:252:1816","b:5:687-0:252:1816","0:260","0:268","0:262","0:259","0:263","0:266","0:265"]}}},"0:168-0:82:1810":{"id":"0:168-0:82:1810","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,0],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::deadlock","name":"deadlock","id":"0:82:1810","glob":false}}},"2:2426:2520":{"id":"2:2426:2520","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42157:2769-0:298:1824":{"id":"a:2:42157:2769-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12777:26066":{"id":"2:12777:26066","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12800:26058":{"id":"2:12800:26058","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12441:19860","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::split":"2:12794:26054"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43947:13569","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12835:32822":{"id":"2:12835:32822","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:230:1819":{"id":"b:2:2731-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32445:244-0:230:1819":{"id":"a:2:32445:244-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32445:244-0:284:1818":{"id":"a:2:32445:244-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12868:25957":{"id":"2:12868:25957","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,26],"end":[549,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42158:2768-0:252:1816":{"id":"a:2:42158:2768-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:211:1820":{"id":"b:2:2727-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:297:718":{"id":"0:297:718","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2064":{"id":"0:193:2064","crate_id":0,"name":"Unparked","span":{"filename":"src/parking_lot.rs","begin":[473,4],"end":[473,25]},"visibility":"default","docs":"We were unparked by another thread with the given token.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:195:1752"]},"discriminant":null}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/spinwait.rs","begin":[21,9],"end":[21,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5540:33506":{"id":"5:5540:33506","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:230:1819":{"id":"b:2:3496-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173-0:76:1814":{"id":"0:173-0:76:1814","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,61],"end":[62,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_one","name":"unpark_one","id":"0:76:1814","glob":false}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,9],"end":[553,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12864:25952":{"id":"2:12864:25952","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:211:1820":{"id":"b:2:2731-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2361":{"id":"0:94:2361","crate_id":0,"name":"spin_no_yield","span":{"filename":"src/spinwait.rs","begin":[67,4],"end":[73,5]},"visibility":"public","docs":"Spins without yielding the thread to the OS.\n\nInstead, the backoff is simply capped at a maximum value. This can be\nused to improve throughput in `compare_exchange` loops that have high\ncontention.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1825":{"id":"0:0:1825","crate_id":0,"name":"parking_lot_core","span":{"filename":"src/lib.rs","begin":[8,0],"end":[67,33]},"visibility":"public","docs":"This library exposes a low-level API for creating your own efficient\nsynchronization primitives.\n\n# The parking lot\n\nTo keep synchronization primitives small, all thread queuing and suspending\nfunctionality is offloaded to the *parking lot*. The idea behind this is based\non the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)\nclass, which essentially consists of a hash table mapping of lock addresses\nto queues of parked (sleeping) threads. The Webkit parking lot was itself\ninspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),\nbut it is more powerful since it allows invoking callbacks while holding a\nqueue lock.\n\nThere are two main operations that can be performed on the parking lot:\n\n - *Parking* refers to suspending the thread while simultaneously enqueuing it\non a queue keyed by some address.\n- *Unparking* refers to dequeuing a thread from a queue keyed by some address\nand resuming it.\n\nSee the documentation of the individual functions for more details.\n\n# Building custom synchronization primitives\n\nBuilding custom synchronization primitives is very simple since the parking\nlot takes care of all the hard parts for you. A simple example for a\ncustom primitive would be to integrate a `Mutex` inside another data type.\nSince a mutex only requires 2 bits, it can share space with other data.\nFor example, one could create an `ArcMutex` type that combines the atomic\nreference count and the two mutex bits in the same atomic word.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:168-0:82:1810","0:170-0:74:1811","0:171-0:77:1812","0:172-0:80:1813","0:173-0:76:1814","0:174-0:79:1815","0:176-0:252:1816","0:177-0:192:1817","0:178-0:284:1818","0:179-0:230:1819","0:180-0:211:1820","0:181-0:270:1821","0:183-0:73:1822","0:184-0:72:1823","0:185-0:298:1824"],"is_stripped":false}}},"0:112-0:327:2369":{"id":"0:112-0:327:2369","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,48],"end":[85,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::UnparkHandle","name":"UnparkHandle","id":"0:327:2369","glob":false}}},"0:214:2078":{"id":"0:214:2078","crate_id":0,"name":"have_more_threads","span":{"filename":"src/parking_lot.rs","begin":[505,4],"end":[505,31]},"visibility":"public","docs":"Whether there are any threads remaining in the queue. This only returns\ntrue if a thread was unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:202:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12794:26054":{"id":"2:12794:26054","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12441:19860","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::split_whitespace":"2:12772:31006","str::rsplit":"2:12800:26058"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43929:13565","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12771:13549":{"id":"2:12771:13549","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43915:11393","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12865:25953":{"id":"2:12865:25953","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39976:25909","Self::is_ascii":"2:12864:25952"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39976:25909","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:211:1820":{"id":"a:2:2949:254-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12827:32819":{"id":"2:12827:32819","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12441:19860","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::rmatch_indices":"2:12830:32820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44079:13676","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32447:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:254-0:298:1824":{"id":"a:2:2949:254-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32527:2829-0:252:1816":{"id":"a:2:32527:2829-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12766:32814":{"id":"2:12766:32814","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1537","crate::ops::IndexMut":"2:3162:14524","str::slice_unchecked":"2:12765:32813"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42158:2768-0:230:1819":{"id":"a:2:42158:2768-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32527:2829-0:298:1824":{"id":"a:2:32527:2829-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12776:31014":{"id":"2:12776:31014","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44221:13685","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12815:26064":{"id":"2:12815:26064","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,22],"end":[553,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2746:1618":{"id":"2:2746:1618","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:1823":{"id":"0:72:1823","crate_id":0,"name":"DEFAULT_UNPARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[557,0],"end":[557,61]},"visibility":"public","docs":"A default unpark token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:74:1811":{"id":"0:74:1811","crate_id":0,"name":"park","span":{"filename":"src/parking_lot.rs","begin":[591,0],"end":[706,1]},"visibility":"public","docs":"Parks the current thread in the queue associated with the given key.\n\nThe `validate` function is called while the queue is locked and can abort\nthe operation by returning false. If `validate` returns true then the\ncurrent thread is appended to the queue and the queue is unlocked.\n\nThe `before_sleep` function is called after the queue is unlocked but before\nthe thread is put to sleep. The thread will then sleep until it is unparked\nor the given timeout is reached.\n\nThe `timed_out` function is also called while the queue is locked, but only\nif the timeout was reached. It is passed the key of the queue it was in when\nit timed out, which may be different from the original key if\n`unpark_requeue` was called. It is also passed a bool which indicates\nwhether it was the last thread in the queue.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `timed_out` functions are called while the queue is\nlocked and must not panic or call into any function in `parking_lot`.\n\nThe `before_sleep` function is called outside the queue lock and is allowed\nto call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but\nit is not allowed to call `park` or panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["before_sleep",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["timed_out",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}]}],["park_token",{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["timeout",{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::time::Instant","id":"1:9111:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce()","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(usize, bool)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"primitive":"bool"}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12866:25955":{"id":"2:12866:25955","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:230:1819":{"id":"b:2:2424-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:1822":{"id":"0:73:1822","crate_id":0,"name":"DEFAULT_PARK_TOKEN","span":{"filename":"src/parking_lot.rs","begin":[560,0],"end":[560,55]},"visibility":"public","docs":"A default park token to use.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2727-0:252:1816":{"id":"b:2:2727-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[482,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:2070"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:60":{"id":"0:221:60","crate_id":0,"name":"default","span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:456":{"id":"0:202:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[470,15],"end":[470,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2100":{"id":"0:255:2100","crate_id":0,"name":"Skip","span":{"filename":"src/parking_lot.rs","begin":[542,4],"end":[542,8]},"visibility":"default","docs":"Don't unpark the thread and continue scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:257:2102":{"id":"0:257:2102","crate_id":0,"name":"Stop","span":{"filename":"src/parking_lot.rs","begin":[545,4],"end":[545,8]},"visibility":"default","docs":"Don't unpark the thread and stop scanning the list of parked threads.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:110-0:331:2356":{"id":"0:110-0:331:2356","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,20],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::thread_yield","name":"thread_yield","id":"0:331:2356","glob":false}}},"0:180-0:211:1820":{"id":"0:180-0:211:1820","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,48],"end":[64,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkResult","name":"UnparkResult","id":"0:211:1820","glob":false}}},"0:181-0:270:1821":{"id":"0:181-0:270:1821","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,62],"end":[64,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::UnparkToken","name":"UnparkToken","id":"0:270:1821","glob":false}}},"0:249:662":{"id":"0:249:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178-0:284:1818":{"id":"0:178-0:284:1818","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,26],"end":[64,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkToken","name":"ParkToken","id":"0:284:1818","glob":false}}},"b:2:2737-0:192:1817":{"id":"b:2:2737-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12790:2999":{"id":"2:12790:2999","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42031:198","prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,22],"end":[495,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,22],"end":[517,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32472:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:252:1816":{"id":"b:2:2742-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42157:2769-0:284:1818":{"id":"a:2:42157:2769-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2742-0:284:1818":{"id":"b:2:2742-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:252:1816":{"id":"b:5:687-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3051","5:690:3052","5:691:3053"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185-0:298:1824":{"id":"0:185-0:298:1824","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[67,0],"end":[67,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::spinwait::SpinWait","name":"SpinWait","id":"0:298:1824","glob":false}}},"b:2:2742-0:270:1821":{"id":"b:2:2742-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:192:1817":{"id":"b:2:2727-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32445:244-0:270:1821":{"id":"a:2:32445:244-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,9],"end":[549,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5543:33507":{"id":"5:5543:33507","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5555:27295":{"id":"5:5555:27295","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12868:25957"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:270:1821":{"id":"b:5:687-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3051","5:690:3052","5:691:3053"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12869:25959":{"id":"2:12869:25959","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35253"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184-0:72:1823":{"id":"0:184-0:72:1823","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,48],"end":[66,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::DEFAULT_UNPARK_TOKEN","name":"DEFAULT_UNPARK_TOKEN","id":"0:72:1823","glob":false}}},"2:12809:26060":{"id":"2:12809:26060","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860","str::rsplitn":"2:12812:26062"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44033:13673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:211:1820":{"id":"b:2:2424-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,37],"end":[517,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32527:2829-0:284:1818":{"id":"a:2:32527:2829-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12824:32818":{"id":"2:12824:32818","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12441:19860","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::matches":"2:12821:2530"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44151:13680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2093":{"id":"0:237:2093","crate_id":0,"name":"UnparkOne","span":{"filename":"src/parking_lot.rs","begin":[529,4],"end":[529,13]},"visibility":"default","docs":"Unpark one thread and leave the rest parked. No requeuing is done.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12746:2330":{"id":"2:12746:2330","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2829-0:211:1820":{"id":"a:2:32527:2829-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:689:3051":{"id":"5:689:3051","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12754:32812":{"id":"2:12754:32812","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:298:1824":{"id":"b:2:2737-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:270:1821":{"id":"b:2:2424-0:270:1821","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,9],"end":[517,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:298:1824":{"id":"b:2:3496-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12806:32817":{"id":"2:12806:32817","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12441:19860","str::split":"2:12794:26054","prim@char":"1:12034:452","str::split_terminator":"2:12803:32816"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43997:13671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:284:1818":{"id":"b:2:2727-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12755:340":{"id":"2:12755:340","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12756:26023","`u8`":"1:12051:1642"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[517,26],"end":[517,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:249:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:267:662":{"id":"0:267:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:284:1818":{"id":"b:2:2427-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:227:662":{"id":"0:227:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,22],"end":[549,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32472:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111-0:313:1941":{"id":"0:111-0:313:1941","crate_id":0,"name":null,"span":{"filename":"src/thread_parker/mod.rs","begin":[85,34],"end":[85,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp::ThreadParker","name":"ThreadParker","id":"0:313:1941","glob":false}}},"2:12750:32811":{"id":"2:12750:32811","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12748:32810"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12840:32825":{"id":"2:12840:32825","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42158:2768-0:284:1818":{"id":"a:2:42158:2768-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32527:2829-0:230:1819":{"id":"a:2:32527:2829-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177-0:192:1817":{"id":"0:177-0:192:1817","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,14],"end":[64,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::ParkResult","name":"ParkResult","id":"0:192:1817","glob":false}}},"a:2:42157:2769-0:230:1819":{"id":"a:2:42157:2769-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12780:25563":{"id":"2:12780:25563","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12850:26067":{"id":"2:12850:26067","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1813":{"id":"0:80:1813","crate_id":0,"name":"unpark_filter","span":{"filename":"src/parking_lot.rs","begin":[1020,0],"end":[1093,1]},"visibility":"public","docs":"Unparks a number of threads from the front of the queue associated with\n`key` depending on the results of a filter function which inspects the\n`ParkToken` associated with each thread.\n\nThe `filter` function is called for each thread in the queue or until\n`FilterOp::Stop` is returned. This function is passed the `ParkToken`\nassociated with a particular thread, which is unparked if `FilterOp::Unpark`\nis returned.\n\nThe `callback` function is also called while both queues are locked. It is\npassed an `UnparkResult` indicating the number of threads that were unparked\nand whether there are still parked threads in the queue. This `UnparkResult`\nvalue is also returned by `unpark_filter`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to all threads that are unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `filter` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["filter",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3130:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(ParkToken) -> FilterOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3130:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:176-0:252:1816":{"id":"0:176-0:252:1816","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,4],"end":[64,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::FilterOp","name":"FilterOp","id":"0:252:1816","glob":false}}},"b:2:2731-0:284:1818":{"id":"b:2:2731-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:298:1824":{"id":"b:2:2427-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:298:1824":{"id":"b:2:2424-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2741:1620":{"id":"2:2741:1620","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274":{"id":"0:274","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:275:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:298:1824":{"id":"b:2:2727-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2993"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:33505","5:5537:2719","5:5540:33506","5:5543:33507","5:5551:33508","5:5552:33509","5:5553:2624","5:5554:27294","5:5555:27295"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:2091":{"id":"0:235:2091","crate_id":0,"name":"RequeueAll","span":{"filename":"src/parking_lot.rs","begin":[526,4],"end":[526,14]},"visibility":"default","docs":"Requeue all threads onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12797:26056":{"id":"2:12797:26056","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12257:13568","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:1819":{"id":"0:230:1819","crate_id":0,"name":"RequeueOp","span":{"filename":"src/parking_lot.rs","begin":[518,0],"end":[533,1]},"visibility":"public","docs":"Operation that `unpark_requeue` should perform.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:231:2087","0:233:2089","0:235:2091","0:237:2093","0:239:2095"],"impls":["a:2:32527:2829-0:230:1819","a:2:42157:2769-0:230:1819","a:2:42158:2768-0:230:1819","a:2:2949:254-0:230:1819","a:2:32445:244-0:230:1819","b:2:2737-0:230:1819","b:2:2424-0:230:1819","b:2:2742-0:230:1819","b:2:3496-0:230:1819","b:2:2731-0:230:1819","b:2:2427-0:230:1819","b:2:2727-0:230:1819","b:5:687-0:230:1819","0:244","0:247","0:241","0:250","0:242","0:245","0:248"]}}},"5:5537:2719":{"id":"5:5537:2719","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:718":{"id":"0:229:718","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[495,46],"end":[495,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:211:1820":{"id":"b:2:2427-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5536:33505":{"id":"5:5536:33505","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:1966","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:1966","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1818":{"id":"0:284:1818","crate_id":0,"name":"ParkToken","span":{"filename":"src/parking_lot.rs","begin":[554,0],"end":[554,32]},"visibility":"public","docs":"A value associated with a parked thread which can be used by `unpark_filter`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:286:1752"]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32527:2829-0:284:1818","a:2:42157:2769-0:284:1818","a:2:42158:2768-0:284:1818","a:2:2949:254-0:284:1818","a:2:32445:244-0:284:1818","b:2:2737-0:284:1818","b:2:2424-0:284:1818","b:2:2742-0:284:1818","b:2:3496-0:284:1818","b:2:2731-0:284:1818","b:2:2427-0:284:1818","b:2:2727-0:284:1818","b:5:687-0:284:1818","0:294","0:290","0:291","0:293","0:296","0:287","0:288"]}}},"0:172-0:80:1813":{"id":"0:172-0:80:1813","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[62,46],"end":[62,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::parking_lot::unpark_filter","name":"unpark_filter","id":"0:80:1813","glob":false}}},"0:212:2073":{"id":"0:212:2073","crate_id":0,"name":"unparked_threads","span":{"filename":"src/parking_lot.rs","begin":[498,4],"end":[498,31]},"visibility":"public","docs":"The number of threads that were unparked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:12783:25565":{"id":"2:12783:25565","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12875:32833":{"id":"2:12875:32833","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4669:32833"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44246:13599","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2089":{"id":"0:233:2089","crate_id":0,"name":"UnparkOneRequeueRest","span":{"filename":"src/parking_lot.rs","begin":[523,4],"end":[523,24]},"visibility":"default","docs":"Unpark one thread and requeue the rest onto the target queue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,15],"end":[553,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32445:244-0:211:1820":{"id":"a:2:32445:244-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:230:1819":{"id":"b:2:2737-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42158:2768-0:298:1824":{"id":"a:2:42158:2768-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192:1817":{"id":"0:192:1817","crate_id":0,"name":"ParkResult","span":{"filename":"src/parking_lot.rs","begin":[471,0],"end":[480,1]},"visibility":"public","docs":"Result of a park operation.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:193:2064","0:196:2066","0:198:2068"],"impls":["0:70","a:2:32527:2829-0:192:1817","a:2:42157:2769-0:192:1817","a:2:42158:2768-0:192:1817","a:2:2949:254-0:192:1817","a:2:32445:244-0:192:1817","b:2:2737-0:192:1817","b:2:2424-0:192:1817","b:2:2742-0:192:1817","b:2:3496-0:192:1817","b:2:2731-0:192:1817","b:2:2427-0:192:1817","b:2:2727-0:192:1817","b:5:687-0:192:1817","0:209","0:203","0:204","0:207","0:200","0:201","0:206"]}}},"a:2:42157:2769-0:211:1820":{"id":"a:2:42157:2769-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12818:26065":{"id":"2:12818:26065","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,22],"end":[470,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12867:25956":{"id":"2:12867:25956","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:32821":{"id":"2:12833:32821","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:662":{"id":"0:208:662","crate_id":0,"name":"eq","span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:211:1820":{"id":"b:2:2742-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32447:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:298:1824":{"id":"b:2:2742-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:211:1820":{"id":"b:2:3496-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:211:1820":{"id":"b:5:687-0:211:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3051","5:690:3052","5:691:3053"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12775:32815":{"id":"2:12775:32815","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44193:13682","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2829-0:192:1817":{"id":"a:2:32527:2829-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:71:2070":{"id":"0:71:2070","crate_id":0,"name":"is_unparked","span":{"filename":"src/parking_lot.rs","begin":[485,4],"end":[491,5]},"visibility":"public","docs":"Returns true if we were unparked by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2075":{"id":"0:213:2075","crate_id":0,"name":"requeued_threads","span":{"filename":"src/parking_lot.rs","begin":[501,4],"end":[501,31]},"visibility":"public","docs":"The number of threads that were requeued.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:2949:254-0:230:1819":{"id":"a:2:2949:254-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2949:254-0:284:1818":{"id":"a:2:2949:254-0:284:1818","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12745:874":{"id":"2:12745:874","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:452"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,26],"end":[553,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79:1815":{"id":"0:79:1815","crate_id":0,"name":"unpark_requeue","span":{"filename":"src/parking_lot.rs","begin":[888,0],"end":[991,1]},"visibility":"public","docs":"Removes all threads from the queue associated with `key_from`, optionally\nunparks the first one and requeues the rest onto the queue associated with\n`key_to`.\n\nThe `validate` function is called while both queues are locked. Its return\nvalue will determine which operation is performed, or whether the operation\nshould be aborted. See `RequeueOp` for details about the different possible\nreturn values.\n\nThe `callback` function is also called while both queues are locked. It is\npassed the `RequeueOp` returned by `validate` and an `UnparkResult`\nindicating whether a thread was unparked and whether there are threads still\nparked in the new queue. This `UnparkResult` value is also returned by\n`unpark_requeue`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `validate` and `callback` functions are called while the queue is locked\nand must not panic or call into any function in `parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key_from",{"primitive":"usize"}],["key_to",{"primitive":"usize"}],["validate",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> RequeueOp","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12837:32823":{"id":"2:12837:32823","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:298:1824":{"id":"b:2:2731-0:298:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SpinWait","id":"0:298:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5554:27294":{"id":"5:5554:27294","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12867:25956"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:192:1817":{"id":"b:2:2424-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2520"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12765:32813":{"id":"2:12765:32813","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1537","str::slice_mut_unchecked":"2:12766:32814","crate::ops::Index":"2:39607:14523"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2082":{"id":"0:215:2082","crate_id":0,"name":"be_fair","span":{"filename":"src/parking_lot.rs","begin":[510,4],"end":[510,21]},"visibility":"public","docs":"This is set to true on average once every 0.5ms for any given key. It\nshould be used to switch to a fair unlocking mechanism for a particular\nunlock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:76:1814":{"id":"0:76:1814","crate_id":0,"name":"unpark_one","span":{"filename":"src/parking_lot.rs","begin":[732,0],"end":[795,1]},"visibility":"public","docs":"Unparks one thread from the queue associated with the given key.\n\nThe `callback` function is called while the queue is locked and before the\ntarget thread is woken up. The `UnparkResult` argument to the function\nindicates whether a thread was found in the queue and whether this was the\nlast thread in the queue. This value is also returned by `unpark_one`.\n\nThe `callback` function should return an `UnparkToken` value which will be\npassed to the thread that is unparked. If no thread is unparked then the\nreturned value is ignored.\n\n# Safety\n\nYou should only call this function with an address that you control, since\nyou could otherwise interfere with the operation of other synchronization\nprimitives.\n\nThe `callback` function is called while the queue is locked and must not\npanic or call into any function in `parking_lot`.\n\nThe `parking_lot` functions are not re-entrant and calling this method\nfrom the context of an asynchronous signal handler may result in undefined\nbehavior, including corruption of internal state and/or deadlocks.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["key",{"primitive":"usize"}],["callback",{"impl_trait":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3133:140","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12773:31015":{"id":"2:12773:31015","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12772:31006"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44212:13684","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:456":{"id":"0:275:456","crate_id":0,"name":"clone","span":{"filename":"src/parking_lot.rs","begin":[549,15],"end":[549,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnparkToken","id":"0:270:1821","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:718":{"id":"0:269:718","crate_id":0,"name":"fmt","span":{"filename":"src/parking_lot.rs","begin":[536,37],"end":[536,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:252:1816":{"id":"b:2:2427-0:252:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5553:2624":{"id":"5:5553:2624","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[536,26],"end":[536,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32447:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FilterOp","id":"0:252:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12803:32816":{"id":"2:12803:32816","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12441:19860","str::split":"2:12794:26054","prim@char":"1:12034:452","`DoubleEndedIterator`":"2:7827:128","str::rsplit_terminator":"2:12806:32817"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43979:13670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,31],"end":[495,33]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32472:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:690:3052":{"id":"5:690:3052","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,26],"end":[470,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12768:26047":{"id":"2:12768:26047","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12767:26046"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:230:1819":{"id":"b:5:687-0:230:1819","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RequeueOp","id":"0:230:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3051","5:690:3052","5:691:3053"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32445:244-0:192:1817":{"id":"a:2:32445:244-0:192:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12859:32830":{"id":"2:12859:32830","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:19860"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[495,35],"end":[495,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32447:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UnparkResult","id":"0:211:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[553,37],"end":[553,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkToken","id":"0:284:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12830:32820":{"id":"2:12830:32820","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12441:19860","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::match_indices":"2:12827:32819"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44097:13677","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:14254","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:19858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12761:26021":{"id":"2:12761:26021","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/parking_lot.rs","begin":[470,9],"end":[470,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParkResult","id":"0:192:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"16:4835:12357":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:16109:12260":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"6:6071:8473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:12445:14138":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"6:4461:7691":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:7102:21317":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:40587:8527":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"5:3753:14236":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:32558:2968":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:8072:12549":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:12191:11470":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:9833:233":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"16:2596:12296":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:40657:13573":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:12672:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:7317:33892":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:596:3741":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:7645:7941":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:41966:13734":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:5146:7775":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13273:11546":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:7582:10096":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:43997:13671":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:4789:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"22:6413:8459":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:2231:1962":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:4915:14651":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:33790:19979":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:7827:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:22727:12801":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:9891:21360":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:12466:19857":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"9:486:20300":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"22:5626:7770":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:46635:13085":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:13869:11663":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:10035:11384":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:46012:13059":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"22:6515:8466":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"14:165:20384":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:6484:13559":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:4103:14248":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:40436:13597":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:5009:7755":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"15:0:2429":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:1115:34347":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:4569:14647":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:123:3763":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:23095:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:7371:9286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:34446:12453":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"11:1603:14230":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:44858:234":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:3358:31562":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"22:7557:8913":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:6913:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"22:7385:4770":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:6674:8480":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:22311:14573":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"22:8290:7941":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:2440:111":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:4252:3099":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:6107:8477":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12828:11510":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13695:11639":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"22:5027:7707":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:21464:12781":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:23788:243":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:1477:13521":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:7568:12327":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:43082:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:10946:12749":{"crate_id":1,"path":["std","sys","pal","unix","os_str","Buf"],"kind":"struct"},"17:14757:11889":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:4968:7750":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:8478:13228":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:4686:7715":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:8294:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12548:14140":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:4776:7723":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11604:13336":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:6425:13442":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:7513:13497":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:12035:1658":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:3032:12332":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:23126:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:6753:13462":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:7601:10098":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:39664:219":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:2695:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"11:1883:3099":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"22:5060:7711":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"14:160:14211":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:3127:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:15367:12052":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:23281:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:6194:14324":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:48250:13153":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:588:3740":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:30645:3077":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:22602:13583":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:13856:11660":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:41257:10057":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:15710:12163":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:261:14051":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:12047:796":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:3255:218":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:8222:13681":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:14266:11739":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"22:5372:7744":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:3460:14062":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:5897:8462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:1562:13525":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:5431:14318":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:3318:19988":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:482:10074":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:922:14216":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"22:4961:7699":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:5344:9996":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"14:202:19874":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:41817:14612":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:16016:12237":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:6929:12429":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:6499:12330":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:6862:10039":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:3581:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:4889:12359":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:536:13363":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:44133:13679":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:42147:2766":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:12972:11520":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"5:4366:271":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:10814:126":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:41783:13014":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:45922:13055":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"0:0:1825":{"crate_id":0,"path":["parking_lot_core"],"kind":"module"},"5:7498:13547":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12510:11488":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:42759:3254":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:44221:13685":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:2359:12286":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:46367:13076":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:8310:13214":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:5982:8468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:1528:4629":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:3199:14299":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:10985:14258":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:4169:19903":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:10667:34419":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:12206:13675":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:2969:20450":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:1501:4625":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:2450:12290":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:10099:14357":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:15279:12032":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:22720:13584":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:8013:14602":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:38198:19983":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:7657:7943":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:9882:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"22:569:3739":{"crate_id":22,"path":["libc","unix","tms"],"kind":"struct"},"2:3373:2581":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:44964:13726":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:6596:14694":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:46219:13067":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:48398:13163":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:2183:13532":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:2487:208":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:32472:251":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"6:7610:7936":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4523:7698":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:5625:227":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:15224:12014":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:3278:14303":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:10955:14319":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:40717:13614":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:0:879":{"crate_id":6,"path":["libc"],"kind":"module"},"2:22546:12783":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:12461:19858":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:4666:7713":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:12000:14435":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:11194:21411":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:10530:246":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:3012:12448":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:5588:12314":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:5780:14323":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"22:5524:7760":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:10988:14077":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"22:1583:4636":{"crate_id":22,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:3735:14308":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:7798:2831":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:4549:7702":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"11:2304:13493":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:11497:11426":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:1778:635":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:12127:14129":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:6361:13438":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44452:13701":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:6530:9996":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:6332:12310":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:14001:11681":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:1639:4639":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:21451:14704":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:40557:31311":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:40830:13629":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:6764:4755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11536:13331":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:46274:13070":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:5829:8393":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:9877:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:10999:14259":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:10475:10101":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:3099:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:2744:12302":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:8868:2617":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"22:7463:8908":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4955:7749":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:6879:12424":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:6162:10087":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"11:787:13522":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:11001:14078":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:4928:14065":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:1567:13526":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"22:5485:7757":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"17:13334:11556":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7828:12510":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:9968:21381":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:43723:13570":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:43915:11393":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"18:564:11273":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:4922:7746":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"22:4820:7685":{"crate_id":22,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:4505:2574":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:30623:2626":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"20:118:1949":{"crate_id":20,"path":["smallvec","SmallVec"],"kind":"struct"},"22:1591:4637":{"crate_id":22,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:13042:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:10537:14301":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:10137:11389":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"11:1896:10031":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:574:3738":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:7388:9287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"18:690:13313":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:40406:31301":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:3830:12340":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:42114:2765":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:43301:13039":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:3584:14063":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"22:5632:7771":{"crate_id":22,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:14181:11726":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:46321:13071":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:10293:11393":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:46237:13068":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:7748:19969":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:6569:12318":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:12410:11485":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:6222:8524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:12045:694":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"22:5613:7768":{"crate_id":22,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:14041:11685":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6742:13461":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:13064:31400":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:2979:33789":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"22:1533:4631":{"crate_id":22,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:7651:14206":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:41248:13644":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"11:2124:13493":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:1913:7681":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:4167:14638":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:12455:13316":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"22:4955:7698":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:13056:11528":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"11:811:10031":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:4719:12353":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:2766:12303":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:14251:11735":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:14786:11899":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:4798:10080":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:6128:8480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:4020:2615":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:14633:11786":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:14194:11728":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:7622:7938":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"20:331:2619":{"crate_id":20,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"1:10804:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"11:102:1967":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:16170:11550":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"16:4745:12354":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:149:9981":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:43899:13664":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:13365:11558":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:22280:3061":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:6466:10090":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"22:6752:8489":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:32411:14266":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:11041:11418":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:13935:11672":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:6968:21316":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11172:28464":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4455:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:1758:14288":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:6583:13456":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:42661:2587":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:4235:2584":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:10698:3100":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"22:5302:7735":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:13097:11536":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:22226:3061":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:12596:14144":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:11155:13324":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:7218:19971":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:15631:12143":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:4639:11156":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:6700:8903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4698:7716":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10559:14068":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:43853:14280":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:44079:13676":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:8993:28172":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:43311:13659":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"22:1483:4624":{"crate_id":22,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:9536:32028":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"11:774:13521":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:33320:19976":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:3160:29554":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:22001:14573":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:11523:13329":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:42542:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2523:202":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:22637:12789":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:44524:13707":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"22:5286:7733":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"22:4881:7690":{"crate_id":22,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:8244:2625":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:44503:19873":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:12052:1639":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:2202:14295":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:21248:31625":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:5593:10019":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:2944:116":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:7391:21318":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:4115:14249":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:5673:12315":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:15027:11964":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"14:215:13513":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:1546:4631":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:8922:14696":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:12746:13360":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:2788:12304":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"22:6694:8482":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:5568:3450":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:22003:14703":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:40677:14271":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12366:21504":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"11:2403:3100":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"5:4865:224":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:7269:34412":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:39684:222":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:4127:108":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:4745:7720":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"22:5042:7709":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:10337:11396":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:4050:9996":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"11:1007:13493":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"18:681:13310":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"15:327:14411":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"22:4872:7689":{"crate_id":22,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:5098:7713":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:14312:11746":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:7582:12494":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:21390:14573":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"16:6696:12408":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:5939:13402":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:7616:7937":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:48307:13158":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"22:6467:8464":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:212:9994":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:15087:11982":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"22:6646:8476":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:3930:14617":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:7006:14188":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:1556:13524":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:2321:12278":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"11:364:9985":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:1534:3099":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4566:7704":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"22:6443:8462":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:3049:20451":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:44033:13673":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7621:21319":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"22:5511:7759":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:44656:13717":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:3594:3099":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:4964:14657":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:6960:270":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:4908:7744":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:15747:12170":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"20:281:2617":{"crate_id":20,"path":["smallvec","IntoIter"],"kind":"struct"},"1:3670:14613":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:47789:13144":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"12:0:2427":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:4585:12350":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"18:671:14049":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:4949:12361":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:7549:13551":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:9096:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:6261:14183":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:8097:13505":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:40755:13620":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:5746:14320":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:41233:13642":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"22:5170:7719":{"crate_id":22,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:1692:10019":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"22:4783:7682":{"crate_id":22,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:16146:12269":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:11779:11429":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:8247:3101":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:1455:2617":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:8387:14661":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:44377:13698":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:42999:13030":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:5866:13394":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:48296:13157":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:6013:20266":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:6456:13444":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13162:11540":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:4311:14311":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:563:3736":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:13754:11646":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:6687:9996":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:8003:14335":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"9:177:14424":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:4497:12347":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:32447:252":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"15:306:20404":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11141:14083":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"22:6528:8468":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:6741:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13478:11587":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:4053:12343":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:43873:13046":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:14170:11725":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:7908:13733":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:4740:14627":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:4557:12349":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:3251:14061":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:42269:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:6171:213":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:6243:14175":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10067:11386":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:22654:31325":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:7282:31026":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:2526:12293":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:3603:2615":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"11:1066:20378":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:4884:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"11:1917:13525":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:2352:3054":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:6658:3778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:914:14214":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:22355:14784":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:11113:14081":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:41009:13636":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"22:5079:7712":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:44360:13697":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"15:394:20413":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:2949:254":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:42780:3256":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:10520:14573":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:8115:13508":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:22134:14788":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:10093:150":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:8921:2767":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:11052:14070":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:13463:11581":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:15337:12046":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"22:6375:8393":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:501:3729":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:10723:13565":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:11595:13255":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:40798:13626":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:13896:11668":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"22:6742:8488":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"22:5584:7766":{"crate_id":22,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:41219:13640":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:10782:13749":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:9896:3258":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"11:1142:14226":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:6268:34414":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:11027:11374":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"11:2326:14223":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:3241:14302":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:7862:13501":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:475:3726":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"10:36:12693":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:47291:13111":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:14765:11892":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:10355:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:42227:3100":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:40466:13594":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:2154:13530":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:3184:3099":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"18:0:2432":{"crate_id":18,"path":["memchr"],"kind":"module"},"22:7442:8905":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4628:7711":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:43319:13660":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:918:14215":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:8830:13235":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"22:5246:7728":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:6870:8524":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:4377:228":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"22:6685:8481":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:9651:21374":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"11:687:3100":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:30821:31310":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"11:710:14214":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:10569:34422":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:2707:265":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"22:5332:7739":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:11675:11492":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:3022:12449":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"22:8261:7937":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"22:1557:4633":{"crate_id":22,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"22:8296:7942":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"18:609:14044":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:48039:13147":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"19:0:1131":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"14:221:12638":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:590:11274":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:14413:11766":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:2711:264":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:7365:9285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11767:14117":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:3607:3100":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:16180:11555":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:22360:14782":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:11307:14090":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:4958:14252":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"22:4860:7687":{"crate_id":22,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:5877:13553":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:9790:21377":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:10785:34416":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:11426:14094":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"22:478:3728":{"crate_id":22,"path":["libc","unix","timeval"],"kind":"struct"},"1:9469:136":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"6:4878:7736":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:10249:14682":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:40493:13602":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:4129:30862":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:13787:11654":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"7:31:20287":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:1664:4641":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:32446:2828":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:6059:8472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:9354:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:12055:1638":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"22:5292:7734":{"crate_id":22,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:5363:12368":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:13091:212":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:22089:14787":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:9166:2709":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"11:2423:2617":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:4899:420":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:9759:21376":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:2973:34344":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:5961:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:11743:14115":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:48437:13164":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"22:5432:7750":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:13145:11538":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:12058:1247":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:6376:21313":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:14497:11777":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:44672:13721":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:4738:19912":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:6249:2232":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:6837:8909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:7752:19968":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:10740:14367":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:38942:19987":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:2881:12308":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:9890:3256":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:6485:12313":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:15108:11987":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"11:837:14216":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:47257:13110":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:10102:11388":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:5033:7762":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6666:4582":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"22:8302:7943":{"crate_id":22,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:12222:13678":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:23312:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:40787:13625":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"22:6666:8479":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:14208:11729":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"22:5378:7745":{"crate_id":22,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"7:0:1687":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:14485:11477":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:13707:11640":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:8980:114":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:14282:11740":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:6047:8471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"11:430:34394":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:357:2706":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:32375:12690":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:5764:13552":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:5969:8466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:12401:14675":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"22:5221:7725":{"crate_id":22,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:12054:1641":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:12345:11480":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:42464:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:40630:14269":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13254:11545":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"22:7302:3778":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"11:2383:3099":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"5:3738:13529":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"22:1697:4647":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"22:5462:7753":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:9884:3253":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:8852:3099":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:11539:14309":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:6934:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:5500:14319":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:12536:14139":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:8495:14674":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:11053:10105":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"22:5357:7742":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:4527:12348":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:7845:14331":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:13976:11679":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:32436:13591":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:21219:31619":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:11065:11409":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:38363:19986":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:46611:13084":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:3163:28012":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:11146:13234":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:16049:12244":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"18:96:25506":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:1072:14227":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:11369:11425":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:48223:13151":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:4028:14622":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"22:6653:8477":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:9918:21380":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:637:14281":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13882:11435":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:48375:13162":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:5867:8459":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:7708:12329":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"9:450:20301":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:10141:13563":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:7740:14542":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:32445:244":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:40737:13617":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:8239:14611":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:9624:21357":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:32948:12447":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"22:5498:7758":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"6:1496:4624":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:3323:14599":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"22:8278:7939":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:11978:14121":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:928:14510":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:1743:659":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:4038:14623":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:7334:19963":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"22:7980:3684":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"22:1651:4641":{"crate_id":22,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:9943:21363":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:363:2707":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"22:5187:7721":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:1545:10031":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:15990:12231":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"6:5104:7768":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:6718:3511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"18:644:11266":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:11168:21410":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:588:14490":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:38308:19985":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:7692:9484":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:5123:7771":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"22:8193:9448":{"crate_id":22,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"22:537:3734":{"crate_id":22,"path":["libc","unix","pollfd"],"kind":"struct"},"2:44736:20075":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:4381:2564":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:21573:12781":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:12016:28466":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:5121:12366":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:11345:11423":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:16123:12264":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:6543:14692":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:12264:13353":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:3737:2617":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:2986:2965":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:4364:7683":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:6811:14699":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7090:13492":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:11818:10112":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:44514:13703":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:3732:14307":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:41019:13637":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:40686:13610":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:6156:13432":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:2907:12309":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:43887:13663":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:11617:13337":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:40422:13008":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:5753:14322":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"22:6625:8474":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:15192:12006":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:1063:14224":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"11:742:14215":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10716:14070":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"11:1566:20379":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:7343:3684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"22:6784:11068":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:8324:7945":{"crate_id":22,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:495:2916":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:8215:13565":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:40855:2100":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"22:7580:8915":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:7660:12498":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:3315:12335":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:44193:13682":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:15519:12112":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"22:585:3741":{"crate_id":22,"path":["libc","unix","protoent"],"kind":"struct"},"6:4647:7712":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:48241:13152":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"10:44:12694":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:42168:2700":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:15311:12040":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:48281:13156":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5140:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"18:766:25517":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"22:5366:7743":{"crate_id":22,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"22:5177:7720":{"crate_id":22,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:14057:11690":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:11236:159":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"16:3797:12339":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:14087:11709":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:14887:11938":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"11:856:14219":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:1286:14224":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:15384:12059":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:44644:13714":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:5974:8467":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:2228:14060":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"22:4975:7701":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"22:5594:7767":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"22:7533:8911":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:15235:12018":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"22:5473:7755":{"crate_id":22,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:3494:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:7880:2830":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:22753:14615":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:14221:11730":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:11485:14102":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:4806:12356":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:15432:12096":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:10803:14072":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:6813:8907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11563:13333":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:5049:12364":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:3687:9996":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8844:13236":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:1674:4642":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"22:6759:8490":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:4999:855":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:14662:11806":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"5:7004:10042":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:15125:11990":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:7524:10028":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:62:3725":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:40540:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:12898:21384":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:12257:13568":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:6430:14325":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:6300:13554":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:13244:10072":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:4914:7745":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:33134:12444":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:5023:7761":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:3980:14619":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:6843:2619":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:14021:11684":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:5992:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:3130:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12432:14137":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"22:5639:7772":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"22:6764:8491":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"1:11478:14307":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:10432:34421":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"5:3196:33900":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:15200:12007":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:42308:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:40699:13611":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6944:34409":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:44097:13677":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:11983:13800":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:7435:14509":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:43519:13661":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:0:314":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:12057:1697":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:4561:2576":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:692:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:42080:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:14439:11768":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"22:5310:7736":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:40526:13009":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"22:4887:7522":{"crate_id":22,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11342:13254":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:7041:13485":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:6351:14793":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:14426:11767":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:4847:7732":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:5648:14147":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:15566:12124":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:40620:10049":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:4814:7728":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:645:14493":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:39640:217":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:9860:21379":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:6263:8526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:13832:11659":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:2704:142":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"5:1151:34348":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:10207:11391":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6513:13446":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:1538:2617":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:4231:14310":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:6297:227":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:4381:10021":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:42176:233":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:23188:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:2946:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"22:1619:4638":{"crate_id":22,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:14921:11941":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:40839:13630":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:893:2615":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"22:6593:8471":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:4309:1947":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10510:14067":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:21849:14573":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"6:1570:4633":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:6540:14326":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:4434:7688":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:2944:233":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:7694:12328":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:44237:13594":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"22:5479:7756":{"crate_id":22,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"6:1576:4634":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:38253:19984":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:10950:14075":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:8302:14342":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:6893:12426":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:7368:2617":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:7903:13732":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"20:328:2618":{"crate_id":20,"path":["smallvec","Array"],"kind":"trait"},"1:8332:3511":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:8816:13234":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:1632:4638":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:46096:13062":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:39803:12878":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:40820:13628":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:46066:13061":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:22266:14791":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:2618:12297":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:47977:13146":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:903:10031":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:886:10004":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:4386:2565":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:12183:13672":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:12166:14132":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:2586:10076":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:14346:11759":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"18:636:11283":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:44866:214":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:44151:13680":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:3500:14571":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4783:7724":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"22:7571:8914":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:21392:14705":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:2048:13529":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"22:8243:7934":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:6114:8478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:12418:14135":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"5:790:9999":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:41846:13023":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:43811:14278":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:47021:13106":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:10764:13744":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:8159:13209":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"11:2369:14232":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"6:4902:7743":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:30657:31321":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:13395:11562":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:39607:14523":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:1906:3080":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:8202:13636":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:3764:12338":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:43289:154":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:22493:13578":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"11:2352:14224":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:13491:11591":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:15589:12137":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:1909:705":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:3988:14620":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:1486:13522":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:48345:13160":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:6819:8908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"22:5620:7769":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:4450:2572":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14878:11935":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:32415:12491":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:46945:13104":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:43064:3077":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:10970:28142":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:533:2692":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9678:21364":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:7029:10045":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:7360:34413":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"22:1578:4635":{"crate_id":22,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:5743:13382":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"9:0:2424":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"22:5208:7723":{"crate_id":22,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:21217:31634":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:4375:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:6017:21311":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:15177:12004":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:3343:10031":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:2472:12291":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:12273:11510":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:4700:14652":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:44699:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:2380:14568":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:21445:14701":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"14:40:11538":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:14698:11837":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"22:6717:8485":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:3966:14618":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"22:4905:7692":{"crate_id":22,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:11160:13235":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"20:0:1827":{"crate_id":20,"path":["smallvec"],"kind":"module"},"22:5232:7726":{"crate_id":22,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:44680:10208":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:7597:34410":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12140:14130":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:15244:12021":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:9730:21375":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"22:1684:4645":{"crate_id":22,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:14969:11950":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:6711:8904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"11:2562:12691":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"22:6702:8483":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"5:7619:10031":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:8283:13735":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:12039:1504":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:1301:14223":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:31219:2981":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:11991:11465":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:2830:14247":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:6961:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:33554:2632":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:11439:14095":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:3251:13526":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"18:719:11284":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:44909:13051":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:14099:11711":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:5571:14680":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:8547:3099":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:4428:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:21190:31622":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"22:8313:7944":{"crate_id":22,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:10852:21391":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:42773:3255":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"3:0:479":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:0:534":{"crate_id":2,"path":["core"],"kind":"module"},"2:46118:13063":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:41033:13638":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:11292:10106":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:13218:11543":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:15101:11985":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:8154:14207":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"22:4928:7695":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"22:5532:7761":{"crate_id":22,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:11412:14093":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:23064:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:41275:13645":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:8267:7938":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:2518:14296":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:7768:12317":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:7925:14334":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"22:4833:7686":{"crate_id":22,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"22:7512:8910":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"22:8347:9485":{"crate_id":22,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"22:1563:4634":{"crate_id":22,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:7347:13542":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"22:4866:7688":{"crate_id":22,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:5111:7769":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:23033:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:2696:12300":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:44652:13716":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:12034:452":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"18:80:25505":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:5971:2232":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"22:5441:7751":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"11:1676:9989":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:281:1966":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:4151:14636":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:42766:3253":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:11357:13754":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"22:5411:7748":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:39560:19833":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:2662:14298":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:5130:7772":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:21854:14707":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:511:14053":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:7554:12326":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"11:1025:14223":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:7651:7942":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:39728:223":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:7679:7945":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:11269:11407":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"22:5262:7730":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"22:5240:7727":{"crate_id":22,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"22:1501:4627":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12486:11487":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:1650:4640":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:11455:10108":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"22:5468:7754":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:41760:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:39706:221":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"18:699:13314":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:1387:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:8798:14347":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"20:97:2616":{"crate_id":20,"path":["smallvec","SmallVecData"],"kind":"enum"},"22:7608:2905":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","c_long"],"kind":"type_alias"},"1:9973:13650":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"16:6204:14156":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"22:6771:8492":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"6:4449:7690":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:7285:13541":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:6401:12312":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:7339:217":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"22:7408:4755":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:4595:7707":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:2504:12292":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:10101:154":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"18:755:13323":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:7535:250":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:504:2688":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:4050:14625":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:9111:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:909:14228":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:13809:11655":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"22:6501:8422":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:32429:2573":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:4854:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:2256:13537":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"11:875:14221":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13676:11634":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:10136:14577":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:2911:10079":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"22:4967:7700":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:2200:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:12387:21505":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:39750:14503":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"22:1545:4632":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:43947:13569":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:849:3100":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:12049:798":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:40708:13613":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:2093:3083":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"22:7355:8904":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"22:544:3735":{"crate_id":22,"path":["libc","unix","winsize"],"kind":"struct"},"22:44:2907":{"crate_id":22,"path":["libc","unix","c_int"],"kind":"type_alias"},"2:7936:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:7564:2563":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12009:11418":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:6644:240":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:10775:14071":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"18:624:34431":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:11180:10208":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:44309:19872":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:12153:14131":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"22:472:3727":{"crate_id":22,"path":["libc","unix","utimbuf"],"kind":"struct"},"22:4998:7704":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"18:113:25507":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11014:14079":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:1521:4628":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11614:13759":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:7542:14375":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"22:6617:8473":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:44537:13711":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:3133:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:47181:13108":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:2418:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13383:11559":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:39789:12877":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:2789:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:9894:3257":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"18:481:13305":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:13765:11647":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6600:21314":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:2169:21438":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:10246:10059":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:7318:12472":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:11727:14113":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:4159:14637":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:46867:13090":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:2339:12280":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"22:5667:7775":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:5816:13387":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1054:14223":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:13233:114":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"11:844:14510":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:15535:12116":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11657:13342":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:10957:13673":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:13724:11643":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:14896:11939":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:12146:13667":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:1789:10031":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:46565:13082":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:8537:13736":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"11:2554:34387":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:9813:21378":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:3280:14304":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:11395:14091":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"18:660:14045":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:48360:13161":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:12041:1623":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"22:8255:7936":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4977:7751":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:22440:13577":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:6146:10072":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:12029:11467":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:15345:12047":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:43272:13657":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:6357:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:8205:21322":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"22:6431:8460":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:119:3762":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:40650:14270":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:10618:34418":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:3394:10019":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:8050:12548":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"13:110:34395":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:6279:12377":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:12441:19860":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:12255:13352":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"5:7451:2699":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"20:57:2615":{"crate_id":20,"path":["smallvec","Drain"],"kind":"struct"},"17:13322:11555":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:10329:10063":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:1020:2341":{"crate_id":2,"path":["core","hint","spin_loop"],"kind":"function"},"1:10540:14303":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"16:7792:21320":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"10:0:2425":{"crate_id":10,"path":["adler"],"kind":"module"},"1:6985:29362":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:11309:13750":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:1505:14214":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:2236:34277":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:13337:14511":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:46733:13087":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:10896:11404":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:10315:11395":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:903:3099":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:555:3735":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"11:2542:12687":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:32560:113":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"16:6415:13441":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:9888:3255":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:40545:13607":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:10726:34417":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:1131:34323":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:21180:2981":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"11:396:9987":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:15645:12145":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"22:5340:7740":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:11701:14108":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:3002:2633":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:4462:12346":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:10842:28467":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:9559:21359":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"22:5453:7752":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:5574:12311":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:5634:13371":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:15356:12051":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:9481:10100":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"17:13026:11524":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:5075:7766":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"18:582:2981":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12797:11509":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"22:4988:7703":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:2722:12301":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:2197:14057":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:11645:13339":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"3:234:233":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:10813:34420":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:6943:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12459:11407":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:21891:31628":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:4821:14626":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:48270:13155":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:7677:217":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"22:5542:7762":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:3239:14301":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:6682:3605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"22:4920:7694":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:43027:31338":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:6927:7738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:1406:153":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:12038:339":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"6:1710:4647":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"18:599:34429":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:44346:13694":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:9106:242":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:1514:4627":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:10941:14074":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:10916:14257":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:4578:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:13922:11671":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:12037:1151":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:44489:13702":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"22:5316:7737":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:11315:14372":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:6844:12420":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:16032:12242":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"16:7534:12325":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:256:14050":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"22:5118:7715":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:6086:8475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"11:434:34390":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:5435:12369":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:48185:13150":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:11982:14262":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:1424:3099":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:10312:10062":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:15013:11963":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:44848:226":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:10925:21393":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:11932:14118":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:12930:21385":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:8291:32026":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"22:1705:4648":{"crate_id":22,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4947:7748":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:5688:10019":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"22:1508:4628":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:0:1529":{"crate_id":1,"path":["std"],"kind":"module"},"2:40573:13608":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"22:4938:7696":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:16076:12253":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:3366:13644":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:3345:19900":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:5798:12371":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:10833:28462":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:39611:13592":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:15294:12036":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:5068:7765":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:11966:20037":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:4383:14312":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:1973:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:7067:13491":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:3443:14306":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"22:1494:4626":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:16087:12258":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:44203:13683":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:30589:9499":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:5082:14313":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:41930:31304":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:7382:28430":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12684:11357":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:11621:13759":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:7277:2617":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:15943:11540":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"22:5661:7774":{"crate_id":22,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:8239:12491":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:2336:3062":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:1315:14227":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:6872:10041":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:11607:28163":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:9149:2631":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:13742:11644":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:0:2430":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:6012:8470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:44051:13674":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"21:4:1826":{"crate_id":21,"path":["cfg_if","cfg_if"],"kind":"macro"},"2:42425:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:5004:10019":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:15117:11988":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"22:6437:8461":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:47103:13107":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:4613:12351":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:43741:14276":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:11215:13327":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"5:5154:10027":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"22:5396:7747":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"22:7326:3605":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:10097:14358":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:21879:12782":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:10340:29017":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:12040:1537":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11632:13338":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:46513:13080":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:7736:12501":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:7284:2765":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:7670:2698":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:3155:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:44668:13720":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:4764:7722":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:2644:12298":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:39782:14268":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"11:2548:12688":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:640:14283":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:10157:14359":{"crate_id":1,"path":["std","sys","pal","unix","os_str","Slice"],"kind":"struct"},"6:6159:8493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:40507:19919":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"9:393:20302":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:15557:12122":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:7645:14573":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:4480:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:43523:13662":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:1718:4648":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"22:8249:7935":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:2428:12289":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:44246:13599":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:1873:14292":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:6818:13475":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:15680:12158":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:23343:12802":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:6495:10055":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:1796:14290":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:15079:11979":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:26190:273":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"11:1051:14224":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:1703:4646":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:6605:2617":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:21236:31632":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:14934:11946":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"22:464:3726":{"crate_id":22,"path":["libc","unix","group"],"kind":"struct"},"2:43761:14277":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:10520:34423":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:7917:14333":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:14373:11761":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:44660:13718":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"22:484:2916":{"crate_id":22,"path":["libc","unix","timespec"],"kind":"struct"},"9:357:20316":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:5388:19848":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:7850:13730":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:1541:2615":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:2670:12299":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:15733:12167":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12396:11482":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:13309:11553":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:14822:11929":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:7531:11381":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"22:6474:8465":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:14296:11742":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:7756:14330":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:7462:12493":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"22:5108:7714":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4676:7714":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:8228:14342":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:2354:14559":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:2421:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:42622:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:15062:11974":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"18:652:11266":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13948:11674":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:11372:13799":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:1558:4632":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"11:800:2615":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:44183:13681":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:3166:28024":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:10608:14069":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:15507:12109":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:8209:11393":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:40:9992":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:7933:13529":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:14385:11762":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:2426:2437":{"crate_id":1,"path":["std","io"],"kind":"module"},"5:3191:13524":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"18:727:11287":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"22:5156:7718":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:6781:4753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:22224:31182":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:1969:204":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:4031:10019":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"14:0:2428":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:9541:14433":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:8181:12331":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:43979:13670":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:6889:8911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:21571:14702":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:12091:14126":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:4998:7753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:43504:13043":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:5891:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:9198:13246":{"crate_id":1,"path":["std","sys","pal","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:6560:9983":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"5:1495:14228":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"22:5010:7705":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:1439:3100":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:15527:12115":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"22:8337:9484":{"crate_id":22,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"22:4807:7684":{"crate_id":22,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:10016:21358":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:43843:13575":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:2380:12287":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:1821:14291":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:5308:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:5995:13366":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:3201:14300":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"11:1910:13524":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"22:6487:8421":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"22:8002:9285":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:7544:13499":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:42386:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:5044:7763":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:2284:20422":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:5051:14313":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:7474:14198":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:23157:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:14324:11748":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:5712:13377":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:13285:11549":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:40474:13600":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:44922:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:4616:7710":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:10974:11407":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:46764:13088":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:4:1114":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:3217:13525":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:22675:31297":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11399:14092":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:13909:11669":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:5273:7731":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:580:3739":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:11666:13343":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:40807:13627":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:7342:34411":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:45966:13057":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:33672:19978":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:1024:9996":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:6189:13435":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:8906:14697":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"22:4796:7683":{"crate_id":22,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:21234:31630":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:951:14222":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"4:0:2423":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12584:14143":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:9349:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"22:6456:8463":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:1883:3081":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:5088:12365":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:4773:14064":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"22:558:3737":{"crate_id":22,"path":["libc","unix","sigval"],"kind":"struct"},"1:4635:11152":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"11:883:14222":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"22:577:3740":{"crate_id":22,"path":["libc","unix","servent"],"kind":"struct"},"2:21202:31622":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"16:8134:13511":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:5877:2615":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:42235:2617":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:40383:13595":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:13989:11680":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:11243:14087":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:2144:2688":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11384:13756":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:22614:31307":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:7646:2708":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"9:330:12731":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:483:3727":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:43905:13665":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:1685:9996":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:1819:9673":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:11996:19861":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:4932:7747":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:7504:12490":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:15301:12037":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"22:5419:7749":{"crate_id":22,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:16062:12250":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:13684:11636":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:12048:797":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:15184:12005":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:6531:13454":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:11690:14107":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:1591:4635":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:1537:4630":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:43264:13655":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:3339:19901":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:12718:21383":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"22:1524:4630":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:22629:12788":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8874:13237":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:5128:211":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:4488:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:43824:13574":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:1094:14054":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:6228:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:8938:14698":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:4491:14642":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:10769:13730":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"5:4182:10019":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:4808:7727":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"18:614:34428":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:14399:11763":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"22:5016:7706":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:4506:7696":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:12077:14122":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:5446:112":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:945:14221":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:2810:12305":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:15493:12103":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:7665:2697":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:11518:14308":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:2406:12288":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"22:8025:9287":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:5381:14314":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"22:7598:8916":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"22:6520:8467":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:33731:19977":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:5632:2232":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:489:3728":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:43798:13573":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"11:2536:12686":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:542:3733":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:6960:14187":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:2334:3061":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"17:0:2431":{"crate_id":17,"path":["object"],"kind":"module"},"6:569:3737":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:15003:11962":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"22:6734:8487":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"6:548:3734":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:7331:2617":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:11714:14111":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:46256:13069":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:5910:8463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:5987:227":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:46686:13086":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:11390:13757":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:2622:14297":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:8294:14345":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:9101:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"22:563:3738":{"crate_id":22,"path":["libc","unix","itimerval"],"kind":"struct"},"2:31191:203":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"18:707:13316":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:3081:19832":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"6:4584:7706":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:7635:10035":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:7425:4753":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"18:736:25516":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:1536:14235":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:557:2694":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:13584:11599":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"18:574:11266":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"20:164:9977":{"crate_id":20,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"1:10580:2251":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:11484:14260":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"22:5215:7724":{"crate_id":22,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:39521:3102":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"22:6817:8494":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:14156:11723":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"11:1582:14229":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:4800:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:6792:13474":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:14843:11934":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:9032:14254":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:42097:3100":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:22326:14783":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:2600:10063":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:33927:19980":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:1040:13493":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:7639:7940":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:507:3730":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"22:5196:7722":{"crate_id":22,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"11:351:34384":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:723:151":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:47899:13145":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12335:11477":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"22:4912:7693":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:5384:21308":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:44676:13722":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13235:11544":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:9892:213":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:2370:14563":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:7307:10007":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:8986:2691":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"22:4981:7702":{"crate_id":22,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:654:4623":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:4516:7697":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"22:5142:7717":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:673:3099":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:4870:7735":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"22:7335:8902":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:9016:14352":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:2498:20374":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"22:7481:8909":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:7511:13550":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"22:6876:7597":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:6911:8526":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10657:11418":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:15329:12044":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:13116:14264":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:4351:7682":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:5941:8421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:23219:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:9050:28144":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"22:6605:8472":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:43009:3077":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:2305:20448":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"22:496:3730":{"crate_id":22,"path":["libc","unix","rusage"],"kind":"struct"},"1:10794:13169":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:10971:13674":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:46397:13077":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:21562:14573":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:12999:11521":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:12784:13361":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:2975:12773":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:7691:2251":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:40458:13599":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:12872:11512":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"11:2569:13543":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:11226:14084":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"22:1721:4649":{"crate_id":22,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4556:7703":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"11:700:2617":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:5117:7770":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:8288:14640":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:10805:14255":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"22:1637:4640":{"crate_id":22,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:15480:12097":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:5696:21309":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:6248:8525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:40446:13598":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:32422:14267":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"5:7268:9672":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:7423:13543":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:9681:3269":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"17:11126:14082":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"18:521:25518":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"22:5553:7763":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12301:13355":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"18:531:13307":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:836:3099":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:4543:7701":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:1516:14215":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:12046:799":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:4862:12358":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"22:6807:8493":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:6426:13642":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:8975:14349":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"22:1661:4642":{"crate_id":22,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10172:11390":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:6610:10091":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"5:7376:2617":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:14455:11770":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:9188:28714":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:7436:12492":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:7054:13488":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:43672:14275":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:14359:11760":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:12244:13348":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:867:13521":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:3994:14621":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:15374:12054":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:8148:13208":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:7112:3010":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:40769:13623":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:40746:13619":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:44557:13712":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:2031:14056":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:7613:14205":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4824:7729":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:36322:12454":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"5:5807:258":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:13516:11595":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:7138:30859":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:7015:12434":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:4744:14630":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"20:363:2622":{"crate_id":20,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"17:12310:11476":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:12103:14127":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:7668:7944":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11576:13334":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"11:2151:14224":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12052:11468":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:2548:12294":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:7492:13494":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:4986:12362":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:8455:13039":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:2972:3051":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:15903:12217":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:12560:14141":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:6545:12385":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:6100:8476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"14:31:14211":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"13:226:12685":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:1785:9496":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"22:5386:7746":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:12230:13344":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:2701:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:13297:11550":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:11590:13335":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:2954:2579":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:7633:7939":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:7556:9448":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12202:21503":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:5612:12316":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:7857:13169":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:6721:21315":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:5955:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12758:11508":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:4641:12352":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:1596:4636":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"22:5325:7738":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:46787:13089":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:15961:11541":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:41226:13641":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:46589:13083":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:11476:1962":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:4411:10019":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:4830:7730":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:4989:7752":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:6386:12382":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:12659:21361":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:3333:144":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"22:1669:4643":{"crate_id":22,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:7604:7935":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:4610:7709":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12600:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:40377:13594":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"22:5048:7710":{"crate_id":22,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:683:257":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"11:299:13515":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:15160:11996":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:44901:13893":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:15546:12121":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"11:1903:13523":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:12220:11474":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:30629:9500":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:16098:12259":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:3936:14616":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:9455:702":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"1:8139:12490":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:22562:13579":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46034:13060":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:1550:13523":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:8860:14348":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:42105:2617":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:41267:13010":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:2698:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:4460:2573":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:32527:2829":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:4703:14641":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:6079:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:12921:11477":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"22:6710:8484":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:22212:14790":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"9:237:13039":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:42159:2956":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:3162:14524":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11047:10104":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:4473:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:22578:12784":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"14:187:20391":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:11449:11336":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:2368:14562":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:4514:2575":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:5661:13375":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:8195:13512":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11958:11462":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:21443:14573":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:1682:4643":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5152:7776":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13436:11572":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:5415:14317":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:15049:11968":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11256:14088":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:12032:402":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:1760:14289":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:6169:8494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:40869:13632":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:12356:13358":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:533:3732":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4401:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:6898:8912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:12115:14128":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:8276:13734":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:8328:14346":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:43929:13565":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:9276:9673":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"6:6120:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:42029:201":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:1618:2401":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:4860:7734":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:1897:12777":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:11945:14119":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:13419:11564":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:10878:13569":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:42008:13025":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:14950:11949":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:4180:14639":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"5:3225:13523":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:5982:13405":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12380:11481":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:4440:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:33613:2634":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8192:13610":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:9130:2630":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:12053:1640":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:10674:3099":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:6798:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:1966:205":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:415:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:6804:8906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:15612:12138":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"22:7310:4582":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:44951:13054":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"22:522:3732":{"crate_id":22,"path":["libc","unix","hostent"],"kind":"struct"},"17:11549:13332":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:12033:1034":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:2933:20449":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:1527:217":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2658:14573":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:10471:34424":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:42503:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"22:6538:8469":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"22:6405:8458":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:435:11343":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:2997:1954":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:14904:11940":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"22:5256:7729":{"crate_id":22,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:42583:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:8553:13233":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:5963:14149":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:12005:14498":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"11:2443:2615":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:39976:25909":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:10759:13742":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:14470:11774":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:3123:2012":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:44648:13715":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"22:4948:7697":{"crate_id":22,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:9852:141":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:5639:13727":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:2993:2967":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"22:5403:1101":{"crate_id":22,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"11:1923:13526":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:9886:3254":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:39624:220":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:15671:12154":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:13182:11541":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:5240:210":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"18:515:11269":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:2942:2580":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:4092:3100":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:621:2219":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:4534:1948":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:3410:2583":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:8354:13215":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:2205:3068":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:12180:14133":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:4266:2585":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:12701:11506":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:7722:12319":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"22:1678:4644":{"crate_id":22,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:8171:14572":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:44228:13600":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:7468:13544":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:42089:3099":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:3915:12342":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:11800:11431":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:3425:13212":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:1697:4645":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:7702:9485":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:1691:4644":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:10051:11385":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:4444:10021":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"22:516:3731":{"crate_id":22,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:7560:14246":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:11817:21480":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:46136:13064":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:12446:14254":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:4841:7731":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:7482:31311":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"9:507:12752":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:2983:33790":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"22:5348:7741":{"crate_id":22,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"16:8167:14210":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:13282:149":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:11321:11418":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:23002:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:5403:11384":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:2324:636":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:42158:2768":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:12850:11474":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:401:14052":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:8008:14336":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:47441:13112":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"22:5279:7732":{"crate_id":22,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:22691:31324":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:5015:7760":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13504:11592":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:5905:13396":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:307:1588":{"crate_id":1,"path":["std","thread"],"kind":"module"},"17:13407:11563":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:939:14219":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11294:14089":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:43280:13658":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:12474:11418":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:9028:14354":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:830:10002":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"22:1515:4629":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:5830:13388":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:6897:10093":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:42157:2769":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"11:1107:14225":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:40481:19918":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:43732:13571":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"21:0:1826":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"2:46467:13079":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12290:13354":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:10988:13236":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:2529:209":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:45988:13058":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"13:0:2422":{"crate_id":13,"path":["std_detect"],"kind":"module"},"22:5035:7708":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:2474:12770":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:7880:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:16134:12266":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:11036:10103":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:7884:21321":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:15212:12013":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:6352:13437":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"22:490:3729":{"crate_id":22,"path":["libc","unix","rlimit"],"kind":"struct"},"2:47647:13143":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"11:1160:14227":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"9:426:20303":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:7867:13731":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:12324:13356":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4529:7699":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"22:7457:8907":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:7789:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:3065:11291":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"18:507:11266":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:4212:10019":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:12512:19866":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13448:11575":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:5419:11385":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:3600:12337":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:5395:14316":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:12050:794":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:1507:4626":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:2062:14236":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"22:5673:7776":{"crate_id":22,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:14122:11720":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:9023:14353":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:13648:11628":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:3818:10031":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:5825:10082":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42244:203":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"22:6558:8470":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:10323:112":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:5085:7767":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:7782:13500":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:15321:12043":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:13663:11632":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:11517:14261":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:10344:10067":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:7840:9843":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:6915:12321":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:10766:13568":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:4742:14629":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:34100:19981":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:7028:10094":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:5921:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:42219:3099":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"22:4893:7691":{"crate_id":22,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"11:832:14228":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:7128:13242":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:3888:12341":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:4388:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:41989:13024":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:6226:14171":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:7598:7934":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:6346:14186":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:4603:7708":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:8281:12560":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"22:6660:8478":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:44331:13688":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:4535:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:40500:13603":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6041:21312":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:6868:8910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:15659:12152":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:4344:12344":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:13202:11542":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:7523:13498":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"18:491:13306":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:14235:11733":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"9:52:14414":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:43039:12525":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:15287:12035":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:10942:14330":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:2492:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:41242:13643":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:43055:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:4625:14621":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:9071:13245":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:4893:7742":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:11469:14097":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"11:0:2426":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:6490:13558":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:15842:11536":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"1:9476:14331":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:11507:11427":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:40394:13596":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:3232:12277":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:1887:2617":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:14509:11784":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:3510:14591":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:44845:147":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:15868:12187":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"5:1270:13493":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:880:13522":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:2574:12295":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:5727:13380":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:13083:11535":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:43104:3262":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:8405:13225":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"22:5577:7765":{"crate_id":22,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5004:7754":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:5859:8458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:4150:19831":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:15855:11537":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:1902:14552":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:6083:20421":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:44212:13684":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"22:8284:7940":{"crate_id":22,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:4755:7721":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:10824:13209":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"1:4637:11154":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:2209:14556":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:48322:13159":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:527:3731":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:7785:143":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"11:1891:2615":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:2703:12774":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:12051:1642":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:595:11381":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:12044:692":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:4906:14650":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:4774:12355":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:3112:2582":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11755:14116":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:2659:19923":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:10962:14076":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:12614:21382":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:4469:14641":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"22:7542:8912":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:3837:14309":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:10422:14066":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:14145:11721":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"22:5561:7764":{"crate_id":22,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:12953:11517":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:4921:12360":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:2832:12306":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:6070:10083":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:15037:11965":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:15725:12164":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:4417:12345":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"11:123:9984":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:43833:14279":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"22:6632:8475":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:12572:14142":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:859:2617":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:47227:13109":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:14989:11958":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:4939:1101":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"22:7344:8903":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:6484:2615":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:266:9996":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:6687:13460":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"18:538:11271":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:16004:12235":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"5:5392:19849":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:1604:4637":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:1815:1188":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:15253:12022":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:2864:12307":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:6691:8902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:48147:13149":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:11088:11411":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:10078:14290":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"17:13633:11624":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:10881:21392":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:22197:14573":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:13961:11676":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:5885:8460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:22:732":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8961:13241":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:8893:13238":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:44425:13700":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"5:5650:2619":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"11:1087:34389":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"11:328:13518":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"22:7448:8906":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:634:14233":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:40727:13616":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:7503:12324":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"22:7362:3511":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:6136:11068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:32528:2969":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:10843:14256":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:42347:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:46197:13066":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:22173:14789":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:44664:13719":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:11199:2630":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:46167:13065":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:43751:13572":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:40879:13633":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:10534:14299":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:44939:13725":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:3230:33899":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11459:14096":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:13121:11537":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"22:6725:8486":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"16:5322:12367":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:6901:12320":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:16160:12270":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:15:2533":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:5052:7764":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:30360:14614":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:5992:10027":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:7719:14496":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:4920:32061":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"15:288:20403":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:45942:13056":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"7:78:20294":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:4724:7718":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:48261:13154":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:30715:31293":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"5:7297:2615":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"22:0:879":{"crate_id":22,"path":["libc"],"kind":"module"},"1:11217:10207":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"16:6467:13445":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:6117:10019":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:1734:4649":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:3491:28539":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"20:350:2621":{"crate_id":20,"path":["smallvec","ConstNonNull"],"kind":"struct"},"22:1690:4646":{"crate_id":22,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:13347:11557":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"8:0:1826":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:7734:14497":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"22:5649:7773":{"crate_id":22,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"6:4710:7717":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:4042:14624":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:12056:849":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:46991:13105":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:15267:12029":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:43772:13044":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:41800:13016":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:46419:13078":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"22:6896:8525":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:3482:3252":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:5017:12363":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:9834:3252":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:34273:19982":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:10915:14073":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:10432:14347":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:41953:13653":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:23250:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:3655:11296":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"20:344:2620":{"crate_id":20,"path":["smallvec","ToSmallVec"],"kind":"trait"},"1:8804:206":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"22:552:3736":{"crate_id":22,"path":["libc","unix","linger"],"kind":"struct"},"2:40778:13624":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:8564:13739":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:9036:13242":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:2778:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"14:7:14211":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:1203:14055":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"11:2140:14223":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:8253:19967":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:3461:12336":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:5760:21310":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:15133:11992":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:48101:13148":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"22:8008:9286":{"crate_id":22,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:3328:261":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:5928:8465":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:1488:4625":{"crate_id":22,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:11558:3078":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:8234:14344":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:22741:13587":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:14778:11898":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:4738:7719":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:6318:12380":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:15689:12160":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:7897:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:15980:12230":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"22:5130:7716":{"crate_id":22,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"22:531:3733":{"crate_id":22,"path":["libc","unix","iovec"],"kind":"struct"},"2:44724:2637":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:4496:7695":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"22:1626:4639":{"crate_id":22,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:46543:13081":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:10242:11392":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:786:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"11:2469:10031":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"}},"external_crates":{"20":{"name":"smallvec","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}