{"root":"0:0:1754","crate_version":"0.4.1","includes_private":false,"index":{"b:5:5689-0:70:1684":{"id":"b:5:5689-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[55,0],"end":[59,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:76:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12087:27297":{"id":"2:12087:27297","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41589:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5689-0:92:1688":{"id":"b:5:5689-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12089:27298":{"id":"2:12089:27298","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41589:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:2098":{"id":"0:142:2098","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:1966":{"id":"0:67:1966","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[32,4],"end":[34,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5689-0:30:1680":{"id":"b:5:5689-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2681:220-0:126:1694":{"id":"a:2:2681:220-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8314:7011-0:148:1696":{"id":"a:2:8314:7011-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12167:33565":{"id":"2:12167:33565","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2550:128":{"id":"2:2550:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2250-0:126:1694":{"id":"b:2:2250-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:172-0:92:1688":{"id":"0:172-0:92:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,29],"end":[59,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"snake::AsSnakeCase","name":"AsSnekCase","id":"0:92:1688","glob":false}}},"2:12106:30616":{"id":"2:12106:30616","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43848:6064","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9:1871":{"id":"0:9:1871","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to kebab case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12107:27340":{"id":"2:12107:27340","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11:1871":{"id":"0:11:1871","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[23,4],"end":[25,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12120:2396":{"id":"2:12120:2396","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41589:179","prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12196:26465":{"id":"2:12196:26465","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2537-0:92:1688":{"id":"b:2:2537-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108:2047":{"id":"0:108:2047","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167-0:70:1684":{"id":"0:167-0:70:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,23],"end":[57,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnekCase","id":"0:70:1684","glob":false}}},"2:12084:33552":{"id":"2:12084:33552","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:174-0:85:1691":{"id":"0:174-0:85:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,69],"end":[59,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"snake::ToSnekCase","name":"ToSnekCase","id":"0:85:1691","glob":false}}},"b:2:2552-0:92:1688":{"id":"b:2:2552-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2537-0:70:1684":{"id":"b:2:2537-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:1991":{"id":"0:89:1991","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12189:33572":{"id":"2:12189:33572","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2738:2341-0:12:1678":{"id":"a:2:2738:2341-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:48:1682":{"id":"0:48:1682","crate_id":0,"name":"AsShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[39,0],"end":[39,51]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsShoutyKebabCase(sentence)), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:51:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:48:1682","a:2:2698:228-0:48:1682","a:2:8313:7012-0:48:1682","a:2:2738:2341-0:48:1682","a:2:2681:220-0:48:1682","b:2:2541-0:48:1682","b:2:2250-0:48:1682","b:2:2537-0:48:1682","b:2:3317-0:48:1682","b:2:2247-0:48:1682","b:2:2552-0:48:1682","b:2:2547-0:48:1682","b:5:5689-0:48:1682","0:52"]}}},"0:106:2047":{"id":"0:106:2047","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to title case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[23,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUpperCamelCase","id":"0:139:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:142:2098"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5689-0:109:1692":{"id":"b:5:5689-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2547-0:148:1696":{"id":"b:2:2547-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:1940":{"id":"0:47:1940","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8313:7012-0:70:1684":{"id":"a:2:8313:7012-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2547-0:126:1694":{"id":"b:2:2547-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12097:27323":{"id":"2:12097:27323","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:12098:27324"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12169:33566":{"id":"2:12169:33566","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:92:1688":{"id":"b:2:2547-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[23,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToLowerCamelCase","id":"0:26:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:29:1918"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2250-0:148:1696":{"id":"b:2:2250-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2247-0:48:1682":{"id":"b:2:2247-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12133:33556":{"id":"2:12133:33556","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11776:12280","str::split":"2:12124:1707","prim@char":"1:11978:418","`DoubleEndedIterator`":"2:7304:121","str::rsplit_terminator":"2:12136:33557"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43606:6049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12194:26461":{"id":"2:12194:26461","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8314:7011-0:30:1680":{"id":"a:2:8314:7011-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:62:1961":{"id":"0:62:1961","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty snake case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:5447:26464":{"id":"5:5447:26464","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12198:26467"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3317-0:48:1682":{"id":"b:2:3317-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12076:2397":{"id":"2:12076:2397","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161-0:26:1681":{"id":"0:161-0:26:1681","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,40],"end":[54,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"lower_camel::ToLowerCamelCase","name":"ToLowerCamelCase","id":"0:26:1681","glob":false}}},"b:2:2247-0:126:1694":{"id":"b:2:2247-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2681:220-0:70:1684":{"id":"a:2:2681:220-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182-0:148:1696":{"id":"0:182-0:148:1696","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,4],"end":[63,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"upper_camel::AsUpperCamelCase","name":"AsUpperCamelCase","id":"0:148:1696","glob":false}}},"a:2:2681:220-0:48:1682":{"id":"a:2:2681:220-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12148:33559":{"id":"2:12148:33559","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5445:6913":{"id":"5:5445:6913","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7283:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2537-0:48:1682":{"id":"b:2:2537-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:1616":{"id":"0:95:1616","crate_id":0,"name":"0","span":{"filename":"src/snake.rs","begin":[51,38],"end":[51,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:12183:33570":{"id":"2:12183:33570","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30:1680":{"id":"0:30:1680","crate_id":0,"name":"AsLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[39,0],"end":[39,50]},"visibility":"public","docs":"This wrapper performs a lower camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(format!(\"{}\", AsLowerCamelCase(sentence)), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:33:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:30:1680","a:2:2698:228-0:30:1680","a:2:8313:7012-0:30:1680","a:2:2738:2341-0:30:1680","a:2:2681:220-0:30:1680","b:2:2541-0:30:1680","b:2:2250-0:30:1680","b:2:2537-0:30:1680","b:2:3317-0:30:1680","b:2:2247-0:30:1680","b:2:2552-0:30:1680","b:2:2547-0:30:1680","b:5:5689-0:30:1680","0:34"]}}},"a:2:8314:7011-0:70:1684":{"id":"a:2:8314:7011-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2250-0:92:1688":{"id":"b:2:2250-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8314:7011-0:92:1688":{"id":"a:2:8314:7011-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12074":{"id":"2:12074","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12075:816","2:12076:2397","2:12077:33549","2:12078:33550","2:12080:33551","2:12083:24361","2:12084:33552","2:12085:314","2:12086:27301","2:12087:27297","2:12089:27298","2:12091:27299","2:12093:27300","2:12095:33553","2:12096:33554","2:12097:27323","2:12098:27324","2:12099:1744","2:12100:1733","2:12101:5640","2:12102:30644","2:12103:30633","2:12104:23497","2:12105:33555","2:12106:30616","2:12107:27340","2:12110:27341","2:12113:27342","2:12116:2436","2:12120:2396","2:12124:1707","2:12127:27332","2:12130:27334","2:12133:33556","2:12136:33557","2:12139:27336","2:12142:27338","2:12145:33558","2:12148:33559","2:12151:2231","2:12154:33560","2:12157:33561","2:12160:33562","2:12163:33563","2:12165:33564","2:12167:33565","2:12169:33566","2:12170:33567","2:12171:33568","2:12174:33569","2:12177:23855","2:12180:27343","2:12183:33570","2:12186:33571","2:12189:33572","2:12192:33573","2:12194:26461","2:12195:27237","2:12196:26465","2:12197:26466","2:12198:26467","2:12199:33574","2:12201:6753","2:12202:33575"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[35,0],"end":[39,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnakeCase","id":"0:83:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:91:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2541-0:30:1680":{"id":"b:2:2541-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2555:128":{"id":"2:2555:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32097:4524","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2537-0:126:1694":{"id":"b:2:2537-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:139:1699":{"id":"0:139:1699","crate_id":0,"name":"ToUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines an upper camel case conversion.\n\nIn UpperCamelCase, word boundaries are indicated by capital letters,\nincluding the first word.\n\n## Example:\n\n```rust\nuse heck::ToUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(sentence.to_upper_camel_case(), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:140:2098"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:141"]}}},"a:2:2681:220-0:148:1696":{"id":"a:2:2681:220-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:33:1616":{"id":"0:33:1616","crate_id":0,"name":"0","span":{"filename":"src/lower_camel.rs","begin":[39,43],"end":[39,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:12130:27334":{"id":"2:12130:27334","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11776:12280","`DoubleEndedIterator`":"2:7304:121","prim@char":"1:11978:418","str::split":"2:12124:1707"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43574:5671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15:1616":{"id":"0:15:1616","crate_id":0,"name":"0","span":{"filename":"src/kebab.rs","begin":[38,38],"end":[38,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:61:1686":{"id":"0:61:1686","crate_id":0,"name":"ToShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty snake case conversion.\n\nIn SHOUTY_SNAKE_CASE, word boundaries are indicated by underscores and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(sentence.to_shouty_snake_case(), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:62:1961"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:68"]}}},"0:157-0:12:1678":{"id":"0:157-0:12:1678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,16],"end":[53,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"kebab::AsKebabCase","name":"AsKebabCase","id":"0:12:1678","glob":false}}},"0:183-0:148:1696":{"id":"0:183-0:148:1696","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,22],"end":[63,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"upper_camel::AsUpperCamelCase","name":"AsPascalCase","id":"0:148:1696","glob":false}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[36,0],"end":[40,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToUpperCamelCase","id":"0:139:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToPascalCase","id":"0:143:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"T"},"items":["0:147:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2738:2341-0:48:1682":{"id":"a:2:2738:2341-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12127:27332":{"id":"2:12127:27332","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11599:5670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12100:1733":{"id":"2:12100:1733","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11978:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43532:6044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:671":{"id":"0:132:671","crate_id":0,"name":"fmt","span":{"filename":"src/train.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12086:27301":{"id":"2:12086:27301","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11995:1509"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12098:27324":{"id":"2:12098:27324","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12097:27323"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8:1679":{"id":"0:8:1679","crate_id":0,"name":"ToKebabCase","span":{"filename":"src/kebab.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a kebab case conversion.\n\nIn kebab-case, word boundaries are indicated by hyphens.\n\n## Example:\n\n```rust\nuse heck::ToKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_kebab_case(), \"we-are-going-to-inherit-the-earth\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:9:1871"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:10"]}}},"2:12099:1744":{"id":"2:12099:1744","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11978:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43526:6043","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5689-0:126:1694":{"id":"b:5:5689-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2543:697":{"id":"2:2543:697","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/train.rs","begin":[23,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTrainCase","id":"0:122:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:125:2068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:84:1987":{"id":"0:84:1987","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to snake case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8313:7012-0:48:1682":{"id":"a:2:8313:7012-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:73:1616":{"id":"0:73:1616","crate_id":0,"name":"0","span":{"filename":"src/shouty_snake.rs","begin":[53,44],"end":[53,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:176-0:109:1692":{"id":"0:176-0:109:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,16],"end":[60,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"title::AsTitleCase","name":"AsTitleCase","id":"0:109:1692","glob":false}}},"2:12093:27300":{"id":"2:12093:27300","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12113:27342":{"id":"2:12113:27342","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3317-0:12:1678":{"id":"b:2:3317-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[41,0],"end":[58,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:36:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[31,0],"end":[35,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToShoutySnakeCase","id":"0:61:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnekCase","id":"0:63:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"T"},"items":["0:67:1966"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3317-0:109:1692":{"id":"b:2:3317-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3317-0:126:1694":{"id":"b:2:3317-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173-0:83:1690":{"id":"0:173-0:83:1690","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,56],"end":[59,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"snake::ToSnakeCase","name":"ToSnakeCase","id":"0:83:1690","glob":false}}},"0:179-0:126:1694":{"id":"0:179-0:126:1694","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,16],"end":[61,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"train::AsTrainCase","name":"AsTrainCase","id":"0:126:1694","glob":false}}},"0:122:1695":{"id":"0:122:1695","crate_id":0,"name":"ToTrainCase","span":{"filename":"src/train.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a train case conversion.\n\nIn Train-Case, word boundaries are indicated by hyphens and words start\nwith Capital Letters.\n\n## Example:\n\n```rust\nuse heck::ToTrainCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_train_case(), \"We-Are-Going-To-Inherit-The-Earth\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:123:2068"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:124"]}}},"2:12075:816":{"id":"2:12075:816","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11978:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12139:27336":{"id":"2:12139:27336","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280","str::rsplitn":"2:12142:27338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43660:6052","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8313:7012-0:30:1680":{"id":"a:2:8313:7012-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2738:2341-0:109:1692":{"id":"a:2:2738:2341-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:164-0:44:1683":{"id":"0:164-0:44:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,42],"end":[55,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"shouty_kebab::ToShoutyKebabCase","name":"ToShoutyKebabCase","id":"0:44:1683","glob":false}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[41,0],"end":[45,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:115:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2537-0:148:1696":{"id":"b:2:2537-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2552-0:109:1692":{"id":"b:2:2552-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12102:30644":{"id":"2:12102:30644","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12103:30633"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43830:6062","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:12:1678":{"id":"b:2:2250-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2250-0:70:1684":{"id":"b:2:2250-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5446:26463":{"id":"5:5446:26463","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12197:26466"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2249:2217":{"id":"2:2249:2217","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1961":{"id":"0:69:1961","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[38,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2537-0:30:1680":{"id":"b:2:2537-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:76:671":{"id":"0:76:671","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_snake.rs","begin":[56,4],"end":[58,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2101":{"id":"0:144:2101","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[33,4],"end":[33,44]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12101:5640":{"id":"2:12101:5640","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43542:3072","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8313:7012-0:92:1688":{"id":"a:2:8313:7012-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:160-0:30:1680":{"id":"0:160-0:30:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,22],"end":[54,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"lower_camel::AsLowerCamelCase","name":"AsLowerCamelCase","id":"0:30:1680","glob":false}}},"2:12103:30633":{"id":"2:12103:30633","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12102:30644"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43839:6063","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5428:34225":{"id":"5:5428:34225","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2347","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7016:5610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2347","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7016:5610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2101":{"id":"0:147:2101","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[37,4],"end":[39,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12104:23497":{"id":"2:12104:23497","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43810:6060","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12180:27343":{"id":"2:12180:27343","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12165:33564":{"id":"2:12165:33564","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:1688":{"id":"0:92:1688","crate_id":0,"name":"AsSnakeCase","span":{"filename":"src/snake.rs","begin":[51,0],"end":[51,45]},"visibility":"public","docs":"This wrapper performs a snake case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(format!(\"{}\", AsSnakeCase(sentence)), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:95:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:92:1688","a:2:2698:228-0:92:1688","a:2:8313:7012-0:92:1688","a:2:2738:2341-0:92:1688","a:2:2681:220-0:92:1688","b:2:2541-0:92:1688","b:2:2250-0:92:1688","b:2:2537-0:92:1688","b:2:3317-0:92:1688","b:2:2247-0:92:1688","b:2:2552-0:92:1688","b:2:2547-0:92:1688","b:5:5689-0:92:1688","0:96"]}}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[41,0],"end":[45,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:54:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12080:33551":{"id":"2:12080:33551","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12078:33550"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:70:1684":{"id":"b:2:2547-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8314:7011-0:12:1678":{"id":"a:2:8314:7011-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12199:33574":{"id":"2:12199:33574","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4536:33574"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43855:5937","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12095:33553":{"id":"2:12095:33553","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11984:1406","str::slice_mut_unchecked":"2:12096:33554","crate::ops::Index":"2:2978:6803"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12202:33575":{"id":"2:12202:33575","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4534:33575"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43873:5936","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5435:1750":{"id":"5:5435:1750","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7283:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2552-0:48:1682":{"id":"b:2:2552-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8313:7012-0:109:1692":{"id":"a:2:8313:7012-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12077:33549":{"id":"2:12077:33549","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:48:1682":{"id":"b:2:2250-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2247-0:109:1692":{"id":"b:2:2247-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12136:33557":{"id":"2:12136:33557","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11776:12280","str::split":"2:12124:1707","prim@char":"1:11978:418","str::split_terminator":"2:12133:33556"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43624:6050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12192:33573":{"id":"2:12192:33573","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11737:127","`FromStr`":"2:11736:7023"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41731:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11736:7023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11736:7023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12201:6753":{"id":"2:12201:6753","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4537:6753"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43864:5928","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[22,0],"end":[26,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToKebabCase","id":"0:8:1679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:11:1871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3317-0:30:1680":{"id":"b:2:3317-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:91:1987":{"id":"0:91:1987","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[36,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1966":{"id":"0:64:1966","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[28,4],"end":[28,49]},"visibility":"default","docs":"CONVERT THIS TYPE TO SNEK CASE.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2541-0:109:1692":{"id":"b:2:2541-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2552-0:70:1684":{"id":"b:2:2552-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169-0:63:1687":{"id":"0:169-0:63:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,81],"end":[57,97]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"shouty_snake::ToShoutySnekCase","name":"ToShoutySnekCase","id":"0:63:1687","glob":false}}},"2:12171:33568":{"id":"2:12171:33568","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11801:12276","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2698:228-0:148:1696":{"id":"a:2:2698:228-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2552-0:148:1696":{"id":"b:2:2552-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2681:220-0:30:1680":{"id":"a:2:2681:220-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2698:228-0:70:1684":{"id":"a:2:2698:228-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:126:1694":{"id":"0:126:1694","crate_id":0,"name":"AsTrainCase","span":{"filename":"src/train.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a train case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTrainCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsTrainCase(sentence)), \"We-Are-Going-To-Inherit-The-Earth\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:129:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:126:1694","a:2:2698:228-0:126:1694","a:2:8313:7012-0:126:1694","a:2:2738:2341-0:126:1694","a:2:2681:220-0:126:1694","b:2:2541-0:126:1694","b:2:2250-0:126:1694","b:2:2537-0:126:1694","b:2:3317-0:126:1694","b:2:2247-0:126:1694","b:2:2552-0:126:1694","b:2:2547-0:126:1694","b:5:5689-0:126:1694","0:130"]}}},"0:12:1678":{"id":"0:12:1678","crate_id":0,"name":"AsKebabCase","span":{"filename":"src/kebab.rs","begin":[38,0],"end":[38,45]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsKebabCase(sentence)), \"we-are-going-to-inherit-the-earth\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:15:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:12:1678","a:2:2698:228-0:12:1678","a:2:8313:7012-0:12:1678","a:2:2738:2341-0:12:1678","a:2:2681:220-0:12:1678","b:2:2541-0:12:1678","b:2:2250-0:12:1678","b:2:2537-0:12:1678","b:2:3317-0:12:1678","b:2:2247-0:12:1678","b:2:2552-0:12:1678","b:2:2547-0:12:1678","b:5:5689-0:12:1678","0:16"]}}},"0:18:671":{"id":"0:18:671","crate_id":0,"name":"fmt","span":{"filename":"src/kebab.rs","begin":[41,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[23,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutyKebabCase","id":"0:44:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:47:1940"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2552-0:126:1694":{"id":"b:2:2552-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12195:27237":{"id":"2:12195:27237","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39626:27246","Self::is_ascii":"2:12194:26461"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39626:27246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3317-0:148:1696":{"id":"b:2:3317-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[54,0],"end":[58,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:154:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:27:1918":{"id":"0:27:1918","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to lower camel case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:151:1616":{"id":"0:151:1616","crate_id":0,"name":"0","span":{"filename":"src/upper_camel.rs","begin":[52,43],"end":[52,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:44:1683":{"id":"0:44:1683","crate_id":0,"name":"ToShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty kebab case conversion.\n\nIn SHOUTY-KEBAB-CASE, word boundaries are indicated by hyphens and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_shouty_kebab_case(), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:45:1940"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:46"]}}},"a:2:2738:2341-0:92:1688":{"id":"a:2:2738:2341-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[53,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:98:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12091:27299":{"id":"2:12091:27299","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9877:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1681":{"id":"0:26:1681","crate_id":0,"name":"ToLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a lower camel case conversion.\n\nIn lowerCamelCase, word boundaries are indicated by capital letters,\nexcepting the first word.\n\n## Example:\n\n```rust\nuse heck::ToLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(sentence.to_lower_camel_case(), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:27:1918"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:28"]}}},"2:2540:2390":{"id":"2:2540:2390","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2514:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12157:33561":{"id":"2:12157:33561","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11776:12280","`DoubleEndedIterator`":"2:7304:121","prim@char":"1:11978:418","str::rmatch_indices":"2:12160:33562"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43706:6055","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3319:1500":{"id":"2:3319:1500","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39418:5799","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12124:1707":{"id":"2:12124:1707","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11776:12280","`DoubleEndedIterator`":"2:7304:121","prim@char":"1:11978:418","str::split_whitespace":"2:12102:30644","str::rsplit":"2:12130:27334"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43556:5667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2681:220-0:109:1692":{"id":"a:2:2681:220-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:123:2068":{"id":"0:123:2068","crate_id":0,"name":"to_train_case","span":{"filename":"src/train.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to Train-Case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8313:7012-0:148:1696":{"id":"a:2:8313:7012-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2738:2341-0:148:1696":{"id":"a:2:2738:2341-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12198:26467":{"id":"2:12198:26467","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12116:2436":{"id":"2:12116:2436","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41589:179","prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:671":{"id":"0:115:671","crate_id":0,"name":"fmt","span":{"filename":"src/title.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1696":{"id":"0:148:1696","crate_id":0,"name":"AsUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[52,0],"end":[52,50]},"visibility":"public","docs":"This wrapper performs a upper camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(format!(\"{}\", AsUpperCamelCase(sentence)), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:151:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:148:1696","a:2:2698:228-0:148:1696","a:2:8313:7012-0:148:1696","a:2:2738:2341-0:148:1696","a:2:2681:220-0:148:1696","b:2:2541-0:148:1696","b:2:2250-0:148:1696","b:2:2537-0:148:1696","b:2:3317-0:148:1696","b:2:2247-0:148:1696","b:2:2552-0:148:1696","b:2:2547-0:148:1696","b:5:5689-0:148:1696","0:152"]}}},"2:12096:33554":{"id":"2:12096:33554","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11984:1406","crate::ops::IndexMut":"2:2982:6804","str::slice_unchecked":"2:12095:33553"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:33555":{"id":"2:12105:33555","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43820:6061","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5444:34227":{"id":"5:5444:34227","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2347","`String`":"5:7283:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2347","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7016:5610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8314:7011-0:126:1694":{"id":"a:2:8314:7011-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2247-0:70:1684":{"id":"b:2:2247-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2551:1487":{"id":"2:2551:1487","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41731:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/train.rs","begin":[41,0],"end":[45,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:132:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5691:1464":{"id":"5:5691:1464","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2250-0:109:1692":{"id":"b:2:2250-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86:1991":{"id":"0:86:1991","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[26,4],"end":[26,42]},"visibility":"default","docs":"Convert this type to snek case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:154:671":{"id":"0:154:671","crate_id":0,"name":"fmt","span":{"filename":"src/upper_camel.rs","begin":[55,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12145:33558":{"id":"2:12145:33558","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163-0:48:1682":{"id":"0:163-0:48:1682","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,23],"end":[55,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"shouty_kebab::AsShoutyKebabCase","name":"AsShoutyKebabCase","id":"0:48:1682","glob":false}}},"2:12197:26466":{"id":"2:12197:26466","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:12:1678":{"id":"b:2:2547-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105:1693":{"id":"0:105:1693","crate_id":0,"name":"ToTitleCase","span":{"filename":"src/title.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a title case conversion.\n\nIn Title Case, word boundaries are indicated by spaces, and every word is\ncapitalized.\n\n## Example:\n\n```rust\nuse heck::ToTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(sentence.to_title_case(), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:106:2047"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:107"]}}},"0:36:671":{"id":"0:36:671","crate_id":0,"name":"fmt","span":{"filename":"src/lower_camel.rs","begin":[42,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8314:7011-0:109:1692":{"id":"a:2:8314:7011-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:1754":{"id":"0:0:1754","crate_id":0,"name":"heck","span":{"filename":"src/lib.rs","begin":[1,0],"end":[209,1]},"visibility":"public","docs":"**heck** is a case conversion library.\n\nThis library exists to provide case conversion between common cases like\nCamelCase and snake_case. It is intended to be unicode aware, internally\nconsistent, and reasonably well performing.\n\n## Definition of a word boundary\n\nWord boundaries are defined as the \"unicode words\" defined in the\n`unicode_segmentation` library, as well as within those words in this\nmanner:\n\n1. All underscore characters are considered word boundaries.\n2. If an uppercase character is followed by lowercase letters, a word\nboundary is considered to be just prior to that uppercase character.\n3. If multiple uppercase characters are consecutive, they are considered to\nbe within a single word, except that the last will be part of the next word\nif it is followed by lowercase characters (see rule 2).\n\nThat is, \"HelloWorld\" is segmented `Hello|World` whereas \"XMLHttpRequest\" is\nsegmented `XML|Http|Request`.\n\nCharacters not within words (such as spaces, punctuations, and underscores)\nare not included in the output string except as they are a part of the case\nbeing converted to. Multiple adjacent word boundaries (such as a series of\nunderscores) are folded into one. (\"hello__world\" in snake case is therefore\n\"hello_world\", not the exact same string). Leading or trailing word boundary\nindicators are dropped, except insofar as CamelCase capitalizes the first\nword.\n\n### Cases contained in this library:\n\n1. UpperCamelCase\n2. lowerCamelCase\n3. snake_case\n4. kebab-case\n5. SHOUTY_SNAKE_CASE\n6. Title Case\n7. SHOUTY-KEBAB-CASE\n8. Train-Case","links":{},"attrs":["#![deny(missing_docs)]","#![forbid(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:157-0:12:1678","0:158-0:8:1679","0:160-0:30:1680","0:161-0:26:1681","0:163-0:48:1682","0:164-0:44:1683","0:166-0:70:1684","0:167-0:70:1684","0:168-0:61:1686","0:169-0:63:1687","0:171-0:92:1688","0:172-0:92:1688","0:173-0:83:1690","0:174-0:85:1691","0:176-0:109:1692","0:177-0:105:1693","0:179-0:126:1694","0:180-0:122:1695","0:182-0:148:1696","0:183-0:148:1696","0:184-0:143:1698","0:185-0:139:1699"],"is_stripped":false}}},"2:12163:33563":{"id":"2:12163:33563","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180-0:122:1695":{"id":"0:180-0:122:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,29],"end":[61,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"train::ToTrainCase","name":"ToTrainCase","id":"0:122:1695","glob":false}}},"5:5432:34226":{"id":"5:5432:34226","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7283:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2681:220-0:12:1678":{"id":"a:2:2681:220-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2537-0:12:1678":{"id":"b:2:2537-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:29:1918":{"id":"0:29:1918","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2541-0:148:1696":{"id":"b:2:2541-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2698:228-0:30:1680":{"id":"a:2:2698:228-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:51:1616":{"id":"0:51:1616","crate_id":0,"name":"0","span":{"filename":"src/shouty_kebab.rs","begin":[39,44],"end":[39,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"b:2:2541-0:48:1682":{"id":"b:2:2541-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12110:27341":{"id":"2:12110:27341","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12160:33562":{"id":"2:12160:33562","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11776:12280","`DoubleEndedIterator`":"2:7304:121","prim@char":"1:11978:418","str::match_indices":"2:12157:33561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43724:6056","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2738:2341-0:126:1694":{"id":"a:2:2738:2341-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12174:33569":{"id":"2:12174:33569","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168-0:61:1686":{"id":"0:168-0:61:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,62],"end":[57,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"shouty_snake::ToShoutySnakeCase","name":"ToShoutySnakeCase","id":"0:61:1686","glob":false}}},"0:143:1698":{"id":"0:143:1698","crate_id":0,"name":"ToPascalCase","span":{"filename":"src/upper_camel.rs","begin":[31,0],"end":[34,1]},"visibility":"public","docs":"ToPascalCase is an alias for ToUpperCamelCase. See ToUpperCamelCase for more\ndocumentation.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:144:2101"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:145"]}}},"b:2:2247-0:30:1680":{"id":"b:2:2247-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:1690":{"id":"0:83:1690","crate_id":0,"name":"ToSnakeCase","span":{"filename":"src/snake.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a snake case conversion.\n\nIn snake_case, word boundaries are indicated by underscores.\n\n## Example:\n\n```rust\nuse heck::ToSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(sentence.to_snake_case(), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:84:1987"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:90"]}}},"b:2:3317-0:92:1688":{"id":"b:2:3317-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12186:33571":{"id":"2:12186:33571","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:109:1692":{"id":"b:2:2547-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2552-0:30:1680":{"id":"b:2:2552-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2247-0:92:1688":{"id":"b:2:2247-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2698:228-0:12:1678":{"id":"a:2:2698:228-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2541-0:70:1684":{"id":"b:2:2541-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12177:23855":{"id":"2:12177:23855","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11978:418","self::pattern":"2:11776:12280"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41587:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2541-0:92:1688":{"id":"b:2:2541-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2250-0:30:1680":{"id":"b:2:2250-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2252:23488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2738:2341-0:70:1684":{"id":"a:2:2738:2341-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12078:33550":{"id":"2:12078:33550","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1616":{"id":"0:112:1616","crate_id":0,"name":"0","span":{"filename":"src/title.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:54:671":{"id":"0:54:671","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_kebab.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:1684":{"id":"0:70:1684","crate_id":0,"name":"AsShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[53,0],"end":[53,51]},"visibility":"public","docs":"This wrapper performs a shouty snake  case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(format!(\"{}\", AsShoutySnakeCase(sentence)), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:73:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:70:1684","a:2:2698:228-0:70:1684","a:2:8313:7012-0:70:1684","a:2:2738:2341-0:70:1684","a:2:2681:220-0:70:1684","b:2:2541-0:70:1684","b:2:2250-0:70:1684","b:2:2537-0:70:1684","b:2:3317-0:70:1684","b:2:2247-0:70:1684","b:2:2552-0:70:1684","b:2:2547-0:70:1684","b:5:5689-0:70:1684","0:74"]}}},"0:158-0:8:1679":{"id":"0:158-0:8:1679","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,29],"end":[53,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"kebab::ToKebabCase","name":"ToKebabCase","id":"0:8:1679","glob":false}}},"0:140:2098":{"id":"0:140:2098","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2698:228-0:109:1692":{"id":"a:2:2698:228-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2541-0:126:1694":{"id":"b:2:2541-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12142:27338":{"id":"2:12142:27338","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11978:418","str::splitn":"2:12139:27336","self::pattern":"2:11776:12280"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43678:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2556:1486":{"id":"2:2556:1486","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41731:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:1940":{"id":"0:45:1940","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty kebab case.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2698:228-0:126:1694":{"id":"a:2:2698:228-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[37,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnakeCase","id":"0:61:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:69:1961"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184-0:143:1698":{"id":"0:184-0:143:1698","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,56],"end":[63,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"upper_camel::ToPascalCase","name":"ToPascalCase","id":"0:143:1698","glob":false}}},"0:129:1616":{"id":"0:129:1616","crate_id":0,"name":"0","span":{"filename":"src/train.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"a:2:8313:7012-0:126:1694":{"id":"a:2:8313:7012-0:126:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTrainCase","id":"0:126:1694","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12085:314":{"id":"2:12085:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12086:27301","`u8`":"1:11995:1509"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12151:2231":{"id":"2:12151:2231","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11776:12280","`DoubleEndedIterator`":"2:7304:121","prim@char":"1:11978:418","str::matches":"2:12151:2231"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43760:6058","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:1691":{"id":"0:85:1691","crate_id":0,"name":"ToSnekCase","span":{"filename":"src/snake.rs","begin":[24,0],"end":[27,1]},"visibility":"public","docs":"Oh heck, SnekCase is an alias for ToSnakeCase. See ToSnakeCase for\nmore documentation.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:86:1991"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:87"]}}},"a:2:8314:7011-0:48:1682":{"id":"a:2:8314:7011-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8314:7011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[40,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:18:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[29,0],"end":[33,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToSnakeCase","id":"0:83:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnekCase","id":"0:85:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"T"},"items":["0:89:1991"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8313:7012-0:12:1678":{"id":"a:2:8313:7012-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8313:7012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5689-0:148:1696":{"id":"b:5:5689-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2552-0:12:1678":{"id":"b:2:2552-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2555:128","2:2556:1486"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5443:1752":{"id":"5:5443:1752","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7283:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12083:24361":{"id":"2:12083:24361","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11343:12281"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2247-0:148:1696":{"id":"b:2:2247-0:148:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsUpperCamelCase","id":"0:148:1696","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3317-0:70:1684":{"id":"b:2:3317-0:70:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3315:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutySnakeCase","id":"0:70:1684","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3319:1500"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12170:33567":{"id":"2:12170:33567","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[23,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTitleCase","id":"0:105:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:108:2047"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2252:23488":{"id":"2:2252:23488","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:1692":{"id":"0:109:1692","crate_id":0,"name":"AsTitleCase","span":{"filename":"src/title.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a title case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(format!(\"{}\", AsTitleCase(sentence)), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{"`fmt::Display`":"2:9211:120"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:112:1616"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2505:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8314:7011-0:109:1692","a:2:2698:228-0:109:1692","a:2:8313:7012-0:109:1692","a:2:2738:2341-0:109:1692","a:2:2681:220-0:109:1692","b:2:2541-0:109:1692","b:2:2250-0:109:1692","b:2:2537-0:109:1692","b:2:3317-0:109:1692","b:2:2247-0:109:1692","b:2:2552-0:109:1692","b:2:2547-0:109:1692","b:5:5689-0:109:1692","0:113"]}}},"0:177-0:105:1693":{"id":"0:177-0:105:1693","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,29],"end":[60,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"title::ToTitleCase","name":"ToTitleCase","id":"0:105:1693","glob":false}}},"b:2:2537-0:109:1692":{"id":"b:2:2537-0:109:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsTitleCase","id":"0:109:1692","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2540:2390"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125:2068":{"id":"0:125:2068","crate_id":0,"name":"to_train_case","span":{"filename":"src/train.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"5:676:231","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171-0:92:1688":{"id":"0:171-0:92:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,16],"end":[59,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"snake::AsSnakeCase","name":"AsSnakeCase","id":"0:92:1688","glob":false}}},"b:2:2547-0:48:1682":{"id":"b:2:2547-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166-0:70:1684":{"id":"0:166-0:70:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,4],"end":[57,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnakeCase","id":"0:70:1684","glob":false}}},"b:2:2247-0:12:1678":{"id":"b:2:2247-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2249:2217"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2541-0:12:1678":{"id":"b:2:2541-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2543:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2698:228-0:48:1682":{"id":"a:2:2698:228-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:63:1687":{"id":"0:63:1687","crate_id":0,"name":"ToShoutySnekCase","span":{"filename":"src/shouty_snake.rs","begin":[25,0],"end":[29,1]},"visibility":"public","docs":"Oh heck, ToShoutySnekCase is an alias for ToShoutySnakeCase. See\nToShoutySnakeCase for more documentation.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:64:1966"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:65"]}}},"5:5427":{"id":"5:5427","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5428:34225","5:5429:12412","5:5432:34226","5:5435:1750","5:5443:1752","5:5444:34227","5:5445:6913","5:5446:26463","5:5447:26464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:98:671":{"id":"0:98:671","crate_id":0,"name":"fmt","span":{"filename":"src/snake.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9181:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9170:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5429:12412":{"id":"5:5429:12412","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7283:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7283:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2698:228-0:92:1688":{"id":"a:2:2698:228-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2698:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5689-0:12:1678":{"id":"b:5:5689-0:12:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsKebabCase","id":"0:12:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2738:2341-0:30:1680":{"id":"a:2:2738:2341-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12154:33560":{"id":"2:12154:33560","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11776:12280","`DoubleEndedIterator`":"2:7304:121","prim@char":"1:11978:418","str::matches":"2:12151:2231"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43778:6059","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11781:12277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11796:12278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2547-0:30:1680":{"id":"b:2:2547-0:30:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"AsLowerCamelCase","id":"0:30:1680","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2550:128","2:2551:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5689-0:48:1682":{"id":"b:5:5689-0:48:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9211:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2688:1967","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5687:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsShoutyKebabCase","id":"0:48:1682","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5691:1464"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185-0:139:1699":{"id":"0:185-0:139:1699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,70],"end":[63,86]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"upper_camel::ToUpperCamelCase","name":"ToUpperCamelCase","id":"0:139:1699","glob":false}}},"a:2:2681:220-0:92:1688":{"id":"a:2:2681:220-0:92:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2681:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"AsSnakeCase","id":"0:92:1688","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"2:47771:6213":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:39446:6673":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:10361:3102":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:45690:6120":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:10417:3108":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:46615:6168":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:11905:3284":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:11642:3230":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:11872:3278":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:13937:3785":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:3212:4516":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:2759:3973":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:3810:4011":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:46388:6149":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:46167:6142":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:10786:19360":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"18:707:2948":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:2929:2344":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:2693:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:40150:5940":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:43500:6039":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"18:590:2929":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:7655:6787":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:3042:18304":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:40086:5934":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:4603:12350":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:9274:3072":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"19:0:1036":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:5841:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:8296:6927":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:9010:23916":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:8974:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:5775:4059":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:8252:4378":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:13778:3743":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:12365:3391":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:2223:33353":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:13923:3778":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:44351:6106":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"7:79:18139":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:6649:2409":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:11329:6678":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:2162:12445":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:1077:6668":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:10868:12267":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"16:4928:4032":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:40512:5971":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:10529:3201":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:6317:19171":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"11:1068:18228":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:9665:34859":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:14102:3852":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:10194:12273":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:4868:4030":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6332:4127":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:10510:6906":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:7609:5608":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:47931:6222":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:5882:4075":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43372:12263":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:4812:6948":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:10544:19390":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:14236:3880":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:914:6773":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"11:2033:4239":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:43839:6063":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:40342:5949":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:39411:12434":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:13981:3796":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:8021:4359":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:3383:12316":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:13949:3788":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:8838:6319":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:40370:5954":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"11:2060:6782":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:1663:4796":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13548:3690":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:2771:12421":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:7843:3009":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:6273:2763":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:4004:2763":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:9939:19275":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:527:2830":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"9:507:4592":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"11:1818:4513":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:10199:3098":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:12671:3435":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:21987:5697":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11696:3236":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:39379:6765":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:4076:6772":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:1595:4743":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:6250:4121":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:11981:1054":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:4814:4028":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:3570:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:14329:3908":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:6673:23815":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:4564:4021":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:1755:5650":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:494:4622":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:526:4644":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:21964:30548":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:14359:3916":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:9223:2466":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:10621:19394":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:8186:5948":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:39418:5799":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:8144:6283":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:13683:3719":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:1059:6781":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:1591:4519":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:22077:5712":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"18:515:2921":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"14:160:6660":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:44472:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:30349:5724":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:8203:3072":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:6607:5444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:13179:3538":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:500:4624":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:7033:5632":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:749:2763":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:11927:6492":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:10430:3109":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:1696:4812":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:40901:2811":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:1558:4513":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:8854:7063":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:4729:5021":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:12017:3301":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:6886:3991":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:5615:2840":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:13830:3752":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:4854:5082":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"11:1831:2782":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:1603:4748":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:2781:3974":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:504:19236":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:4735:6952":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:45612:6117":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:11983:1376":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:22715:5718":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:4039:6941":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"11:2049:6781":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:9965:6004":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:7295:5583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:8086:4366":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:1045:4239":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"11:0:2120":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:6185:23850":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:47271:6207":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:9777:19266":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:6796:5536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:13016:3513":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:1520:4696":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:13749:3735":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:43542:3072":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:22451:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:12421:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:12592:3425":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:35:2736":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:3867:4012":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:1631:4773":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:3166:12331":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"11:285:4507":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:2243:5623":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"9:52:18164":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4716:5017":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13882:3769":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13757:3738":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:14015:3803":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:8277:6290":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:6841:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:3441:4007":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:5816:2842":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42184:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"11:1517:18231":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:43444:12269":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:4704:5010":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:44303:6101":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:7250:5570":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:6554:4153":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:6232:19170":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"11:1852:4518":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:21928:5690":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:1273:6782":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:13492:3684":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:40124:5937":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:14026:3807":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8531:6310":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"5:5065:2777":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:3299:6906":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:6372:3982":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:7272:5571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:8798:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:43706:6055":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:2809:12425":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13971:3793":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:44588:6113":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:1557:4719":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:1075:19278":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"18:644:2918":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:3154:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:21102:6876":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:7519:3060":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:43606:6049":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:2505:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:4762:388":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:10229:5671":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:9590:2813":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:39269:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:6711:5480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:7041:2843":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10266:19300":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:2353:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:43435:5677":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:6214:19169":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:11109:3178":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:45546:6114":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:7511:5586":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:10080:19318":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:13771:3741":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:5738:7049":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:10935:23917":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:2378:6863":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:4906:6994":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:2314:3948":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:3580:4008":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:40351:5951":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:5737:5203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:42651:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:3238:4519":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"11:332:2730":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:11669:3231":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4496:4949":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:4524:4965":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:42104:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:43362:5675":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:21234:7111":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:1841:2595":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:10883:3159":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:1973:19307":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:44490:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:42360:2468":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:2692:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:11103:6318":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:4535:4970":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:44275:6094":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:7255:6013":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:4035:6940":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:3894:4013":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"9:237:6028":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:2517:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11991:745":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:9017:23886":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:22418:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:10097:19306":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:276:2347":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:2760:4252":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:7523:5588":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:3179:30941":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:41655:6772":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"5:1288:6781":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:2514:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"18:727:2955":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:3737:6792":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:3160:12332":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:42353:2459":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:41774:4513":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:20607:2384":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:2853:12432":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:1928:656":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:43678:6053":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13167:3531":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:49867:7118":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"11:1103:18229":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:3139:12433":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:21912:5686":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:7855:19185":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:1543:2769":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"5:4848:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:5567:3984":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:7016:5610":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:1921:6838":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:5551:5374":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:2970:34332":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:8152:4001":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:1782:6810":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:11979:3297":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:7564:5597":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:2857:3977":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:6471:2740":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:5651:3985":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:40176:5944":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:6744:5496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"7:0:1553":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:11888:3282":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:8196:5975":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:4754:5034":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4489:4946":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:10716:6997":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:9213:2459":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:2703:2368":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:11234:3193":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:554:4659":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:7259:5641":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:12446:12366":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:5639:4046":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"9:393:18147":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"11:1027:18227":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"10:44:4530":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:22103:6932":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:2926:18302":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:10835:12266":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4328:4858":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:434:3016":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:10161:19303":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:8997:19223":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11832:3267":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:6589:5437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:43864:5928":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:3220:6908":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13870:3763":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4685:4998":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:43409:5676":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:6658:4177":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:11488:6046":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:1580:4517":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:10156:12265":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:2213:2799":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"11:403:34760":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:1442:2401":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:3377:5984":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:7289:4276":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:20667:30934":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11241:19431":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:7732:6238":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:2468:6876":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:4848:5079":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:2765:4249":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:4955:5141":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:11564:6057":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:45991:6137":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:9518:19250":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:6537:7055":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:39439:30910":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:5015:5168":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:6632:2793":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:42851:6024":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:6067:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:46411:6150":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:2777:4253":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8282:6967":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:5342:4039":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:11398:2871":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:6303:3980":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:5236:2740":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:11045:3162":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:2035:5613":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:44008:6077":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:1068:6782":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:12614:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:5284:12253":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:12566:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:7558:5596":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:10923:7033":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:2844:12430":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:2750:7095":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:44134:12293":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:9706:19253":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:9688:2822":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:6427:4139":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:21952:5694":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:4315:4848":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:10330:19326":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:2141:5615":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:2600:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:2511:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:5372:7028":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:4616:6938":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:1011:2740":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:46043:6139":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:40360:5952":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:5587:5659":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:9926:19276":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:2962:18303":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:3744:4009":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:2825:3976":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:12457:3407":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:4126:26041":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:11736:7023":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"11:805:6777":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:46091:6140":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:4420:4917":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"11:836:6779":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:1818:6819":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:4781:5051":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:46213:6144":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:9434:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:11467:3219":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12891:3484":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:10957:19426":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:7283:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"11:1538:18232":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:44279:6095":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"15:327:18260":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:5051:5190":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:4809:799":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:2919:2342":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:46727:6170":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:42024:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:40389:5957":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:9656:2816":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:9211:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:11815:3264":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:4008:30916":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11852:3277":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:8932:7062":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:8916:7060":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:1426:6772":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"18:96:23255":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:9952:3053":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:43422:12257":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:11976:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"5:4350:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:12089:3315":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:43574:5671":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:4628:5466":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:9090:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:551:6739":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:1102:33278":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:5979:5343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:908:2782":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:11542:3222":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:5994:19165":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:7908:23838":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:7515:4301":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:14301:3899":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:8420:12277":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:13155:3187":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:11276:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:12002:1134":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:9744:34854":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:46235:6145":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:3977:6936":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:10790:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:30343:5644":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:40223:5946":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:2589:3966":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:21124:5680":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:3453:6873":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:7382:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:4616:4991":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:2241:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:2347:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:11454:3217":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:3315:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:11421:6929":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:46915:6174":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:44155:6086":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:7848:6871":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:4156:6962":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:7883:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:7860:6242":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:5775:5230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:47999:6226":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:4380:6960":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12065:3313":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:7589:2860":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:9887:19282":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:629:6669":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:42064:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:4626:5464":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:42367:2469":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:2373:3957":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:11235:2869":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:5119:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"14:187:18243":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:9614:34851":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:8739:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:1629:587":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:1780:6809":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:2982:6804":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:30437:30531":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:2689:3970":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:14417:3926":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"14:40:3264":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:7505:3995":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:7853:6241":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13140:3528":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:40029:5928":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:4428:2771":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:4413:4913":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"11:365:2732":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:3645:2401":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:5861:2777":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:7759:23898":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:2637:3968":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:5959:4085":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11074:3167":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:30118:6931":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"18:599:34868":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:11988:643":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:4446:4927":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:9318:3075":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:22583:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:9182:26550":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"5:3722:5613":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:5044:5187":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"18:574:2918":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:21549:5682":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:798:6776":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5920:5310":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:9048:3065":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:4:1019":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:2360:5649":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:11462:6928":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:43106:6035":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:48061:6228":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:9083:3067":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:41799:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:2611:3967":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:41647:4513":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:5025:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:41573:6009":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:4142:5655":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:10074:5667":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"18:652:2918":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:6834:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:0:2125":{"crate_id":17,"path":["object"],"kind":"module"},"16:5704:4051":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:9100:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"18:609:34876":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:7012:4230":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:541:4653":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:653:13187":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:46645:6169":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:43343:5673":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:10444:3110":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"18:614:34866":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:11520:3167":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:47725:6212":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:47969:6224":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:11801:12276":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:4664:4995":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:10845:3157":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:2960:12234":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:43940:12292":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:9192:6335":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"6:5058:5193":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:11999:1505":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"6:1506:4691":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:4323:2803":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13513:3689":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:4895:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:2150:588":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:8868:6320":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:6671:5472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:40131:12356":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:8792:7035":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:14044:3810":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:13620:3705":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:582:3060":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:5687:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:4536:4020":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:40652:5975":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"11:2168:4520":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:5381:2769":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:20665:30939":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"11:1858:4519":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:13557:3694":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:47523:6209":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:43873:5936":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:4463:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:0:1398":{"crate_id":1,"path":["std"],"kind":"module"},"17:13862:3762":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:7362:19179":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:7575:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"18:719:2952":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:8165:6875":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:898:2763":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:41587:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:6789:2798":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10486:3114":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:9170:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"5:7183:6771":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:3927:6934":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:21058:7101":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:39293:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:12372:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:6319:2740":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:6667:4178":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:47065:6175":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:8734:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"18:736:23265":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"18:481:2916":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"15:0:2123":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:4456:4930":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11371:3213":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:2508:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:5818:5248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:6809:7099":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13991:3799":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:9336:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:11428:3216":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:44307:6102":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:7275:2346":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:11056:19429":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:30365:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:4291:4831":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"10:0:2119":{"crate_id":10,"path":["adler"],"kind":"module"},"18:690:2945":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:9442:34855":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:40870:5980":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:22091:5713":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:6142:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:7570:2858":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:2133:19302":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:11220:19430":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:7525:3996":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:587:4677":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:6057:18275":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:11189:3187":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:1709:4816":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:45760:6123":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:7916:6686":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11329:19257":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43660:6052":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6160:4119":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:2567:3965":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"12:0:2121":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:635:6756":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:40398:5958":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:3395:19361":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:2978:6803":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:7696:32885":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:21457:7116":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:1733:4825":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:5737:19163":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13448:3653":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:5829:5256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:8105:4369":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:41723:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"18:624:34867":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:21025:7106":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:40482:5968":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13303:3540":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:22004:30549":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:46851:6172":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:4800:5059":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:42224:7048":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"18:671:23268":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:40035:5929":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:2332:3950":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12936:3493":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:1302:6668":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:7331:34830":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:41705:6675":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:10812:3154":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:41436:5993":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"5:4761:671":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:8322:6996":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:7568:34779":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:7739:3987":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:12412:3397":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:22025:30557":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:43977:6074":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:8824:6318":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:22550:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:7379:2786":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:5807:4065":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:7739:6827":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:5843:4072":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:6153:2848":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"11:657:2401":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:11354:3030":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:9399:19248":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:7599:5606":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:2399:3958":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:47663:6211":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:10597:19392":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:21236:5680":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:42888:6028":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:4695:5005":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:6239:34817":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:6618:5449":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:45945:6130":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:13368:3591":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:358:6751":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:1184:19283":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:12618:3428":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:10568:19356":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"9:177:18213":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:14197:3871":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:8270:6289":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:22484:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:1681:4803":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:5028:4035":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:40886:5982":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:4441:4017":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:10313:19349":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:41396:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:5877:12749":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:10581:19372":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:3635:2968":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:11994:743":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"18:531:2923":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:2443:3960":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:39191:12235":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"18:507:2918":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:43334:5672":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:8138:19187":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13707:3721":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11300:6358":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:2362:6858":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:2789:12423":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:1843:6825":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:6692:19174":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:6638:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:1690:4809":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:2900:3979":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:47984:6225":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:40207:30547":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:5008:5165":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"13:0:2115":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6789:4205":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:2908:6789":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:10267:12270":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:0:821":{"crate_id":6,"path":["libc"],"kind":"module"},"17:14282:3894":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:11343:12281":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:5757:2763":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:2592:6685":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:43110:6036":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:9604:3093":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:41561:6008":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:7061:4238":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"9:0:2118":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:40143:5939":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:8288:6959":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12424:3399":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:10339:19325":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:885:4515":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:11985:1490":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:3184:30300":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:5877:5281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:5554:7034":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11979:1525":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:4650:4994":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:568:4667":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:43091:6034":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:40270:2805":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:8969:23874":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:4606:4990":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:6028:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:43352:12264":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:47809:6214":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:8381:7006":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"11:817:6778":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12118:3326":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:6022:5359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:5080:5199":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:2918:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"5:1776:2782":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"11:723:4514":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"11:1845:4517":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:10314:24359":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:44120:6081":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:3932:2769":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:55:4350":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"17:11924:3289":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:9821:3083":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:4733:6951":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:6347:19172":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:1527:4699":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:4543:4975":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:10280:19348":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:6688:5473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:13894:3770":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:42906:6033":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:2746:2374":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"9:486:18145":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:6764:2794":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:3834:6930":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46021:6138":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:32137:5789":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:4164:6963":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:7727:6237":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:10025:4513":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:6622:2792":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:30543:30546":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:2883:2837":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:43991:6076":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:4395:4901":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:4810:5063":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:8810:6317":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:7652:6742":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13957:3791":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:45658:6119":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:2689:2367":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:11992:746":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10297:7032":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:11144:3182":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:6044:5367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:43464:12268":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:9716:34842":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4862:5087":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:632:6755":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:30941:2384":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"5:4034:2740":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:10507:6910":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:11776:12280":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:11551:23868":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"16:4323:4015":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:11315:6491":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:8109:6872":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:11098:3174":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:21203:6876":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:10049:6772":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:10390:3106":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:573:4669":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:41714:12499":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:6598:5443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:2403:2133":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:39432:4293":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:10520:3119":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:40320:6801":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:46805:6171":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:5967:5336":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:9866:19270":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7494:4300":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:4984:5158":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:410:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:40892:5984":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:10051:19273":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:47905:6220":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:8899:19245":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:933:6777":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:42626:4337":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:6738:12402":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:11160:6352":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:6820:5546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:9181:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:30309:5723":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"0:0:1754":{"crate_id":0,"path":["heck"],"kind":"module"},"1:640:6757":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:39238:5793":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:895:4513":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:7678:2864":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:7313:34791":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:2895:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:8313:7012":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:39335:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:4341:4868":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11272:19255":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:0:496":{"crate_id":2,"path":["core"],"kind":"module"},"16:6516:4151":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:4724:4025":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:3667:6925":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:530:3938":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"11:736:4515":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10863:3093":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:9469:12368":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"13:226:4505":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:2217:6855":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:6421:5981":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:532:4647":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:7297:5642":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:40072:5933":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:5608:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:3178:4517":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12952:3494":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:43556:5667":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:41731:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"18:582:2384":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:2556:2834":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"11:695:6775":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:6915:34780":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:2465:3961":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:6720:5484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:4304:4840":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:1892:6682":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:8222:6927":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:3777:4010":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:4908:5114":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:46357:6148":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:854:6772":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:1982:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:13697:3720":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:8326:5453":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:11943:3290":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:21227:6876":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:11548:6054":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:6461:2852":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:40522:5972":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:41944:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11955:3293":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:7363:2782":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:8980:6737":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:6900:4214":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:40116:5928":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:11264:3197":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:12659:3434":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:14037:3808":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:872:4514":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:4965:4033":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:5720:4053":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:42898:6032":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10066:19296":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:43283:30904":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:11483:6930":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"15:394:18266":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:42596:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:40195:5945":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:9409:34843":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:9217:2468":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:3933:6933":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:10945:19425":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:9655:19252":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:44283:6096":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:8304:6291":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:7652:6784":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"11:97:4506":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:7474:3994":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:595:4682":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:11539:6363":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:2741:2372":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:21452:7108":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:4476:4018":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:7065:33186":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:4428:4919":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:10981:19404":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:5994:5345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:5793:5243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:47874:6217":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:45898:6129":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:7546:5594":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:7529:5589":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:9032:3064":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:4228:6965":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:45861:6127":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:14150:3853":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:41984:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:1636:5646":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:8887:6321":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:44525:6481":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:2962:5620":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:9474:2862":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:5280:12252":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:2376:6862":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:4917:5120":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:7463:4296":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:4387:6674":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:3517:6894":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"11:760:2782":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"5:3217:33213":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:11949:6761":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:1562:2401":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:4506:4019":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:4818:5067":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:5771:7051":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:10735:6339":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:5553:3981":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:10609:19393":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:7407:4089":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:14350:3914":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:3220:4005":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:3187:30292":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:676:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"11:399:34759":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:923:6775":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:3963:6935":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:41672:6013":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:45880:6128":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:6384:23815":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:5530:2780":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:352:6750":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:43624:6050":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12605:3426":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:9966:3093":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:2797:12424":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:2785:7098":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"5:3596:6772":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12174:3343":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:1257:4239":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:8902:32887":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:7199:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:20803:7107":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:7994:23730":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:7045:2763":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:4469:4935":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:40044:5930":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:7586:5602":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:12905:3487":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:7753:4310":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:4436:4921":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:3492:2465":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:39453:5800":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1500:4688":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:12394:31594":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:6425:7052":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:10910:6681":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:2469:12362":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:2170:5617":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:4949:5140":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:47920:6221":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:6868:5564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:12161:3342":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:21104:7103":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:40280:6853":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:10671:19395":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:11847:12286":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:9899:3086":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:43778:6059":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:4466:6968":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:12669:6783":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:4568:4988":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:4841:4029":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:42642:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:12318:3379":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:11967:3294":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:3222:6909":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:2663:3969":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:21843:5684":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:45821:6125":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:10013:3090":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:1732:12455":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"14:31:6660":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:3025:4002":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:11992:3299":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:5987:5344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2735:2370":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:8558:6314":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:9528:34861":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:3171:4513":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:10511:3118":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:3996:30913":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:2521:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:9206:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11388:19258":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:9215:2458":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:1746:5647":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:6977:19177":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:841:4513":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:7095:5633":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:14177:3865":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"11:1826:2763":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:7272:2778":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:261:2740":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:44295:6099":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10654:3122":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:5978:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:6438:4140":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"11:311:4510":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13732:3730":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:11313:12513":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:43532:6044":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:13456:3654":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:6775:5522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:5626:19161":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:6171:5413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:11327:6360":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:0:2124":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:8137:2957":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:47865:6216":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:7445:19180":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:12359:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:5067:4036":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:9806:19267":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:3301:6907":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:6785:30924":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13673:3718":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:4973:5152":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10303:3008":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:41538:6289":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:41638:1706":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:6531:2726":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:7721:6760":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:43383:6037":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:10293:19319":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:46569:6167":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:11565:6364":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:2793:12422":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:4166:2769":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:8166:4371":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:2160:12444":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"16:6571:19173":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:12921:3489":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:12002:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:39626:27246":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:1118:33236":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4723:5018":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:7484:4299":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:40237:6840":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"17:8872:19244":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:5414:4040":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:43810:6060":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:10953:6319":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:9561:19251":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:864:2401":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:10799:19359":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:41482:6000":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"5:7308:6670":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:1586:4518":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:2966:34330":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"11:793:6773":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:3344:6899":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:12757:3463":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:4333:6673":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:6625:5453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:7327:2345":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:9272:2595":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:8924:19246":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:2497:3962":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:11960:24285":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:3194:12232":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:10308:6052":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:10550:2864":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:40096:5935":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:6894:2855":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:12354:3388":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"8:0:2117":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:9426:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:40412:5961":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:12539:3417":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:4506:4956":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:13574:3696":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13566:3695":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12053:3310":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4770:5043":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:11989:645":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"9:450:18146":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:1638:4777":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:547:4656":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:8472:6305":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:1765:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:2691:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:12526:3414":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:9188:3070":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:40919:5987":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:9044:23878":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:8907:31302":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"15:306:18256":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:5042:23832":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:3181:26789":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:14395:3920":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:13719:3724":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:7755:6681":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:10253:19301":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:4955:7002":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:12346:3386":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13787:3744":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:6713:4190":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:11127:3220":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:13604:3702":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:2519:3963":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:39313:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:3186:19358":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:11155:3183":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:12826:3477":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:2738:2341":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:8900:7061":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:9469:6871":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"11:844:6780":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:6357:4132":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:6018:19166":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:14403:3923":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12691:3438":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"14:202:12294":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:8449:6028":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:41502:30545":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:1495:4686":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4626:4992":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:10445:2863":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:4938:5135":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:2263:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:12333:3384":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:2920:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:4396:4016":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:728:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:7463:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:1514:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:4368:4891":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:9105:6329":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:40877:5981":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:4560:6986":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:12254:3350":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:9571:34858":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:5074:5196":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11995:1509":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:11179:6329":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:2755:7097":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:14380:3919":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:46259:6146":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:3149:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:4630:5468":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:10038:19274":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11034:19428":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:9095:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:1649:4785":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:4177:6964":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5890:5287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:11790:2948":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:7087:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:8489:7022":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:6939:19176":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11978:418":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:4789:2838":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:11525:6051":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:8216:6060":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:20839:7109":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:7632:6876":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:4731:6949":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:39253:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:14205:3872":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:1666:1092":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:6805:5539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:10810:26181":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:1820:5653":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:44291:6098":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:6036:5364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:9877:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:40680:5977":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:10458:3111":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:4900:4031":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:10377:3104":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"18:699:2946":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12435:3400":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:5689:4048":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:43855:5937":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:12035:3309":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:6590:7057":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:12077:3314":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:8233:6923":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:22041:30561":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"18:538:2926":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:9223:3071":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:7693:3989":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:4740:5028":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:22616:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:20895:7114":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:21110:7105":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:11290:19256":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:40380:5955":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"5:3671:2740":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:149:2723":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:3435:6287":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:6470:4000":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:6815:4206":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:9221:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"3:234:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"11:2201:5634":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:1979:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:47601:6210":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:10249:19312":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:2570:2817":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:8314:7011":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:21979:5696":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:10226:7037":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:3058:2964":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:1673:4802":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:8315:7010":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8004:6904":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:4691:6995":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:23162:5719":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:10123:3086":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"11:2194:4525":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:8210:4293":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:43526:6043":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:6289:4124":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:10350:12271":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:1492:6774":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:1503:6775":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:2316:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:10906:3160":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"11:1121:6668":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:2715:3971":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:10780:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:9359:30905":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:482:4616":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:6648:5471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:8711:19239":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"18:564:2928":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:4764:5040":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:12579:3423":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:40056:30537":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:950:6779":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:11036:2868":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13043:3515":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:21673:7104":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11252:6353":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:2541:3964":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:48022:6227":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:20851:31639":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:4389:4899":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:474:4611":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:7278:5573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:6197:19168":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:44363:12553":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:9474:5666":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:4929:5129":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:506:4627":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:30913:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:11118:3179":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:7707:4308":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:1574:4516":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:44188:6092":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:7633:6235":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:8542:19224":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"18:681:2942":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:44145:6082":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:43820:6061":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:4475:4938":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:822:2746":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:7433:4295":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:6502:4149":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:4483:4943":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:1911:14178":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"15:288:18255":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:42669:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:477:2829":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:44083:6080":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:12003:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:20620:30645":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:21:684":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:42859:6026":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9875:19288":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:4698:4024":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:261:34860":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:7246:5638":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:8209:5667":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:1545:4710":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"9:357:18161":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:7530:6692":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:4434:12339":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:5673:19162":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:4261:6672":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:11091:6317":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:41824:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:4620:4023":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:5962:2840":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:2923:2343":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:12106:3323":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:4833:5071":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:6128:4114":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"11:2174:4521":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:3371:12312":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:8043:4360":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:4996:4034":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:40430:5963":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:6603:2780":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:42876:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:42867:6027":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:9016:3063":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:7648:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:6540:3988":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:6130:5387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:11084:3169":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"5:1672:2740":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:4897:6993":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:6348:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:2388:6868":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:4256:6671":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:20648:30936":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:2352:3956":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:3991:6938":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:42144:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:5805:5247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:12001:1563":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:2208:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:10175:3093":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:13109:3522":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:12148:3338":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"14:7:6660":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:919:6774":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:4111:12341":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:11998:1508":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:2960:34333":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:6720:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:1464:4514":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:45742:6122":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:4748:5032":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:4236:4513":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:9462:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:11753:3248":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"18:0:2126":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6484:4141":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:3183:33197":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"11:1012:6782":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:6323:4126":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:7553:4302":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:10471:3112":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:4184:5656":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:4678:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:12479:3408":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:14341:3910":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:40863:5979":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:7216:5635":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:3511:2763":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:12727:3444":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:11977:941":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:9734:19254":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11019:2866":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:7584:19181":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11164:3184":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:1138:33279":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:3583:4513":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:11568:19259":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:9977:19252":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:32224:2375":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:40441:5964":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:2802:4254":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:7870:6243":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:5951:2769":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:7631:4306":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:20801:6876":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:12000:793":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:13096:3521":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:20853:12444":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:12792:3474":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:44575:4528":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:9124:6330":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:1915:5654":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:6986:4229":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:5491:7033":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:20986:12444":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:2874:3978":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:30379:30555":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:13964:3792":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:40498:2939":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:43760:6058":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:6008:5356":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:3985:6937":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:2049:6792":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4842:5077":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:11993:747":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:10969:19427":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:5799:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:4395:2769":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:6015:5358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:45720:6121":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"11:1501:18230":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:11258:7038":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:1702:4813":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2840:12429":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:11600:19260":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:5100:4037":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:4753:4026":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:7999:23871":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:11982:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:878:2748":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:6456:3983":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:12377:3393":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:7079:2401":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:207:2738":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:42586:6015":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"18:755:2961":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:6981:2957":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:9030:6325":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:22385:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:13914:3777":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"11:119:2728":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:8659:19238":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:4488:6969":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:3260:6910":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:20650:30938":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:5363:19160":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:2926:1715":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:22352:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:11416:3215":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:6137:2827":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:5073:23832":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13029:3514":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:40463:5966":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:8632:19237":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"18:80:23254":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:8153:6284":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:44056:6079":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:9225:2467":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:10758:6347":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:20972:7110":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:41790:2401":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:5612:4042":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:7128:26038":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:4407:2376":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:2164:19324":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:13803:3748":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:4638:4993":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:12133:3332":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:9913:19277":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:21561:30649":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:12994:3502":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:2737:3972":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:9485:34849":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:4944:5138":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:5406:7030":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:11333:6361":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:5849:5269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:47847:6215":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:40108:5936":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:14189:3868":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:10499:3115":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"5:6392:2401":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:7230:30547":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:11030:2867":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:6832:12394":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:7706:6759":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:1565:2763":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2848:12431":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:21042:6876":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"11:630:4513":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:41663:2401":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:4043:12231":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:43830:6062":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:11997:1507":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4992:5160":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:11199:3189":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:3111:6915":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:13999:3800":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:9850:19269":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:8794:19242":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12566:3422":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:1482:6773":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:10110:19305":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:7370:30092":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:44311:6103":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:7025:2401":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"18:521:23269":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"10:36:4529":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:6565:5420":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:6850:4210":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"11:1611:2734":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:12577:2827":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:7799:4318":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:40421:5962":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:7622:19183":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"11:986:6781":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:2681:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:6573:5425":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:8955:6324":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:5972:3941":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:4794:5056":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:673:6758":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:11791:3263":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:62:12775":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:10555:19391":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:4887:5099":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:7038:4236":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:4787:5054":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4824:5068":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:44330:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:8846:4513":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:11990:748":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:10504:6908":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"16:4032:4014":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:5529:5657":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:13659:3714":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:5793:4064":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:4783:33133":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:3510:6874":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:10148:19304":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7679:3999":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:10403:3107":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:47894:6219":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:41782:6772":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:13435:3646":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:2830:4259":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:4879:1006":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:2781:7096":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"14:215:4456":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:5299:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:9219:2469":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:7833:4322":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:12851:3480":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"14:165:18237":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:8740:19240":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:11726:3240":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:4518:4962":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:4963:5146":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:8771:19241":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:12864:3482":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:41453:6924":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:22517:5717":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"18:491:2917":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"18:766:23266":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:12646:3433":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"9:330:4569":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:20939:7115":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:10223:3100":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12552:3127":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:14163:3859":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:5767:5228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"18:636:2941":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:8265:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:14054:3815":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:6724:4191":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:3330:2782":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"5:3204:4518":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:1473:4515":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:14216:3877":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:3802:2782":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:8949:19247":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12878:3483":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12982:3500":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:44482:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:6156:5402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:5955:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:7924:5613":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:10336:12272":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:2311:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:2824:4258":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:2493:6902":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:12769:3465":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:8541:4513":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:4556:4979":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:4592:4022":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:13332:3560":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:14227:3878":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:40450:5965":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:3262:6911":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:1430:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:40157:12357":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:12303:3375":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:2461:5624":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:44546:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:9867:6876":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:3732:6928":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:11996:1506":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:14:1747":{"crate_id":2,"path":["core","write"],"kind":"macro"},"5:2131:2760":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:2698:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:7900:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:7517:5587":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:4944:2769":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"11:1048:34757":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:10088:24360":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:498:2760":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:9153:3069":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:10633:3120":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:42346:2458":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:11796:12278":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:12711:3439":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:4378:2804":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:40329:5948":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:14007:3802":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:4308:6966":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"11:968:4239":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:10745:6241":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:13083:3520":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:7592:19182":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"4:0:2116":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:6864:4212":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:5836:5260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:5382:3063":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:40300:5676":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:10351:3101":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:14259:3893":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:7657:6236":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:1717:4820":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:6175:19167":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:4025:6939":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:1536:4704":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:4694:6968":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:10770:6242":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:40190:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:956:6780":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:7116:2401":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:8399:6302":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:46137:6141":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:7540:5593":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:2836:12428":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:10322:6053":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:43724:6056":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"11:667:6774":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:22070:5709":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:47413:6208":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:119:12829":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:7025:4233":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:1569:2782":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:21790:5683":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:5745:7050":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:5900:5294":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:32097:4524":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:45843:6126":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:9673:2817":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:10138:6691":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:7665:3998":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"18:660:23267":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:11781:12277":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:8125:19186":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"11:1822:2401":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:6240:2840":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:9990:3088":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:8987:23840":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:582:6752":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:11944:30084":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:11007:19402":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11623:3227":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:40473:5967":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:9143:6331":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:6726:5485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"11:644:6772":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:10994:19403":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:46491:6151":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3407:2769":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:1411:4513":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7099:6325":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:47885:6218":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:10117:5670":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:45566:6115":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:7124:2401":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:4380:4894":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:10914:4589":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:11178:3185":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:6396:4136":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:2421:3959":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:5863:5280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:8605:19222":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:6140:7192":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:782:2743":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:2632:6903":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:11250:3194":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:562:4664":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:6288:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"13:110:34766":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:6386:4135":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4587:4989":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:5301:4038":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:7020:2856":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:11599:5670":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:1575:4729":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:4020:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:579:4672":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:2690:5627":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:14315:3901":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:488:4619":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:5590:3986":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:10931:19416":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:7073:19178":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:5231:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:2743:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"16:5398:3064":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:12186:3346":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:4196:2769":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:25972:5720":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:12840:3479":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:4252:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:1513:4694":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:11761:2875":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:21671:6876":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:4785:4027":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:39152:12330":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:7229:12399":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:32133:23898":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:21208:7102":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:11142:6330":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:7659:12398":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:12502:3413":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:5622:2841":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:5469:2769":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:4047:6943":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4401:4904":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"14:221:4458":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:12394:3396":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:41904:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:2588:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:12815:3475":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:6136:5388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13591:3697":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:42691:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"5:7055:2752":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:7539:3997":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:47946:6223":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:9118:3068":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:44287:6097":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:45636:6118":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:11285:6357":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:44168:6090":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:6604:2853":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:3231:12233":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:40911:5985":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:11984:1406":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:22682:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:10323:19350":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:9065:6328":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:4872:5093":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"5:4365:2771":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:5940:19164":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:4374:4892":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:256:34850":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:7171:5634":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:2814:12426":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:615:6680":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:43514:6042":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:3519:19377":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:2803:3975":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:9171:2465":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:13847:3760":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:9022:23825":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:6978:6690":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:6534:6687":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:927:6776":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:3076:6805":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:7304:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:11498:3220":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:9160:23857":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:5916:4081":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:10740:6341":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:400:19235":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:20635:30645":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:11767:3249":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:10402:7035":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:3501:29948":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:11115:26179":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:8176:19188":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:43848:6064":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"11:2180:4522":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:5882:5282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:41864:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:13125:3524":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13639:3706":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:2293:18276":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:1590:4741":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:6763:4204":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:7552:5595":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:12631:3430":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:5422:7031":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:8228:6926":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:44533:6109":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13427:3643":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:45590:6116":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:39357:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:13854:3761":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:40666:5976":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:5386:7029":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:7763:19184":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:46310:6147":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:2819:12427":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:12004:3300":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:9475:19249":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:41419:5991":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"6:6077:5376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:10069:6819":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"6:1569:4727":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:41525:6007":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:4550:4977":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:9344:34838":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:7262:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:9840:19268":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:46881:6173":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:43454:5678":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:6061:2844":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:7240:34801":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"11:1838:4516":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:8547:6313":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:42614:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:21896:5685":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:4148:6961":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:10832:19357":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:1523:6791":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:944:6778":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:123:12830":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6705:5478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6931:19175":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:6872:3990":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:13795:3746":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:2959:1872":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13069:3517":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:22649:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:8068:4363":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:45791:6124":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:11123:6103":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"14:0:2122":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:11020:19401":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:2244:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:3729:6929":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:43962:6068":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:5988:5660":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:7505:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:2105:19337":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:11591:3187":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"7:32:18132":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:12966:3496":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:6850:5561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:10800:6284":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:44563:6112":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:8862:2401":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:13055:3516":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:113:23256":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11210:3190":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:9296:3074":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:3295:4006":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"3:0:442":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:46189:6143":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:5068:5194":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:2210:6854":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:44299:6100":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:5437:7032":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:7266:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"11:2186:34758":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:8841:19243":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:7225:12400":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:2688:1967":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:13905:3774":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:8348:6292":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:11558:6364":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"9:426:18148":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}