{"root":"0:0:1687","crate_version":"0.4.0","includes_private":false,"index":{"2:11416:2128":{"id":"2:11416:2128","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","str::matches":"2:11416:2128"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50227:3480","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:30:1615":{"id":"a:2:2676:224-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:91:1911":{"id":"0:91:1911","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[36,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:30:1615":{"id":"b:2:2238-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:2921-0:30:1615":{"id":"a:2:7735:2921-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:69:1885":{"id":"0:69:1885","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[38,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11349:60378":{"id":"2:11349:60378","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11361:60380":{"id":"2:11361:60380","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:2991:2695","str::slice_unchecked":"2:11360:60379","`str`":"1:12306:1351"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5372-0:48:1617":{"id":"b:5:5372-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:45:1864":{"id":"0:45:1864","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty kebab case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11343:60376":{"id":"2:11343:60376","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:12:1613":{"id":"b:2:3321-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:48:1617":{"id":"b:2:2528-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,81],"end":[55,97]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::ToShoutySnekCase","name":"ToShoutySnekCase","id":"0:63:1622","glob":false}},"2:11365:1666":{"id":"2:11365:1666","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49999:3469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5104:61033":{"id":"5:5104:61033","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2246","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2246","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,23],"end":[55,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnekCase","id":"0:70:1619","glob":false}},"a:2:7736:2920-0:92:1623":{"id":"a:2:7736:2920-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,56],"end":[60,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::ToPascalCase","name":"ToPascalCase","id":"0:126:1631","glob":false}},"b:5:5372-0:70:1619":{"id":"b:5:5372-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11372:56448":{"id":"2:11372:56448","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11407:56446":{"id":"2:11407:56446","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12300:407","str::splitn":"2:11404:56444","self::pattern":"2:11041:3190"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50145:2648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[52,22],"end":[52,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"lower_camel::AsLowerCamelCase","name":"AsLowerCamelCase","id":"0:30:1615","glob":false}},"a:2:2662:216-0:131:1629":{"id":"a:2:2662:216-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:224-0:12:1613":{"id":"a:2:2676:224-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:5372-0:109:1627":{"id":"b:5:5372-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2920-0:12:1613":{"id":"a:2:7736:2920-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:92:1623":{"id":"b:2:2523-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5121:2837":{"id":"5:5121:2837","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11395:56442":{"id":"2:11395:56442","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"2:11389:1640","prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:3190"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50041:2646","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[51,29],"end":[51,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kebab::ToKebabCase","name":"ToKebabCase","id":"0:8:1614","glob":false}},"b:2:2523-0:131:1629":{"id":"b:2:2523-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:156":{"id":"0:156","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,56],"end":[57,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::ToSnakeCase","name":"ToSnakeCase","id":"0:83:1625","glob":false}},"b:5:5372-0:131:1629":{"id":"b:5:5372-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2240-0:48:1617":{"id":"a:2:2726:2240-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11445:56449":{"id":"2:11445:56449","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2532:1425":{"id":"2:2532:1425","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11392:56440":{"id":"2:11392:56440","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10865:2652","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:48:1617":{"id":"b:2:2241-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2920-0:70:1619":{"id":"a:2:7736:2920-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8:1614":{"id":"0:8:1614","crate_id":0,"name":"ToKebabCase","span":{"filename":"src/kebab.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a kebab case conversion.\n\nIn kebab-case, word boundaries are indicated by hyphens.\n\n## Example:\n\n```rust\nuse heck::ToKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_kebab_case(), \"we-are-going-to-inherit-the-earth\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:9:1795"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:10"]}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[31,0],"end":[35,1]},"visibility":{"restricted":{"parent":"0:56:1609","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToShoutySnakeCase","id":"0:61:1621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnekCase","id":"0:63:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:67:1890"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2240-0:70:1619":{"id":"a:2:2726:2240-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11413:60385":{"id":"2:11413:60385","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63:1622":{"id":"0:63:1622","crate_id":0,"name":"ToShoutySnekCase","span":{"filename":"src/shouty_snake.rs","begin":[25,0],"end":[29,1]},"visibility":"public","docs":"Oh heck, ToShoutySnekCase is an alias for ToShoutySnakeCase. See\nToShoutySnakeCase for more documentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:64:1890"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:65"]}},"5:5122:53432":{"id":"5:5122:53432","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11461:53435"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11356:56408":{"id":"2:11356:56408","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[51,16],"end":[51,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kebab::AsKebabCase","name":"AsKebabCase","id":"0:12:1613","glob":false}},"b:2:2238-0:48:1617":{"id":"b:2:2238-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11385:2298":{"id":"2:11385:2298","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48057:175","self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[41,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:20:1607","path":"::lower_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:36:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:125:1993":{"id":"0:125:1993","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:12:1613":{"id":"b:2:2238-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:30:1615":{"id":"b:2:3321-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:70:1619":{"id":"b:2:2238-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130:1996":{"id":"0:130:1996","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[37,4],"end":[39,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:105:1628":{"id":"0:105:1628","crate_id":0,"name":"ToTitleCase","span":{"filename":"src/title.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a title case conversion.\n\nIn Title Case, word boundaries are indicated by spaces, and every word is\ncapitalized.\n\n## Example:\n\n```rust\nuse heck::ToTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(sentence.to_title_case(), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:106:1971"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:107"]}},"b:2:3321-0:92:1623":{"id":"b:2:3321-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2240-0:109:1627":{"id":"a:2:2726:2240-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[40,0],"end":[44,1]},"visibility":{"restricted":{"parent":"0:3:1606","path":"::kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:18:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:216-0:92:1623":{"id":"a:2:2662:216-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:109:1627":{"id":"0:109:1627","crate_id":0,"name":"AsTitleCase","span":{"filename":"src/title.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a title case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(format!(\"{}\", AsTitleCase(sentence)), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:112:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:109:1627","a:2:2676:224-0:109:1627","a:2:2726:2240-0:109:1627","a:2:7735:2921-0:109:1627","a:2:2662:216-0:109:1627","b:2:2238-0:109:1627","b:2:2517-0:109:1627","b:2:2523-0:109:1627","b:2:2513-0:109:1627","b:2:3321-0:109:1627","b:2:2241-0:109:1627","b:2:2528-0:109:1627","b:5:5372-0:109:1627","0:113"]}},"a:2:7735:2921-0:92:1623":{"id":"a:2:7735:2921-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11360:60379":{"id":"2:11360:60379","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12306:1351","crate::ops::Index":"2:2987:2694","str::slice_mut_unchecked":"2:11361:60380"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11381:2338":{"id":"2:11381:2338","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407","`None`":"2:48057:175"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:92:1623":{"id":"b:2:2238-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:48:1617":{"id":"a:2:2676:224-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5103":{"id":"5:5103","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5014:1351","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5104:61033","5:5105:2816","5:5108:61034","5:5111:1683","5:5119:1685","5:5120:61035","5:5121:2837","5:5122:53432","5:5123:53433"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:30:1615":{"id":"b:2:2241-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:131:1629":{"id":"0:131:1629","crate_id":0,"name":"AsUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[52,0],"end":[52,50]},"visibility":"public","docs":"This wrapper performs a upper camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(format!(\"{}\", AsUpperCamelCase(sentence)), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:134:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:131:1629","a:2:2676:224-0:131:1629","a:2:2726:2240-0:131:1629","a:2:7735:2921-0:131:1629","a:2:2662:216-0:131:1629","b:2:2238-0:131:1629","b:2:2517-0:131:1629","b:2:2523-0:131:1629","b:2:2513-0:131:1629","b:2:3321-0:131:1629","b:2:2241-0:131:1629","b:2:2528-0:131:1629","b:5:5372-0:131:1629","0:135"]}},"0:51:1552":{"id":"0:51:1552","crate_id":0,"name":"0","span":{"filename":"src/shouty_kebab.rs","begin":[39,44],"end":[39,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11460:53434":{"id":"2:11460:53434","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2531:126":{"id":"2:2531:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39299:2709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11425:60388":{"id":"2:11425:60388","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:3190","str::match_indices":"2:11422:60387"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50191:3478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:109:1627":{"id":"b:2:2517-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:70:1619":{"id":"b:2:2523-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:73:1552":{"id":"0:73:1552","crate_id":0,"name":"0","span":{"filename":"src/shouty_snake.rs","begin":[53,44],"end":[53,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,69],"end":[57,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::ToSnekCase","name":"ToSnekCase","id":"0:85:1626","glob":false}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[58,29],"end":[58,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"title::ToTitleCase","name":"ToTitleCase","id":"0:105:1628","glob":false}},"b:2:3321-0:48:1617":{"id":"b:2:3321-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:29:1842":{"id":"0:29:1842","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11364:1677":{"id":"2:11364:1677","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49993:3468","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11348:56043":{"id":"2:11348:56043","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10609:3635"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:131:1629":{"id":"b:2:2528-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:12:1613":{"id":"0:12:1613","crate_id":0,"name":"AsKebabCase","span":{"filename":"src/kebab.rs","begin":[38,0],"end":[38,45]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsKebabCase(sentence)), \"we-are-going-to-inherit-the-earth\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:15:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:12:1613","a:2:2676:224-0:12:1613","a:2:2726:2240-0:12:1613","a:2:7735:2921-0:12:1613","a:2:2662:216-0:12:1613","b:2:2238-0:12:1613","b:2:2517-0:12:1613","b:2:2523-0:12:1613","b:2:2513-0:12:1613","b:2:3321-0:12:1613","b:2:2241-0:12:1613","b:2:2528-0:12:1613","b:5:5372-0:12:1613","0:16"]}},"2:2519:672":{"id":"2:2519:672","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:83:1625":{"id":"0:83:1625","crate_id":0,"name":"ToSnakeCase","span":{"filename":"src/snake.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a snake case conversion.\n\nIn snake_case, word boundaries are indicated by underscores.\n\n## Example:\n\n```rust\nuse heck::ToSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(sentence.to_snake_case(), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:84:1911"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:90"]}},"b:2:2517-0:12:1613":{"id":"b:2:2517-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:27:1842":{"id":"0:27:1842","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to lower camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3323:1439":{"id":"2:3323:1439","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46527:2730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11363:56432":{"id":"2:11363:56432","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:11362:56431"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48:1617":{"id":"0:48:1617","crate_id":0,"name":"AsShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[39,0],"end":[39,51]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsShoutyKebabCase(sentence)), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:51:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:48:1617","a:2:2676:224-0:48:1617","a:2:2726:2240-0:48:1617","a:2:7735:2921-0:48:1617","a:2:2662:216-0:48:1617","b:2:2238-0:48:1617","b:2:2517-0:48:1617","b:2:2523-0:48:1617","b:2:2513-0:48:1617","b:2:3321-0:48:1617","b:2:2241-0:48:1617","b:2:2528-0:48:1617","b:5:5372-0:48:1617","0:52"]}},"b:2:2528-0:12:1613":{"id":"b:2:2528-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[58,16],"end":[58,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"title::AsTitleCase","name":"AsTitleCase","id":"0:109:1627","glob":false}},"b:2:2241-0:131:1629":{"id":"b:2:2241-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,70],"end":[60,86]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::ToUpperCamelCase","name":"ToUpperCamelCase","id":"0:122:1632","glob":false}},"0:108:1971":{"id":"0:108:1971","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:67:1890":{"id":"0:67:1890","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[32,4],"end":[34,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11462:53436":{"id":"2:11462:53436","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11378:56067":{"id":"2:11378:56067","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:70:1619":{"id":"b:2:2513-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2920-0:109:1627":{"id":"a:2:7736:2920-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2528-0:30:1615":{"id":"b:2:2528-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:216-0:30:1615":{"id":"a:2:2662:216-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[37,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:56:1609","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnakeCase","id":"0:61:1621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:69:1885"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:224-0:109:1627":{"id":"a:2:2676:224-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2726:2240-0:30:1615":{"id":"a:2:2726:2240-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:2920-0:30:1615":{"id":"a:2:7736:2920-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11432:60391":{"id":"2:11432:60391","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:11:1795":{"id":"0:11:1795","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[23,4],"end":[25,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11434:60392":{"id":"2:11434:60392","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:126:1631":{"id":"0:126:1631","crate_id":0,"name":"ToPascalCase","span":{"filename":"src/upper_camel.rs","begin":[31,0],"end":[34,1]},"visibility":"public","docs":"ToPascalCase is an alias for ToUpperCamelCase. See ToUpperCamelCase for more\ndocumentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:127:1996"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:128"]}},"5:5120:61035":{"id":"5:5120:61035","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:2246","`String`":"5:6992:220"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2246","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:20:1607","path":"::lower_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToLowerCamelCase","id":"0:26:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:29:1842"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:70:1619":{"id":"b:2:2241-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:122:1632":{"id":"0:122:1632","crate_id":0,"name":"ToUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines an upper camel case conversion.\n\nIn UpperCamelCase, word boundaries are indicated by capital letters,\nincluding the first word.\n\n## Example:\n\n```rust\nuse heck::ToUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(sentence.to_upper_camel_case(), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:123:1993"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:124"]}},"b:2:2523-0:30:1615":{"id":"b:2:2523-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:134:1552":{"id":"0:134:1552","crate_id":0,"name":"0","span":{"filename":"src/upper_camel.rs","begin":[52,43],"end":[52,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:70:1619":{"id":"0:70:1619","crate_id":0,"name":"AsShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[53,0],"end":[53,51]},"visibility":"public","docs":"This wrapper performs a shouty snake  case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(format!(\"{}\", AsShoutySnakeCase(sentence)), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:73:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:70:1619","a:2:2676:224-0:70:1619","a:2:2726:2240-0:70:1619","a:2:7735:2921-0:70:1619","a:2:2662:216-0:70:1619","b:2:2238-0:70:1619","b:2:2517-0:70:1619","b:2:2523-0:70:1619","b:2:2513-0:70:1619","b:2:3321-0:70:1619","b:2:2241-0:70:1619","b:2:2528-0:70:1619","b:5:5372-0:70:1619","0:74"]}},"b:5:5372-0:30:1615":{"id":"b:5:5372-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123:1993":{"id":"0:123:1993","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2676:224-0:92:1623":{"id":"a:2:2676:224-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2662:216-0:70:1619":{"id":"a:2:2662:216-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11461:53435":{"id":"2:11461:53435","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,62],"end":[55,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::ToShoutySnakeCase","name":"ToShoutySnakeCase","id":"0:61:1621","glob":false}},"2:11410:60384":{"id":"2:11410:60384","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11454:60398":{"id":"2:11454:60398","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2240-0:12:1613":{"id":"a:2:2726:2240-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:109:1627":{"id":"b:2:2238-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11352:56406":{"id":"2:11352:56406","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48057:175"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:100:1611","path":"::title"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:115:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:154":{"id":"0:154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,16],"end":[57,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::AsSnakeCase","name":"AsSnakeCase","id":"0:92:1623","glob":false}},"2:11451:60397":{"id":"2:11451:60397","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:3190"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11439:60395":{"id":"2:11439:60395","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:3190"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:109:1627":{"id":"b:2:2523-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2526:126":{"id":"2:2526:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"5:5108:61034":{"id":"5:5108:61034","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:654":{"id":"0:115:654","crate_id":0,"name":"fmt","span":{"filename":"src/title.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11401:60383":{"id":"2:11401:60383","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:3190","str::split":"2:11389:1640","str::split_terminator":"2:11398:60382"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50091:3474","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:2921-0:12:1613":{"id":"a:2:7735:2921-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11370:60381":{"id":"2:11370:60381","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50287:3482","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:92:1623":{"id":"b:2:2513-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:2921-0:48:1617":{"id":"a:2:7735:2921-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11457:3301":{"id":"2:11457:3301","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11003:125","`FromStr`":"2:11002:2665"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11002:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11002:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:109:1627":{"id":"b:2:3321-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[29,0],"end":[33,1]},"visibility":{"restricted":{"parent":"0:78:1610","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToSnakeCase","id":"0:83:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnekCase","id":"0:85:1626","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:89:1915"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11350:308":{"id":"2:11350:308","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11351:56410","`u8`":"1:12317:1447"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:64:1890":{"id":"0:64:1890","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[28,4],"end":[28,49]},"visibility":"default","docs":"CONVERT THIS TYPE TO SNEK CASE.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2662:216-0:109:1627":{"id":"a:2:2662:216-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:62:1885":{"id":"0:62:1885","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty snake case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2517-0:48:1617":{"id":"b:2:2517-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:76:654":{"id":"0:76:654","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_snake.rs","begin":[56,4],"end":[58,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,4],"end":[55,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnakeCase","id":"0:70:1619","glob":false}},"0:84:1911":{"id":"0:84:1911","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to snake case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3321-0:131:1629":{"id":"b:2:3321-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:15:1552":{"id":"0:15:1552","crate_id":0,"name":"0","span":{"filename":"src/kebab.rs","begin":[38,38],"end":[38,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[52,40],"end":[52,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"lower_camel::ToLowerCamelCase","name":"ToLowerCamelCase","id":"0:26:1616","glob":false}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,42],"end":[53,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_kebab::ToShoutyKebabCase","name":"ToShoutyKebabCase","id":"0:44:1618","glob":false}},"0:0:1687":{"id":"0:0:1687","crate_id":0,"name":"heck","span":{"filename":"src/lib.rs","begin":[1,0],"end":[206,1]},"visibility":"public","docs":"**heck** is a case conversion library.\n\nThis library exists to provide case conversion between common cases like\nCamelCase and snake_case. It is intended to be unicode aware, internally,\nconsistent, and reasonably well performing.\n\n## Definition of a word boundary\n\nWord boundaries are defined as the \"unicode words\" defined in the\n`unicode_segmentation` library, as well as within those words in this\nmanner:\n\n1. All underscore characters are considered word boundaries.\n2. If an uppercase character is followed by lowercase letters, a word\nboundary is considered to be just prior to that uppercase character.\n3. If multiple uppercase characters are consecutive, they are considered to\nbe within a single word, except that the last will be part of the next word\nif it is followed by lowercase characters (see rule 2).\n\nThat is, \"HelloWorld\" is segmented `Hello|World` whereas \"XMLHttpRequest\" is\nsegmented `XML|Http|Request`.\n\nCharacters not within words (such as spaces, punctuations, and underscores)\nare not included in the output string except as they are a part of the case\nbeing converted to. Multiple adjacent word boundaries (such as a series of\nunderscores) are folded into one. (\"hello__world\" in snake case is therefore\n\"hello_world\", not the exact same string). Leading or trailing word boundary\nindicators are dropped, except insofar as CamelCase capitalizes the first\nword.\n\n### Cases contained in this library:\n\n1. UpperCamelCase\n2. lowerCamelCase\n3. snake_case\n4. kebab-case\n5. SHOUTY_SNAKE_CASE\n6. Title Case\n7. SHOUTY-KEBAB-CASE","links":{},"attrs":["#![deny(missing_docs)]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:140","0:141","0:143","0:144","0:146","0:147","0:149","0:150","0:151","0:152","0:154","0:155","0:156","0:157","0:159","0:160","0:162","0:163","0:164","0:165"],"is_stripped":false}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[36,0],"end":[40,1]},"visibility":{"restricted":{"parent":"0:117:1612","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToUpperCamelCase","id":"0:122:1632","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToPascalCase","id":"0:126:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:130:1996"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:2921-0:109:1627":{"id":"a:2:7735:2921-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2516:2292":{"id":"2:2516:2292","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11404:56444":{"id":"2:11404:56444","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:11041:3190","str::rsplitn":"2:11407:56446","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50127:2650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[55,0],"end":[59,1]},"visibility":{"restricted":{"parent":"0:56:1609","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:76:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:48:1617":{"id":"b:2:2523-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:86:1915":{"id":"0:86:1915","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[26,4],"end":[26,42]},"visibility":"default","docs":"Convert this type to snek case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2238-0:131:1629":{"id":"b:2:2238-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2113"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:109:1627":{"id":"b:2:2241-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:117:1612","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUpperCamelCase","id":"0:122:1632","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:125:1993"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5374:1405":{"id":"5:5374:1405","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11465:2527":{"id":"2:11465:2527","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:2527"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50331:2528","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36:654":{"id":"0:36:654","crate_id":0,"name":"fmt","span":{"filename":"src/lower_camel.rs","begin":[42,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89:1915":{"id":"0:89:1915","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:70:1619":{"id":"b:2:3321-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:92:1623":{"id":"b:2:2517-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:92:1623":{"id":"b:2:2241-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[54,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:117:1612","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:137:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2528-0:92:1623":{"id":"b:2:2528-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:131:1629":{"id":"a:2:2676:224-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7735:2921-0:131:1629":{"id":"a:2:7735:2921-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:127:1996":{"id":"0:127:1996","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[33,4],"end":[33,44]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2240:2113":{"id":"2:2240:2113","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5372-0:12:1613":{"id":"b:5:5372-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:106:1971":{"id":"0:106:1971","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to title case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,29],"end":[57,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::AsSnakeCase","name":"AsSnekCase","id":"0:92:1623","glob":false}},"b:2:2513-0:30:1615":{"id":"b:2:2513-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2920-0:48:1617":{"id":"a:2:7736:2920-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11448:60396":{"id":"2:11448:60396","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:3190"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:26:1616":{"id":"0:26:1616","crate_id":0,"name":"ToLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a lower camel case conversion.\n\nIn lowerCamelCase, word boundaries are indicated by capital letters,\nexcepting the first word.\n\n## Example:\n\n```rust\nuse heck::ToLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(sentence.to_lower_camel_case(), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:27:1842"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:28"]}},"2:11354:56407":{"id":"2:11354:56407","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48057:175"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:85:1626":{"id":"0:85:1626","crate_id":0,"name":"ToSnekCase","span":{"filename":"src/snake.rs","begin":[24,0],"end":[27,1]},"visibility":"public","docs":"Oh heck, SnekCase is an alias for ToSnakeCase. See ToSnakeCase for\nmore documentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:86:1915"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:87"]}},"0:95:1552":{"id":"0:95:1552","crate_id":0,"name":"0","span":{"filename":"src/snake.rs","begin":[51,38],"end":[51,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11368:58326":{"id":"2:11368:58326","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11367:58332"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50306:3484","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11463:60399":{"id":"2:11463:60399","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:60399"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50322:3486","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:48:1617":{"id":"a:2:2662:216-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11340:788":{"id":"2:11340:788","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:407"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11358:56409":{"id":"2:11358:56409","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:44:1618":{"id":"0:44:1618","crate_id":0,"name":"ToShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty kebab case conversion.\n\nIn SHOUTY-KEBAB-CASE, word boundaries are indicated by hyphens and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_shouty_kebab_case(), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:45:1864"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:46"]}},"a:2:2676:224-0:70:1619":{"id":"a:2:2676:224-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:109:1627":{"id":"b:2:2513-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11341:2299":{"id":"2:11341:2299","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:12:1613":{"id":"a:2:2662:216-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:137:654":{"id":"0:137:654","crate_id":0,"name":"fmt","span":{"filename":"src/upper_camel.rs","begin":[55,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11362:56431":{"id":"2:11362:56431","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:11363:56432"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[35,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:78:1610","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnakeCase","id":"0:83:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:91:1911"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:112:1552":{"id":"0:112:1552","crate_id":0,"name":"0","span":{"filename":"src/title.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11422:60387":{"id":"2:11422:60387","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:3190","prim@char":"1:12300:407","str::rmatch_indices":"2:11425:60388"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50173:3477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11435:60393":{"id":"2:11435:60393","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11466:60400":{"id":"2:11466:60400","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:60400"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50340:3487","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18:654":{"id":"0:18:654","crate_id":0,"name":"fmt","span":{"filename":"src/kebab.rs","begin":[41,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:12:1613":{"id":"b:2:2523-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:39:1608","path":"::shouty_kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:54:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:131:1629":{"id":"b:2:2517-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:109:1627":{"id":"b:2:2528-0:109:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5119:1685":{"id":"5:5119:1685","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:9:1795":{"id":"0:9:1795","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to kebab case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:100:1611","path":"::title"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTitleCase","id":"0:105:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:108:1971"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2240-0:131:1629":{"id":"a:2:2726:2240-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2528-0:70:1619":{"id":"b:2:2528-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:2921-0:70:1619":{"id":"a:2:7735:2921-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11339":{"id":"2:11339","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10604:1351","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11340:788","2:11341:2299","2:11342:60375","2:11343:60376","2:11345:60377","2:11348:56043","2:11349:60378","2:11350:308","2:11351:56410","2:11352:56406","2:11354:56407","2:11356:56408","2:11358:56409","2:11360:60379","2:11361:60380","2:11362:56431","2:11363:56432","2:11364:1677","2:11365:1666","2:11366:3722","2:11367:58332","2:11368:58326","2:11369:4045","2:11370:60381","2:11371:58336","2:11372:56448","2:11375:56065","2:11378:56067","2:11381:2338","2:11385:2298","2:11389:1640","2:11392:56440","2:11395:56442","2:11398:60382","2:11401:60383","2:11404:56444","2:11407:56446","2:11410:60384","2:11413:60385","2:11416:2128","2:11419:60386","2:11422:60387","2:11425:60388","2:11428:60389","2:11430:60390","2:11432:60391","2:11434:60392","2:11435:60393","2:11436:60394","2:11439:60395","2:11442:53880","2:11445:56449","2:11448:60396","2:11451:60397","2:11454:60398","2:11457:3301","2:11459:3677","2:11460:53434","2:11461:53435","2:11462:53436","2:11463:60399","2:11465:2527","2:11466:60400"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:131:1629":{"id":"b:2:2513-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:33:1552":{"id":"0:33:1552","crate_id":0,"name":"0","span":{"filename":"src/lower_camel.rs","begin":[39,43],"end":[39,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,4],"end":[60,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::AsUpperCamelCase","name":"AsUpperCamelCase","id":"0:131:1629","glob":false}},"0:92:1623":{"id":"0:92:1623","crate_id":0,"name":"AsSnakeCase","span":{"filename":"src/snake.rs","begin":[51,0],"end":[51,45]},"visibility":"public","docs":"This wrapper performs a snake case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(format!(\"{}\", AsSnakeCase(sentence)), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:95:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:92:1623","a:2:2676:224-0:92:1623","a:2:2726:2240-0:92:1623","a:2:7735:2921-0:92:1623","a:2:2662:216-0:92:1623","b:2:2238-0:92:1623","b:2:2517-0:92:1623","b:2:2523-0:92:1623","b:2:2513-0:92:1623","b:2:3321-0:92:1623","b:2:2241-0:92:1623","b:2:2528-0:92:1623","b:5:5372-0:92:1623","0:96"]}},"2:11369:4045":{"id":"2:11369:4045","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50277:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11419:60386":{"id":"2:11419:60386","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:11416:2128","self::pattern":"2:11041:3190","`DoubleEndedIterator`":"2:7079:119","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50245:3481","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:3193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,22],"end":[60,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::AsUpperCamelCase","name":"AsPascalCase","id":"0:131:1629","glob":false}},"5:5111:1683":{"id":"5:5111:1683","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:654":{"id":"0:98:654","crate_id":0,"name":"fmt","span":{"filename":"src/snake.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2243:53403":{"id":"2:2243:53403","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:39:1608","path":"::shouty_kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutyKebabCase","id":"0:44:1618","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:47:1864"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11342:60375":{"id":"2:11342:60375","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11367:58332":{"id":"2:11367:58332","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11368:58326"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50297:3483","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,23],"end":[53,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_kebab::AsShoutyKebabCase","name":"AsShoutyKebabCase","id":"0:48:1617","glob":false}},"2:11389:1640":{"id":"2:11389:1640","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:7079:119","str::split_whitespace":"2:11367:58332","self::pattern":"2:11041:3190","str::rsplit":"2:11395:56442","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50023:2637","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11428:60389":{"id":"2:11428:60389","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11345:60377":{"id":"2:11345:60377","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:11343:60376"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11351:56410":{"id":"2:11351:56410","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1447"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5123:53433":{"id":"5:5123:53433","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11462:53436"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:1615":{"id":"0:30:1615","crate_id":0,"name":"AsLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[39,0],"end":[39,50]},"visibility":"public","docs":"This wrapper performs a lower camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(format!(\"{}\", AsLowerCamelCase(sentence)), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{"`fmt::Display`":"2:8601:118"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:33:1552"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:2920-0:30:1615","a:2:2676:224-0:30:1615","a:2:2726:2240-0:30:1615","a:2:7735:2921-0:30:1615","a:2:2662:216-0:30:1615","b:2:2238-0:30:1615","b:2:2517-0:30:1615","b:2:2523-0:30:1615","b:2:2513-0:30:1615","b:2:3321-0:30:1615","b:2:2241-0:30:1615","b:2:2528-0:30:1615","b:5:5372-0:30:1615","0:34"]}},"b:2:2517-0:70:1619":{"id":"b:2:2517-0:70:1619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2240-0:92:1623":{"id":"a:2:2726:2240-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11398:60382":{"id":"2:11398:60382","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11041:3190","str::split":"2:11389:1640","`DoubleEndedIterator`":"2:7079:119","str::rsplit_terminator":"2:11401:60383","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50073:3473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5372-0:92:1623":{"id":"b:5:5372-0:92:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:12:1613":{"id":"b:2:2241-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:48:1617":{"id":"b:2:2513-0:48:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11436:60394":{"id":"2:11436:60394","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11066:3194","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5105:2816":{"id":"5:5105:2816","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:12:1613":{"id":"b:2:2513-0:12:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2920-0:131:1629":{"id":"a:2:7736:2920-0:131:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2920","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:131:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11430:60390":{"id":"2:11430:60390","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[53,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:78:1610","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1623","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:98:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11366:3722":{"id":"2:11366:3722","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50009:2813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11375:56065":{"id":"2:11375:56065","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11041:3190","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11371:58336":{"id":"2:11371:58336","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50315:3485","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[22,0],"end":[26,1]},"visibility":{"restricted":{"parent":"0:3:1606","path":"::kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToKebabCase","id":"0:8:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:11:1795"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11442:53880":{"id":"2:11442:53880","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:3190"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11459:3677":{"id":"2:11459:3677","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:54:654":{"id":"0:54:654","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_kebab.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:47:1864":{"id":"0:47:1864","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:677:227","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:30:1615":{"id":"b:2:2517-0:30:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:61:1621":{"id":"0:61:1621","crate_id":0,"name":"ToShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty snake case conversion.\n\nIn SHOUTY_SNAKE_CASE, word boundaries are indicated by underscores and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(sentence.to_shouty_snake_case(), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:62:1885"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:68"]}},"2:2527:1426":{"id":"2:2527:1426","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"2:49097:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:484:4780":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:7117:4074":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:2827:2550":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:4534:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:49368:2938":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:3269:2830":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:11436:5114":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:2049:3784":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:10532:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4191:6398":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:48267:179":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:5554:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:46976:3562":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:8904:2940":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:52371:3346":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"18:481:4632":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:6322:6901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:6709:2918":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:11099:2603":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:4921:5739":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:3429:4726":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:1595:6245":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:1672:1054":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:2490:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:21245:3303":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:247:61191":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:50988:3508":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:9501:4476":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:5472:4119":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:12550:5353":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:9536:2904":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:7093:4071":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:4104:4730":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:9805:4588":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:1738:6328":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:12017:2285":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"2:20423:2534":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:4191:203":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:49841:2635":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"12:822:2876":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:48115:2569":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:9691:4531":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"12:1534:4009":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:7005:2767":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:9489:2646":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"14:7:7669":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:8393:4500":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:44:3985":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:50774:3588":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:2727:4387":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:13506:5671":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:0:281":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:2739:2273":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:4673:6588":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"5:286:2246":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:1195:2880":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:10642:4574":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:2676:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11259:5080":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:4621:6564":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:5504:6700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:47295:2778":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:4768:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:48140:3566":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:8363:2839":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:628:2525":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:719:10342":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:539:6148":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:6302:6895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:12739:5456":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:4212:6408":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6619:4277":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:1722:6323":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"0:0:1687":{"crate_id":0,"path":["heck"],"kind":"module"},"6:5443:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:10921:5012":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:386:46804":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:20254:2534":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:6409:6931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:8162:4514":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:47570:7188":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:5749:6820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:661:3045":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:12306:1351":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:9831:4591":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:4086:3412":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:8752:2813":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:9223:46861":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:49155:2383":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:6329:6905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:9582:2648":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:46858:3487":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:7847:4290":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"15:214:4022":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:2903:206":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:9873:47016":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:6321:3703":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:48182:38795":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:4354:6480":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:4454:3159":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:13594:5689":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:2768:2677":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"5:6791:2303":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:8601:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:6516:2755":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:9239:2704":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:10495:2959":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:7929:4291":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:50583:3205":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:4438:654":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:9824:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:21168:7070":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:3160:3080":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:11267:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:11154:2710":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:12361:5300":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:7970:4226":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:960:2872":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:11271:5081":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:1608:6252":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:5861:6854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:11186:5066":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:21280:7081":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:8545:206":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:1864:11345":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"18:671:4622":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"15:175:4017":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"14:160:7669":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:1771:4468":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:56960:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:7737:2984":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:10973:5029":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:4611:6561":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:1511:6195":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:9283:2896":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:9526:4464":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:12303:1016":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:10322:3107":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:3956:3335":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:20303:2997":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"12:387:61174":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:4849:5737":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:20875:59539":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:9464:53858":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:49582:2625":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:9568:2650":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12836:5480":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:21272:7080":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8737:2733":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:5219:4922":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:4719:772":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:9430:53868":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:4425:3155":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:12320:1446":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:49981:2667":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:12103:5251":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:51918:7210":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"12:815:2875":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"12:659:2303":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:1852:2572":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:3338:159":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"9:977:3834":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:4144:5717":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:48801:2360":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:8819:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:9347:2900":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:6269:6872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:11623:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:7267:4281":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:9253:2705":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:6311:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:3271:2831":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:2631:4396":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:2833:2553":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:3157:3079":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13536:5679":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:10894:4510":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12307:5286":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:2980:2574":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:21363:7093":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:2383:3054":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:5684:6797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10520:4994":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:6146:4257":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:10830:3479":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:4367:6484":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:6293:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:11055:3192":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:6123:4211":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:5506:186":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:47112:2756":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:4312:2596":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:10865:2652":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:10581:2713":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:51001:157":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:7557:4216":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:11704:4780":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"5:5545:3736":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:47270:2776":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:7288:4283":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:49821:2636":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:8611:190":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"5:3106:2571":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:52569:7222":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:6953:7023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:5664:4131":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:9885:47017":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:48250:2641":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:5348:53827":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10385:4544":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:50306:3484":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:3362:2641":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:6161:4265":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12337:4568":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"9:19:3922":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:10205:4754":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"9:622:3874":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:47529:7185":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:11002:2665":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:20009:59536":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:9631:4461":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:10455:4603":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:586:6173":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10752:4446":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13231:5579":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:12271:10343":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10854:4528":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:4505:3102":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:2588:4757":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:2868:4150":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:47253:2775":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:10420:4602":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:6769:3761":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6252:4269":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"14:215:5979":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:12307:1429":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:10682:4572":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:6392:6926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:21975:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:10814:3476":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"18:515:4634":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:4017:3093":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"18:599:61212":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:8429:2813":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:11585:4778":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:6463:4273":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:12514:5322":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:2282:4084":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:3168:2752":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:12324:1090":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:0:484":{"crate_id":2,"path":["core"],"kind":"module"},"1:12315:721":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"12:751:2570":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:46554:58549":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:3599:5712":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:13374:5635":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:1552:2802":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:2869:2965":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"18:574:4823":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:6604:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:1580:6233":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:4041:4730":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"12:1840:2570":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:1105:2881":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:3632:5713":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6528:4275":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"9:956:3829":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:7086:3698":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:8494:4921":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:1311:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:1123:2883":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:11094:7372":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:8014:4091":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:12022:5241":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:12816:5472":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:6981:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:5433:4116":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:51794:3367":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:678:10338":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:5782:6828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:5460:4118":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:48634:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:51848:3388":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:8339:46808":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:10128:2640":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:781:3758":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:52179:3381":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:46362:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:8713:3094":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:4307:6454":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:8941:46810":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"18:707:3192":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:50009:2813":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:9596:2651":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:50597:3206":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:967:46877":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:49831:2634":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:8139:2826":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:3230:2834":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:7038:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:11639:5171":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:6877:4068":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"18:590:4825":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:12674:5446":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:6171:4258":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:8412:2579":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:411:161":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:2800:2692":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:1751:7063":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:54180:7280":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4527:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:9302:2897":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:534:4137":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:6375:6924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:20178:3237":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:11070:5048":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:52963:3358":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:52515:7220":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"12:1003:2881":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:8441:4569":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:2321:178":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4565:6536":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:20969:2534":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:12225:5277":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:48406:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:1574:6231":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:9118:61193":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4653:6578":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:8131:3072":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:10902:3012":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"18:564:4637":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:3010:4392":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:50793:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:13168:5563":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:5839:4141":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:50245:3481":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"12:2178:6030":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:6690:4220":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:5558:4126":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:10139:4478":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:57025:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3472:2828":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:217:3756":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:6563:3232":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:50738:3493":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"6:4294:6448":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:46883:2528":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:22008:3528":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:11445:2703":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:242:61196":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:8991:61200":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4592:6553":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:11307:2705":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:12298:365":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:11217:5075":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:5011:2660":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:6676:4219":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:39299:2709":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"18:614:61214":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:9350:4584":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:13126:5552":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:4297:5720":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:5878:4142":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:6430:2311":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:686:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:4200:6403":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12148:5258":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:5772:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:1386:2870":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:10445:54222":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:8106:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:5628:4130":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"5:1043:59800":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:2652:2827":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:5695:2699":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:4185:6396":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:9370:3128":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:2788:2686":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4247:6426":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:49891:2623":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:8442:2815":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:7939:10339":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:51979:3356":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:2445:2795":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:11112:7378":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:19994:59536":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:50403:3191":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:11368:5112":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:9458:4441":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:0:1343":{"crate_id":1,"path":["std"],"kind":"module"},"6:4816:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:5447:4117":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:4531:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:47168:7180":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11300:5092":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:11356:5109":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:13158:5560":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:3184:3272":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:1825:2967":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:13214:5572":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:12321:1443":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:47069:2622":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:12046:5244":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:53073:3347":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:6095:2303":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:9437:53865":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:1611:2570":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:6298:4239":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:10159:4977":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:6572:7017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11601:7384":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:9389:2987":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:8295:46807":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10075:46992":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:10997:5030":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:8774:4443":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:5949:4145":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6472:4015":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:9930:4943":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:9433:46875":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"12:777:3987":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:3194:2833":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:50754:3501":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:996:2878":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:677:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5835:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:9422:46876":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:5727:6813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:12638:5416":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:4585:3111":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:53883:3348":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:7042:148":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:6186:4213":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:1626:2573":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:10121:4509":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:4598:6556":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:4906:6918":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:2988:2572":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:6567:4231":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:3560:4726":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:131:39234":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2812:2545":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:12322:766":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:11289:53878":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"12:1044:3995":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:48520:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46606:3261":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1532:6203":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8422:2779":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:8596:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"9:586:3871":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"5:5822:15777":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"12:393:61171":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:6424:6937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:4102:6335":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:11264:7677":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:13176:5564":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"18:491:4822":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:4969:2732":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:48672:3572":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:48815:2370":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:6241:4268":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:4944:2615":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"12:98:3999":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10546:46816":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:4626:2802":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:5880:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:49085:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"18:0:2021":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:1943:3028":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:8222:2963":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:48330:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:9778:4533":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:2669:1891":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:54127:7277":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:9328:4582":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:51030:3000":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:2320:4085":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4706:6604":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"18:507:4823":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:10095:2639":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:12073:5246":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"10:0:2014":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:11774:5187":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:681:10340":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:5963:190":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"13:0:2010":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:52546:7221":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:1445:3780":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"12:444:140":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"12:353:4000":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:2726:2240":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"14:0:2017":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:9601:4467":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:20706:3243":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:2917:2817":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10857:2832":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:10721:5009":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:21334:58539":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:7637:4227":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"12:60:61170":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11893:5201":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:2578:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:12884:5487":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:5908:4740":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:6677:2922":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:9658:46918":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:949:4726":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13091:5541":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:50073:3473":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:53429:3391":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:11199:5067":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:50618:3208":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:12797:5471":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:11384:4776":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:12176:5264":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:4698:6599":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"9:188:3898":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:3486:2716":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:7860:55405":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"18:521:4631":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:2029:59873":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:4317:6461":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4126:6352":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"9:592:3873":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"5:5976:2570":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:2579:4435":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:49347:2538":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"4:0:2011":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:21645:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:5733:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1714:6319":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11617:5164":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:2444:2534":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:2578:2825":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:29584:3551":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:13071:5534":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:52885:3370":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:5699:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:5876:6865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:56590:3514":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:9401:4936":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:49331:2539":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:12087:5249":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13203:5571":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:51770:3375":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:12317:1447":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:2771:4389":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:990:2877":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11288:5089":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:3457:4844":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:1938:3043":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:8607:2369":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"18:113:53241":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:545:6151":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:46822:3255":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:4635:6569":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:2930:4151":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:8066:3003":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:8911:61203":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:9303:4476":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:29548:3407":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:9442:53860":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"9:709:2938":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:5178:2856":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:9061:4478":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:2969:3178":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"16:7396:4288":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:8650:3096":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:47121:2757":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:12300:407":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:2746:59791":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"18:690:4624":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:869:2569":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:52001:3360":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:10490:4990":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:1701:6316":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:12318:1444":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:47049:11867":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:7298:4284":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:6828:2303":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:4644:6572":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:12319:1445":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:1425:2874":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:4559:6534":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:6316:4759":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"12:1555:4010":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:5761:4136":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:7150:7679":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:8110:46800":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:2673:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:7372:4423":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:49803:2633":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:11247:5079":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:2894:4397":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:11763:2863":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:6043:3123":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:5582:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"12:1872:2575":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:49339:7198":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:21909:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:4316:2590":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:39339:2727":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:20297:2995":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:11054:5044":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:8137:46806":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"12:2198:6033":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"14:31:7669":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:8391:2811":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:20295:2534":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:49356:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:3370:2729":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:9331:2899":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:10426:11345":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:9277:2303":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:49923:2643":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:4246:2591":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:4662:5731":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:6986:7061":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"16:7319:4286":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:52056:7212":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:9382:4934":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:1632:2574":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"12:1085:3997":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:5780:4138":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:51704:7208":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:5494:4120":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:54219:7281":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:1211:2882":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:4357:5722":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:6316:4240":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:6070:4153":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:7737:5010":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:47130:2758":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4745:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"9:863:3831":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:4272:2393":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:7659:4210":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:1505:6192":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:8217:2962":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:52038:3345":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:1887:7683":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:21297:58529":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:3804:2641":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:8796:4452":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:12310:628":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:2662:216":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:11315:5098":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:7870:3010":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:7166:4076":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:51724:7209":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:8814:2928":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:3347:2840":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:49878:2622":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:600:6181":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:5703:4132":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:3541:2571":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:1091:2880":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:420:4154":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:51816:3355":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:5163:4152":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:13478:5662":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"7:32:44373":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:1021:4586":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:11606:5163":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:50742:3496":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:53681:3379":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"9:920:3830":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:20049:59580":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:9531:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:11373:4775":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:4262:2593":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:562:5010":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:11947:4026":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"13:220:6026":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:5436:2570":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:10497:47101":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:11688:7392":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:11607:2715":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:47200:2765":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"9:382:3826":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10350:4444":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:8962:2943":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:13184:5566":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:11174:5065":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:51018:3002":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:9021:46812":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:6956:3800":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13572:5683":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:7825:4289":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:4200:3414":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:51748:3387":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:3349:2569":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"12:1518:4008":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:9644:4460":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:10708:4567":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:487:46805":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:7786:4769":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:11144:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:887:2569":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:11657:59702":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:6441:53882":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"5:4986:4735":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:14:1680":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:12748:5457":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:54157:7279":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:4327:5721":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:12485:5302":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:57012:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"9:896:3833":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:12142:4781":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:5614:4129":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:49852:2624":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"12:697:2874":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:575:6168":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:979:2876":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:3232:2835":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:11514:7383":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:50315:3485":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:12349:5293":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7890:4228":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:545:3028":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:51900:3380":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"12:1029:2882":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:2399:3059":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:4441:5725":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:12299:911":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:46905:3486":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:6017:4262":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:12304:306":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:54023:7269":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:1826:11334":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"9:676:3920":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:9515:163":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:46836:3659":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:9138:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:58300:7288":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"16:3566:5711":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:6737:2621":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:10528:4564":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4804:6649":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"12:1836:2303":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:4239:6423":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:11761:59435":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:5981:4147":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:5741:6818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:3594:2746":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:52347:3364":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:6886:213":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"12:2069:2881":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:12322:5290":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:7429:2908":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:46300:3179":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:20447:2534":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:9293:4585":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:5480:6684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:9751:4532":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"12:300:4002":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:10609:3635":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:8418:4513":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4810:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"5:6463:4740":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:6270:4214":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:1737:3611":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:6345:4217":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:6359:4271":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"9:649:3875":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"5:6022:4726":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:7057:2994":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"18:681:4623":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:686:10341":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:11684:5176":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11164:55978":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:4449:6498":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:7748:7680":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:501:6123":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:52103:3389":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:2713:2271":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:3174:3268":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:7896:3012":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:4300:6451":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:11576:5160":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:5525:4124":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:1643:3404":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:12265:5282":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"12:632:2569":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:12934:5504":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:53009:3362":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:2657:4395":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:9334:2637":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"18:766:4630":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:7001:2768":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"18:727:4627":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:11533:2904":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:954:2571":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:11528:5150":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:47578:7190":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:8212:4566":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:11975:2620":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:3157:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:1562:6223":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:12134:5256":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"12:646:2641":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:598:2983":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:7051:2245":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:46945:3257":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"12:0:2016":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:11748:5184":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:1240:2883":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:6419:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:6782:3129":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:3402:5710":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:47150:2760":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:7309:4285":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:4152:6372":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:11046:3189":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:50297:3483":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:2612:2818":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:5541:4125":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"12:119:4003":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:9207:2701":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:13141:5556":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11485:5139":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:20241:3409":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:3086:2842":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"16:6719:4412":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:12312:722":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:49067:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:11708:5177":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:47211:2771":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:11828:5195":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:46378:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"12:725:2870":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:1358:2641":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:6170:4726":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:10360:4601":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"18:582:2278":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12033:5242":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:5317:53827":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:52201:3384":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:7945:2583":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:5472:6682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:8605:2359":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:13100:5542":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:8719:3115":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:9128:2534":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:2784:2671":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:13327:5617":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:13192:5567":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:9820:4589":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:7955:2884":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"16:8069:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10774:4444":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4605:6558":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6781:4232":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:8056:4089":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:4689:5732":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:7848:2534":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:52468:7219":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:48482:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"12:2053:2880":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:50440:3198":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4274:6438":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:20711:15583":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:2993:4393":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:1348:2569":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:53759:3363":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12198:5275":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:7956:4225":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:49967:3573":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:29542:2919":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:13134:5555":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"12:1120:3998":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:5596:4128":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"12:853:2878":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:8329:3454":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:50191:3478":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:3763:4726":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:13518:5673":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:1686:6307":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:20863:2996":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:7735:2921":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:48558:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:3404:2610":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:12964:5509":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:5633:2802":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:10949:5015":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:12311:629":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:21370:3608":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:10207:47087":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:8666:4926":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:29570:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:9155:46814":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12164:5262":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:12301:1463":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:1811:596":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:11061:3193":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:46785:7169":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:1436:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:6881:2578":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:581:6171":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:1414:2873":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:11087:5050":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:2670:2268":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:62:39168":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"12:810:2872":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:8370:2841":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:4496:6501":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:47159:2761":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"12:861:2879":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:0:2019":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:13404:5641":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:1903:46907":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:6496:2894":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2805:2543":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:3382:2728":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:2705:4386":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:50471:3202":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:9261:2569":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4417:6495":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:1636:575":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:7243:7045":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:8448:151":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:47551:2840":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:8379:2710":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:46919:3657":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:1002:2879":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"12:1138:2883":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"18:624:61213":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:48131:2303":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:2493:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:4369:2395":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:852:3759":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:2250:3049":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4437:6497":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13459:5657":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:48794:2359":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:2738:7057":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:5388:4114":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:48596:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:6210:4267":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:4403:3153":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:52325:3361":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:7211:4077":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4115:6344":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:10434:4985":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:6819:2923":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:21384:3542":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:8561:4527":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:5646:2696":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:46520:3273":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:9475:4466":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:6352:6923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:8577:3150":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:10445:4568":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:50145:2648":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"12:738:2871":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"16:7872:4229":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:13366:5632":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:7249:7046":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:4217:5718":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:4786:5735":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:50340:3487":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:7135:4075":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:13354:5629":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:1668:6300":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:20026:59575":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:487:6115":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12850:5484":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:39348:2272":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:1967:3044":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:46926:3658":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:9446:46879":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:4267:6435":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11853:5197":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:9165:61201":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4206:6405":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:2681:2269":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:2248:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:3484:3805":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:6500:6989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:5374:4212":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:6743:4279":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:6969:3801":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13382:5636":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:5203:4921":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:10245:47098":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:50814:2915":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:7435:4253":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:11997:5237":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:11826:3093":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:7805:4771":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:2817:2541":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:10595:3673":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:8639:3094":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:8488:2744":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:10579:3671":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"15:0:2018":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:6746:2303":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:5525:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:12316:717":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:6217:2894":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:12768:5463":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:1615:2571":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"16:2557:4384":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:4744:2734":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:8526:4547":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:50425:3195":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:8946:2941":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:11841:5196":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:10108:4508":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"14:40:5030":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:7567:4241":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:50331:2528":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:7539:55746":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:48258:2303":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:5064:2663":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:7603:4238":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:21257:3304":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11390:4777":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:6393:3509":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:47536:2922":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10796:4565":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:2742:59790":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:3162:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"15:193:4018":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:9108:46813":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"5:2736:1796":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:9574:2913":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:6496:4274":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12278:5283":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:6538:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:8071:3048":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:9407:53843":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:20344:3240":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:8645:3095":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:13031:5525":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:6704:4233":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:10791:3475":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:5541:6714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"18:652:4823":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:1550:6214":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11661:5172":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:2509:4394":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:12266:55732":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:11536:5152":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:49913:2645":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:7237:4078":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:2683:4385":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:5680:2698":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:6509:6992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:8881:61195":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:11920:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:9225:2703":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:6517:4014":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:48123:2641":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:21396:3541":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:8055:4442":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:4489:3114":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:7875:3031":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:50277:2815":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:8981:46811":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:6544:202":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:21876:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:10625:4453":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6034:4263":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:5561:3748":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:54063:7273":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:9577:4469":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:1636:6277":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:13436:5656":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:11469:55980":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:8887:2939":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:2954:2573":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:21062:3524":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"9:827:3828":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:9671:4501":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"7:0:1490":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:2261:4109":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:8699:3157":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:2839:2556":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:9831:3048":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:50980:3507":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:1594:4726":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:6479:6975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:10310:47099":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:8510:4922":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:21318:58548":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:51949:3368":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:5823:2706":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:4797:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:5660:2697":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:11684:188":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:4317:3420":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:10270:47075":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"18:755:4629":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:47220:2772":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:13580:5686":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:10608:4451":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:6488:4746":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:6992:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:774:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11034:5043":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"8:0:2012":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:4693:58563":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:11786:3092":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:6200:4266":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:46561:2393":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:13557:5682":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:4117:3100":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12955:5508":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:54043:7271":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:11112:3197":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13492:5664":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:52417:3350":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:4888:5738":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:8435:2637":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:50945:191":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:2476:3787":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:13082:5538":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:4817:5736":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:9553:4478":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:8749:58536":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:9539:4463":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:4096:6334":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:2026:181":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:47244:2774":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:2987:2694":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:2411:3065":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:11134:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:7469:4222":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:49052:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:5595:6741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:52803:3385":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:5211:3702":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:5411:4115":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:4329:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:5815:4140":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:10257:47076":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:6059:4380":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:4551:6530":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:9213:182":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:8951:61205":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"9:111:3890":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"5:6331:3704":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:4904:6916":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:7249:4079":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:6277:6877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:2843:2558":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:6415:6933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:7426:2580":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:8864:2938":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:11477:3588":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:6921:53836":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:2904:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11909:5206":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:47285:2777":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:9485:7369":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:2763:2675":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:5184:45178":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:12008:5239":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:918:2870":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:12756:5458":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:7014:3718":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:12730:5452":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"12:2190:61175":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:8631:4925":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11014:5033":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:6852:3089":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:4672:10344":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:2497:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:4216:2978":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:12695:5451":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:5737:4135":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:46444:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:2257:2810":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:5713:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"12:1681:142":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:50770:3495":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4540:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:0:793":{"crate_id":6,"path":["libc"],"kind":"module"},"1:8076:2603":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:7278:4282":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:3084:3555":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:2847:2560":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:3479:2717":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:8324:3453":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:1395:2871":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:56973:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:630:7676":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:4737:6617":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:2433:4083":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:7388:4236":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:7237:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:9274:46864":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:4427:6496":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:49034:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:12617:5408":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:6593:4276":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"12:762:2571":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:3461:2366":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:1541:6208":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:50091:3474":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:54052:7272":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:13279:5616":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:8973:2944":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:53967:3386":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:2780:2683":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:50322:3486":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:46527:2730":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:2825:4390":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:53039:3365":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:5523:6702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:20454:3343":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:4761:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:2487:4382":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13059:5533":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10506:4991":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:5692:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:46959:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:5845:2766":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"9:0:2013":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:11863:3509":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:5169:2530":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:19981:2278":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:46547:4091":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:21115:3525":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:2916:4505":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:5227:13690":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:50173:3477":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:4059:3411":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:2905:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:7962:11340":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:49119:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:3314:2821":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:6834:2303":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12237:5278":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:6233:202":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:9637:7683":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:592:6176":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:7543:4215":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:7003:3717":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:12926:5501":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:12896:5490":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:2758:2581":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:46866:3654":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"16:4606:5729":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:2411:4400":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:11496:2912":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:6816:4416":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:12211:5276":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:20456:3240":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:359:3006":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:11559:5157":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:271:4726":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:9283:46878":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:11800:5190":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:4335:6470":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:50766:3494":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:2918:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:49812:2632":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:11939:5225":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:3125:46994":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:10466:4988":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:8833:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:3249:4517":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:8590:2533":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"12:1859:2573":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:7102:2244":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:6376:4272":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:38125:179":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:5498:6697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:6940:3562":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:1919:2986":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:48292:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:5887:2894":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"14:202:3720":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:7300:55402":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:9071:61202":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:49378:7202":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"12:274:6027":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:2674:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:13340:5623":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:4721:5733":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"7:79:44380":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:7841:3189":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8471:2743":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:5122:5740":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:21777:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:4326:2394":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:52249:3369":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:9791:4940":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:50227:3480":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"13:108:61176":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:1476:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:11041:3190":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:46466:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:6545:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:519:6131":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:2367:4381":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:8701:4927":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:3854:5716":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:4441:3158":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"12:1832:2569":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:10670:4571":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:10221:47096":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:8615:2368":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:0:2020":{"crate_id":17,"path":["object"],"kind":"module"},"6:4461:6499":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:3616:2303":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:52773:3382":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"12:1065:3996":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:9712:4937":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:8534:7344":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"16:6052:4264":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:13024:5524":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:10403:4446":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"9:33:3923":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:50937:207":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:646:39570":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:8554:3149":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:4519:5726":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:9339:4583":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:10394:4545":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:1962:4529":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:4026:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:7208:7037":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4361:6482":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:20028:59579":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:1600:6247":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:46964:3561":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:507:6126":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:6799:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:8741:6905":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:4262:5719":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:11761:5185":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:8083:3050":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:4716:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:7736:2920":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:8613:2860":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:5568:6734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:21810:3036":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:50758:3499":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10332:4608":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:6829:4417":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:20215:3340":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:9897:47018":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:6998:7035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:7452:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:2753:2672":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"12:2184:6031":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:54142:7278":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:4749:5734":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:9193:61189":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:49578:3675":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:6554:7014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:1695:6313":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:21221:7075":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2029:180":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:1887:40545":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:2947:2569":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:5720:6812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:50127:2650":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:8868:2536":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:6448:6949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:1620:2572":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:54104:7276":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:8871:46809":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:48173:3568":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:2341:4399":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:10088:4975":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:10875:4511":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:11921:7395":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:1369:2303":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"11:36:6036":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:49999:3469":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:7166:7036":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:38142:2278":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:47306:2779":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:5763:2702":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:11873:5200":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:4690:972":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:4629:6568":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:7497:4218":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:8603:2360":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:4268:2594":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"12:1866:2574":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:4908:6920":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"18:538:4636":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:4659:6580":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:2749:4388":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:9947:47019":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10182:4978":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:50826:3590":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:8694:3154":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:12314:720":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:8505:2745":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:973:2875":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:21843:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:10233:47097":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:9309:2641":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:4195:3413":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:10296:47073":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:11636:32589":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:9527:2647":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:48199:206":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:49904:2642":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:47090:2754":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:9526:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:8556:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:2856:2565":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:8956:2569":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:7978:7677":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:1707:3106":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2564:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:3910:2569":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:21189:3308":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:4139:6362":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:52295:3357":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:2253:3051":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:9454:2653":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:8687:2533":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:495:6120":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:1404:2872":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:1114:2882":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:11330:5104":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:29508:3406":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:8475:4455":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:4379:6493":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:4:982":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:11813:5192":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:5013:2662":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:353:3005":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6284:4224":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:10374:4543":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:9031:61206":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:12781:5468":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:51878:3376":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11343:5108":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:5793:4139":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:135:39235":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:11847:3100":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:49933:2644":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:1525:6200":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:7980:4092":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:567:6163":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"3:223:206":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:46779:2528":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:8272:4573":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:49752:3467":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:560:6160":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11594:5161":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:1500:6190":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:6010:3120":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:2515:2824":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:48368:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:1690:2571":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:10756:2701":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:5605:6748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4778:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:5380:2763":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:47234:2773":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:9371:46813":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:11709:32590":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:9555:2912":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:6109:4108":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"12:1845:2571":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:11954:4026":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:8609:2370":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:21205:7072":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:2401:3060":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:11894:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:2851:2562":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:11974:5236":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:2327:185":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:3236:3291":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:2932:2242":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:4398:6494":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:5009:2606":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:1889:11351":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:7044:4070":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:4126:2392":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:49058:129":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:9722:4938":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"18:736:4628":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:1608:2303":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:6790:4280":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:7192:4768":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:20047:59577":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:2959:3724":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:7255:7047":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11124:3050":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:12313:719":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:9610:2649":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:1059:3782":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4475:6500":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:9263:46863":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:3953:2858":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:10476:47100":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:46422:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:8625:2861":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"12:320:4001":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:6430:6938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:11787:5188":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:5841:6840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:4286:6443":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"18:644:4823":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:50287:3482":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:6838:3088":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:5709:2700":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:7289:7054":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:46992:3563":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:4900:4726":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:2300:4406":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:8705:3105":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:13393:5640":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:9317:4581":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:5087:2605":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:7924:10336":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:4257:6432":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:10062:46993":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:10845:4568":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:47336:2769":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:5625:6764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:9395:3032":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:11149:5060":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:9450:4069":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:7220:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:50762:3500":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:6735:4235":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:52727:3378":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:4530:3651":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:6681:3133":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:3188:5708":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:7343:4221":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:50608:3207":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:1518:6198":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:56986:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:96:53240":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:21711:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:900:2641":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:2535:4383":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:4014:3092":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:6807:3728":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:8796:13691":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:13114:5549":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:12609:5405":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:4635:5730":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:608:6186":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:10668:54221":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:7982:3791":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:48055:177":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:4385:5723":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:11457:2704":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:6893:2887":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:7226:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:13413:5643":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5672:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:5660:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:46806:3253":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:5996:4261":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:54005:3351":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:47039:4747":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:2290:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:6926:3799":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:3908:2802":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:5894:2895":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:50631:3577":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:4324:2598":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:11670:7521":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:3014:2575":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3199:3292":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:13221:5574":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:7942:4292":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:5826:2708":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:8330:2843":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:9681:4878":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:4506:6508":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5510:6701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"14:221:5981":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:1637:2575":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:11500:5143":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:12282:55408":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:3377:2802":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:9315:2898":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:8546:2366":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:5000:4738":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:13148:5557":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"12:669:2873":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:2796:2690":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:6975:7024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:12060:5245":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12291:5284":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:554:6157":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:48242:2569":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:13527:5677":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:4683:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"18:636:4834":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:6909:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:6654:4278":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:1828:11335":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:50546:3204":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"18:531:4635":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:4346:6475":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:9909:4941":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:9377:2652":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:1604:2569":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:54032:7270":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:10863:2830":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:3154:3078":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:8613:2367":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13047:5527":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:4657:3112":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:9764:4939":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:29333:3603":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:47182:2762":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:13007:5517":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:7214:7038":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:6668:4414":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:46488:3554":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:11852:2987":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:4581:6545":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:12948:5506":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:9183:46815":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:50651:3578":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"12:985:2880":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:969:2874":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:7079:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:4574:5728":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"18:80:53239":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:9857:4516":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:2672:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"18:719:4626":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:11089:7370":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"5:4747:3736":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7059:3566":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:2793:4391":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:965:2873":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:1931:4462":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:4838:2980":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:50454:3201":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:5457:2764":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:7156:155":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:9627:4474":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:6761:2570":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:153:4081":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:48191:189":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:2842:4149":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"5:5370:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:11515:5148":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:3192:2832":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"14:165:45106":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:8241:4570":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"12:834:2877":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:9285:2569":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:2605:4436":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:4302:2595":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:8227:2829":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:11161:5063":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:11903:7394":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:9250:46862":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:11066:3194":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:3733:2570":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:50041:2646":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:3716:5715":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:2285:184":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:6865:4419":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:53571:3359":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:47321:2780":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:1981:3785":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:56999:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46402:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:7266:7051":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4726:6611":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:5534:6710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:2938:2243":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:10321:4600":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:9269:2893":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:50750:3497":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:6017:3122":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:5624:59643":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:50927:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:12972:5511":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6903:4069":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:4262:3419":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:6640:53836":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:10754:3472":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:9844:4592":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:0:2015":{"crate_id":11,"path":["adler"],"kind":"module"},"18:699:4625":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:1654:6289":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:6842:5813":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:2737:59802":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:11137:5059":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:11734:4948":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:4972:2734":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:7909:4230":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:3026:4840":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:48106:1639":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"14:187:45111":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:2254:3788":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"18:609:61215":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:5394:187":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:36:3697":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:6785:2970":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:11106:5055":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:12305:1321":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:13039:5526":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:6610:2911":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:7357:4234":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:3422:2711":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4665:6583":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:11640:7388":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:46347:3339":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:8147:2828":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:2487:146":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:3470:57742":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:4413:5724":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:11277:2702":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:46912:3656":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:2822:2548":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"18:660:4621":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:910:2303":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:574:3033":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9362:4478":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"12:2205:2578":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:49386:7203":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:5574:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:5235:5741":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:46794:3252":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:52393:3349":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:8814:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:46889:3655":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"6:4224:6417":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:8368:4445":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:11235:5076":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:53223:3371":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:2465:4405":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:21678:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:7426:4237":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:48444:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:1760:3610":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:6409:4766":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:9738:4534":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:7433:2910":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"12:2080:2882":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:6330:4270":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:4346:2276":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:22407:3181":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:10860:2834":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"12:1628:4724":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:11070:2736":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:8599:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:3968:3336":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:8873:2537":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:10651:2700":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:524:4755":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:9384:53870":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"9:505:3821":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:21744:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:11268:2958":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:20428:15565":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:47099:2579":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:7849:3021":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:8596:4924":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:2928:2241":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:54078:7274":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:50023:2637":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:12860:5485":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:11655:7389":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:3263:5709":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:2774:2680":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:12251:5279":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:12874:5486":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:6079:3132":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"5:6752:3760":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:1077:3783":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:1678:6306":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:2935:1648":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:1953:3727":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:4766:2740":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:4280:6440":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:6137:4759":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"1:931:2871":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:10583:4448":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:12118:5255":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:2389:4082":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:47545:7186":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:21942:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"19:0:998":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:25217:3236":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:9700:4530":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:20971:3241":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:3689:5714":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:11547:5155":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:10283:47074":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:47140:2759":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:7483:4223":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:11951:5227":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:58321:7289":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:9488:4465":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"9:800:6087":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:47560:4753":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:944:2570":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:39335:3791":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:50746:3498":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:4254:2592":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12909:5496":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:52149:3377":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:20266:3242":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:49171:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:4575:6542":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:29748:3553":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:3147:3556":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:21:664":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:5587:6736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:7329:4287":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:4433:3156":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:12323:1500":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:29642:3552":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"5:1226:2881":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:4894:2594":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:12980:5513":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:4545:5727":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:2385:3055":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:53929:3366":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:46261:2668":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:47191:2770":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:4071:2802":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:4948:2613":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:4003:2985":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:54089:7275":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:8763:2735":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:513:6128":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:11125:5056":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:46846:3660":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:49993:3468":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:2993:3725":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:6759:2839":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:56947:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6137:4209":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:4231:6421":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:10822:46817":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:5510:4123":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:9416:2638":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:1643:6281":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:12630:5415":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:52649:3390":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:47522:7184":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:6302:3702":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:48808:2369":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:7279:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:8093:2604":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:10799:4774":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:11721:5180":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:2991:2695":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:4179:6395":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:6777:59786":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:2154:576":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:52019:7211":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:7069:2571":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:11682:7391":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:6524:6999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:4210:2979":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:9836:4773":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:8822:61192":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:50519:3203":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4515:6513":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:2792:2688":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:53821:3383":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8123:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:7511:4090":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"}},"external_crates":{"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"}},"format_version":24}