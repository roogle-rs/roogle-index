{"root":"0:0:1707","crate_version":"0.4.1","includes_private":false,"index":{"2:11829:32839":{"id":"2:11829:32839","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:6681-0:12:1631":{"id":"a:2:8139:6681-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:2289-0:48:1635":{"id":"a:2:2736:2289-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[55,0],"end":[59,1]},"visibility":{"restricted":{"parent":"0:56:1626","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:76:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:109:1645":{"id":"b:2:2542-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:12:1631":{"id":"b:2:2238-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11881:32844":{"id":"2:11881:32844","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11521:11903","str::split":"2:11869:1660","prim@char":"1:11843:410","str::split_terminator":"2:11878:32843"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50794:5736","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:67:1911":{"id":"0:67:1911","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[32,4],"end":[34,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:126:1647":{"id":"b:2:2527-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:92:1641":{"id":"b:2:3328-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:70:1637":{"id":"b:2:2527-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:6680-0:30:1633":{"id":"a:2:8140:6680-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5288:6562":{"id":"5:5288:6562","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:12:1631":{"id":"b:2:2542-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:48:1635":{"id":"b:2:2527-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:6681-0:126:1647":{"id":"a:2:8139:6681-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:132:657":{"id":"0:132:657","crate_id":0,"name":"fmt","span":{"filename":"src/train.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:29:1863":{"id":"0:29:1863","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11843:26040":{"id":"2:11843:26040","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11842:26039"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183-0:148:1649":{"id":"0:183-0:148:1649","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,22],"end":[63,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::AsUpperCamelCase","name":"AsPascalCase","id":"0:148:1649","glob":false}},"2:11875:26050":{"id":"2:11875:26050","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11521:11903","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::split":"2:11869:1660"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50744:5479","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:33:1569":{"id":"0:33:1569","crate_id":0,"name":"0","span":{"filename":"src/lower_camel.rs","begin":[39,43],"end":[39,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"b:5:5551-0:48:1635":{"id":"b:5:5551-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5551-0:92:1641":{"id":"b:5:5551-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:126:1647":{"id":"a:2:2686:225-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:85:1644":{"id":"0:85:1644","crate_id":0,"name":"ToSnekCase","span":{"filename":"src/snake.rs","begin":[24,0],"end":[27,1]},"visibility":"public","docs":"Oh heck, SnekCase is an alias for ToSnakeCase. See ToSnakeCase for\nmore documentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:86:1936"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:87"]}},"0:142:2043":{"id":"0:142:2043","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:45:1885":{"id":"0:45:1885","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty kebab case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2531-0:48:1635":{"id":"b:2:2531-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:30:1633":{"id":"b:2:2527-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:44:1636":{"id":"0:44:1636","crate_id":0,"name":"ToShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty kebab case conversion.\n\nIn SHOUTY-KEBAB-CASE, word boundaries are indicated by hyphens and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_shouty_kebab_case(), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:45:1885"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:46"]}},"2:11858:26058":{"id":"2:11858:26058","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11890:32845":{"id":"2:11890:32845","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11896:2178":{"id":"2:11896:2178","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11521:11903","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::matches":"2:11896:2178"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50930:5744","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:134:1630","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUpperCamelCase","id":"0:139:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:142:2043"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11821:2343":{"id":"2:11821:2343","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11846:5448":{"id":"2:11846:5448","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50712:2950","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:657":{"id":"0:115:657","crate_id":0,"name":"fmt","span":{"filename":"src/title.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:12:1631":{"id":"b:2:2531-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11937:32860":{"id":"2:11937:32860","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11483:126","`FromStr`":"2:11482:6695"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11482:6695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11482:6695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:20:1624","path":"::lower_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToLowerCamelCase","id":"0:26:1634","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:29:1863"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:70:1637":{"id":"b:2:2238-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:147:2046":{"id":"0:147:2046","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[37,4],"end":[39,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:30:1633":{"id":"b:2:2235-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:148:1649":{"id":"b:2:2238-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:26:1634":{"id":"0:26:1634","crate_id":0,"name":"ToLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a lower camel case conversion.\n\nIn lowerCamelCase, word boundaries are indicated by capital letters,\nexcepting the first word.\n\n## Example:\n\n```rust\nuse heck::ToLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(sentence.to_lower_camel_case(), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:27:1863"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:28"]}},"0:173-0:83:1643":{"id":"0:173-0:83:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,56],"end":[59,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::ToSnakeCase","name":"ToSnakeCase","id":"0:83:1643","glob":false}},"b:2:3328-0:70:1637":{"id":"b:2:3328-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:6680-0:70:1637":{"id":"a:2:8140:6680-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:148:1649":{"id":"b:2:2531-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:30:1633":{"id":"b:2:2238-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:6680-0:148:1649":{"id":"a:2:8140:6680-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:163-0:48:1635":{"id":"0:163-0:48:1635","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,23],"end":[55,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_kebab::AsShoutyKebabCase","name":"AsShoutyKebabCase","id":"0:48:1635","glob":false}},"2:11855:26057":{"id":"2:11855:26057","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:6681-0:109:1645":{"id":"a:2:8139:6681-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11845:1686":{"id":"2:11845:1686","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11843:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50702:5730","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11915:32854":{"id":"2:11915:32854","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11819":{"id":"2:11819","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:11084:1368","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11820:797","2:11821:2343","2:11822:32836","2:11823:32837","2:11825:32838","2:11828:29434","2:11829:32839","2:11830:310","2:11831:26017","2:11832:26013","2:11834:26014","2:11836:26015","2:11838:26016","2:11840:32840","2:11841:32841","2:11842:26039","2:11843:26040","2:11844:1697","2:11845:1686","2:11846:5448","2:11847:30347","2:11848:30356","2:11849:24182","2:11850:32842","2:11851:30346","2:11852:26056","2:11855:26057","2:11858:26058","2:11861:2382","2:11865:2342","2:11869:1660","2:11872:26048","2:11875:26050","2:11878:32843","2:11881:32844","2:11884:26052","2:11887:26054","2:11890:32845","2:11893:32846","2:11896:2178","2:11899:32847","2:11902:32848","2:11905:32849","2:11908:32850","2:11910:32851","2:11912:32852","2:11914:32853","2:11915:32854","2:11916:32855","2:11919:32856","2:11922:23710","2:11925:26059","2:11928:32857","2:11931:32858","2:11934:32859","2:11937:32860","2:11939:25900","2:11940:25901","2:11941:25897","2:11942:25896","2:11943:32861","2:11945:6419","2:11946:32862"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:169-0:63:1640":{"id":"0:169-0:63:1640","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,81],"end":[57,97]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::ToShoutySnekCase","name":"ToShoutySnekCase","id":"0:63:1640","glob":false}},"5:5306:25898":{"id":"5:5306:25898","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11942:25896"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:657":{"id":"0:98:657","crate_id":0,"name":"fmt","span":{"filename":"src/snake.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:109:1645":{"id":"b:2:2527-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:6681-0:92:1641":{"id":"a:2:8139:6681-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:12:1631":{"id":"b:2:3328-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:30:1633":{"id":"b:2:2537-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:30:1633":{"id":"0:30:1633","crate_id":0,"name":"AsLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[39,0],"end":[39,50]},"visibility":"public","docs":"This wrapper performs a lower camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(format!(\"{}\", AsLowerCamelCase(sentence)), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:33:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:30:1633","a:2:8139:6681-0:30:1633","a:2:8140:6680-0:30:1633","a:2:2686:225-0:30:1633","a:2:2672:217-0:30:1633","b:2:2542-0:30:1633","b:2:2537-0:30:1633","b:2:3328-0:30:1633","b:2:2531-0:30:1633","b:2:2527-0:30:1633","b:2:2235-0:30:1633","b:2:2238-0:30:1633","b:5:5551-0:30:1633","0:34"]}},"2:11939:25900":{"id":"2:11939:25900","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[35,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:78:1627","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnakeCase","id":"0:83:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:91:1932"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:36:657":{"id":"0:36:657","crate_id":0,"name":"fmt","span":{"filename":"src/lower_camel.rs","begin":[42,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11865:2342":{"id":"2:11865:2342","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48736:176","prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2530:2336":{"id":"2:2530:2336","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2504:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:148:1649":{"id":"b:2:2235-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:6680-0:12:1631":{"id":"a:2:8140:6680-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:12:1631":{"id":"0:12:1631","crate_id":0,"name":"AsKebabCase","span":{"filename":"src/kebab.rs","begin":[38,0],"end":[38,45]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsKebabCase(sentence)), \"we-are-going-to-inherit-the-earth\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:15:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:12:1631","a:2:8139:6681-0:12:1631","a:2:8140:6680-0:12:1631","a:2:2686:225-0:12:1631","a:2:2672:217-0:12:1631","b:2:2542-0:12:1631","b:2:2537-0:12:1631","b:2:3328-0:12:1631","b:2:2531-0:12:1631","b:2:2527-0:12:1631","b:2:2235-0:12:1631","b:2:2238-0:12:1631","b:5:5551-0:12:1631","0:16"]}},"2:11878:32843":{"id":"2:11878:32843","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11521:11903","str::split":"2:11869:1660","prim@char":"1:11843:410","`DoubleEndedIterator`":"2:7125:120","str::rsplit_terminator":"2:11881:32844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50776:5735","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2237:2163":{"id":"2:2237:2163","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5551-0:70:1637":{"id":"b:5:5551-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[36,0],"end":[40,1]},"visibility":{"restricted":{"parent":"0:134:1630","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToUpperCamelCase","id":"0:139:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToPascalCase","id":"0:143:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:147:2046"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5553:1422":{"id":"5:5553:1422","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:12:1631":{"id":"b:2:2527-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:143:1651":{"id":"0:143:1651","crate_id":0,"name":"ToPascalCase","span":{"filename":"src/upper_camel.rs","begin":[31,0],"end":[34,1]},"visibility":"public","docs":"ToPascalCase is an alias for ToUpperCamelCase. See ToUpperCamelCase for more\ndocumentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:144:2046"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:145"]}},"b:2:2531-0:30:1633":{"id":"b:2:2531-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:48:1635":{"id":"b:2:2238-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:109:1645":{"id":"b:2:3328-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:2289-0:92:1641":{"id":"a:2:2736:2289-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11902:32848":{"id":"2:11902:32848","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11521:11903","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::rmatch_indices":"2:11905:32849"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50876:5741","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:15:1569":{"id":"0:15:1569","crate_id":0,"name":"0","span":{"filename":"src/kebab.rs","begin":[38,38],"end":[38,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/train.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:117:1629","path":"::train"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTrainCase","id":"0:122:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:125:2013"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:148:1649":{"id":"a:2:2672:217-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:180-0:122:1648":{"id":"0:180-0:122:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,29],"end":[61,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"train::ToTrainCase","name":"ToTrainCase","id":"0:122:1648","glob":false}},"2:11850:32842":{"id":"2:11850:32842","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50990:5747","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5551-0:12:1631":{"id":"b:5:5551-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:109:1645":{"id":"a:2:2672:217-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:105:1646":{"id":"0:105:1646","crate_id":0,"name":"ToTitleCase","span":{"filename":"src/title.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a title case conversion.\n\nIn Title Case, word boundaries are indicated by spaces, and every word is\ncapitalized.\n\n## Example:\n\n```rust\nuse heck::ToTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(sentence.to_title_case(), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:106:1992"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:107"]}},"b:2:2235-0:12:1631":{"id":"b:2:2235-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2546:1442":{"id":"2:2546:1442","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11832:26013":{"id":"2:11832:26013","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48736:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112:1569":{"id":"0:112:1569","crate_id":0,"name":"0","span":{"filename":"src/title.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:2672:217-0:126:1647":{"id":"a:2:2672:217-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11912:32852":{"id":"2:11912:32852","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11914:32853":{"id":"2:11914:32853","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[41,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:20:1624","path":"::lower_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:36:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[31,0],"end":[35,1]},"visibility":{"restricted":{"parent":"0:56:1626","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToShoutySnakeCase","id":"0:61:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnekCase","id":"0:63:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:67:1911"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5287:33511":{"id":"5:5287:33511","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2295","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6909:5419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2295","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6909:5419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63:1640":{"id":"0:63:1640","crate_id":0,"name":"ToShoutySnekCase","span":{"filename":"src/shouty_snake.rs","begin":[25,0],"end":[29,1]},"visibility":"public","docs":"Oh heck, ToShoutySnekCase is an alias for ToShoutySnakeCase. See\nToShoutySnakeCase for more documentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:64:1911"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:65"]}},"0:70:1637":{"id":"0:70:1637","crate_id":0,"name":"AsShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[53,0],"end":[53,51]},"visibility":"public","docs":"This wrapper performs a shouty snake  case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(format!(\"{}\", AsShoutySnakeCase(sentence)), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:73:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:70:1637","a:2:8139:6681-0:70:1637","a:2:8140:6680-0:70:1637","a:2:2686:225-0:70:1637","a:2:2672:217-0:70:1637","b:2:2542-0:70:1637","b:2:2537-0:70:1637","b:2:3328-0:70:1637","b:2:2531-0:70:1637","b:2:2527-0:70:1637","b:2:2235-0:70:1637","b:2:2238-0:70:1637","b:5:5551-0:70:1637","0:74"]}},"a:2:8140:6680-0:92:1641":{"id":"a:2:8140:6680-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:48:1635":{"id":"b:2:2537-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:106:1992":{"id":"0:106:1992","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to title case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:54:657":{"id":"0:54:657","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_kebab.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:6681-0:148:1649":{"id":"a:2:8139:6681-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:100:1628","path":"::title"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:115:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11861:2382":{"id":"2:11861:2382","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48736:176","prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179-0:126:1647":{"id":"0:179-0:126:1647","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,16],"end":[61,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"train::AsTrainCase","name":"AsTrainCase","id":"0:126:1647","glob":false}},"0:126:1647":{"id":"0:126:1647","crate_id":0,"name":"AsTrainCase","span":{"filename":"src/train.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a train case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTrainCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsTrainCase(sentence)), \"We-Are-Going-To-Inherit-The-Earth\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:129:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:126:1647","a:2:8139:6681-0:126:1647","a:2:8140:6680-0:126:1647","a:2:2686:225-0:126:1647","a:2:2672:217-0:126:1647","b:2:2542-0:126:1647","b:2:2537-0:126:1647","b:2:3328-0:126:1647","b:2:2531-0:126:1647","b:2:2527-0:126:1647","b:2:2235-0:126:1647","b:2:2238-0:126:1647","b:5:5551-0:126:1647","0:130"]}},"2:11943:32861":{"id":"2:11943:32861","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4500:32861"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:51025:5626","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:1641":{"id":"0:92:1641","crate_id":0,"name":"AsSnakeCase","span":{"filename":"src/snake.rs","begin":[51,0],"end":[51,45]},"visibility":"public","docs":"This wrapper performs a snake case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(format!(\"{}\", AsSnakeCase(sentence)), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:95:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:92:1641","a:2:8139:6681-0:92:1641","a:2:8140:6680-0:92:1641","a:2:2686:225-0:92:1641","a:2:2672:217-0:92:1641","b:2:2542-0:92:1641","b:2:2537-0:92:1641","b:2:3328-0:92:1641","b:2:2531-0:92:1641","b:2:2527-0:92:1641","b:2:2235-0:92:1641","b:2:2238-0:92:1641","b:5:5551-0:92:1641","0:96"]}},"0:164-0:44:1636":{"id":"0:164-0:44:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,42],"end":[55,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_kebab::ToShoutyKebabCase","name":"ToShoutyKebabCase","id":"0:44:1636","glob":false}},"2:11908:32850":{"id":"2:11908:32850","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:12:1631":{"id":"a:2:2672:217-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:61:1639":{"id":"0:61:1639","crate_id":0,"name":"ToShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty snake case conversion.\n\nIn SHOUTY_SNAKE_CASE, word boundaries are indicated by underscores and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(sentence.to_shouty_snake_case(), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:62:1906"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:68"]}},"0:148:1649":{"id":"0:148:1649","crate_id":0,"name":"AsUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[52,0],"end":[52,50]},"visibility":"public","docs":"This wrapper performs a upper camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(format!(\"{}\", AsUpperCamelCase(sentence)), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:151:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:148:1649","a:2:8139:6681-0:148:1649","a:2:8140:6680-0:148:1649","a:2:2686:225-0:148:1649","a:2:2672:217-0:148:1649","b:2:2542-0:148:1649","b:2:2537-0:148:1649","b:2:3328-0:148:1649","b:2:2531-0:148:1649","b:2:2527-0:148:1649","b:2:2235-0:148:1649","b:2:2238-0:148:1649","b:5:5551-0:148:1649","0:152"]}},"2:11884:26052":{"id":"2:11884:26052","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903","str::rsplitn":"2:11887:26054"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50830:5738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:70:1637":{"id":"a:2:2672:217-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:182-0:148:1649":{"id":"0:182-0:148:1649","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,4],"end":[63,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::AsUpperCamelCase","name":"AsUpperCamelCase","id":"0:148:1649","glob":false}},"2:11822:32836":{"id":"2:11822:32836","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11916:32855":{"id":"2:11916:32855","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11546:11899","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11934:32859":{"id":"2:11934:32859","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11836:26015":{"id":"2:11836:26015","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5286":{"id":"5:5286","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5197:1368","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5287:33511","5:5288:6562","5:5291:33512","5:5294:1703","5:5302:1705","5:5303:33513","5:5304:6580","5:5305:25899","5:5306:25898"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:39:1625","path":"::shouty_kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:54:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5551-0:109:1645":{"id":"b:5:5551-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11919:32856":{"id":"2:11919:32856","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:2046":{"id":"0:144:2046","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[33,4],"end":[33,44]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2672:217-0:92:1641":{"id":"a:2:2672:217-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:84:1932":{"id":"0:84:1932","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to snake case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:168-0:61:1639":{"id":"0:168-0:61:1639","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,62],"end":[57,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::ToShoutySnakeCase","name":"ToShoutySnakeCase","id":"0:61:1639","glob":false}},"2:11887:26054":{"id":"2:11887:26054","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11843:410","str::splitn":"2:11884:26052","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50848:5739","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:30:1633":{"id":"a:2:2686:225-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:2289-0:30:1633":{"id":"a:2:2736:2289-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:154:657":{"id":"0:154:657","crate_id":0,"name":"fmt","span":{"filename":"src/upper_camel.rs","begin":[55,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5294:1703":{"id":"5:5294:1703","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11905:32849":{"id":"2:11905:32849","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11521:11903","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::match_indices":"2:11902:32848"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50894:5742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:92:1641":{"id":"a:2:2686:225-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:126:1647":{"id":"b:2:2542-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:6680-0:109:1645":{"id":"a:2:8140:6680-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[22,0],"end":[26,1]},"visibility":{"restricted":{"parent":"0:3:1623","path":"::kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToKebabCase","id":"0:8:1632","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:11:1816"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:2289-0:148:1649":{"id":"a:2:2736:2289-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:148:1649":{"id":"b:2:3328-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11834:26014":{"id":"2:11834:26014","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48736:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:70:1637":{"id":"b:2:2537-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:108:1992":{"id":"0:108:1992","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:125:2013":{"id":"0:125:2013","crate_id":0,"name":"to_train_case","span":{"filename":"src/train.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11849:24182":{"id":"2:11849:24182","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50980:5746","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:6680-0:48:1635":{"id":"a:2:8140:6680-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:126:1647":{"id":"b:2:3328-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5302:1705":{"id":"5:5302:1705","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:2289-0:109:1645":{"id":"a:2:2736:2289-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2533:681":{"id":"2:2533:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177-0:105:1646":{"id":"0:177-0:105:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,29],"end":[60,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"title::ToTitleCase","name":"ToTitleCase","id":"0:105:1646","glob":false}},"b:2:2235-0:126:1647":{"id":"b:2:2235-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5551-0:126:1647":{"id":"b:5:5551-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11838:26016":{"id":"2:11838:26016","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:2289-0:70:1637":{"id":"a:2:2736:2289-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:109:1645":{"id":"b:2:2235-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11844:1697":{"id":"2:11844:1697","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11843:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50696:5729","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:1932":{"id":"0:91:1932","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[36,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:70:1637":{"id":"b:2:2531-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:12:1631":{"id":"a:2:2686:225-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:39:1625","path":"::shouty_kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutyKebabCase","id":"0:44:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:47:1885"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:6680-0:126:1647":{"id":"a:2:8140:6680-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:6680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2541:1443":{"id":"2:2541:1443","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:148:1649":{"id":"b:2:2537-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2545:127":{"id":"2:2545:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39834:4370","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11820:797":{"id":"2:11820:797","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11843:410"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[54,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:134:1630","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:154:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11928:32857":{"id":"2:11928:32857","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139:1652":{"id":"0:139:1652","crate_id":0,"name":"ToUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines an upper camel case conversion.\n\nIn UpperCamelCase, word boundaries are indicated by capital letters,\nincluding the first word.\n\n## Example:\n\n```rust\nuse heck::ToUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(sentence.to_upper_camel_case(), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:140:2043"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:141"]}},"0:166-0:70:1637":{"id":"0:166-0:70:1637","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,4],"end":[57,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnakeCase","id":"0:70:1637","glob":false}},"a:2:2736:2289-0:12:1631":{"id":"a:2:2736:2289-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8:1632":{"id":"0:8:1632","crate_id":0,"name":"ToKebabCase","span":{"filename":"src/kebab.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a kebab case conversion.\n\nIn kebab-case, word boundaries are indicated by hyphens.\n\n## Example:\n\n```rust\nuse heck::ToKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_kebab_case(), \"we-are-going-to-inherit-the-earth\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:9:1816"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:10"]}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[53,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:78:1627","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:98:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:172-0:92:1641":{"id":"0:172-0:92:1641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,29],"end":[59,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::AsSnakeCase","name":"AsSnekCase","id":"0:92:1641","glob":false}},"2:11942:25896":{"id":"2:11942:25896","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:64:1911":{"id":"0:64:1911","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[28,4],"end":[28,49]},"visibility":"default","docs":"CONVERT THIS TYPE TO SNEK CASE.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:73:1569":{"id":"0:73:1569","crate_id":0,"name":"0","span":{"filename":"src/shouty_snake.rs","begin":[53,44],"end":[53,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"b:2:2537-0:92:1641":{"id":"b:2:2537-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:30:1633":{"id":"b:2:2542-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:6681-0:70:1637":{"id":"a:2:8139:6681-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:109:1645":{"id":"b:2:2531-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140:2043":{"id":"0:140:2043","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:184-0:143:1651":{"id":"0:184-0:143:1651","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,56],"end":[63,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::ToPascalCase","name":"ToPascalCase","id":"0:143:1651","glob":false}},"2:11851:30346":{"id":"2:11851:30346","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:51018:5750","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5305:25899":{"id":"5:5305:25899","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11941:25897"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:92:1641":{"id":"b:2:2542-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/train.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:117:1629","path":"::train"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:132:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:12:1631":{"id":"b:2:2537-0:12:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11847:30347":{"id":"2:11847:30347","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11848:30356"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:51000:5748","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11893:32846":{"id":"2:11893:32846","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11899:32847":{"id":"2:11899:32847","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11521:11903","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::matches":"2:11896:2178"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50948:5745","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185-0:139:1652":{"id":"0:185-0:139:1652","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,70],"end":[63,86]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::ToUpperCamelCase","name":"ToUpperCamelCase","id":"0:139:1652","glob":false}},"0:95:1569":{"id":"0:95:1569","crate_id":0,"name":"0","span":{"filename":"src/snake.rs","begin":[51,38],"end":[51,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:123:2013":{"id":"0:123:2013","crate_id":0,"name":"to_train_case","span":{"filename":"src/train.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to Train-Case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:157-0:12:1631":{"id":"0:157-0:12:1631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,16],"end":[53,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kebab::AsKebabCase","name":"AsKebabCase","id":"0:12:1631","glob":false}},"2:11945:6419":{"id":"2:11945:6419","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4501:6419"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:51034:5611","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11946:32862":{"id":"2:11946:32862","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4498:32862"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:51043:5619","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:70:1637":{"id":"b:2:2542-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11872:26048":{"id":"2:11872:26048","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11345:5478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86:1936":{"id":"0:86:1936","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[26,4],"end":[26,42]},"visibility":"default","docs":"Convert this type to snek case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2527-0:92:1641":{"id":"b:2:2527-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:83:1643":{"id":"0:83:1643","crate_id":0,"name":"ToSnakeCase","span":{"filename":"src/snake.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a snake case conversion.\n\nIn snake_case, word boundaries are indicated by underscores.\n\n## Example:\n\n```rust\nuse heck::ToSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(sentence.to_snake_case(), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:84:1932"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:90"]}},"b:2:2542-0:48:1635":{"id":"b:2:2542-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:161-0:26:1634":{"id":"0:161-0:26:1634","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,40],"end":[54,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"lower_camel::ToLowerCamelCase","name":"ToLowerCamelCase","id":"0:26:1634","glob":false}},"a:2:2736:2289-0:126:1647":{"id":"a:2:2736:2289-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2289","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:11:1816":{"id":"0:11:1816","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[23,4],"end":[25,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11852:26056":{"id":"2:11852:26056","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:48:1635":{"id":"a:2:2686:225-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:148:1649":{"id":"b:2:2542-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:30:1633":{"id":"b:2:3328-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:1707":{"id":"0:0:1707","crate_id":0,"name":"heck","span":{"filename":"src/lib.rs","begin":[1,0],"end":[209,1]},"visibility":"public","docs":"**heck** is a case conversion library.\n\nThis library exists to provide case conversion between common cases like\nCamelCase and snake_case. It is intended to be unicode aware, internally\nconsistent, and reasonably well performing.\n\n## Definition of a word boundary\n\nWord boundaries are defined as the \"unicode words\" defined in the\n`unicode_segmentation` library, as well as within those words in this\nmanner:\n\n1. All underscore characters are considered word boundaries.\n2. If an uppercase character is followed by lowercase letters, a word\nboundary is considered to be just prior to that uppercase character.\n3. If multiple uppercase characters are consecutive, they are considered to\nbe within a single word, except that the last will be part of the next word\nif it is followed by lowercase characters (see rule 2).\n\nThat is, \"HelloWorld\" is segmented `Hello|World` whereas \"XMLHttpRequest\" is\nsegmented `XML|Http|Request`.\n\nCharacters not within words (such as spaces, punctuations, and underscores)\nare not included in the output string except as they are a part of the case\nbeing converted to. Multiple adjacent word boundaries (such as a series of\nunderscores) are folded into one. (\"hello__world\" in snake case is therefore\n\"hello_world\", not the exact same string). Leading or trailing word boundary\nindicators are dropped, except insofar as CamelCase capitalizes the first\nword.\n\n### Cases contained in this library:\n\n1. UpperCamelCase\n2. lowerCamelCase\n3. snake_case\n4. kebab-case\n5. SHOUTY_SNAKE_CASE\n6. Title Case\n7. SHOUTY-KEBAB-CASE\n8. Train-Case","links":{},"attrs":["#![deny(missing_docs)]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:157-0:12:1631","0:158-0:8:1632","0:160-0:30:1633","0:161-0:26:1634","0:163-0:48:1635","0:164-0:44:1636","0:166-0:70:1637","0:167-0:70:1637","0:168-0:61:1639","0:169-0:63:1640","0:171-0:92:1641","0:172-0:92:1641","0:173-0:83:1643","0:174-0:85:1644","0:176-0:109:1645","0:177-0:105:1646","0:179-0:126:1647","0:180-0:122:1648","0:182-0:148:1649","0:183-0:148:1649","0:184-0:143:1651","0:185-0:139:1652"],"is_stripped":false}},"2:11841:32841":{"id":"2:11841:32841","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11849:1368","crate::ops::IndexMut":"2:2995:6470","str::slice_unchecked":"2:11840:32840"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11830:310":{"id":"2:11830:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11831:26017","`u8`":"1:11860:1464"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18:657":{"id":"0:18:657","crate_id":0,"name":"fmt","span":{"filename":"src/kebab.rs","begin":[41,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11825:32838":{"id":"2:11825:32838","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11823:32837"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:6681-0:30:1633":{"id":"a:2:8139:6681-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:109:1645":{"id":"0:109:1645","crate_id":0,"name":"AsTitleCase","span":{"filename":"src/title.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a title case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(format!(\"{}\", AsTitleCase(sentence)), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:112:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:109:1645","a:2:8139:6681-0:109:1645","a:2:8140:6680-0:109:1645","a:2:2686:225-0:109:1645","a:2:2672:217-0:109:1645","b:2:2542-0:109:1645","b:2:2537-0:109:1645","b:2:3328-0:109:1645","b:2:2531-0:109:1645","b:2:2527-0:109:1645","b:2:2235-0:109:1645","b:2:2238-0:109:1645","b:5:5551-0:109:1645","0:113"]}},"0:158-0:8:1632":{"id":"0:158-0:8:1632","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,29],"end":[53,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kebab::ToKebabCase","name":"ToKebabCase","id":"0:8:1632","glob":false}},"2:11925:26059":{"id":"2:11925:26059","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:11901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:27:1863":{"id":"0:27:1863","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to lower camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:5303:33513":{"id":"5:5303:33513","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:288:2295","`String`":"5:7158:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2295","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6909:5419","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:30:1633":{"id":"a:2:2672:217-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11840:32840":{"id":"2:11840:32840","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11849:1368","str::slice_mut_unchecked":"2:11841:32841","crate::ops::Index":"2:2991:6469"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:89:1936":{"id":"0:89:1936","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:92:1641":{"id":"b:2:2235-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:48:1635":{"id":"b:2:2235-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:48:1635":{"id":"0:48:1635","crate_id":0,"name":"AsShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[39,0],"end":[39,51]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsShoutyKebabCase(sentence)), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{"`fmt::Display`":"2:9012:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:51:1569"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:2289-0:48:1635","a:2:8139:6681-0:48:1635","a:2:8140:6680-0:48:1635","a:2:2686:225-0:48:1635","a:2:2672:217-0:48:1635","b:2:2542-0:48:1635","b:2:2537-0:48:1635","b:2:3328-0:48:1635","b:2:2531-0:48:1635","b:2:2527-0:48:1635","b:2:2235-0:48:1635","b:2:2238-0:48:1635","b:5:5551-0:48:1635","0:52"]}},"0:69:1906":{"id":"0:69:1906","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[38,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:176-0:109:1645":{"id":"0:176-0:109:1645","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,16],"end":[60,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"title::AsTitleCase","name":"AsTitleCase","id":"0:109:1645","glob":false}},"b:5:5551-0:30:1633":{"id":"b:5:5551-0:30:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11941:25897":{"id":"2:11941:25897","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:148:1649":{"id":"b:2:2527-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2530:2336"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[37,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:56:1626","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnakeCase","id":"0:61:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:69:1906"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:122:1648":{"id":"0:122:1648","crate_id":0,"name":"ToTrainCase","span":{"filename":"src/train.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a train case conversion.\n\nIn Train-Case, word boundaries are indicated by hyphens and words start\nwith Capital Letters.\n\n## Example:\n\n```rust\nuse heck::ToTrainCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_train_case(), \"We-Are-Going-To-Inherit-The-Earth\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:123:2013"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:124"]}},"0:129:1569":{"id":"0:129:1569","crate_id":0,"name":"0","span":{"filename":"src/train.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:2686:225-0:109:1645":{"id":"a:2:2686:225-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11831:26017":{"id":"2:11831:26017","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11860:1464"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:126:1647":{"id":"b:2:2537-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:160-0:30:1633":{"id":"0:160-0:30:1633","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,22],"end":[54,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"lower_camel::AsLowerCamelCase","name":"AsLowerCamelCase","id":"0:30:1633","glob":false}},"2:11848:30356":{"id":"2:11848:30356","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11847:30347"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:51009:5749","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5291:33512":{"id":"5:5291:33512","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:48:1635":{"id":"b:2:3328-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5551-0:148:1649":{"id":"b:5:5551-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11828:29434":{"id":"2:11828:29434","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11089:11904"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[40,0],"end":[44,1]},"visibility":{"restricted":{"parent":"0:3:1623","path":"::kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:18:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[29,0],"end":[33,1]},"visibility":{"restricted":{"parent":"0:78:1627","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToSnakeCase","id":"0:83:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnekCase","id":"0:85:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:89:1936"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:92:1641":{"id":"b:2:2531-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11842:26039":{"id":"2:11842:26039","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11843:26040"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11869:1660":{"id":"2:11869:1660","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11521:11903","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::split_whitespace":"2:11847:30347","str::rsplit":"2:11875:26050"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50726:5475","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11922:23710":{"id":"2:11922:23710","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171-0:92:1641":{"id":"0:171-0:92:1641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,16],"end":[59,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::AsSnakeCase","name":"AsSnakeCase","id":"0:92:1641","glob":false}},"0:62:1906":{"id":"0:62:1906","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty snake case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:174-0:85:1644":{"id":"0:174-0:85:1644","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,69],"end":[59,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::ToSnekCase","name":"ToSnekCase","id":"0:85:1644","glob":false}},"2:11931:32858":{"id":"2:11931:32858","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:11903"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:11900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151:1569":{"id":"0:151:1569","crate_id":0,"name":"0","span":{"filename":"src/upper_camel.rs","begin":[52,43],"end":[52,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:100:1628","path":"::title"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTitleCase","id":"0:105:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:108:1992"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:109:1645":{"id":"b:2:2537-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:76:657":{"id":"0:76:657","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_snake.rs","begin":[56,4],"end":[58,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5304:6580":{"id":"5:5304:6580","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:92:1641":{"id":"b:2:2238-0:92:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1641","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:109:1645":{"id":"b:2:2238-0:109:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:48:1635":{"id":"a:2:2672:217-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11940:25901":{"id":"2:11940:25901","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:126:1647":{"id":"b:2:2531-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:148:1649":{"id":"a:2:2686:225-0:148:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11823:32837":{"id":"2:11823:32837","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:22811":{"id":"2:2240:22811","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3330:1456":{"id":"2:3330:1456","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:47073:5609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:47:1885":{"id":"0:47:1885","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:70:1637":{"id":"b:2:2235-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:2163"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:126:1647":{"id":"b:2:2238-0:126:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:1912","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1647","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:22811"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:70:1637":{"id":"a:2:2686:225-0:70:1637","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:9:1816":{"id":"0:9:1816","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to kebab case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:8139:6681-0:48:1635":{"id":"a:2:8139:6681-0:48:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:6681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2540:127":{"id":"2:2540:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:51:1569":{"id":"0:51:1569","crate_id":0,"name":"0","span":{"filename":"src/shouty_kebab.rs","begin":[39,44],"end":[39,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:167-0:70:1637":{"id":"0:167-0:70:1637","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,23],"end":[57,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnekCase","id":"0:70:1637","glob":false}},"2:11910:32851":{"id":"2:11910:32851","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"6:4162:4727":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11800:3277":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:12550:3440":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:13100:3631":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:7112:29695":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2686:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:47363:11985":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:847:4360":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:54792:5911":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:3132:33714":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"12:2184:4368":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:22102:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:2229:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:12485:3389":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:48810:2347":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"5:5725:2667":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:51477:5787":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:5811:2732":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"2:11271:5737":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:21130:6780":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"9:709:5714":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:3566:3861":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:7247:5407":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:6434:5299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6402:5288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:46913:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:10810:4447":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:494:4480":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:7464:3086":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:53029:5830":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:8484:4360":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:2343:5457":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:52428:5803":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:11848:1338":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:29940:5533":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:47566:5484":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4645:4928":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:2217:6523":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:47655:5644":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:12514:3409":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:50794:5736":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:8569:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:47303:29743":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:2815:4105":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:11863:1463":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:4385:3873":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:21808:5523":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:9193:33895":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:6362:5285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:21645:5500":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:4299:6336":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:8741:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:9631:18809":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:21395:6778":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11011:23713":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:48033:5669":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:4399:11968":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"12:1085:17758":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:361:6415":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:10049:5479":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:6419:5293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:3632:3863":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:4621:4919":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:50046:5713":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:53651:5857":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:6654:4061":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:13459:3747":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:3026:2855":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:21135:6803":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:10014:11894":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:3191:30075":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:52460:5804":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:51110:11908":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2869:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"12:2190:33798":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:2371:6536":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:11368:3195":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:881:4360":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:4277:4790":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:7202:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:6670:2686":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:11842:921":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:6979:5441":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:3057:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:6070:3972":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:11594:3246":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:11106:3138":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:2411:3813":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:9401:2963":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:50712:2950":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:579:4530":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:9873:18898":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:11184:6039":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:11174:3148":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:12436:6472":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:5782:5187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:9031:33891":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:1517:4549":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"18:727:2847":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:6985:5386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:51695:5794":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:51481:5788":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:3611:5422":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"12:725:4361":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:7259:5409":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11391:6597":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"12:1628:2621":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:1824:6487":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:7025:25825":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:6200:3987":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:1436:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:12609:3492":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:12022:3328":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:8822:33884":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:6790:4080":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:54769:5910":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:1506:4544":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10926:2757":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:1708:2616":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:1825:5461":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:57559:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:1597:4366":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:4921:3889":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:13082:3627":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:2613:6570":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:9909:2984":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:6440:5300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:47503:6507":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"9:111:17612":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"5:1973:6459":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:2557:3819":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7135:33839":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:7557:4161":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:8875:6733":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:2880:33699":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:51687:6168":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"18:609:33909":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:6865:2731":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10310:18934":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:9155:18774":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:4544:4878":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:2768:6771":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:49251:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:11248:2761":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"17:12638:3503":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:51708:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"12:810:6440":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:10721:3080":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:3765:6597":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:7970:4222":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:9165:33883":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:8898:6010":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:5605:5101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:48734:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:7613:2754":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:12355:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:2853:12061":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:29974:5452":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"9:0:2063":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:933:6443":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:8992:23172":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:10642:18779":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:48878:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:1760:5458":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:5702:6723":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:11490:6050":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:9317:18799":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9263:18788":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:10394:3043":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:49514:2415":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:9446:18804":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:9681:2894":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:4356:4830":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:30180:29718":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:2691:2315":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:6805:2849":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:50894:5742":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:2932:2290":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:9176:6358":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:20719:6618":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:8241:18761":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:47276:5611":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:12617:3495":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:21681:29730":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:51358:5777":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:0:802":{"crate_id":6,"path":["libc"],"kind":"module"},"2:50614:11890":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:7662:5923":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:12278:3370":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:2778:4100":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:6330:4003":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"5:2876:5429":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:6829:4084":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:50504:5480":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:9968:6487":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"15:175:17778":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:10037:6354":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:5839:18687":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:1592:4365":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:49091:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:2942:2292":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"12:697:6442":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"9:505:17742":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:8753:6003":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:6277:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:6059:33850":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:53835:5859":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:48819:5700":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:50522:11885":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:51473:5786":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:2573:6348":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:3125:18867":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:9362:2966":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:2511:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:8239:6594":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:2916:18864":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:6298:3993":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"9:33:17668":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:4683:4947":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:7810:5929":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:7081:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:5388:3837":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:47473:29695":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10434:3047":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"9:382:17702":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:21539:5492":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:3716:3865":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:52530:5807":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:9350:2936":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12361:3387":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:10075:18865":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:5615:2653":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"12:320:2612":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4249:4778":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12781:3555":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:9553:2966":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:4234:4772":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:11038:6016":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:3689:3864":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:6645:2673":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:688:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:9764:2981":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:51325:5771":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:13527:3767":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:6466:6727":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:878:4361":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:47055:12066":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:8212:18760":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:8441:18768":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:4241:4776":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:5553:2729":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"12:669:6441":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13192:3656":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:48971:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:8917:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:4608:4914":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:1387:2347":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:3236:6574":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:10341:2753":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:51161:5762":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:11125:3139":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:8475:18744":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:7319:4152":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11853:631":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:6359:4005":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:6563:12035":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:9778:2982":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:21787:5519":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:9722:2976":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:7252:2676":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:20768:5488":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:2476:6569":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:4195:4751":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:3369:5973":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:5374:3834":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:7475:6453":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:13203:3660":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:11747:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:646:6425":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:3159:6576":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:5494:18683":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:4625:6639":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:7672:5924":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:6089:2673":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:47282:5612":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:11151:6710":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"12:1555:17762":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:51457:5782":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:10915:2756":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:11536:3237":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:9526:18812":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:10636:6023":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"9:800:4431":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"18:736:22578":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"12:738:4362":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"1:8269:5267":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:7872:4214":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:7956:3854":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:10270:18909":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:1083:6331":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:6816:4081":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:1422:6440":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:1564:4360":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:7008:5398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:12291:3371":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:5508:5057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:3234:6573":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"12:1832:4360":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:10688:11888":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13047:3616":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:11685:2767":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:2727:3826":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"7:0:1507":{"crate_id":7,"path":["unwind"],"kind":"module"},"12:1003:6448":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:53339:5851":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:50624:5486":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:5411:3839":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:3568:2628":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:9805:3062":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:4689:3882":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13031:3614":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:13536:3769":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:6345:3841":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:22201:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:4591:4903":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:8140:6680":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"12:762:2616":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:6719:33818":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:7656:6423":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:11576:3245":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:355:6414":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:1511:4546":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:488:4477":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:8159:5746":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:8213:5975":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:10444:2754":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:2930:17826":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:7929:18706":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:51000:5748":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:3943:6439":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:50726:5475":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"18:80:22565":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"5:6484:2669":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:4419:6640":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:47096:6336":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:52791:5822":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"9:896:17598":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:4257:4781":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11893:3288":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:22399:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:57585:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"10:0:2064":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:5533:5062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:12337:3049":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:0:487":{"crate_id":2,"path":["core"],"kind":"module"},"1:11859:727":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:11856:729":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"14:31:6323":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:5460:3898":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:52613:5810":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:21613:5495":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:11861:1461":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:482:4474":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:10546:18777":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:49757:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"16:6472:4030":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:51315:5767":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:6877:18698":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:10182:3024":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:4103:4360":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:20847:6618":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:49796:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:6991:5388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:4441:3875":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:8881:33900":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:12073:3333":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:6503:2681":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:4289:2691":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10497:18937":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:7475:6355":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:7253:5408":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:5494:5467":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:9885:18899":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:54664:5903":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:8176:6589":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:13518:3763":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11087:3133":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:12324:2715":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"12:659:2347":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:4726:4970":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:2884:33697":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:1931:18810":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:47799:5662":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:2784:12053":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:20473:31381":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:10682:3077":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:4112:4690":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:5661:31416":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:11809:24049":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:22069:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:10128:5738":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:2790:4104":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:52490:5805":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11217:3158":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:5447:18682":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:6610:30809":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:3908:6604":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:47001:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:5482:5042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:7166:18699":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:5628:3916":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:8265:6664":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:52668:5813":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:9539:18811":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"18:690:2837":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:12349:3380":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7059:5700":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4826:5014":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13557:3772":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:4585:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:52650:5812":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:5745:2730":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:46882:5603":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:51338:5775":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:7909:4220":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12748:3544":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:10608:2916":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:7388:18701":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11873:3287":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:9692:6618":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:51521:5791":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:30074:29712":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:4095:6632":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:8956:2411":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:8432:6690":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:6918:2347":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:7372:33817":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:52336:5799":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:2705:3825":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:6458:5311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:2995:6470":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:6528:4042":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:5615:5108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:10806:6344":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:7148:2293":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:5578:5094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:6738:6773":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:10708:3078":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:4663:4937":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:5203:2941":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:29980:5534":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"9:188:17647":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"14:202:11920":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:9702:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:50830:5738":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7469:3851":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:5815:18686":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:1547:4562":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:123:12495":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:20405:2324":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:11708:3263":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:2802:12055":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:9183:18775":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:6933:2653":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:6171:3984":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"12:1872:4366":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"18:538:2818":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:54183:5892":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:4201:4753":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:6668:4063":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:12103:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6123:3833":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:50270:5720":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:50532:5483":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11974:3323":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"18:521:22580":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:4144:3867":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:10360:3033":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"5:2162:5432":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:4001:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:4264:2658":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:51034:5611":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:7516:31384":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:9987:25822":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:652:12853":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:11939:3312":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:2631:3822":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:8047:6539":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:1065:6448":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11865:775":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:7641:6420":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:2921:6455":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:9627:18820":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:5305:6700":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:54371:5894":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:9279:12001":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:5549:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:3916:6605":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:10405:6573":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:21696:5506":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"15:214:17783":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:7125:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12756:3545":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:9937:5478":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"12:646:6439":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:2433:3814":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:8392:5714":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:10612:6666":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:10088:3018":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:51449:5780":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:12768:3550":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:6339:5267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:22300:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:49784:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"16:5433:3894":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:3977:30359":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:51132:5754":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:47082:4144":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:6865:4089":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:54293:5893":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:47608:5637":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:5596:3911":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:4736:4971":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:9864:5691":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"16:4721:3883":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:588:6417":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4364:4835":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:9691:18834":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:46937:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:1771:599":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:4807:5006":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12730:3539":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"14:40:3112":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:5391:2669":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:54541:5897":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:54617:5899":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:4654:4931":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:8225:6636":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:5949:3965":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:12237:3365":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:10520:3059":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:50696:5729":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:48794:4360":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:3389:11944":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:9577:2972":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:12313:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:11864:1460":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:11075:6015":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:11828:3282":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:20871:6618":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:6555:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:9071:33882":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:5551:5074":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:3377:11940":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:50055:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"8:0:2062":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12739:3543":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:3188:3858":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:6903:6011":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:595:4540":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"11:44:4376":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:3326:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:8966:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:1586:4364":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:5990:2732":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:5233:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:4550:4881":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:5780:3936":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:8291:5978":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:2341:3810":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:8247:5977":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:9012:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"12:834:6445":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:3125:23560":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:8843:6731":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:13594:3779":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:7980:18708":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"14:0:2067":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:11271:3164":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:7840:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:11684:3262":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:5558:18684":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:7944:6571":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:6474:2355":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:13231:3668":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:4693:4953":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:11857:730":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:47739:5654":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:2301:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:8781:6005":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:2991:6469":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11844:1480":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:2866:12064":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:12251:3366":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:39883:2318":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:11436:3199":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:11034:3126":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:3680:2616":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:5546:2728":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:10321:3026":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:12046:3331":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:52937:5826":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:4561:5282":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:6781:18697":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:4159:6634":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:1684:4660":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:13221:3663":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:914:2616":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:10506:3056":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:12008:3326":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:20721:6777":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"9:19:17667":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:4296:4798":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6519:5354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"18:564:2820":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:48870:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:5482:5188":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:51634:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:1524:4552":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:2361:6531":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"18:599:33907":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:21287:5490":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:51453:5781":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"6:5682:5150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:8324:6672":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:53181:5834":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:21820:6599":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"9:920:17599":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:9820:18896":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:21794:5522":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:53385:5852":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"18:681:2834":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:13214:3661":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:53158:5833":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:2498:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:5544:5070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:6656:12027":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:7479:12031":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:3086:4360":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"5:7000:2347":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"12:387:33804":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:50848:5739":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:49371:6720":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"18:590:2821":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:11056:6034":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:6593:4056":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:9601:2974":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:1636:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:48929:6439":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:4267:4787":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:11149:3143":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:10706:23716":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:5882:5468":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:4344:2692":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:21629:5496":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"12:985:4090":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:11059:12164":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:7788:6521":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:12103:3338":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:11307:2763":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:11465:6046":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:9712:2975":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:21742:29738":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:11814:6427":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"18:671:22577":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:49733:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"12:2053:4090":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:49870:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:10655:11887":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:10949:3097":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:526:4502":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:2973:11855":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:8501:6000":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:9976:11886":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:7006:2347":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:1692:4661":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:9293:18801":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:1959:5422":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:2604:5436":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:4377:4839":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:8418:18767":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:22831:5529":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"12:393:33800":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:46979:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"3:0:434":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:5737:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:9700:18833":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:6385:5286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:7266:24045":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:11526:11900":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:8272:18762":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:4939:2667":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:2261:17799":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:47748:5655":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:8393:18766":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:8055:18745":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:534:2718":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:2683:3824":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:9223:18786":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:3151:12065":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:3206:11853":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9364:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:6534:5361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:568:4525":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13114:3638":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:474:4469":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:10385:3042":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:8767:6004":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:632:6332":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:11145:6035":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:8970:24054":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:7117:33862":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:2874:33698":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:7592:5922":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:11232:6043":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10245:18933":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:939:6444":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:50030:5710":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:8165:6594":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:47827:5664":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:54495:5896":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:4563:11979":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:10087:11891":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:1606:4601":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:781:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:12265:3369":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:1771:18815":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:5705:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:10999:6004":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:3178:11960":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:2873:1817":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:9845:4360":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:53575:5855":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:48937:2347":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:6601:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:11137:3142":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:10641:5927":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:13148:3646":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:8096:5970":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:7637:4173":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:54701:5906":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:4837:6663":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:6582:5379":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"14:160:6323":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:13393:3730":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4371:4837":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:6316:4001":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:6875:6353":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:9303:2959":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:3640:2347":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:11547:3240":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:6217:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:891:4362":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:20450:31382":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:1720:4674":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:8295:18763":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:54754:5909":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:8014:4144":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:54655:5902":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:4525:4870":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:4437:4851":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:5143:11874":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:9230:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:3249:18883":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:48543:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:5730:5172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:5676:6722":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:6241:3991":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7053:5442":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:7823:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:3279:6566":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:1894:13830":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:20471:31377":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:8137:18758":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:47617:5638":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"12:1845:2616":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"5:273:2628":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:48024:5668":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:21:668":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:2539:2722":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:7158:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:8474:5996":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:4304:4803":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:11075:6341":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:30016:29713":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:10233:18932":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:9102:6017":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"18:614:33910":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:1642:4631":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:1366:4360":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:8080:2849":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:3665:6595":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:12816:3559":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12797:3558":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:47716:5652":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:47456:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:1404:4361":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:956:6446":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:5743:5176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:9738:2978":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:11866:1517":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"9:622:17618":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:8955:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:48039:5671":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:50038:5712":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:1413:4362":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:1243:6448":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:4814:5009":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:48785:1659":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:10403:3081":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:49854:12149":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"5:3119:4365":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:5723:5170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:4506:4858":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:50744:5479":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:1586:4587":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:2501:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:30002:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:13184:3655":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:14:1700":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:8978:6011":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:8805:2347":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:7236:5403":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"19:0:1011":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:9110:23828":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","DtorState"],"kind":"enum"},"1:3444:6541":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:11862:1462":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:12909:3583":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:11447:6045":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:2210:6522":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:8935:23225":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"12:1065:33799":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:57637:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10583:18778":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:967:18800":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:38678:2324":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:53127:5832":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:7249:18700":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:3894:6603":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:4635:3880":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:1989:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2837:4109":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:2367:3811":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:50930:5744":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:2723:2317":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:9022:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:4545:3877":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"9:586:4379":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"16:5163:3891":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:4547:6606":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:13413:3733":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:13091:3630":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:8141:6679":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:21669:5504":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"14:7:6323":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:52761:5821":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:8596:2946":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:3864:6601":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"5:5139:11873":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:10121:3021":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:9054:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:4575:4894":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:47386:11986":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:870:2347":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:54635:5900":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:21486:5491":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:5737:3932":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:11855:732":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:4569:4892":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:6252:3992":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:7093:4127":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:2683:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:48802:6439":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:51025:5626":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2936:2291":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:49291:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:12164:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:4662:3881":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"13:108:33806":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:52382:5801":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:4755:4979":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:7224:5401":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:3477:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:7942:18707":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:7047:12033":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:4820:5011":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"12:861:6447":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:1257:6331":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:10631:6021":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"12:1836:2347":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:386:18756":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:6276:2347":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:47461:5633":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:3243:11854":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:12134:3343":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:10490:3055":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:2605:3821":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:5122:3890":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:3457:2859":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:11485:3224":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:12137:30283":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:2094:5426":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:11661:3257":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:13382:3725":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:1903:18845":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:13327:3706":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:3601:6592":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:10139:2966":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:10455:3051":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:6146:3978":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:50634:11889":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:7218:5400":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:784:2631":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:47380:5611":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:4:995":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:48921:4360":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:54675:5904":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:6082:2739":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8231:6628":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11813:3279":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"5:3245:2616":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"5:6351:2628":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:920:6440":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:36:2624":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:2487:3816":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:6567:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:1672:1067":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:10822:18780":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13071:3623":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:3978:6611":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:5541:3905":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"12:0:2066":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:2680:2314":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:12955:3596":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"12:632:4360":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:47089:30187":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:8415:5991":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:5751:5178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6186:3835":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4284:4793":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:9501:2959":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:679:6426":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:5592:5095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:11841:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:8108:6542":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:8774:2952":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:11867:1104":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:11787:3275":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:7513:2748":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:10466:3052":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:4057:25820":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:962:6447":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"12:2178:4367":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:6137:3977":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:10875:3088":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"12:2069:6448":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:9083:6016":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:22168:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:3932:2658":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:11497:6050":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"12:300:4357":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:10207:18922":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:51500:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:6818:2761":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","Key"],"kind":"struct"},"16:2509:3817":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:8339:18764":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:10774:3031":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:5670:5145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:7659:18705":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:4557:5278":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:12896:3577":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:12695:3538":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:4234:2661":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:5165:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:48583:5680":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:5871:5216":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:38661:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:6066:2715":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:51226:5764":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:4262:3869":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:2810:12056":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:51304:11913":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:3312:5671":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:4622:6665":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:707:2840":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:9284:5474":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"12:1120:17759":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:11854:632":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:7864:5422":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:638:6422":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:4602:4911":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:4034:2658":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:7230:5402":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:3451:6560":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:4108:6633":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:52861:5824":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:21592:5493":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:9274:18789":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:13279:3705":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:4849:3887":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:49500:2405":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:3010:17827":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:8859:6732":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:11592:11910":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:47103:5610":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:13007:3605":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:9016:2404":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:7483:3852":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:6284:3853":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:11997:3324":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"12:1138:6331":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:7176:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:11199:6040":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"12:1852:4363":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:12211:3363":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:1849:6493":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:1443:6442":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:7098:5443":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:49331:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:20602:6783":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"12:777:2620":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:153:2607":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:10654:6029":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:4397:6639":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"9:592:17617":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:13134:3644":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:1601:4599":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:11521:11903":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:5564:5083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13168:3652":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:11515:3233":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:10752:3081":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:2736:2289":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:4064:2658":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:1713:4671":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:8139:6681":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:47546:6520":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:4239:6635":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:7575:6618":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:6963:5385":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:4675:4942":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:12116:11998":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:5669:6721":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:6034:18690":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:2749:3827":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:6313:28919":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:11288:3172":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:8789:4360":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:8732:31383":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:50067:5714":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:5007:28897":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:47355:5619":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:53497:5854":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:5759:5181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:10819:6706":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:47586:6467":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:48708:5695":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:6332:5263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:9897:18900":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:3623:6459":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:11310:5743":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:11951:3314":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:9160:30362":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:11825:23715":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:1575:2616":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:10420:3046":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:1847:6358":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:4311:6629":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:8811:6006":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:6157:2653":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:6003:6814":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:47291:5613":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:7237:4146":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:532:4505":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:7825:4210":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:6909:5419":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:47333:5617":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"18:507:2810":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:4222:4763":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"12:1044:17757":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5219:2942":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:5741:12414":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:7289:5415":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:10210:28726":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:12630:3502":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:8923:6403":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:52316:5798":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"12:822:6444":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:4327:3871":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7511:4159":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"5:2142:33664":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:7699:28422":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:4327:4816":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:47707:5651":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:11247:3162":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13436:3746":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"12:60:33803":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:3970:6609":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:8110:18743":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:3342:2658":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:10108:18863":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:8564:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:4150:5464":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:4708:4959":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:547:4514":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:7265:5410":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6052:18691":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:21393:6618":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:9857:18878":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:52907:5825":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:46796:11959":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:8666:2948":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:9475:18814":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:8494:2941":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:836:2634":{"crate_id":5,"path":["alloc","collections","binary_heap","retain","RebuildOnDrop"],"kind":"struct"},"5:1376:6439":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:6463:4029":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:4413:3874":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:2657:3823":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:49493:2404":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:11858:731":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:50542:11884":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:50085:5719":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:2908:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:8368:18765":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:5664:3923":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:10193:6704":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:7051:12032":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:5614:3915":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:47696:5650":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:10062:18866":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:8245:11900":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:22234:5527":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:2861:12063":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"7:79:17591":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:8941:18770":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:52406:5802":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:53261:5835":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:4976:28897":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:950:6445":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:3119:28701":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:11639:3256":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:2939:1668":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:7141:5449":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"5:6971:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:3854:3866":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12860:3572":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:7848:23558":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:20878:6781":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4087:6631":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:7235:2616":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:1074:6449":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13374:3724":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:8830:6007":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:6602:28919":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"9:649:17619":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:51725:5797":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:4227:6335":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:22333:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:7576:5921":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:2375:5433":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:6496:18694":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12926:3588":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:2868:3832":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:4290:4795":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:48066:5674":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:7357:4153":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:8735:6705":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:62:12440":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:8056:4229":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:8958:28923":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:51290:5766":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4216:4760":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:7298:4151":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:4728:31281":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:5878:17798":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:13572:3773":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:9483:2704":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:22135:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:11234:5732":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:1788:6477":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6735:18695":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:11294:5740":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:7435:4157":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:4219:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"12:815:6443":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:6489:5337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:2300:3803":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:6564:5376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:2771:3828":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:49131:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:50605:5485":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:6513:2682":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"6:4747:4977":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:10476:18936":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:9250:18787":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:10670:3076":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:3166:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:4786:3885":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:11345:5478":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:48672:5694":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:11535:2840":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:9831:18897":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:1021:18802":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:49818:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:11199:3150":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:3956:6607":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:57598:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11343:3191":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:7278:3847":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:9064:6015":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"12:1840:2653":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:7532:2750":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:929:6442":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:3157:6575":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"18:531:2815":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:11847:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:10445:3049":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:7329:3849":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:2458:6618":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:4345:4825":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:11214:6175":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:5422:6706":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:2894:17825":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:49766:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"5:4297:2661":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:1463:6458":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:2208:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:7567:18704":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:9026:2413":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:2806:12054":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:9371:6521":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:9433:18795":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:7309:3848":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:50776:5735":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:2857:12062":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:4749:3884":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:5709:5159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:9947:18901":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:11909:3293":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:8965:24070":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:8342:5988":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:1643:5454":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:39870:28422":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:7211:3940":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:47442:5632":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:4125:4699":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:12972:3599":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:51461:5783":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13580:3776":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:7934:28900":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:58912:5919":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"18:96:22566":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:1432:6441":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:2682:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:6270:3836":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2849:12060":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:6321:5258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:50077:5718":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:5520:5061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:6017:18689":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:12948:3594":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:47595:5636":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:8162:18759":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11617:3249":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:3989:30358":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:2389:3812":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:1612:2628":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10221:18931":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:500:4482":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4459:4853":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:4024:11852":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:20418:31324":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:20880:5488":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:2842:3831":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:7856:6349":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:8631:2947":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11161:3146":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:10676:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:13059:3622":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4136:4707":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:4778:4987":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:9658:18856":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:506:4485":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:1701:4667":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:3966:6608":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12307:3373":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:20665:6785":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:11748:3271":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"18:515:2813":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:2672:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:48649:29729":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:0:2070":{"crate_id":17,"path":["object"],"kind":"module"},"14:165:17767":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:4373:2322":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:20690:6775":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:57202:6812":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:9422:18796":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:5907:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:8912:24046":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:7603:4169":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:7299:5417":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:3197:6578":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:1919:5462":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:11019:5788":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"6:4639:4927":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:573:4527":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:9013:6014":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:52959:5827":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:1071:33696":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:9014:2405":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"11:36:4375":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"6:7276:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:3599:3862":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:7783:2895":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:6303:5251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:10625:3074":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:5539:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:6161:18692":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:1091:32636":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:3506:2653":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:20433:31324":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:1580:4585":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13024:3613":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:54716:5907":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12164:3349":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"12:2198:4371":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:8797:6730":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"12:1859:4364":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:2832:12059":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:47319:5616":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:2684:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:1538:4557":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:4310:4806":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:11559:3242":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:2320:3809":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:4666:6621":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"0:0:1707":{"crate_id":0,"path":["heck"],"kind":"module"},"2:47729:5653":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:4707:6428":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:6567:4055":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:7890:4217":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:49051:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:12189:11999":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:4427:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:5510:3900":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:8737:30840":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:679:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:50876:5741":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:48017:5667":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:1744:4683":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:12060:3332":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:3488:4360":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:4700:984":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:7088:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:4662:6617":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:7587:6395":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:9930:2986":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:9020:2415":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:562:3086":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:119:12494":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:6619:4057":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:6350:5668":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:1614:4606":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:48058:5672":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:1454:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:11860:1464":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:5891:2728":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:4669:4939":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:10399:6575":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"18:660:22576":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:4217:3868":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:1051:4090":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:11849:1368":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:5319:6701":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:3662:6596":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:11235:3159":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:5235:3892":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:4499:4856":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:1751:5455":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:12674:3533":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:4888:3888":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:10402:6577":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"6:5635:5124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:10831:23718":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:2749:2319":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:13366:3721":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:219:2626":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"18:699:2838":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"12:1866:4365":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4149:4717":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:12381:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:8152:5475":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:54041:5891":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:5453:5018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"12:119:2610":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:2065:5424":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:8146:2950":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:8871:18769":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:11186:3149":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:47646:5642":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:52715:5814":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:3172:11961":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:50670:5725":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:4722:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:6842:4087":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:2359:6530":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:5490:5044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:6312:5257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:5981:3970":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:12874:3573":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:52512:5806":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:3501:6439":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:46835:11856":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"18:636:2833":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"9:827:17693":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:5702:5158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:51018:5750":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:6463:6350":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:2798:6772":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:10283:18908":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:7396:18702":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:7084:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:7793:5927":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:5761:18685":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:4615:4916":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:4297:3870":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:2345:6526":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:9844:18862":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:47678:5648":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:1674:4654":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:50980:5746":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:5525:3903":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:7288:4150":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:6109:3975":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:860:6439":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:534:3791":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:48600:6591":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:4743:6616":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:52983:5828":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4210:4758":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:6354:6724":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:11761:3272":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:50285:5721":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:1556:4568":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"9:977:4450":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:6114:23998":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"5:3902:2628":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:50289:5722":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"18:582:2324":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:8951:33899":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:11843:410":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"18:481:2808":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:1228:6449":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:734:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:21758:29736":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"9:863:17597":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:0:2069":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:1329:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:2507:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:10374:3038":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"12:2080:6449":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:505:2646":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:20678:6618":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:4561:4888":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"13:0:2060":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:4720:2726":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:1568:2347":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:54433:5895":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:5472:3838":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"18:652:2810":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:4559:5280":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:4771:4984":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:6548:5370":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"12:2205:5442":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:3387:6540":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4537:4877":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:4108:5463":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:1898:6345":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:11330:3187":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4631:4923":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:2459:11992":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:50684:5728":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:3263:3859":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:6676:3843":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:10973:3111":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"13:220:4352":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:11541:11901":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:1580:4363":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:6533:2744":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:4357:3872":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:51445:5779":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:52591:5809":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:48629:5687":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:53685:5858":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:6941:2640":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:11226:6042":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:9500:2705":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:2592:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"16:7543:3840":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:3426:2411":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:11721:3266":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:7065:6438":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:6425:5295":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:10666:5928":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:13478:3752":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:2213:2687":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:50990:5747":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:7180:6333":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:8796:2953":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:47343:5618":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11300:3175":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:12198:3362":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11259:3163":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:3435:23647":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:1212:4090":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"11:0:2065":{"crate_id":11,"path":["adler"],"kind":"module"},"2:54579:5898":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:8701:2949":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:4754:781":{"crate_id":2,"path":["core","iter"],"kind":"module"},"12:853:6446":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:7128:5446":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:8220:5976":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:5851:5202":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:9339:18797":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:47788:5659":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:21721:29697":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:9018:2414":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:13039:3615":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:641:6424":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:9061:2966":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:53005:5829":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:53621:5856":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:20852:6776":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:10142:5739":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:5845:5201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:6287:5239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:48566:5678":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"12:751:2653":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:247:33898":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:10932:2758":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:9059:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:5703:3926":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:9751:2980":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:5792:5190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:4519:3876":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"14:221:4307":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"14:215:4305":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:4389:4848":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:2831:2725":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"18:624:33911":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:9671:18827":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:47636:5641":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:6517:4041":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:2306:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:10997:3112":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:4788:4992":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:4447:4852":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:2055:2646":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:3858:6602":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:51043:5619":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:9043:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:2794:6770":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:4817:3886":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:2763:6769":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:4664:6620":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:8510:2942":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:20727:6779":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:6203:2628":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:13141:3645":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:2793:3829":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:9283:18803":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:0:1360":{"crate_id":1,"path":["std"],"kind":"module"},"1:6169:2728":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:9869:6439":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:57611:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10894:3091":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:52631:5811":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:1962:18832":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:4886:6671":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:10696:5970":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:288:2295":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:3922:6606":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10159:3023":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:1571:2653":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:47778:5658":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:8752:2950":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:9376:2752":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:9244:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:5368:6704":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:10257:18910":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:2579:3820":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2773:4103":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:2679:1912":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:5514:5060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:6949:33673":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:21299:31328":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"18:755:2853":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:8981:18771":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:12934:3591":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:2993:3855":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:47687:5649":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:7679:6482":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:4339:4822":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:1737:12091":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:4079:6630":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:8171:6593":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:7169:5450":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:25641:5530":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:9328:18798":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:12176:3351":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:12980:3601":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:10796:3083":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:4491:6655":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:9458:18826":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"12:353:2614":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:3195:6577":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:49171:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:11841:3283":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:2282:3801":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:7939:24044":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:51652:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:6704:4065":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:4353:6337":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:2337:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:7847:4211":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:8991:33897":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:1568:4577":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:5053:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:47536:2693":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"7:32:17584":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:7343:3850":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:20639:6784":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:6743:18696":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:51644:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:51533:12207":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:4828:6662":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:4606:3879":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:51253:5765":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:5694:5157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:6376:18693":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:925:6441":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"15:0:2068":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:2867:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:11070:3131":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:6917:2746":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:50553:5723":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:4189:4750":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:10849:6005":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:47813:5663":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:11734:2991":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:2549:2705":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:10528:18776":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:587:4535":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:5886:5227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:50702:5730":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:1786:6476":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:13340:3712":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:9108:18773":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:2578:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:8139:5662":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"5:3093:4364":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:51178:5763":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:8561:2945":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:58933:5920":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:11868:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:52813:5823":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:242:33896":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:49751:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:12884:3574":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:51465:5784":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:57572:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:51147:5760":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:52360:5800":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:47423:11987":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:6924:5440":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:2343:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"4:0:2061":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12322:3377":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:54739:5908":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:11500:3228":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:50948:5745":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:47023:6432":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:11546:11899":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"18:719:2844":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:1552:2658":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:13158:3649":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:11315:3181":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:2252:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:3051:6582":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:558:6405":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:6963:2347":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:7497:3842":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:10123:6709":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:554:4517":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:11089:11904":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:54831:5912":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"12:1534:17761":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:48946:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:6690:3844":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:5095:2628":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"5:864:2636":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:2504:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:8490:5999":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:420:2902":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:2827:12058":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:47409:5627":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:2232:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:29757:6598":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:12964:3597":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:4574:3878":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:4471:4854":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:2822:12057":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:6519:6729":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:22366:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:5485:6707":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:541:4511":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:48048:2699":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:3088:6471":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:48685:5975":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:47664:5645":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11356:3192":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:10845:3049":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:49011:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:961:2628":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:5339:6702":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:562:4522":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:7267:4147":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:52561:5808":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"18:113:22567":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:11128:2759":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:9515:2710":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:1728:4678":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:2825:3830":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:51737:4374":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:10298:6705":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:7800:5928":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:47764:2831":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:2495:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:4408:4849":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:47073:5609":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"9:956:17600":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:2465:3815":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:53080:5831":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:9382:2961":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12087:3336":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"12:274:4354":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:3699:2628":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:12148:3345":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:11370:6595":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:6510:5351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:13176:3653":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:22267:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:9371:18773":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:4818:2658":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"18:0:2071":{"crate_id":18,"path":["memchr"],"kind":"module"},"12:1518:17760":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:12033:3329":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"9:676:17605":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"16:5793:3794":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:1986:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:9007:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:50513:5481":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:13354:3718":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:3127:4363":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12836:3567":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:9791:2983":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:7472:6450":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:10156:11893":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:9488:18813":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12850:3571":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:47489:5634":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11853:3284":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:39834:4370":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:4222:6334":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:10350:3031":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:1649:4635":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:9894:5475":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:621:6343":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11774:3274":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:904:2653":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:5996:18688":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:22432:5528":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:2843:4110":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:47416:5628":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6210:3988":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:9644:18808":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:10987:6003":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:50592:11878":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:13506:3761":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:11330:6596":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:51469:5785":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:11054:3127":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:2535:3818":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:1927:6505":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"18:491:2809":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:5597:5096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:574:2810":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:48720:5696":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:10686:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:21704:5507":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:1531:4554":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11850:1446":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:4516:4865":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:46957:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:51009:5749":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:53415:5853":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:3122:23554":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:4630:657":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:3872:2653":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:9021:18772":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:4317:4809":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:49507:2414":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:13404:3731":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:5184:17797":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:1707:4670":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:5417:5465":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:487:18757":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:9024:2412":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13492:3754":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:4218:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:8526:2943":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:11846:1029":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:4716:4964":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:48852:6338":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:4081:11970":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:50453:30360":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:1660:4643":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10921:3092":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4106:4689":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:48861:12140":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:47626:5639":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:11606:3248":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"18:766:22579":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:10854:18781":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:3098:33719":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:5354:6703":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:49211:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:3161:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"12:1029:6449":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:6390:2743":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:10170:11892":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:3153:4366":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:12118:3342":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:7044:33847":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:39874:5599":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:10332:18935":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:1055:32638":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:8087:5969":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:8129:5636":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:6279:5234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:8911:33894":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"15:193:17779":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"14:187:17773":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"12:98:4353":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:7097:2294":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:484:2717":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:48010:5666":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:54644:5901":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:12225:3364":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:57624:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:9401:2701":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:11482:6695":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"5:5814:2658":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:7695:6344":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"18:644:2810":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:7426:18703":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:2154:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:11014:3116":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:4485:4855":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:46897:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:20452:31379":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:9118:33881":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:50579:5484":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11528:3235":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:3402:3860":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:10296:18907":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:47402:5626":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:54690:5905":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:13126:3641":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}