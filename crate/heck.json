{"root":"0:0:1702","crate_version":"0.4.1","includes_private":false,"index":{"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,81],"end":[57,97]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::ToShoutySnekCase","name":"ToShoutySnekCase","id":"0:63:1635","glob":false}},"0:129:1564":{"id":"0:129:1564","crate_id":0,"name":"0","span":{"filename":"src/train.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:132:656":{"id":"0:132:656","crate_id":0,"name":"fmt","span":{"filename":"src/train.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63:1635":{"id":"0:63:1635","crate_id":0,"name":"ToShoutySnekCase","span":{"filename":"src/shouty_snake.rs","begin":[25,0],"end":[29,1]},"visibility":"public","docs":"Oh heck, ToShoutySnekCase is an alias for ToShoutySnakeCase. See\nToShoutySnakeCase for more documentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:64:1906"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:65"]}},"2:11532:27562":{"id":"2:11532:27562","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:11169:11900","str::rsplitn":"2:11535:27564","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50213:5711","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:26:1629":{"id":"0:26:1629","crate_id":0,"name":"ToLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a lower camel case conversion.\n\nIn lowerCamelCase, word boundaries are indicated by capital letters,\nexcepting the first word.\n\n## Example:\n\n```rust\nuse heck::ToLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(sentence.to_lower_camel_case(), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:27:1858"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:28"]}},"2:11517:1655":{"id":"2:11517:1655","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"2:11495:29911","self::pattern":"2:11169:11900","str::rsplit":"2:11523:27560","prim@char":"1:12310:409","`DoubleEndedIterator`":"2:7120:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50109:5472","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:126:1642":{"id":"b:2:2506-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2509:2332":{"id":"2:2509:2332","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2483:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5241:23028":{"id":"5:5241:23028","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11589:23031"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5488-0:92:1636":{"id":"b:5:5488-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11576:32967":{"id":"2:11576:32967","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:11900"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:11:1811":{"id":"0:11:1811","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[23,4],"end":[25,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5223:33621":{"id":"5:5223:33621","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6845:5416","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6845:5416","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18:656":{"id":"0:18:656","crate_id":0,"name":"fmt","span":{"filename":"src/kebab.rs","begin":[41,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89:1931":{"id":"0:89:1931","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2651:217-0:70:1632":{"id":"a:2:2651:217-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:125:2008":{"id":"0:125:2008","crate_id":0,"name":"to_train_case","span":{"filename":"src/train.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5488-0:48:1630":{"id":"b:5:5488-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11593:6415":{"id":"2:11593:6415","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4496:6415"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50417:5608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11476:26335":{"id":"2:11476:26335","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10737:11901"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11482:27524":{"id":"2:11482:27524","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48127:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11582:32969":{"id":"2:11582:32969","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:11900"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3306-0:48:1630":{"id":"b:2:3306-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:122:1643":{"id":"0:122:1643","crate_id":0,"name":"ToTrainCase","span":{"filename":"src/train.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a train case conversion.\n\nIn Train-Case, word boundaries are indicated by hyphens and words start\nwith Capital Letters.\n\n## Example:\n\n```rust\nuse heck::ToTrainCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_train_case(), \"We-Are-Going-To-Inherit-The-Earth\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:123:2008"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:124"]}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:134:1625","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUpperCamelCase","id":"0:139:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:142:2038"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11564:32965":{"id":"2:11564:32965","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11194:11896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:148:1644":{"id":"a:2:2665:225-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,42],"end":[55,59]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_kebab::ToShoutyKebabCase","name":"ToShoutyKebabCase","id":"0:44:1631","glob":false}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[40,0],"end":[44,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:18:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7787:6678-0:30:1628":{"id":"a:2:7787:6678-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5238:1700":{"id":"5:5238:1700","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5240:6576":{"id":"5:5240:6576","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11541:32956":{"id":"2:11541:32956","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70:1632":{"id":"0:70:1632","crate_id":0,"name":"AsShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[53,0],"end":[53,51]},"visibility":"public","docs":"This wrapper performs a shouty snake  case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(format!(\"{}\", AsShoutySnakeCase(sentence)), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:73:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:70:1632","a:2:2665:225-0:70:1632","a:2:2651:217-0:70:1632","a:2:7786:6679-0:70:1632","a:2:7787:6678-0:70:1632","b:2:3306-0:70:1632","b:2:2506-0:70:1632","b:2:2510-0:70:1632","b:2:2521-0:70:1632","b:2:2516-0:70:1632","b:2:2234-0:70:1632","b:2:2237-0:70:1632","b:5:5488-0:70:1632","0:74"]}},"2:2519:127":{"id":"2:2519:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:11585:32970":{"id":"2:11585:32970","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:11130:6693","FromStr::Err":"2:11131:126"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11130:6693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11130:6693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:12:1626":{"id":"a:2:2665:225-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5227:33622":{"id":"5:5227:33622","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11506:27568":{"id":"2:11506:27568","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:11900"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143:1646":{"id":"0:143:1646","crate_id":0,"name":"ToPascalCase","span":{"filename":"src/upper_camel.rs","begin":[31,0],"end":[34,1]},"visibility":"public","docs":"ToPascalCase is an alias for ToUpperCamelCase. See ToUpperCamelCase for more\ndocumentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:144:2041"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:145"]}},"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[55,23],"end":[55,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_kebab::AsShoutyKebabCase","name":"AsShoutyKebabCase","id":"0:48:1630","glob":false}},"b:2:2237-0:109:1640":{"id":"b:2:2237-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11470:32946":{"id":"2:11470:32946","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:29:1858":{"id":"0:29:1858","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2715:2284-0:148:1644":{"id":"a:2:2715:2284-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11491:27550":{"id":"2:11491:27550","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11490:27549"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2236:2158":{"id":"2:2236:2158","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2510-0:109:1640":{"id":"b:2:2510-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11497:27135":{"id":"2:11497:27135","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50363:5719","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2651:217-0:148:1644":{"id":"a:2:2651:217-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2516-0:109:1640":{"id":"b:2:2516-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2651:217-0:12:1626":{"id":"a:2:2651:217-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:126:1642":{"id":"0:126:1642","crate_id":0,"name":"AsTrainCase","span":{"filename":"src/train.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a train case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTrainCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsTrainCase(sentence)), \"We-Are-Going-To-Inherit-The-Earth\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:129:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:126:1642","a:2:2665:225-0:126:1642","a:2:2651:217-0:126:1642","a:2:7786:6679-0:126:1642","a:2:7787:6678-0:126:1642","b:2:3306-0:126:1642","b:2:2506-0:126:1642","b:2:2510-0:126:1642","b:2:2521-0:126:1642","b:2:2516-0:126:1642","b:2:2234-0:126:1642","b:2:2237-0:126:1642","b:5:5488-0:126:1642","0:130"]}},"2:11535:27564":{"id":"2:11535:27564","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12310:409","str::splitn":"2:11532:27562","self::pattern":"2:11169:11900"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50231:5712","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2715:2284-0:109:1640":{"id":"a:2:2715:2284-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:39:1620","path":"::shouty_kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:54:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2665:225-0:126:1642":{"id":"a:2:2665:225-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2516-0:126:1642":{"id":"b:2:2516-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:85:1639":{"id":"0:85:1639","crate_id":0,"name":"ToSnekCase","span":{"filename":"src/snake.rs","begin":[24,0],"end":[27,1]},"visibility":"public","docs":"Oh heck, SnekCase is an alias for ToSnakeCase. See ToSnakeCase for\nmore documentation.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:86:1931"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:87"]}},"b:2:2234-0:92:1636":{"id":"b:2:2234-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,56],"end":[63,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::ToPascalCase","name":"ToPascalCase","id":"0:143:1646","glob":false}},"2:11590:23032":{"id":"2:11590:23032","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86:1931":{"id":"0:86:1931","crate_id":0,"name":"to_snek_case","span":{"filename":"src/snake.rs","begin":[26,4],"end":[26,42]},"visibility":"default","docs":"Convert this type to snek case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11492:1692":{"id":"2:11492:1692","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50079:5702","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2234-0:12:1626":{"id":"b:2:2234-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:30:1628":{"id":"0:30:1628","crate_id":0,"name":"AsLowerCamelCase","span":{"filename":"src/lower_camel.rs","begin":[39,0],"end":[39,50]},"visibility":"public","docs":"This wrapper performs a lower camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsLowerCamelCase;\n\nlet sentence = \"It is we who built these palaces and cities.\";\nassert_eq!(format!(\"{}\", AsLowerCamelCase(sentence)), \"itIsWeWhoBuiltThesePalacesAndCities\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:33:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:30:1628","a:2:2665:225-0:30:1628","a:2:2651:217-0:30:1628","a:2:7786:6679-0:30:1628","a:2:7787:6678-0:30:1628","b:2:3306-0:30:1628","b:2:2506-0:30:1628","b:2:2510-0:30:1628","b:2:2521-0:30:1628","b:2:2516-0:30:1628","b:2:2234-0:30:1628","b:2:2237-0:30:1628","b:5:5488-0:30:1628","0:34"]}},"a:2:7787:6678-0:12:1626":{"id":"a:2:7787:6678-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7786:6679-0:126:1642":{"id":"a:2:7786:6679-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3308:1451":{"id":"2:3308:1451","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46617:5606","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5488-0:30:1628":{"id":"b:5:5488-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11589:23031":{"id":"2:11589:23031","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11567:32966":{"id":"2:11567:32966","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:11900"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:2041":{"id":"0:147:2041","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[37,4],"end":[39,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:67:1906":{"id":"0:67:1906","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[32,4],"end":[34,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:100:1623","path":"::title"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:115:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11480:27523":{"id":"2:11480:27523","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48127:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2234-0:70:1632":{"id":"b:2:2234-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:70:1632":{"id":"b:2:2237-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3306-0:70:1632":{"id":"b:2:3306-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5224:6558":{"id":"5:5224:6558","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11500:27566":{"id":"2:11500:27566","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:11900"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2510-0:12:1626":{"id":"b:2:2510-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2520:1438":{"id":"2:2520:1438","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7786:6679-0:70:1632":{"id":"a:2:7786:6679-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2506-0:30:1628":{"id":"b:2:2506-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:36:656":{"id":"0:36:656","crate_id":0,"name":"fmt","span":{"filename":"src/lower_camel.rs","begin":[42,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11496:29923":{"id":"2:11496:29923","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11495:29911"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50392:5722","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[41,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:20:1619","path":"::lower_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:36:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:9:1811":{"id":"0:9:1811","crate_id":0,"name":"to_kebab_case","span":{"filename":"src/kebab.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to kebab case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3306-0:126:1642":{"id":"b:2:3306-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11471:32947":{"id":"2:11471:32947","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11467":{"id":"2:11467","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10732:1363","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11468:796","2:11469:2339","2:11470:32946","2:11471:32947","2:11473:32948","2:11476:26335","2:11477:32949","2:11478:310","2:11479:27527","2:11480:27523","2:11482:27524","2:11484:27525","2:11486:27526","2:11488:32950","2:11489:32951","2:11490:27549","2:11491:27550","2:11492:1692","2:11493:1681","2:11494:5445","2:11495:29911","2:11496:29923","2:11497:27135","2:11498:32952","2:11499:30162","2:11500:27566","2:11503:27567","2:11506:27568","2:11509:2378","2:11513:2338","2:11517:1655","2:11520:27558","2:11523:27560","2:11526:32953","2:11529:32954","2:11532:27562","2:11535:27564","2:11538:32955","2:11541:32956","2:11544:2173","2:11547:32957","2:11550:32958","2:11553:32959","2:11556:32960","2:11558:32961","2:11560:32962","2:11562:32963","2:11563:32964","2:11564:32965","2:11567:32966","2:11570:25433","2:11573:27569","2:11576:32967","2:11579:32968","2:11582:32969","2:11585:32970","2:11587:23027","2:11588:23030","2:11589:23031","2:11590:23032","2:11591:32971","2:11593:6415","2:11594:32972"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:151:1564":{"id":"0:151:1564","crate_id":0,"name":"0","span":{"filename":"src/upper_camel.rs","begin":[52,43],"end":[52,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:15:1564":{"id":"0:15:1564","crate_id":0,"name":"0","span":{"filename":"src/kebab.rs","begin":[38,38],"end":[38,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[29,0],"end":[33,1]},"visibility":{"restricted":{"parent":"0:78:1622","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToSnakeCase","id":"0:83:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnekCase","id":"0:85:1639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:89:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2651:217-0:48:1630":{"id":"a:2:2651:217-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[37,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:56:1621","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnakeCase","id":"0:61:1634","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:69:1901"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5488-0:109:1640":{"id":"b:5:5488-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2521-0:92:1636":{"id":"b:2:2521-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:115:656":{"id":"0:115:656","crate_id":0,"name":"fmt","span":{"filename":"src/title.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8:1627":{"id":"0:8:1627","crate_id":0,"name":"ToKebabCase","span":{"filename":"src/kebab.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a kebab case conversion.\n\nIn kebab-case, word boundaries are indicated by hyphens.\n\n## Example:\n\n```rust\nuse heck::ToKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_kebab_case(), \"we-are-going-to-inherit-the-earth\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:9:1811"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:10"]}},"2:11473:32948":{"id":"2:11473:32948","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11471:32947"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:148:1644":{"id":"b:2:2521-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:51:1564":{"id":"0:51:1564","crate_id":0,"name":"0","span":{"filename":"src/shouty_kebab.rs","begin":[39,44],"end":[39,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"b:2:3306-0:12:1626":{"id":"b:2:3306-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2234-0:126:1642":{"id":"b:2:2234-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7787:6678-0:109:1640":{"id":"a:2:7787:6678-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2234-0:48:1630":{"id":"b:2:2234-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/train.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:117:1624","path":"::train"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTrainCase","id":"0:122:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:125:2008"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11579:32968":{"id":"2:11579:32968","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:106:1987":{"id":"0:106:1987","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to title case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:73:1564":{"id":"0:73:1564","crate_id":0,"name":"0","span":{"filename":"src/shouty_snake.rs","begin":[53,44],"end":[53,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"b:2:2521-0:48:1630":{"id":"b:2:2521-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2516-0:70:1632":{"id":"b:2:2516-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2510-0:92:1636":{"id":"b:2:2510-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2506-0:70:1632":{"id":"b:2:2506-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7787:6678-0:92:1636":{"id":"a:2:7787:6678-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/title.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:100:1623","path":"::title"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToTitleCase","id":"0:105:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:108:1987"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2665:225-0:30:1628":{"id":"a:2:2665:225-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11509:2378":{"id":"2:11509:2378","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409","`None`":"2:48127:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7786:6679-0:109:1640":{"id":"a:2:7786:6679-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,62],"end":[57,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::ToShoutySnakeCase","name":"ToShoutySnakeCase","id":"0:61:1634","glob":false}},"b:2:2516-0:148:1644":{"id":"b:2:2516-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3306-0:109:1640":{"id":"b:2:3306-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[54,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:134:1625","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:154:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2715:2284-0:48:1630":{"id":"a:2:2715:2284-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[55,0],"end":[59,1]},"visibility":{"restricted":{"parent":"0:56:1621","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:76:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/kebab.rs","begin":[22,0],"end":[26,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToKebabCase","id":"0:8:1627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:11:1811"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5488-0:148:1644":{"id":"b:5:5488-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2510-0:48:1630":{"id":"b:2:2510-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:69:1901":{"id":"0:69:1901","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[38,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7786:6679-0:30:1628":{"id":"a:2:7786:6679-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11523:27560":{"id":"2:11523:27560","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11169:11900","str::split":"2:11517:1655","`DoubleEndedIterator`":"2:7120:120","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50127:5476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2715:2284-0:12:1626":{"id":"a:2:2715:2284-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:47:1880":{"id":"0:47:1880","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:1631":{"id":"0:44:1631","crate_id":0,"name":"ToShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty kebab case conversion.\n\nIn SHOUTY-KEBAB-CASE, word boundaries are indicated by hyphens and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(sentence.to_shouty_kebab_case(), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:45:1880"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:46"]}},"b:2:2234-0:30:1628":{"id":"b:2:2234-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2521-0:126:1642":{"id":"b:2:2521-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2525:1437":{"id":"2:2525:1437","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2516-0:12:1626":{"id":"b:2:2516-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,22],"end":[54,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"lower_camel::AsLowerCamelCase","name":"AsLowerCamelCase","id":"0:30:1628","glob":false}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,69],"end":[59,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::ToSnekCase","name":"ToSnekCase","id":"0:85:1639","glob":false}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/shouty_snake.rs","begin":[31,0],"end":[35,1]},"visibility":{"restricted":{"parent":"0:56:1621","path":"::shouty_snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToShoutySnakeCase","id":"0:61:1634","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutySnekCase","id":"0:63:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:67:1906"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,70],"end":[63,86]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::ToUpperCamelCase","name":"ToUpperCamelCase","id":"0:139:1647","glob":false}},"2:11478:310":{"id":"2:11478:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11479:27527","`u8`":"1:12327:1459"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:48:1630":{"id":"a:2:2665:225-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11556:32960":{"id":"2:11556:32960","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2516-0:30:1628":{"id":"b:2:2516-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2521-0:12:1626":{"id":"b:2:2521-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7787:6678-0:148:1644":{"id":"a:2:7787:6678-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,29],"end":[59,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::AsSnakeCase","name":"AsSnekCase","id":"0:92:1636","glob":false}},"0:45:1880":{"id":"0:45:1880","crate_id":0,"name":"to_shouty_kebab_case","span":{"filename":"src/shouty_kebab.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty kebab case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11499:30162":{"id":"2:11499:30162","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50401:5723","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2651:217-0:92:1636":{"id":"a:2:2651:217-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:62:1901":{"id":"0:62:1901","crate_id":0,"name":"to_shouty_snake_case","span":{"filename":"src/shouty_snake.rs","begin":[20,4],"end":[20,50]},"visibility":"default","docs":"Convert this type to shouty snake case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11538:32955":{"id":"2:11538:32955","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,4],"end":[57,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnakeCase","id":"0:70:1632","glob":false}},"a:2:2715:2284-0:70:1632":{"id":"a:2:2715:2284-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:12:1626":{"id":"0:12:1626","crate_id":0,"name":"AsKebabCase","span":{"filename":"src/kebab.rs","begin":[38,0],"end":[38,45]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsKebabCase(sentence)), \"we-are-going-to-inherit-the-earth\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:15:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:12:1626","a:2:2665:225-0:12:1626","a:2:2651:217-0:12:1626","a:2:7786:6679-0:12:1626","a:2:7787:6678-0:12:1626","b:2:3306-0:12:1626","b:2:2506-0:12:1626","b:2:2510-0:12:1626","b:2:2521-0:12:1626","b:2:2516-0:12:1626","b:2:2234-0:12:1626","b:2:2237-0:12:1626","b:5:5488-0:12:1626","0:16"]}},"0:179":{"id":"0:179","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,16],"end":[61,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"train::AsTrainCase","name":"AsTrainCase","id":"0:126:1642","glob":false}},"5:5490:1417":{"id":"5:5490:1417","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[53,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:78:1622","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:98:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5222":{"id":"5:5222","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5133:1363","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5223:33621","5:5224:6558","5:5227:33622","5:5230:1698","5:5238:1700","5:5239:33623","5:5240:6576","5:5241:23028","5:5242:23029"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1702":{"id":"0:0:1702","crate_id":0,"name":"heck","span":{"filename":"src/lib.rs","begin":[1,0],"end":[209,1]},"visibility":"public","docs":"**heck** is a case conversion library.\n\nThis library exists to provide case conversion between common cases like\nCamelCase and snake_case. It is intended to be unicode aware, internally\nconsistent, and reasonably well performing.\n\n## Definition of a word boundary\n\nWord boundaries are defined as the \"unicode words\" defined in the\n`unicode_segmentation` library, as well as within those words in this\nmanner:\n\n1. All underscore characters are considered word boundaries.\n2. If an uppercase character is followed by lowercase letters, a word\nboundary is considered to be just prior to that uppercase character.\n3. If multiple uppercase characters are consecutive, they are considered to\nbe within a single word, except that the last will be part of the next word\nif it is followed by lowercase characters (see rule 2).\n\nThat is, \"HelloWorld\" is segmented `Hello|World` whereas \"XMLHttpRequest\" is\nsegmented `XML|Http|Request`.\n\nCharacters not within words (such as spaces, punctuations, and underscores)\nare not included in the output string except as they are a part of the case\nbeing converted to. Multiple adjacent word boundaries (such as a series of\nunderscores) are folded into one. (\"hello__world\" in snake case is therefore\n\"hello_world\", not the exact same string). Leading or trailing word boundary\nindicators are dropped, except insofar as CamelCase capitalizes the first\nword.\n\n### Cases contained in this library:\n\n1. UpperCamelCase\n2. lowerCamelCase\n3. snake_case\n4. kebab-case\n5. SHOUTY_SNAKE_CASE\n6. Title Case\n7. SHOUTY-KEBAB-CASE\n8. Train-Case","links":{},"attrs":["#![deny(missing_docs)]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:157","0:158","0:160","0:161","0:163","0:164","0:166","0:167","0:168","0:169","0:171","0:172","0:173","0:174","0:176","0:177","0:179","0:180","0:182","0:183","0:184","0:185"],"is_stripped":false}},"0:173":{"id":"0:173","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,56],"end":[59,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::ToSnakeCase","name":"ToSnakeCase","id":"0:83:1638","glob":false}},"2:11529:32954":{"id":"2:11529:32954","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11169:11900","str::split":"2:11517:1655","prim@char":"1:12310:409","str::split_terminator":"2:11526:32953"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50177:5709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2510-0:126:1642":{"id":"b:2:2510-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2512:680":{"id":"2:2512:680","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11560:32962":{"id":"2:11560:32962","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11594:32972":{"id":"2:11594:32972","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4493:32972"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50426:5616","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/upper_camel.rs","begin":[36,0],"end":[40,1]},"visibility":{"restricted":{"parent":"0:134:1625","path":"::upper_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"ToUpperCamelCase","id":"0:139:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToPascalCase","id":"0:143:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:147:2041"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2521-0:70:1632":{"id":"b:2:2521-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2510-0:30:1628":{"id":"b:2:2510-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,22],"end":[63,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::AsUpperCamelCase","name":"AsPascalCase","id":"0:148:1644","glob":false}},"0:33:1564":{"id":"0:33:1564","crate_id":0,"name":"0","span":{"filename":"src/lower_camel.rs","begin":[39,43],"end":[39,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11477:32949":{"id":"2:11477:32949","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:12:1626":{"id":"b:2:2237-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7786:6679-0:48:1630":{"id":"a:2:7786:6679-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:48:1630":{"id":"0:48:1630","crate_id":0,"name":"AsShoutyKebabCase","span":{"filename":"src/shouty_kebab.rs","begin":[39,0],"end":[39,51]},"visibility":"public","docs":"This wrapper performs a kebab case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsShoutyKebabCase;\n\nlet sentence = \"We are going to inherit the earth.\";\nassert_eq!(format!(\"{}\", AsShoutyKebabCase(sentence)), \"WE-ARE-GOING-TO-INHERIT-THE-EARTH\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:51:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:48:1630","a:2:2665:225-0:48:1630","a:2:2651:217-0:48:1630","a:2:7786:6679-0:48:1630","a:2:7787:6678-0:48:1630","b:2:3306-0:48:1630","b:2:2506-0:48:1630","b:2:2510-0:48:1630","b:2:2521-0:48:1630","b:2:2516-0:48:1630","b:2:2234-0:48:1630","b:2:2237-0:48:1630","b:5:5488-0:48:1630","0:52"]}},"0:76:656":{"id":"0:76:656","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_snake.rs","begin":[56,4],"end":[58,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11503:27567":{"id":"2:11503:27567","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:30:1628":{"id":"b:2:2521-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:61:1634":{"id":"0:61:1634","crate_id":0,"name":"ToShoutySnakeCase","span":{"filename":"src/shouty_snake.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a shouty snake case conversion.\n\nIn SHOUTY_SNAKE_CASE, word boundaries are indicated by underscores and all\nwords are in uppercase.\n\n## Example:\n\n```rust\nuse heck::ToShoutySnakeCase;\n\nlet sentence = \"That world is growing in this minute.\";\nassert_eq!(sentence.to_shouty_snake_case(), \"THAT_WORLD_IS_GROWING_IN_THIS_MINUTE\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:62:1901"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:68"]}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/snake.rs","begin":[35,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:78:1622","path":"::snake"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToSnakeCase","id":"0:83:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:91:1927"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11558:32961":{"id":"2:11558:32961","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5239:33623":{"id":"5:5239:33623","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:7094:221","`Box<str>`":"5:288:2290"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2290","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6845:5416","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:109:1640":{"id":"b:2:2521-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2524:127":{"id":"2:2524:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39377:4367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11469:2339":{"id":"2:11469:2339","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:30:1628":{"id":"b:2:2237-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2510-0:148:1644":{"id":"b:2:2510-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5488-0:70:1632":{"id":"b:5:5488-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11498:32952":{"id":"2:11498:32952","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50373:5720","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11484:27525":{"id":"2:11484:27525","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2651:217-0:30:1628":{"id":"a:2:2651:217-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2506-0:148:1644":{"id":"b:2:2506-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:142:2038":{"id":"0:142:2038","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:126:1642":{"id":"b:2:2237-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2665:225-0:109:1640":{"id":"a:2:2665:225-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,40],"end":[54,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"lower_camel::ToLowerCamelCase","name":"ToLowerCamelCase","id":"0:26:1629","glob":false}},"2:11513:2338":{"id":"2:11513:2338","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409","`None`":"2:48127:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11562:32963":{"id":"2:11562:32963","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11495:29911":{"id":"2:11495:29911","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11496:29923"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50383:5721","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11591:32971":{"id":"2:11591:32971","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4495:32971"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50408:5623","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11526:32953":{"id":"2:11526:32953","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11169:11900","str::rsplit_terminator":"2:11529:32954","prim@char":"1:12310:409","`DoubleEndedIterator`":"2:7120:120","str::split":"2:11517:1655"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50159:5708","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:92:1636":{"id":"b:2:2237-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11587:23027":{"id":"2:11587:23027","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11570:25433":{"id":"2:11570:25433","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11547:32957":{"id":"2:11547:32957","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:7120:120","prim@char":"1:12310:409","str::matches":"2:11544:2173","self::pattern":"2:11169:11900"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50331:5718","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,16],"end":[60,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"title::AsTitleCase","name":"AsTitleCase","id":"0:109:1640","glob":false}},"0:154:656":{"id":"0:154:656","crate_id":0,"name":"fmt","span":{"filename":"src/upper_camel.rs","begin":[55,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:48:1630":{"id":"b:2:2506-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:109:1640":{"id":"0:109:1640","crate_id":0,"name":"AsTitleCase","span":{"filename":"src/title.rs","begin":[39,0],"end":[39,45]},"visibility":"public","docs":"This wrapper performs a title case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(format!(\"{}\", AsTitleCase(sentence)), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:112:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:109:1640","a:2:2665:225-0:109:1640","a:2:2651:217-0:109:1640","a:2:7786:6679-0:109:1640","a:2:7787:6678-0:109:1640","b:2:3306-0:109:1640","b:2:2506-0:109:1640","b:2:2510-0:109:1640","b:2:2521-0:109:1640","b:2:2516-0:109:1640","b:2:2234-0:109:1640","b:2:2237-0:109:1640","b:5:5488-0:109:1640","0:113"]}},"b:2:2234-0:109:1640":{"id":"b:2:2234-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:112:1564":{"id":"0:112:1564","crate_id":0,"name":"0","span":{"filename":"src/title.rs","begin":[39,38],"end":[39,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11544:2173":{"id":"2:11544:2173","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11169:11900","`DoubleEndedIterator`":"2:7120:120","str::matches":"2:11544:2173","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50313:5717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123:2008":{"id":"0:123:2008","crate_id":0,"name":"to_train_case","span":{"filename":"src/train.rs","begin":[20,4],"end":[20,43]},"visibility":"default","docs":"Convert this type to Train-Case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:108:1987":{"id":"0:108:1987","crate_id":0,"name":"to_title_case","span":{"filename":"src/title.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:1927":{"id":"0:91:1927","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[36,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11493:1681":{"id":"2:11493:1681","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50085:5703","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11588:23030":{"id":"2:11588:23030","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11550:32958":{"id":"2:11550:32958","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11169:11900","`DoubleEndedIterator`":"2:7120:120","str::rmatch_indices":"2:11553:32959","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50259:5714","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:48:1630":{"id":"b:2:2237-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:54:656":{"id":"0:54:656","crate_id":0,"name":"fmt","span":{"filename":"src/shouty_kebab.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2234-0:148:1644":{"id":"b:2:2234-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2236:2158"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[57,23],"end":[57,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"shouty_snake::AsShoutySnakeCase","name":"AsShoutySnekCase","id":"0:70:1632","glob":false}},"2:2239:22797":{"id":"2:2239:22797","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11489:32951":{"id":"2:11489:32951","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"2:11488:32950","`str`":"1:12316:1363","crate::ops::IndexMut":"2:2974:6466"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:92:1636":{"id":"a:2:2665:225-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:148:1644":{"id":"0:148:1644","crate_id":0,"name":"AsUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[52,0],"end":[52,50]},"visibility":"public","docs":"This wrapper performs a upper camel case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(format!(\"{}\", AsUpperCamelCase(sentence)), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:151:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:148:1644","a:2:2665:225-0:148:1644","a:2:2651:217-0:148:1644","a:2:7786:6679-0:148:1644","a:2:7787:6678-0:148:1644","b:2:3306-0:148:1644","b:2:2506-0:148:1644","b:2:2510-0:148:1644","b:2:2521-0:148:1644","b:2:2516-0:148:1644","b:2:2234-0:148:1644","b:2:2237-0:148:1644","b:5:5488-0:148:1644","0:152"]}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lower_camel.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:20:1619","path":"::lower_camel"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToLowerCamelCase","id":"0:26:1629","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:29:1858"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5230:1698":{"id":"5:5230:1698","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:1636":{"id":"0:92:1636","crate_id":0,"name":"AsSnakeCase","span":{"filename":"src/snake.rs","begin":[51,0],"end":[51,45]},"visibility":"public","docs":"This wrapper performs a snake case conversion in [`fmt::Display`].\n\n## Example:\n\n```\nuse heck::AsSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(format!(\"{}\", AsSnakeCase(sentence)), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{"`fmt::Display`":"2:8654:119"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:95:1564"]},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2715:2284-0:92:1636","a:2:2665:225-0:92:1636","a:2:2651:217-0:92:1636","a:2:7786:6679-0:92:1636","a:2:7787:6678-0:92:1636","b:2:3306-0:92:1636","b:2:2506-0:92:1636","b:2:2510-0:92:1636","b:2:2521-0:92:1636","b:2:2516-0:92:1636","b:2:2234-0:92:1636","b:2:2237-0:92:1636","b:5:5488-0:92:1636","0:96"]}},"a:2:2651:217-0:109:1640":{"id":"a:2:2651:217-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3306-0:30:1628":{"id":"b:2:3306-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:27:1858":{"id":"0:27:1858","crate_id":0,"name":"to_lower_camel_case","span":{"filename":"src/lower_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to lower camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:105:1641":{"id":"0:105:1641","crate_id":0,"name":"ToTitleCase","span":{"filename":"src/title.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines a title case conversion.\n\nIn Title Case, word boundaries are indicated by spaces, and every word is\ncapitalized.\n\n## Example:\n\n```rust\nuse heck::ToTitleCase;\n\nlet sentence = \"We have always lived in slums and holes in the wall.\";\nassert_eq!(sentence.to_title_case(), \"We Have Always Lived In Slums And Holes In The Wall\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:106:1987"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:107"]}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[63,4],"end":[63,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"upper_camel::AsUpperCamelCase","name":"AsUpperCamelCase","id":"0:148:1644","glob":false}},"a:2:2715:2284-0:126:1642":{"id":"a:2:2715:2284-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11563:32964":{"id":"2:11563:32964","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:2041":{"id":"0:144:2041","crate_id":0,"name":"to_pascal_case","span":{"filename":"src/upper_camel.rs","begin":[33,4],"end":[33,44]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2237-0:148:1644":{"id":"b:2:2237-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2239:22797"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:95:1564":{"id":"0:95:1564","crate_id":0,"name":"0","span":{"filename":"src/snake.rs","begin":[51,38],"end":[51,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11490:27549":{"id":"2:11490:27549","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11491:27550"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,29],"end":[53,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kebab::ToKebabCase","name":"ToKebabCase","id":"0:8:1627","glob":false}},"b:2:2516-0:92:1636":{"id":"b:2:2516-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,29],"end":[61,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"train::ToTrainCase","name":"ToTrainCase","id":"0:122:1643","glob":false}},"a:2:7787:6678-0:48:1630":{"id":"a:2:7787:6678-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7786:6679-0:148:1644":{"id":"a:2:7786:6679-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11468:796":{"id":"2:11468:796","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12310:409"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5242:23029":{"id":"5:5242:23029","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11590:23032"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11553:32959":{"id":"2:11553:32959","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:12310:409","str::match_indices":"2:11550:32958","`DoubleEndedIterator`":"2:7120:120","self::pattern":"2:11169:11900"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50277:5715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3306-0:92:1636":{"id":"b:2:3306-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7786:6679-0:12:1626":{"id":"a:2:7786:6679-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2651:217-0:126:1642":{"id":"a:2:2651:217-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:84:1927":{"id":"0:84:1927","crate_id":0,"name":"to_snake_case","span":{"filename":"src/snake.rs","begin":[19,4],"end":[19,43]},"visibility":"default","docs":"Convert this type to snake case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:64:1906":{"id":"0:64:1906","crate_id":0,"name":"TO_SHOUTY_SNEK_CASE","span":{"filename":"src/shouty_snake.rs","begin":[28,4],"end":[28,49]},"visibility":"default","docs":"CONVERT THIS TYPE TO SNEK CASE.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:83:1638":{"id":"0:83:1638","crate_id":0,"name":"ToSnakeCase","span":{"filename":"src/snake.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"This trait defines a snake case conversion.\n\nIn snake_case, word boundaries are indicated by underscores.\n\n## Example:\n\n```rust\nuse heck::ToSnakeCase;\n\nlet sentence = \"We carry a new world here, in our hearts.\";\nassert_eq!(sentence.to_snake_case(), \"we_carry_a_new_world_here_in_our_hearts\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:84:1927"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:90"]}},"b:2:2516-0:48:1630":{"id":"b:2:2516-0:48:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutyKebabCase","id":"0:48:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7786:6679-0:92:1636":{"id":"a:2:7786:6679-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:6679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[59,16],"end":[59,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"snake::AsSnakeCase","name":"AsSnakeCase","id":"0:92:1636","glob":false}},"a:2:7787:6678-0:70:1632":{"id":"a:2:7787:6678-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2665:225-0:70:1632":{"id":"a:2:2665:225-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11494:5445":{"id":"2:11494:5445","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50095:2947","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:2038":{"id":"0:140:2038","crate_id":0,"name":"to_upper_camel_case","span":{"filename":"src/upper_camel.rs","begin":[20,4],"end":[20,49]},"visibility":"default","docs":"Convert this type to upper camel case.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"5:679:228","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2510-0:70:1632":{"id":"b:2:2510-0:70:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsShoutySnakeCase","id":"0:70:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11520:27558":{"id":"2:11520:27558","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10993:5475","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11488:32950":{"id":"2:11488:32950","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:2970:6465","str::slice_mut_unchecked":"2:11489:32951","`str`":"1:12316:1363"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:92:1636":{"id":"b:2:2506-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5488-0:126:1642":{"id":"b:5:5488-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7787:6678-0:126:1642":{"id":"a:2:7787:6678-0:126:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:6678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3306-0:148:1644":{"id":"b:2:3306-0:148:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsUpperCamelCase","id":"0:148:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/train.rs","begin":[41,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:117:1624","path":"::train"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2474:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTrainCase","id":"0:126:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:132:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2715:2284-0:92:1636":{"id":"a:2:2715:2284-0:92:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsSnakeCase","id":"0:92:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:139:1647":{"id":"0:139:1647","crate_id":0,"name":"ToUpperCamelCase","span":{"filename":"src/upper_camel.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"This trait defines an upper camel case conversion.\n\nIn UpperCamelCase, word boundaries are indicated by capital letters,\nincluding the first word.\n\n## Example:\n\n```rust\nuse heck::ToUpperCamelCase;\n\nlet sentence = \"We are not in the least afraid of ruins.\";\nassert_eq!(sentence.to_upper_camel_case(), \"WeAreNotInTheLeastAfraidOfRuins\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:140:2038"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:141"]}},"b:2:2506-0:109:1640":{"id":"b:2:2506-0:109:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsTitleCase","id":"0:109:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11479:27527":{"id":"2:11479:27527","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12327:1459"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,29],"end":[60,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"title::ToTitleCase","name":"ToTitleCase","id":"0:105:1641","glob":false}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/shouty_kebab.rs","begin":[23,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:39:1620","path":"::shouty_kebab"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToShoutyKebabCase","id":"0:44:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:47:1880"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5488-0:12:1626":{"id":"b:5:5488-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,16],"end":[53,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"kebab::AsKebabCase","name":"AsKebabCase","id":"0:12:1626","glob":false}},"a:2:2715:2284-0:30:1628":{"id":"a:2:2715:2284-0:30:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2284","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsLowerCamelCase","id":"0:30:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11573:27569":{"id":"2:11573:27569","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11169:11900","prim@char":"1:12310:409"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:11897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:11898","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:656":{"id":"0:98:656","crate_id":0,"name":"fmt","span":{"filename":"src/snake.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11486:27526":{"id":"2:11486:27526","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:12:1626":{"id":"b:2:2506-0:12:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AsKebabCase","id":"0:12:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:2332"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"2:49438:5687":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:11165:5946":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:7226:5400":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:13382:3722":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:727:2844":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11547:3237":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:13007:3602":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"18:531:2812":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:2535:3815":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:20050:2321":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:2811:12057":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:54014:5873":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:12748:3541":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:2777:6769":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:3996:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:1686:4658":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:11964:6046":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:8589:5967":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"6:5876:5224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:8657:6591":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:9624:11883":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:6942:2343":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:9021:18758":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:5706:6701":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:12316:1363":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"18:719:2841":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:6524:5358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"5:2153:5429":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:6269:5231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:11279:4444":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:2763:12051":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:53672:5866":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:4267:4787":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:8088:5903":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:51909:5780":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:51074:5767":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:6186:3832":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:8434:5659":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:8822:33848":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:54054:5877":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:52384:5802":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:25286:5527":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:3492:6435":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:4899:6604":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"18:96:22552":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:7278:3844":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:52047:5786":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:2465:3812":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"9:592:17603":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:11169:11900":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:11318:6004":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:12323:727":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:2486:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:6439:2680":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"18:614:33869":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:6244:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:52537:5806":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:2918:1663":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:54148:5883":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:4540:4878":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13572:3770":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:6691:6722":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:48400:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:3048:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13374:3721":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:51715:5772":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:9585:5475":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"9:111:17598":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:51992:5783":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:21439:5519":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:7188:2675":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:10871:6573":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:8083:6517":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:10437:6483":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:8418:18753":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:9340:6616":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:11081:6664":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:54034:5875":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:1887:6354":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:21714:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:49656:5694":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:4413:3871":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:10257:18896":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:7093:4124":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:29649:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:5793:3791":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:9842:6517":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10796:3080":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:7243:5405":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:13393:3727":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:10221:18917":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:1931:18796":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:4259:6602":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:2864:1812":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:6419:2735":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:1821:5458":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:3263:3856":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:2571:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:2477:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:7942:18693":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:3602:5419":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:20525:5485":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:562:3083":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:47246:5642":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:12060:3329":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:47218:5638":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"12:119:2615":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:5489:5464":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:13031:3611":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:273:2631":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:46925:5615":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"5:5677:12409":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:10466:3049":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:8662:6587":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:49999:11887":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12022:3325":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:7887:5898":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:48864:2400":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:20497:6773":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:21465:6597":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:353:6410":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:3145:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:8162:18745":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:2411:6532":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:49917:5480":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:3236:2621":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:56938:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:6506:2726":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2769:4101":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7059:5674":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46633:30656":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:49660:5695":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"12:320:2617":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:21846:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:51013:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:7267:4144":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:4565:4891":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:4662:6627":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:46858:5608":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:5782:5187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:29721:29764":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:3235:6573":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:50127:5476":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:49167:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:10949:3094":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:13100:3628":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4551:4885":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:56581:6809":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:5733:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:10707:12160":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:7288:4147":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7872:4211":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:7171:2621":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:9527:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:7787:6678":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:4361:4834":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4611:4916":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:47409:5661":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:1395:4358":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:2589:2703":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:8625:5968":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:2887:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:7310:24472":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:9193:33843":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:50632:5738":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:4489:4853":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:6028:6720":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:47177:5633":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:2341:3807":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:11240:11907":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:49155:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"6:6953:5382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11247:3159":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"14:160:6319":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:13436:3743":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"18:690:2834":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:11436:3196":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:53874:5869":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:9805:3059":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4461:4851":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:5671:6699":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:11087:3130":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:5163:3888":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:11751:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:8871:18755":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:4247:4778":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:6903:6010":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:4519:3873":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:9791:2980":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:9553:2963":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:9303:2956":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:47370:5656":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:8706:5975":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:6614:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:855:2637":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:1600:4598":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:7467:6446":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:8711:6634":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:8561:2942":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"9:19:17653":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:12874:3570":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:7860:6616":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:4327:3868":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:11800:3274":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:9820:18882":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:900:6435":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:8137:18744":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6284:3850":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:6415:5292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:4239:4775":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:46617:5606":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:10476:18922":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:21945:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:47330:5652":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:11189:11898":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:3491:6556":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:47005:11985":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:0:1355":{"crate_id":1,"path":["std"],"kind":"module"},"2:21258:5492":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:7760:6351":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:5661:2666":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:7249:18686":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:6554:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:10121:3018":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:2921:2287":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:2974:6466":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:4234:2659":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:8596:2943":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:6496:18680":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:10283:18894":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:12251:3363":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:2662:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:12349:3377":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:6676:3840":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:11300:3172":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:3157:11958":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:50540:5735":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"18:113:22553":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:13203:3657":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:54023:5874":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:736:22564":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:11145:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:10336:11885":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:39426:2315":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"9:827:17679":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:996:6442":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13148:3643":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:9446:18790":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:5905:2727":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:20247:6780":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:48871:2401":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:9738:2975":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:52338:5800":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"12:2069:6444":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:10490:3052":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:9601:2971":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:5014:6615":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"18:636:2830":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:46440:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:2411:3810":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:9250:18773":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:10894:3088":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:47599:5664":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:10670:3073":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"12:762:2621":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:50683:11910":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:50717:5748":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:4335:4822":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:10445:3046":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:4294:4800":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"12:60:33764":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13184:3652":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:11330:3184":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5184:17783":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:3367:11942":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:11661:3254":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:48193:6435":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"18:507:2807":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:4911:5277":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:50844:5757":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"13:108:33766":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:51695:5771":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:50067:5701":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:3599:3859":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:4977:6637":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10708:3075":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:6148:2728":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"5:1434:6438":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:2825:3827":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:519:4482":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:2952:11852":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:11693:6038":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:487:18743":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10075:18851":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:4427:4848":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13478:3749":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:48201:2343":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:5587:5093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:21813:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:10845:3046":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:38204:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:6161:18678":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:12325:729":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:2785:12052":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:11468:6003":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:4545:3874":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6654:4058":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:50085:5703":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:21432:5516":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:13327:3703":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:513:4479":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:11837:11996":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:9273:4357":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:12836:3564":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:6581:2672":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:2894:17811":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:1603:2631":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:4019:6594":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:49426:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:3197:6571":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:50526:5733":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:9649:6354":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:46991:5624":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:6605:31249":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:11576:3242":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:1668:1065":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12148:3342":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"18:699:2835":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:1320:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:12292:26331":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:12276:25945":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:4257:4784":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:56990:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:4875:2666":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"9:649:17605":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:2702:2314":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:39417:5596":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:12909:3580":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:8110:18729":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:50009:5483":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:1532:4554":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:2251:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:54095:5880":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:47648:5671":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"3:0:433":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:4673:4944":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:8441:2947":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:10921:3089":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:1595:4596":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:487:4466":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:49241:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:20364:6616":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:7557:4158":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:7046:12030":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:5737:3929":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:2749:3824":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:3716:3862":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:1632:577":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:7160:6349":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:4888:3885":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:49964:5481":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:5996:18674":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:608:4537":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:9237:6002":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:5031:2631":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:8391:5946":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:11651:6035":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:6931:25396":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:2801:12055":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:11300:25372":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:5585:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:4274:4790":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:6860:2740":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:1367:6435":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:2842:3828":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:48438:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:1828:6473":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:20284:6781":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:10207:18908":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:10062:18852":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:8725:6592":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:13168:3649":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:52316:5799":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:6781:18683":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:9314:6006":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:8143:25408":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:49938:5696":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:50605:5737":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:11681:6171":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:52560:5807":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:10403:3078":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:6139:2631":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:8662:2411":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:9476:24771":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:50426:5616":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"14:215:4302":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:7974:6478":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:586:4524":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:11395:2754":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:3559:2631":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:4103:5460":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:5750:2660":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:2822:4107":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:7120:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:8649:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:53420:5864":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:9873:18884":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:1811:598":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:11100:6017":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:46998:5625":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:3468:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:9343:6731":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:20063:30171":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:4683:4950":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:4745:4976":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:6109:3972":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:4185:4748":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:7116:6329":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:5657:6698":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:53562:5865":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"12:1836:2343":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"9:863:17583":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:5703:3923":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:2794:4102":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:6287:2631":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"14:0:2062":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:6862:2741":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:5774:6704":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"5:6989:5439":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:5122:3887":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:11356:3189":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:6403:2713":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:6509:5351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:5582:5092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"9:977:4447":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:50231:5712":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:6409:5290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:46456:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:7908:2751":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:8658:2400":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:49898:5478":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:4417:4847":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:2871:32659":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"12:669:6437":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:3690:2631":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:0:2064":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:9251:6003":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:1654:4640":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:1518:4549":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:47640:5669":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:9350:2933":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:48885:2411":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:8802:30658":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:50900:5764":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:4224:4769":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:10296:18893":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:6877:18684":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:53064:5831":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:781:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:2228:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:11961:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:10682:3074":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:3566:3858":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:3151:11959":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:359:6411":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:11853:3281":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:8566:25374":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"6:6981:5385":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:1114:6445":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"11:0:2060":{"crate_id":11,"path":["adler"],"kind":"module"},"2:2915:2286":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:4437:4849":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:9700:18819":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:12948:3591":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:4558:11977":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:1722:4675":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:6800:2846":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:50095:2947":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:48590:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:2322:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:4449:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:7067:6770":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7372:33778":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:48514:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:1608:2343":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:5614:3912":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"12:853:6442":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:632:6328":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:48628:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:11395:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:2773:6767":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:47615:5666":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:5079:11871":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:51807:5776":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"9:188:17633":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:524:2715":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:2868:3829":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:1938:6341":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:4297:3867":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:5554:5080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:10874:6569":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:10456:24471":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:9031:33836":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:38221:2321":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:2253:2685":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"18:564:2817":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:13091:3627":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:5388:3834":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:1234:6444":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:910:2343":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:11186:3146":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:9317:18785":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:6792:6346":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:49137:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:50079:5702":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:990:6441":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:7214:5398":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"19:0:1009":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"18:521:22566":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:47278:5647":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:2557:3816":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:6537:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:12609:3489":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:3084:4361":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:8234:25425":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:11155:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"9:800:4428":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:3169:32081":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:9458:18812":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4515:4867":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:5939:6811":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:4441:3872":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10360:3030":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4804:5006":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:5981:3967":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"14:165:17753":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:10350:3028":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:9143:2703":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:5568:5091":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:50259:5714":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:5494:18669":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:1668:4651":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:4321:6607":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:9847:2749":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:3140:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:50331:5718":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:9542:5472":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:4605:4913":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:46962:5608":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:6795:6725":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:5949:3962":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:8637:5969":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:51739:5773":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:6017:18675":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:4644:4928":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:11183:2837":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:9835:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:10528:18762":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:9475:18800":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:12335:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:21453:5520":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"5:2056:5421":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:53214:5832":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10520:3056":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:4179:4747":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:7956:3851":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12087:3333":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:12955:3593":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:9627:18806":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"12:393:33760":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:11515:3230":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:3304:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:3319:6562":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:48552:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:11199:3147":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:944:2654":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:6651:12025":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:9155:18760":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:6567:4052":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:47298:5649":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:50828:5753":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:11174:11897":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:2907:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"6:5595:5098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4126:4704":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:29621:5449":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:592:4527":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:9422:18782":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:8339:18750":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:1062:32175":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4286:4795":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"12:2080:6445":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:10310:18920":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:21780:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:11288:6704":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:48878:2410":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:545:4502":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:6034:18676":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10245:18919":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:4329:4819":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:6845:5416":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:7603:4166":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:9662:11891":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:48704:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:5472:5039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:9219:6703":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:2832:12059":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"12:2184:4365":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:2865:32663":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:7289:5414":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:6915:5438":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:931:4359":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:12311:1475":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:12320:630":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"12:1628:2625":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:7435:4154":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:8368:18751":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13340:3709":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:7567:18690":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:10737:11901":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:7343:3847":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6572:5376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11544:6014":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:9274:18775":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:9831:18883":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:13141:3642":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:5664:3920":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:20310:6782":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:8651:6592":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:8775:5977":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"7:0:1502":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:2781:12053":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:3958:6590":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:4606:3876":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:9263:18774":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:6352:5282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:12003:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:8666:2408":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:9281:6729":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:8105:5905":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:6719:2739":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:2657:3820":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:7990:6340":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:8872:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:11594:3243":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:51891:5779":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:3123:32622":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:21237:5490":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"6:1678:4657":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:567:4514":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:12934:3588":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:7135:33822":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:135:12502":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:2516:6565":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:58312:5893":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:4348:6333":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:3927:2660":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:1580:4584":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:6228:2726":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:13221:3660":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12674:3530":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:13231:3665":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:12850:3568":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:2663:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:12317:1441":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:22476:5526":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:9359:6732":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:2916:18850":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13580:3773":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12797:3555":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:49225:12145":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:7237:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12211:3360":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:11125:3136":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:6877:2641":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:967:18786":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:48362:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:3199:6572":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:10608:2913":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:50832:5754":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:1747:5452":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:6668:4060":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:9382:6009":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:2747:6768":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:6210:3985":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:1632:4362":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:4574:3875":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:1733:12089":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13459:3744":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:50417:5608":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:52094:5787":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:10942:5713":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:53000:5829":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"12:861:6443":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"8:0:2057":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:4816:5011":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:12638:3500":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:7208:5397":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:56977:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13047:3613":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12008:3323":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:6650:25396":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:8056:4226":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:46873:5610":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:1105:6444":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:4771:6638":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12739:3540":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:9350:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:12327:1459":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:50557:5736":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:4222:6331":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:6479:5334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:8447:5472":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:7396:18688":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:11734:2988":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:6311:5255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:9442:25413":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:50912:12203":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:13492:3751":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:3026:2852":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:8774:2949":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:12237:3362":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:7543:3837":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:54069:5878":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:21747:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:9947:18887":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:2316:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:12330:1458":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:11161:3143":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"9:676:17591":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:600:4532":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:46626:4141":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:49927:11881":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"12:0:2061":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"18:515:2810":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:6554:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:3854:3863":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:5433:3891":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:11974:3320":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:46599:12064":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:5541:3902":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:1046:32205":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:20323:6616":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:11666:6036":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:4749:3881":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:6252:3989":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:6899:2343":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:679:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:3484:6537":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:3409:5972":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:47118:2691":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:8211:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"18:599:33871":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:10434:3044":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:11137:3139":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:20944:30175":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:7426:18689":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:12964:3594":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:20095:29816":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"18:707:2837":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:3162:26765":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:12816:3556":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:11110:5903":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:8159:5419":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:1615:2621":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"16:4786:3882":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:1550:4565":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:4698:4956":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:11130:6693":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:46378:11853":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:10875:3085":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:47606:5665":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10997:3109":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:10233:18918":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:51031:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:3237:6574":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:6848:6728":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:21349:5504":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:686:6421":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:2752:4100":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:7266:5411":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:8951:33857":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:20078:30171":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:11507:6015":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:11014:3113":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:507:4477":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:13214:3658":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:46864:5609":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:12265:3366":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:12291:3368":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:2683:3821":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:1604:4357":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:7798:2745":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:6451:25395":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:9289:2343":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:50383:5721":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:5834:5185":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:5095:6614":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:2727:3823":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:9764:2978":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4231:4773":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:48742:6718":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:9454:25377":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:3077:4357":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:681:6420":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:4262:3866":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:5741:5175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"14:187:17759":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:12314:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:5411:3836":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:12485:3386":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:3276:6570":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:219:2629":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:3614:6455":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:4749:780":{"crate_id":2,"path":["core","iter"],"kind":"module"},"5:688:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:1500:4541":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:21879:5524":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:9818:11889":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:9061:2963":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"18:491:2806":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:1964:6455":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:5780:3933":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12926:3585":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:20116:29821":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:1889:6489":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:8510:2939":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:4191:4750":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11528:3232":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"14:221:4304":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:9339:18783":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:56964:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"13:220:4349":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:11106:3135":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:7957:5899":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:4354:4832":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"12:387:33763":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:5841:5199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:20366:6774":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:51970:5782":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:9778:2979":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:1608:4603":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:1915:5459":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:52764:5825":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:8668:2409":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:1548:2660":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:11858:6595":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:2705:3822":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:7202:2743":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:12550:3437":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:10679:26421":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"7:79:17577":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:21341:5503":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:49448:5691":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:5877:5465":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:10321:3023":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:21274:5493":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:4357:3869":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:2613:6344":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:51066:6164":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:3893:2631":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:2320:3806":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:5203:2938":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"12:810:6436":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:11217:3155":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:3599:24524":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:9567:6015":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:887:4357":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"12:98:4350":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:969:6438":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:2367:3808":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:1864:6483":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:10752:3078":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:8660:2410":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:386:18742":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:11194:11896":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:9697:5476":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:4430:6628":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:46945:11983":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:29663:29800":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:2231:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:4689:3879":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:11275:6340":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:12322:730":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:7551:25936":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:1771:18801":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:1248:6327":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:1423:6437":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"12:659:2343":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9526:18798":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:4716:4967":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:4217:3865":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:11914:6041":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:47395:5660":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:11812:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:11271:3161":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:12332:774":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:48320:6435":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:4221:6599":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:50019:11886":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:2579:3817":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:4385:3870":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"16:7980:18694":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:13114:3635":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:9071:33842":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:4280:4792":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:4171:2659":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:52876:5827":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:9548:6014":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:6558:12033":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:4761:4981":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:6376:18679":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"15:193:17765":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:7042:12031":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:9644:18794":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:2399:6526":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:54118:5881":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:10723:6337":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:7872:26767":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:21326:29780":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:1643:4632":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:6052:18677":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:7994:25414":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:7892:11897":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12103:3335":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:49128:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"18:481:2805":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:2867:5426":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12884:3571":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:6528:4039":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:5656:31903":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:12781:3552":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:12307:3370":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:6392:5285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:46566:6428":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:47128:6516":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:57003:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:3457:2856":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:4307:6605":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:1611:2654":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:50824:5752":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:3221:11851":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:49104:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:3863:2654":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:5072:2724":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"12:1845:2621":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:50879:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:11288:3169":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:8441:18754":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:50860:5761":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:11488:5761":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:11135:5904":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:52286:5798":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:20118:29819":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:2385:6522":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:4394:11966":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:1525:4551":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:7017:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:5327:2668":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:52362:5801":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:6735:18681":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"12:1120:17745":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:46500:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:48176:1654":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:49409:5685":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:8526:2940":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:10497:18923":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:4367:4836":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:9265:6004":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:5016:6618":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:2771:3825":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:12029:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:2651:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:4559:4889":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:7083:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12164:3346":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:9930:2983":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:9658:18842":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:47260:5645":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:8599:2407":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:7143:2288":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:9419:24672":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:5558:18670":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:5018:6619":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:39377:4367":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:965:6437":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"0:0:1702":{"crate_id":0,"path":["heck"],"kind":"module"},"16:6298:3990":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:47621:5668":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:51116:4371":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:2789:12054":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"12:1555:17748":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:6869:2654":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:7497:3839":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"12:2178:4364":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:8212:18746":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:7861:5894":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:47055:29777":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:9401:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:50848:5758":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:47381:5659":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:2816:4106":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"5:6907:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:46339:11957":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:4909:5275":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:5727:5170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:29587:5530":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:1695:4664":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:5761:18671":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:5628:3913":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:242:33852":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:10139:2963":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:4510:6632":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:29627:5531":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:36:2627":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:1707:4668":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:13594:3776":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13366:3718":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:4590:6633":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:8666:2945":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:53030:5830":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7936:6416":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:7882:6391":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:678:6418":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:12313:1027":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:6090:6727":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:52170:5795":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:12361:3384":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"9:709:5687":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:8731:5976":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:6302:5254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:7117:33802":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:4754:2660":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:7329:3846":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:5374:3831":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:545:2647":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:11343:3188":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:2845:12062":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3382:2660":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:7909:4217":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:47311:5650":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:12176:3348":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11708:3260":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:4156:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:4621:4920":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:2490:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:8393:18752":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:4690:982":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:5180:6660":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:9517:6435":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:7298:4148":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:11105:6019":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:12337:3046":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:1454:6454":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:6975:5383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:5861:5213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"12:985:4087":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"12:751:2654":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:8295:18749":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12134:3340":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:14:1695":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:5837:6705":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:2836:12060":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:11873:3284":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:6430:5297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:4459:6631":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"5:952:2631":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:12281:6423":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:21978:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:2871:2723":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:4581:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:49838:30666":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:47346:2828":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:5541:5071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:12308:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:1511:4546":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:9776:5711":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:3475:24526":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:2401:6527":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:11785:31164":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:5720:5169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:4974:6663":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:7511:4156":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:5328:25401":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:3355:11938":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:5691:6700":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7309:3845":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"12:1029:6445":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:8752:2947":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"12:2198:4368":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"13:0:2055":{"crate_id":13,"path":["std_detect"],"kind":"module"},"9:920:17585":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4797:5003":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"12:738:4359":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"9:586:4376":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:10592:6707":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:8958:5995":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"9:622:17604":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:3184:11850":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:12980:3598":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:4096:4686":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:52794:5826":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:6790:4077":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:5815:18672":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:8664:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:20523:6778":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:9295:6005":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:11639:3253":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:1123:6327":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:11957:6046":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:484:2758":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:7474:12029":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:50159:5708":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47321:5651":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"18:644:2807":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:1962:18818":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:872:4357":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:4144:3864":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:11951:3311":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:21184:5489":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:4273:6604":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:3352:5668":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:7637:4170":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:10973:3108":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:47199:5635":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:3144:4363":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:9327:6730":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:7044:33800":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:2909:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:53750:5867":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:2433:3811":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:2875:32660":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11456:6002":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:9043:2699":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"5:1699:2621":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:2828:12058":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:52506:5805":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:8609:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:1541:4559":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:4810:5008":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11149:3140":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:47043:5630":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:8475:18730":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13039:3612":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:10546:18763":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:6500:5348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:11893:3285":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:51761:5774":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:9497:6013":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:4329:6609":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:12630:3499":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:6448:5308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:6885:32617":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:6093:2654":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"7:32:17570":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:7357:4150":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:48252:12136":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:5713:5167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:2900:6451":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11828:3279":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:10767:6703":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:2595:5433":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:8483:5951":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:5472:3835":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:5596:3908":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:9493:4357":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:4317:6606":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"14:7:6319":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:560:4511":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:8078:2892":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10270:18895":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"12:1003:6444":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:7469:3848":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:49401:5683":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:5510:3897":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:12084:6468":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10642:18765":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:1378:2343":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:8991:33844":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4307:4806":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:9909:2981":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12514:3406":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:10958:5716":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:1445:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:54043:5876":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:9586:6016":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:574:2716":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:1637:4363":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:6704:4062":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:609:33870":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:57016:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:47237:5641":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:2383:5454":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:661:6339":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:46480:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:9126:2702":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:6054:6721":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:8375:2846":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:11837:6593":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:7064:5443":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:11939:3309":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:8916:6688":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:11175:27345":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:1505:4543":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:13134:3641":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:48243:6334":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:8014:4141":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:6517:4038":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:7279:5412":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:6842:4084":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11384:2753":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:12198:3359":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:6123:3830":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:12321:631":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:39413:25414":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:1636:4628":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:11559:3239":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:7092:2289":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:2670:2312":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:48476:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:4200:4755":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"12:646:6435":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:10868:6571":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:5443:5015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:47148:5481":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4102:4687":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:3984:30661":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:21387:29778":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:2261:17785":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:8460:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"1:8876:5687":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"18:0:2066":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:4408:24479":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:9631:18795":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:8921:11998":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:9681:2891":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:10919:5710":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:4475:4852":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:1967:6501":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:8118:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:153:2612":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:8241:18747":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"15:214:17769":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:9501:2956":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:5835:5198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:4749:6637":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:2282:3798":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:8239:6567":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:10374:3035":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:8602:5974":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"2:2285:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:49641:5693":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:4076:11968":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:47630:2697":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:8941:18756":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"18:582:2321":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:52140:5794":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:5692:5155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:6322:5260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:3091:6578":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:4665:4939":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:1626:4361":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:47071:5631":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:3249:18869":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:8454:5719":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"15:175:17764":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:2300:3800":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"12:1044:17743":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6690:3841":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:9371:18759":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:2389:3809":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:973:6439":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:5878:17784":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:2085:5423":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:12333:1512":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:9857:18864":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:4592:4908":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:954:2621":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:12118:3339":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:1826:6472":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:54171:5884":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:1950:5419":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:784:2634":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:51869:5778":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:9396:25375":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:11699:6039":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"12:2053:4087":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:9158:2708":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:6293:5248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:11596:2756":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"10:0:2059":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:6998:5395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:5480:5041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:2653:6566":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:3165:26755":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6865:4086":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:1903:18831":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:2257:6519":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11606:3245":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"9:505:17728":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:7319:4149":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:8749:6662":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:10385:3039":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:131:12501":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:9407:6399":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:47208:5636":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:7166:18685":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"15:0:2063":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:11774:2760":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:1219:6445":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:48185:4357":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:7034:5440":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:4721:3880":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:10810:2750":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:598:6401":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:3689:3861":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:0:486":{"crate_id":2,"path":["core"],"kind":"module"},"2:2483:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:54080:5879":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:11235:3156":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4379:4845":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:1082:32203":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:50109:5472":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:46968:11984":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"9:956:17586":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"9:382:17688":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10455:3048":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:8699:5974":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:11123:6025":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:11174:3145":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:9293:18787":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:13536:3766":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:48261:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"5:3934:6435":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:4040:4357":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"12:1859:4361":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:50277:5715":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:5699:5156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:8717:6626":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:8701:2946":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:4398:4846":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:6270:3833":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:13059:3619":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:8826:5987":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:501:4474":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:2911:2285":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:9223:18772":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:13413:3730":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:9790:5712":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:3466:2407":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:5660:5142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:12896:3574":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:7847:4208":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:1639:5451":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:13192:3653":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:11485:3221":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:47592:5663":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:51785:5775":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:2793:3826":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8403:6538":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:2840:12061":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:5405:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:12768:3547":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:12322:3374":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:6277:5236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:3010:17813":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:12331:1455":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"18:574:2807":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:8272:18748":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:9671:18813":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:9543:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:11259:3160":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"12:822:6440":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:9722:2973":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:4506:4862":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"9:33:17654":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"16:6241:3988":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:11774:3271":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:6212:2343":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:5235:3889":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:5189:6661":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:4768:4984":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:52954:5828":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:12225:3361":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:2742:6766":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:4849:3884":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:2631:3819":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:8055:18731":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:9165:33837":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4438:6629":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:8656:2401":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:7197:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:22011:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:4653:4934":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:1701:4667":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:8631:2944":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:2728:2316":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"5:288:2290":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:12972:3596":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6545:5370":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"11:36:4372":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:47360:5655":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:6854:2343":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"12:632:4357":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:6829:4081":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4212:4760":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:46640:6332":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:49977:11875":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:9804:11890":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:5672:5147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:5238:6669":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:10721:3077":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4317:4813":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"18:538:2815":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:9225:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:13557:3769":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:1203:4087":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:49907:11882":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:12046:3328":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:7970:4219":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:48269:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:4726:4968":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:6687:5665":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"12:1866:4362":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:46685:5607":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:8494:2938":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:4294:6332":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:1562:4574":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:46522:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:2757:4097":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"5:3671:2621":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:4022:6593":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:3274:6569":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:8981:18757":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:48328:2343":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:13279:3702":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:420:2899":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"18:80:22551":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"12:300:4354":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:8500:5953":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:8517:6589":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:10394:3040":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:8216:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:21366:29785":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:1620:4360":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:4251:6601":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:6327:2728":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4575:4897":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:554:4508":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:5552:2654":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:21314:5501":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10420:3043":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:29402:6596":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"14:202:11917":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:8753:5264":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:12278:3367":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:12152:2764":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:6593:4053":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:46544:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:7951:6419":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:8375:31993":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8151:6345":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:10182:3021":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:2806:12056":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:11618:6708":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:12617:3492":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:12324:728":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:2658:1907":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:6070:3969":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:54210:5885":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:12033:3326":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:4145:5461":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:3972:30660":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:11612:6031":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:8881:33845":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:9283:18789":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:4702:6424":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:50694:5740":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:11617:3246":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6463:4026":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:4629:4924":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"12:1832:4357":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:52240:5797":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:53958:5871":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:4201:2660":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:8974:5998":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:10774:3028":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:4122:6595":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:11401:2755":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:11761:3269":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:5891:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:4706:4961":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:5517:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:5460:3895":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:1574:4582":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46984:5623":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:12315:1333":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:4152:4724":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6330:4000":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:6329:5264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:2366:5430":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:1021:18788":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:495:4471":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:10854:18767":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:46901:5613":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:11748:3268":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:8546:5960":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"16:2487:3813":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:20932:5487":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:534:3788":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:4913:5279":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:5504:5057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11813:3276":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:10913:2751":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:11525:6030":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:9691:18820":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4206:4757":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:6896:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:62:12435":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:1887:13819":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:12326:725":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:4527:4874":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:56951:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3635:2343":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:5605:5105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:4019:11849":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"12:815:6439":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4659:4936":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:1002:6443":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:6137:3974":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:50363:5719":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:4843:6653":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"18:590:2818":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:20492:6616":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:13354:3715":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"12:2205:5439":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:51839:5777":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"12:777:2624":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:4115:4696":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:22044:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:52029:5785":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:6345:3838":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:4284:2689":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:4662:3878":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:2046:2647":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:575:4519":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:7817:2747":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:12756:3542":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:1091:4087":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:53996:5872":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:2715:2284":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:4339:2690":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:4723:30948":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:13082:3624":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:3484:2654":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:9539:18797":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:7388:18687":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:8796:2950":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"12:1065:33759":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:47190:5634":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:50408:5623":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:6025:2672":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:7079:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46425:5600":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:10506:3053":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:918:4358":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:6449:2681":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"6:539:4499":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:9751:2977":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11034:3123":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:628:6413":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:8899:5990":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:7166:5396":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:21290:5497":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:2605:3818":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:1738:4680":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:21131:5488":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:5510:5058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:5720:6702":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"14:40:3109":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:3125:18853":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:4446:6630":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:3479:4357":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"9:0:2058":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"9:896:17584":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:50852:5759":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:0:801":{"crate_id":6,"path":["libc"],"kind":"module"},"2:2438:11990":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:8968:4357":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:50669:5739":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:47269:5646":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:646:12843":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:5412:5462":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:5772:5184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:6146:3975":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:54133:5882":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:247:33855":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:50373:5720":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:49456:5692":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:12328:1456":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:2437:6616":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:7825:4207":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:47168:6463":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:4534:4875":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:4567:656":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:1413:6436":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:50213:5711":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:8380:30685":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:4737:4974":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"12:1852:4360":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"14:31:6319":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:50177:5709":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:7220:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:50856:5760":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:9735:11888":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:2665:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:21:667":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:6420:2668":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:11932:6042":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"18:766:22565":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:4215:6600":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:5534:5067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:1357:4357":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:9712:2972":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:2474:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:7470:6449":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:9108:18759":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:7255:5407":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:8985:5999":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:5447:18668":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:13071:3620":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:49990:5482":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:6171:3981":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:48312:4357":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:8886:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:8229:25446":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:13126:3638":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:20335:6772":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:2480:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:10583:18764":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:4213:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"18:624:33868":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:49417:5686":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:10159:3020":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:8342:6535":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:7211:3937":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:12334:1101":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:12310:409":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:51104:5770":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:3118:4360":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:5839:18673":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:6538:5367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:11684:3259":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:11972:2713":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:4778:4989":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:960:6436":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:2557:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:22077:5525":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:12329:1457":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:9538:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:7048:29777":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:20775:6777":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:7967:5900":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:1138:6327":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:2133:33701":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:49122:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:9382:2958":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:3130:12063":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6619:4054":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:48666:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:48337:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"12:2190:33758":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:7237:4143":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:11715:2758":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:4817:3883":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:21040:6775":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:581:4522":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13158:3646":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:21403:29783":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:979:6440":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:6021:6719":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:52408:5803":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3427:6536":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:5898:2726":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:2930:17812":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:9183:18761":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:9462:6010":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:20413:5485":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:5641:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12695:3535":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:9118:33838":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11997:3321":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:13404:3728":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:53812:5868":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:4217:6330":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:11368:3192":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"18:660:22562":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:8382:5945":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:719:6422":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:50392:5722":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:9328:18784":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6472:4027":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:46937:5616":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:7929:18692":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"5:6606:2684":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4139:4714":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:9844:18848":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:13176:3650":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:1756:5455":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:2970:6465":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"18:755:2850":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4300:4803":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:6200:3984":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:11787:3272":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"12:725:4358":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:46885:29787":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:10333:5964":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"12:353:2619":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:12730:3536":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:4598:4911":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:10332:18921":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"18:681:2831":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5219:2939":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:6359:4002":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:3188:3855":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"5:6860:5437":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:52459:5804":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:5523:5059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:8654:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:6816:4078":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:11070:3128":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:52192:5796":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:9401:2960":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:10993:5475":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:7890:4214":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:5625:5121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:11480:27347":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"12:274:4351":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:21912:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:2661:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:2280:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:6936:2343":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:4346:4827":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:4:993":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:7249:5406":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:13024:3610":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:4267:6603":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:58291:5892":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:8135:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:9577:2969":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"4:0:2056":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:50836:5755":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:10882:5705":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:7749:3083":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"12:1840:2654":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:3402:3857":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:1714:4671":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:11764:11995":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:6743:18682":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:2659:2311":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:50704:5744":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"12:1085:17744":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:48210:5674":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:47024:5629":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:7105:5447":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:5075:11870":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"18:671:22563":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:12309:920":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:8911:33860":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"12:697:6438":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:8598:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:7788:6677":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:9488:18799":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:11315:3178":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:9362:2963":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:50737:5750":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:8095:5904":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:11054:3124":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:4635:3877":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:6375:5283":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:51940:5781":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"5:7094:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:9449:25423":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:4659:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:52718:5824":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:10662:6702":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:20516:6616":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:0:2065":{"crate_id":17,"path":["object"],"kind":"module"},"2:7786:6679":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:6424:5296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11500:3225":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:2993:3852":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:12073:3330":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:8926:5471":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:6316:3998":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"12:1518:17746":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13518:3760":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:48125:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12860:3569":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:3067:6467":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13506:3758":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:6059:33809":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:51023:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:20372:6776":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:50053:5698":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:10088:3015":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:10822:18766":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:9433:18781":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:49189:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:47038:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"12:1534:17747":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:5749:5178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:10506:6350":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:4635:4925":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:20097:29818":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:6719:33777":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1404:4359":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11721:3263":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:7483:3849":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:52010:5784":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:52640:5808":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:21038:6616":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:11536:3234":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:11797:6594":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:13527:3764":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:5684:5154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"12:834:6441":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:6469:2351":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:50313:5717":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:3159:25860":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:50489:11905":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:2509:3814":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:47289:5648":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:2250:6518":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:2579:2720":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:46915:5614":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:50401:5723":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:3110:4362":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:5498:5054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:8808:6670":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:5359:25401":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11841:3280":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:20780:6800":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:3632:3860":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:4496:4855":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:47228:5639":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"12:1872:4363":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"11:44:4373":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:10625:3071":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:7001:6434":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:49889:5477":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:29827:29779":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"5:7077:5446":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"18:652:2807":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:5525:3900":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:51087:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:11909:3290":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:9885:18885":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:8424:5633":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:50511:5727":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:2150:578":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:3089:32616":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:53920:5870":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:10303:11884":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:4368:2319":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:7659:18691":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:50840:5756":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:5486:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:9897:18886":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:10108:18849":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:4921:3886":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"}},"external_crates":{"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}