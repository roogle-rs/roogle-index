{"root":"0:0:1699","crate_version":"0.4.10","includes_private":false,"index":{"0:453:122":{"id":"0:453:122","crate_id":0,"name":"Duration","span":{"filename":"src/rwlock.rs","begin":[169,4],"end":[169,18]},"visibility":"default","docs":"Duration type used for `try_lock_for`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:459:2205":{"id":"0:459:2205","crate_id":0,"name":"RawRwLockRecursive","span":{"filename":"src/rwlock.rs","begin":[194,0],"end":[200,1]},"visibility":"public","docs":"Additional methods for RwLocks which support recursive read locks.\n\nThese are guaranteed to succeed without blocking if\nanother read lock is held at the time of the call. This allows a thread\nto recursively lock a `RwLock`. However using this method can cause\nwriters to starve since readers no longer block if a writer is waiting\nfor the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:460:2207","0:461:2209"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[1007,0],"end":[1017,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:412:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:539:2387":{"id":"0:539:2387","crate_id":0,"name":"try_read_recursive_until","span":{"filename":"src/rwlock.rs","begin":[939,4],"end":[949,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with shared read access until a timeout\nis reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the shared access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:741:669":{"id":"0:741:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[2196,4],"end":[2198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:62":{"id":"0:64:62","crate_id":0,"name":"raw","span":{"filename":"src/mutex.rs","begin":[277,4],"end":[279,5]},"visibility":"public","docs":"Returns the underlying raw mutex object.\n\nNote that you will most likely need to import the `RawMutex` trait from\n`lock_api` to be able to call functions on the raw mutex.\n\n# Safety\n\nThis method is unsafe because it allows unlocking a mutex while\nstill holding a reference to a `MutexGuard`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"R"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3320-0:35:166":{"id":"b:1:3320-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[997,0],"end":[1005,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:405:230","0:406:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:274:1891":{"id":"0:274:1891","crate_id":0,"name":"into_inner","span":{"filename":"src/remutex.rs","begin":[264,4],"end":[266,5]},"visibility":"public","docs":"Consumes this mutex, returning the underlying data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:2357":{"id":"0:528:2357","crate_id":0,"name":"try_write_for","span":{"filename":"src/rwlock.rs","begin":[739,4],"end":[746,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with exclusive write access until a\ntimeout is reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the exclusive access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:617":{"id":"0:617","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1484,0],"end":[1556,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:621:1698","0:622:860","0:625:1987","0:628:1991"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:501:1894":{"id":"0:501:1894","crate_id":0,"name":"const_new","span":{"filename":"src/rwlock.rs","begin":[403,4],"end":[408,5]},"visibility":"public","docs":"Creates a new new instance of an `RwLock<T>` based on a pre-existing\n`RawRwLock<T>`.\n\nThis allows creating a `RwLock<T>` in a constant context on stable\nRust.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_rwlock",{"generic":"R"}],["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[835,0],"end":[885,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:157:860","0:160:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60:1840":{"id":"0:60:1840","crate_id":0,"name":"try_lock","span":{"filename":"src/mutex.rs","begin":[227,4],"end":[234,5]},"visibility":"public","docs":"Attempts to acquire this lock.\n\nIf the lock could not be acquired at this time, then `None` is returned.\nOtherwise, an RAII guard is returned. The lock will be unlocked when the\nguard is dropped.\n\nThis function does not block.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:889:2395":{"id":"b:1:2542-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[75,0],"end":[75,90]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:435:1832":{"id":"0:435:1832","crate_id":0,"name":"INIT","span":{"filename":"src/rwlock.rs","begin":[43,4],"end":[43,21]},"visibility":"default","docs":"Initial value for an unlocked `RwLock`.","links":{},"attrs":["#[allow(clippy :: declare_interior_mutable_const)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":null}}},"0:193:669":{"id":"0:193:669","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[944,4],"end":[946,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:217":{"id":"0:482:217","crate_id":0,"name":"RwLock","span":{"filename":"src/rwlock.rs","begin":[330,0],"end":[333,1]},"visibility":"public","docs":"A reader-writer lock\n\nThis type of lock allows a number of readers or at most one writer at any\npoint in time. The write portion of this lock typically allows modification\nof the underlying data (exclusive access) and the read portion of this lock\ntypically allows for read-only access (shared access).\n\nThe type parameter `T` represents the data that this lock protects. It is\nrequired that `T` satisfies `Send` to be shared across threads and `Sync` to\nallow concurrent access through readers. The RAII guards returned from the\nlocking methods implement `Deref` (and `DerefMut` for the `write` methods)\nto allow access to the contained of the lock.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:493","0:498","0:502","0:518","0:523","0:530","0:535","0:540","0:546","a:1:2741:2621-0:482:217","a:1:8253:4578-0:482:217","a:1:8254:4577-0:482:217","b:1:2553-0:482:217","b:1:2545-0:482:217","b:1:2542-0:482:217","b:1:2548-0:482:217","b:1:3320-0:482:217","b:1:2248-0:482:217","b:1:2538-0:482:217","b:1:2251-0:482:217","0:559","0:490","0:487","0:555","0:551"]}}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1341,0],"end":[1345,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:608:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[748,0],"end":[756,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:358:230","0:359:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:873:218":{"id":"b:1:2553-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:873:218":{"id":"b:1:2538-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:21:1832":{"id":"0:21:1832","crate_id":0,"name":"INIT","span":{"filename":"src/mutex.rs","begin":[41,4],"end":[41,21]},"visibility":"default","docs":"Initial value for an unlocked mutex.","links":{},"attrs":["#[allow(clippy :: declare_interior_mutable_const)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":null}}},"0:114:1862":{"id":"0:114:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/mutex.rs","begin":[596,4],"end":[602,5]},"visibility":"public","docs":"Unlocks the mutex using a fair unlock protocol.\n\nBy default, mutexes are unfair and allow the current thread to re-lock\nthe mutex before another has the chance to acquire the lock, even if\nthat thread has been blocked on the mutex for a long time. This is the\ndefault because it allows much higher throughput as it avoids forcing a\ncontext switch on every mutex unlock. This can result in one thread\nacquiring a mutex many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `MutexGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:4578-0:255:2081":{"id":"a:1:8253:4578-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"G"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:873:218":{"id":"b:1:2548-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8253:4578-0:849:1982":{"id":"a:1:8253:4578-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:873:218":{"id":"b:1:2251-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:2621-0:873:218":{"id":"a:1:2741:2621-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:134:587":{"id":"0:134:587","crate_id":0,"name":"drop","span":{"filename":"src/mutex.rs","begin":[654,4],"end":[659,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:603:587":{"id":"0:603:587","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[1333,4],"end":[1338,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:698:1867":{"id":"0:698:1867","crate_id":0,"name":"bump","span":{"filename":"src/rwlock.rs","begin":[1982,4],"end":[1987,5]},"visibility":"public","docs":"Temporarily yields the `RwLock` to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `upgradable_read`, however it can be much more efficient in the case where there\nare no waiting threads.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[645,0],"end":[650,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2911:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:129:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3320-0:5:1693":{"id":"b:1:3320-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1558,0],"end":[1577,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockDowngrade","id":"0:450:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:635:2190"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194-0:12:1696":{"id":"0:194-0:12:1696","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[108,0],"end":[108,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::mutex","name":"mutex","id":"0:12:1696","glob":true}}},"0:581:1991":{"id":"0:581:1991","crate_id":0,"name":"unlocked","span":{"filename":"src/rwlock.rs","begin":[1255,4],"end":[1265,5]},"visibility":"public","docs":"Temporarily unlocks the `RwLock` to execute the given function.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the `RwLock`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:901:2427":{"id":"b:1:2548-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3320-0:482:217":{"id":"b:1:3320-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8254:4577-0:908:2456":{"id":"a:1:8254:4577-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2551:128":{"id":"1:2551:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:160:1987":{"id":"0:160:1987","crate_id":0,"name":"try_map","span":{"filename":"src/mutex.rs","begin":[869,4],"end":[884,5]},"visibility":"public","docs":"Attempts to make a new `MappedMutexGuard` for a component of the\nlocked data. The original guard is returned if the closure returns `None`.\n\nThis operation cannot fail as the `MappedMutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `MappedMutexGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:482:217":{"id":"b:1:2248-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:703:2190":{"id":"0:703:2190","crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[1998,4],"end":[2009,5]},"visibility":"public","docs":"Atomically downgrades an upgradable read lock lock into a shared read lock\nwithout allowing any writers to take exclusive access of the lock in the\nmeantime.\n\nNote that if there are any writers currently waiting to take the lock\nthen other readers may not be able to acquire the lock even if it was\ndowngraded.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2827,0],"end":[2833,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:834:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:440:2162":{"id":"0:440:2162","crate_id":0,"name":"lock_exclusive","span":{"filename":"src/rwlock.rs","begin":[63,4],"end":[63,29]},"visibility":"default","docs":"Acquires an exclusive lock, blocking the current thread until it is able to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:8253:4578-0:873:218":{"id":"a:1:8253:4578-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:8254:4577-0:255:2081":{"id":"a:1:8254:4577-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:255:2081":{"id":"0:255:2081","crate_id":0,"name":"ReentrantMutex","span":{"filename":"src/remutex.rs","begin":[217,0],"end":[220,1]},"visibility":"public","docs":"A mutex which can be recursively locked by a single thread.\n\nThis type is identical to `Mutex` except for the following points:\n\n- Locking multiple times from the same thread will work correctly instead of\n  deadlocking.\n- `ReentrantMutexGuard` does not give mutable references to the locked data.\n  Use a `RefCell` if you need this.\n\nSee [`Mutex`](struct.Mutex.html) for more details about the underlying mutex\nprimitive.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:269","0:275","0:280","0:293","0:298","a:1:2741:2621-0:255:2081","a:1:8253:4578-0:255:2081","a:1:8254:4577-0:255:2081","b:1:2553-0:255:2081","b:1:2545-0:255:2081","b:1:2542-0:255:2081","b:1:2548-0:255:2081","b:1:3320-0:255:2081","b:1:2248-0:255:2081","b:1:2538-0:255:2081","b:1:2251-0:255:2081","0:304","0:309","0:314","0:265","0:261"]}}},"b:1:2553-0:908:2456":{"id":"b:1:2553-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:841:167":{"id":"b:1:2538-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:770":{"id":"0:770","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2663,0],"end":[2669,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:774:230","0:775:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:835":{"id":"0:835","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2835,0],"end":[2841,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:839:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:29:1867":{"id":"0:29:1867","crate_id":0,"name":"bump","span":{"filename":"src/mutex.rs","begin":[110,4],"end":[113,5]},"visibility":"default","docs":"Temporarily yields the mutex to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `lock`, however it can be much more efficient in the case where there\nare no waiting threads.\n\n# Safety\n\nThis method may only be called if the mutex is held in the current context, see\nthe documentation of [`unlock`].\n\n[`unlock`]: trait.RawMutex.html#tymethod.unlock","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:255:2081":{"id":"b:1:2542-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:865:2126":{"id":"a:1:2684:220-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2911:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:178:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:2621-0:908:2456":{"id":"a:1:2741:2621-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:86:669":{"id":"0:86:669","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[435,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:62":{"id":"0:516:62","crate_id":0,"name":"raw","span":{"filename":"src/rwlock.rs","begin":[565,4],"end":[567,5]},"visibility":"public","docs":"Returns the underlying raw reader-writer lock object.\n\nNote that you will most likely need to import the `RawRwLock` trait from\n`lock_api` to be able to call functions on the raw\nreader-writer lock.\n\n# Safety\n\nThis method is unsafe because it allows unlocking a mutex while\nstill holding a reference to a lock guard.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"R"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:2053":{"id":"0:217:2053","crate_id":0,"name":"RawReentrantMutex","span":{"filename":"src/remutex.rs","begin":[67,0],"end":[72,1]},"visibility":"public","docs":"A raw mutex type that wraps another raw mutex to provide reentrancy.\n\nAlthough this has the same methods as the [`RawMutex`] trait, it does\nnot implement it, and should not be used in the same way, since this\nmutex can successfully acquire a lock multiple times in the same thread.\nOnly use this when you know you want a raw mutex that can be locked\nreentrantly; you probably want [`ReentrantMutex`] instead.\n\n[`RawMutex`]: trait.RawMutex.html\n[`ReentrantMutex`]: struct.ReentrantMutex.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:230","0:243","0:248","a:1:2741:2621-0:217:2053","a:1:8253:4578-0:217:2053","a:1:8254:4577-0:217:2053","b:1:2553-0:217:2053","b:1:2542-0:217:2053","b:1:2548-0:217:2053","b:1:3320-0:217:2053","b:1:2248-0:217:2053","b:1:2538-0:217:2053","b:1:2251-0:217:2053","0:227","0:224"]}}},"0:522:2347":{"id":"0:522:2347","crate_id":0,"name":"force_unlock_write_fair","span":{"filename":"src/rwlock.rs","begin":[694,4],"end":[696,5]},"visibility":"public","docs":"Forcibly unlocks a write lock using a fair unlock procotol.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `RwLockWriteGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`RwLockWriteGuard` but that guard has be discarded using `mem::forget`.\nBehavior is undefined if a rwlock is write-unlocked when not write-locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8254:4577-0:482:217":{"id":"a:1:8254:4577-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:214:2040":{"id":"0:214:2040","crate_id":0,"name":"GetThreadId","span":{"filename":"src/remutex.rs","begin":[45,0],"end":[55,1]},"visibility":"public","docs":"Helper trait which returns a non-zero thread ID.\n\nThe simplest way to implement this trait is to return the address of a\nthread-local variable.\n\n# Safety\n\nImplementations of this trait must ensure that no two active threads share\nthe same thread ID. However the ID of a thread that has exited can be\nre-used since that thread is no longer active.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:215:1832","0:216:2044"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:1:2684:220-0:889:2395":{"id":"a:1:2684:220-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:78:60":{"id":"0:78:60","crate_id":0,"name":"default","span":{"filename":"src/mutex.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[826,0],"end":[829,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:856:2087":{"id":"b:1:2548-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:12:1696":{"id":"0:12:1696","crate_id":0,"name":"mutex","span":{"filename":"src/mutex.rs","begin":[8,0],"end":[950,97]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:20:1829","0:27:1857","0:30:1871","0:35:166","0:841:167","0:849:1982"],"is_stripped":true}}},"b:1:3320-0:865:2126":{"id":"b:1:3320-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:466:2223":{"id":"0:466:2223","crate_id":0,"name":"lock_upgradable","span":{"filename":"src/rwlock.rs","begin":[221,4],"end":[221,30]},"visibility":"default","docs":"Acquires an upgradable lock, blocking the current thread until it is able to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:179":{"id":"0:179","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[925,0],"end":[933,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:183:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:873:218":{"id":"b:1:2248-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:881:219":{"id":"a:1:2684:220-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:715:2259":{"id":"0:715:2259","crate_id":0,"name":"try_upgrade_until","span":{"filename":"src/rwlock.rs","begin":[2091,4],"end":[2106,5]},"visibility":"public","docs":"Tries to atomically upgrade an upgradable read lock into an exclusive\nwrite lock, until a timeout is reached.\n\nIf the access could not be granted before the timeout expires, then\nthe current guard is returned.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:889:2395":{"id":"b:1:2538-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:785:669":{"id":"0:785:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[2684,4],"end":[2686,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3320-0:8:1695":{"id":"b:1:3320-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:8:1695":{"id":"b:1:2251-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:839:669":{"id":"0:839:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[2838,4],"end":[2840,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:799":{"id":"0:799","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2727,0],"end":[2777,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:803:860","0:806:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:8:1695":{"id":"b:1:2248-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:1991":{"id":"0:106:1991","crate_id":0,"name":"unlocked","span":{"filename":"src/mutex.rs","begin":[558,4],"end":[568,5]},"visibility":"public","docs":"Temporarily unlocks the mutex to execute the given function.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the mutex.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444:2170":{"id":"0:444:2170","crate_id":0,"name":"is_locked_exclusive","span":{"filename":"src/rwlock.rs","begin":[89,4],"end":[98,5]},"visibility":"default","docs":"Check if this `RwLock` is currently exclusively locked.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:856:2087":{"id":"0:856:2087","crate_id":0,"name":"ReentrantMutexGuard","span":{"filename":"src/remutex.rs","begin":[604,0],"end":[607,1]},"visibility":"public","docs":"An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\nis dropped (falls out of scope), the lock will be unlocked.\n\nThe data protected by the mutex can be accessed through this guard via its\n`Deref` implementation.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the ReentrantMutex will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:328","0:343","a:1:2741:2621-0:856:2087","a:1:2684:220-0:856:2087","a:1:8253:4578-0:856:2087","a:1:8254:4577-0:856:2087","b:1:2553-0:856:2087","b:1:2542-0:856:2087","b:1:2548-0:856:2087","b:1:3320-0:856:2087","b:1:2248-0:856:2087","b:1:2538-0:856:2087","b:1:2251-0:856:2087","0:323","0:366","0:353","0:372","0:360"]}}},"0:446:2174":{"id":"0:446:2174","crate_id":0,"name":"unlock_shared_fair","span":{"filename":"src/rwlock.rs","begin":[113,4],"end":[113,40]},"visibility":"default","docs":"Releases a shared lock using a fair unlock protocol.\n\n# Safety\n\nThis method may only be called if a shared lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:670:669":{"id":"0:670:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[1681,4],"end":[1683,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:856:2087":{"id":"b:1:2248-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:742":{"id":"0:742","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2201,0],"end":[2207,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:746:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3320-0:856:2087":{"id":"b:1:3320-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:441:2164":{"id":"0:441:2164","crate_id":0,"name":"try_lock_exclusive","span":{"filename":"src/rwlock.rs","begin":[66,4],"end":[66,41]},"visibility":"default","docs":"Attempts to acquire an exclusive lock without blocking.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:471:2236":{"id":"0:471:2236","crate_id":0,"name":"RawRwLockUpgradeFair","span":{"filename":"src/rwlock.rs","begin":[251,0],"end":[272,1]},"visibility":"public","docs":"Additional methods for RwLocks which support upgradable locks and fair\nunlocking.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:472:2238","0:473:2242"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"0:445:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:61:1913":{"id":"0:61:1913","crate_id":0,"name":"get_mut","span":{"filename":"src/mutex.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the `Mutex` mutably, no actual locking needs to\ntake place---the mutable borrow statically guarantees no locks exist.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:598:551":{"id":"0:598:551","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[1326,4],"end":[1328,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8254:4577-0:889:2395":{"id":"a:1:8254:4577-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:2701:228-0:5:1693":{"id":"a:1:2701:228-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:730:230":{"id":"0:730:230","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[2176,4],"end":[2176,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:35:166":{"id":"0:35:166","crate_id":0,"name":"Mutex","span":{"filename":"src/mutex.rs","begin":[142,0],"end":[145,1]},"visibility":"public","docs":"A mutual exclusion primitive useful for protecting shared data\n\nThis mutex will block threads waiting for the lock to become available. The\nmutex can also be statically initialized or created via a `new`\nconstructor. Each mutex has a type parameter which represents the data that\nit is protecting. The data can only be accessed through the RAII guards\nreturned from `lock` and `try_lock`, which guarantees that the data is only\never accessed when the mutex is locked.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:46","0:51","0:55","0:66","0:70","a:1:2741:2621-0:35:166","a:1:8253:4578-0:35:166","a:1:8254:4577-0:35:166","b:1:2553-0:35:166","b:1:2545-0:35:166","b:1:2542-0:35:166","b:1:2548-0:35:166","b:1:3320-0:35:166","b:1:2248-0:35:166","b:1:2538-0:35:166","b:1:2251-0:35:166","0:83","0:75","0:40","0:79","0:43"]}}},"0:388:860":{"id":"0:388:860","crate_id":0,"name":"map","span":{"filename":"src/remutex.rs","begin":[927,4],"end":[939,5]},"visibility":"public","docs":"Makes a new `MappedReentrantMutexGuard` for a component of the locked data.\n\nThis operation cannot fail as the `MappedReentrantMutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `MappedReentrantMutexGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:551":{"id":"0:406:551","crate_id":0,"name":"deref","span":{"filename":"src/remutex.rs","begin":[1002,4],"end":[1004,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:4578-0:217:2053":{"id":"a:1:8253:4578-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"G"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:450:2187":{"id":"0:450:2187","crate_id":0,"name":"RawRwLockDowngrade","span":{"filename":"src/rwlock.rs","begin":[153,0],"end":[161,1]},"visibility":"public","docs":"Additional methods for RwLocks which support atomically downgrading an\nexclusive lock to a shared lock.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:451:2190"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:468:2228":{"id":"0:468:2228","crate_id":0,"name":"unlock_upgradable","span":{"filename":"src/rwlock.rs","begin":[231,4],"end":[231,39]},"visibility":"default","docs":"Releases an upgradable lock.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:510:2302":{"id":"0:510:2302","crate_id":0,"name":"try_write","span":{"filename":"src/rwlock.rs","begin":[493,4],"end":[500,5]},"visibility":"public","docs":"Attempts to lock this `RwLock` with exclusive write access.\n\nIf the lock could not be acquired at this time, then `None` is returned.\nOtherwise, an RAII guard is returned which will release the lock when\nit is dropped.\n\nThis function does not block.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:584":{"id":"0:584","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1268,0],"end":[1321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"0:445:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:588:1862","0:589:2009","0:592:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:825":{"id":"0:825","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2817,0],"end":[2825,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:829:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216:2044":{"id":"0:216:2044","crate_id":0,"name":"nonzero_thread_id","span":{"filename":"src/remutex.rs","begin":[54,4],"end":[54,48]},"visibility":"default","docs":"Returns a non-zero thread ID which identifies the current thread of\nexecution.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NonZeroUsize","id":"1:22403:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2553-0:881:219":{"id":"b:1:2553-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2538-0:881:219":{"id":"b:1:2538-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:731:551":{"id":"0:731:551","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[2178,4],"end":[2180,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:2247":{"id":"0:475:2247","crate_id":0,"name":"downgrade_upgradable","span":{"filename":"src/rwlock.rs","begin":[282,4],"end":[282,42]},"visibility":"default","docs":"Downgrades an upgradable lock to a shared lock.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2538-0:255:2081":{"id":"b:1:2538-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:2249":{"id":"0:476:2249","crate_id":0,"name":"downgrade_to_upgradable","span":{"filename":"src/rwlock.rs","begin":[289,4],"end":[289,45]},"visibility":"default","docs":"Downgrades an exclusive lock to an upgradable lock.\n\n# Safety\n\nThis method may only be called if an exclusive lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2548-0:889:2395":{"id":"b:1:2548-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:172:230":{"id":"0:172:230","crate_id":0,"name":"Target","span":{"filename":"src/mutex.rs","begin":[911,4],"end":[911,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:292:1932":{"id":"0:292:1932","crate_id":0,"name":"data_ptr","span":{"filename":"src/remutex.rs","begin":[399,4],"end":[401,5]},"visibility":"public","docs":"Returns a raw pointer to the underlying data.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `ReentrantMutexGuard` object alive, for example\nwhen dealing with FFI.\n\n# Safety\n\nYou must ensure that there are no data races when dereferencing the\nreturned pointer, for example if the current thread logically owns a\n`ReentrantMutexGuard` but that guard has been discarded using\n`mem::forget`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:1874":{"id":"0:32:1874","crate_id":0,"name":"Instant","span":{"filename":"src/mutex.rs","begin":[125,4],"end":[125,17]},"visibility":"default","docs":"Instant type used for `try_lock_until`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:509:2298":{"id":"0:509:2298","crate_id":0,"name":"write","span":{"filename":"src/rwlock.rs","begin":[479,4],"end":[483,5]},"visibility":"public","docs":"Locks this `RwLock` with exclusive write access, blocking the current\nthread until it can be acquired.\n\nThis function will not return while other writers or other readers\ncurrently have access to the lock.\n\nReturns an RAII guard which will drop the write access of this `RwLock`\nwhen dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:795":{"id":"0:795","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2722,0],"end":[2725,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:434:2152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:481:2259":{"id":"0:481:2259","crate_id":0,"name":"try_upgrade_until","span":{"filename":"src/rwlock.rs","begin":[315,4],"end":[315,71]},"visibility":"default","docs":"Attempts to upgrade an upgradable lock to an exclusive lock until a\ntimeout is reached.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:806:1987":{"id":"0:806:1987","crate_id":0,"name":"try_map","span":{"filename":"src/rwlock.rs","begin":[2761,4],"end":[2776,5]},"visibility":"public","docs":"Attempts to make  a new `MappedRwLockWriteGuard` for a component of the\nlocked data. The original guard is return if the closure returns `None`.\n\nThis operation cannot fail as the `MappedRwLockWriteGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `MappedRwLockWriteGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:1832":{"id":"0:233:1832","crate_id":0,"name":"INIT","span":{"filename":"src/remutex.rs","begin":[80,4],"end":[85,6]},"visibility":"public","docs":"Initial value for an unlocked mutex.","links":{},"attrs":["#[allow(clippy :: declare_interior_mutable_const)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[665,0],"end":[697,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"0:445:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:521:2345","0:522:2347"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2684:220-0:5:1693":{"id":"a:1:2684:220-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:574:1698":{"id":"0:574:1698","crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[1196,4],"end":[1198,5]},"visibility":"public","docs":"Returns a reference to the original reader-writer lock object.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:849:1982":{"id":"b:1:2553-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:217:2053":{"id":"b:1:2548-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[1019,0],"end":[1025,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:418:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:775:551":{"id":"0:775:551","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[2666,4],"end":[2668,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:482:217":{"id":"b:1:2553-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[614,0],"end":[689,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:333:1697","0:334:860","0:337:1987","0:340:1991"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:20:1829":{"id":"0:20:1829","crate_id":0,"name":"RawMutex","span":{"filename":"src/mutex.rs","begin":[36,0],"end":[79,1]},"visibility":"public","docs":"Basic operations for a mutex.\n\nTypes implementing this trait can be used by `Mutex` to form a safe and\nfully-functioning mutex type.\n\n# Safety\n\nImplementations of this trait must ensure that the mutex is actually\nexclusive: a lock can't be acquired while the mutex is already locked.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:21:1832","0:22:1835","0:23:1837","0:24:1840","0:25:1848","0:26:1850"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:1:2248-0:35:166":{"id":"b:1:2248-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:889:2395":{"id":"0:889:2395","crate_id":0,"name":"RwLockUpgradableReadGuard","span":{"filename":"src/rwlock.rs","begin":[1869,0],"end":[1872,1]},"visibility":"public","docs":"RAII structure used to release the upgradable read access of a lock when\ndropped.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the RwLock will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:680","0:690","0:699","0:710","0:716","a:1:2741:2621-0:889:2395","a:1:2684:220-0:889:2395","a:1:8253:4578-0:889:2395","a:1:8254:4577-0:889:2395","b:1:2553-0:889:2395","b:1:2542-0:889:2395","b:1:2548-0:889:2395","b:1:3320-0:889:2395","b:1:2248-0:889:2395","b:1:2538-0:889:2395","b:1:2251-0:889:2395","0:742","0:676","0:726","0:737","0:732"]}}},"a:1:2741:2621-0:849:1982":{"id":"a:1:2741:2621-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:49:940":{"id":"0:49:940","crate_id":0,"name":"new","span":{"filename":"src/mutex.rs","begin":[154,4],"end":[159,5]},"visibility":"public","docs":"Creates a new mutex in an unlocked state ready for use.","links":{},"attrs":["#[cfg(has_const_fn_trait_bound)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2552:1480":{"id":"1:2552:1480","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[74,0],"end":[74,90]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8253:4578-0:8:1695":{"id":"a:1:8253:4578-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3322:1493":{"id":"1:3322:1493","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39352:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:841:167":{"id":"b:1:2542-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:458:2198":{"id":"0:458:2198","crate_id":0,"name":"try_lock_exclusive_until","span":{"filename":"src/rwlock.rs","begin":[184,4],"end":[184,71]},"visibility":"default","docs":"Attempts to acquire an exclusive lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:447:2176":{"id":"0:447:2176","crate_id":0,"name":"unlock_exclusive_fair","span":{"filename":"src/rwlock.rs","begin":[120,4],"end":[120,43]},"visibility":"default","docs":"Releases an exclusive lock using a fair unlock protocol.\n\n# Safety\n\nThis method may only be called if an exclusive lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:8253:4578-0:482:217":{"id":"a:1:8253:4578-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:774:230":{"id":"0:774:230","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[2664,4],"end":[2664,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:1:8254:4577-0:849:1982":{"id":"a:1:8254:4577-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2553-0:901:2427":{"id":"b:1:2553-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1323,0],"end":[1329,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:597:230","0:598:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:31:122":{"id":"0:31:122","crate_id":0,"name":"Duration","span":{"filename":"src/mutex.rs","begin":[122,4],"end":[122,18]},"visibility":"default","docs":"Duration type used for `try_lock_for`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"1:2544:695":{"id":"1:2544:695","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[495,0],"end":[495,96]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1156,0],"end":[1161,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:558:695"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[77,0],"end":[152,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["0:233:1832","0:236:1837","0:238:1840","0:240:1848","0:241:1850","0:242:2069"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:452:2192":{"id":"0:452:2192","crate_id":0,"name":"RawRwLockTimed","span":{"filename":"src/rwlock.rs","begin":[167,0],"end":[185,1]},"visibility":"public","docs":"Additional methods for RwLocks which support locking with timeouts.\n\nThe `Duration` and `Instant` types are specified as associated types so that\nthis trait is usable even in `no_std` environments.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:453:122","0:454:1874","0:455:2194","0:456:2195","0:457:2197","0:458:2198"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[830,0],"end":[833,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:20:1829","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[662,0],"end":[666,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:139:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:474:2245":{"id":"0:474:2245","crate_id":0,"name":"RawRwLockUpgradeDowngrade","span":{"filename":"src/rwlock.rs","begin":[276,0],"end":[290,1]},"visibility":"public","docs":"Additional methods for RwLocks which support upgradable locks and lock\ndowngrading.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:475:2247","0:476:2249"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockDowngrade","id":"0:450:2187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"a:1:8253:4578-0:5:1693":{"id":"a:1:8253:4578-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[637,0],"end":[643,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:123:230","0:124:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[609,0],"end":[612,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2545-0:482:217":{"id":"b:1:2545-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2547:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:465:2221":{"id":"0:465:2221","crate_id":0,"name":"RawRwLockUpgrade","span":{"filename":"src/rwlock.rs","begin":[219,0],"end":[247,1]},"visibility":"public","docs":"Additional methods for RwLocks which support atomically upgrading a shared\nlock to an exclusive lock.\n\nThis requires acquiring a special \"upgradable read lock\" instead of a\nnormal shared lock. There may only be one upgradable lock at any time,\notherwise deadlocks could occur when upgrading.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:466:2223","0:467:2225","0:468:2228","0:469:2230","0:470:2233"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:609":{"id":"0:609","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1347,0],"end":[1353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:613:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:424:669":{"id":"0:424:669","crate_id":0,"name":"fmt","span":{"filename":"src/remutex.rs","begin":[1030,4],"end":[1032,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:881:219":{"id":"b:1:2548-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:881:219":{"id":"b:1:2251-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:901:2427":{"id":"b:1:2248-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:814":{"id":"0:814","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2802,0],"end":[2808,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:818:230","0:819:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:614":{"id":"0:614","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1482,0],"end":[1482,89]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523":{"id":"0:523","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[699,0],"end":[835,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockTimed","id":"0:452:2192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:526:2353","0:527:2354","0:528:2357","0:529:2358"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:8:1695":{"id":"0:8:1695","crate_id":0,"name":"GuardNoSend","span":{"filename":"src/lib.rs","begin":[103,0],"end":[103,32]},"visibility":"public","docs":"Marker type which indicates that the Guard type for a lock is not `Send`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2741:2621-0:8:1695","a:1:2684:220-0:8:1695","a:1:8253:4578-0:8:1695","a:1:8254:4577-0:8:1695","b:1:2553-0:8:1695","b:1:2542-0:8:1695","b:1:2548-0:8:1695","b:1:3320-0:8:1695","b:1:2248-0:8:1695","b:1:2538-0:8:1695","b:1:2251-0:8:1695","0:11"]}}},"0:371:669":{"id":"0:371:669","crate_id":0,"name":"fmt","span":{"filename":"src/remutex.rs","begin":[773,4],"end":[775,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2557:1479":{"id":"1:2557:1479","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:1867":{"id":"0:352:1867","crate_id":0,"name":"bump","span":{"filename":"src/remutex.rs","begin":[740,4],"end":[745,5]},"visibility":"public","docs":"Temporarily yields the mutex to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `lock`, however it can be much more efficient in the case where there\nare no waiting threads.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451:2190":{"id":"0:451:2190","crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[160,4],"end":[160,31]},"visibility":"default","docs":"Atomically downgrades an exclusive lock into a shared lock without\nallowing any thread to take an exclusive lock in the meantime.\n\n# Safety\n\nThis method may only be called if an exclusive lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:608:669":{"id":"0:608:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[1342,4],"end":[1344,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[935,0],"end":[939,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:188:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54:1894":{"id":"0:54:1894","crate_id":0,"name":"const_new","span":{"filename":"src/mutex.rs","begin":[183,4],"end":[188,5]},"visibility":"public","docs":"Creates a new mutex based on a pre-existing raw mutex.\n\nThis allows creating a mutex in a constant context on stable Rust.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_mutex",{"generic":"R"}],["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:5:1693":{"id":"b:1:2538-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241:1850":{"id":"0:241:1850","crate_id":0,"name":"is_locked","span":{"filename":"src/remutex.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Checks whether the mutex is currently locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:4578-0:881:219":{"id":"a:1:8253:4578-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2548-0:841:167":{"id":"b:1:2548-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2547:695":{"id":"1:2547:695","crate_id":1,"name":"from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"primitive":"never"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:716":{"id":"0:716","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2109,0],"end":[2173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgradeTimed","id":"0:477:2252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockUpgradeDowngrade","id":"0:474:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:720:2502","0:723:2504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:303:1878":{"id":"0:303:1878","crate_id":0,"name":"try_lock_until","span":{"filename":"src/remutex.rs","begin":[483,4],"end":[490,5]},"visibility":"public","docs":"Attempts to acquire this lock until a timeout is reached.\n\nIf the lock could not be acquired before the timeout expired, then\n`None` is returned. Otherwise, an RAII guard is returned. The lock will\nbe unlocked when the guard is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:482:217":{"id":"b:1:2542-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:908:2456":{"id":"b:1:2251-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464:2215":{"id":"0:464:2215","crate_id":0,"name":"try_lock_shared_recursive_until","span":{"filename":"src/rwlock.rs","begin":[210,4],"end":[210,78]},"visibility":"default","docs":"Attempts to acquire a shared lock until a timeout is reached, without\ndeadlocking in case of a recursive lock.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:247:1867":{"id":"0:247:1867","crate_id":0,"name":"bump","span":{"filename":"src/remutex.rs","begin":[182,4],"end":[189,5]},"visibility":"public","docs":"Temporarily yields the mutex to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `lock`, however it can be much more efficient in the case where there\nare no waiting threads.\n\n# Safety\n\nThis method may only be called if the mutex is held by the current thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:625:1987":{"id":"0:625:1987","crate_id":0,"name":"try_map","span":{"filename":"src/rwlock.rs","begin":[1523,4],"end":[1538,5]},"visibility":"public","docs":"Attempts to make  a new `MappedRwLockWriteGuard` for a component of the\nlocked data. The original guard is return if the closure returns `None`.\n\nThis operation cannot fail as the `RwLockWriteGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `RwLockWriteGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:2211":{"id":"0:462:2211","crate_id":0,"name":"RawRwLockRecursiveTimed","span":{"filename":"src/rwlock.rs","begin":[203,0],"end":[211,1]},"visibility":"public","docs":"Additional methods for RwLocks which support recursive read locks and timeouts.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:463:2214","0:464:2215"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockRecursive","id":"0:459:2205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockTimed","id":"0:452:2192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[543,0],"end":[564,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:318:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:635:2190":{"id":"0:635:2190","crate_id":0,"name":"downgrade","span":{"filename":"src/rwlock.rs","begin":[1565,4],"end":[1576,5]},"visibility":"public","docs":"Atomically downgrades a write lock into a read lock without allowing any\nwriters to take exclusive access of the lock in the meantime.\n\nNote that if there are any writers currently waiting to take the lock\nthen other readers may not be able to acquire the lock even if it was\ndowngraded.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[652,0],"end":[660,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:134:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:559":{"id":"0:559","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1163,0],"end":[1181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:562:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:2621-0:901:2427":{"id":"a:1:2741:2621-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:824:553":{"id":"0:824:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/rwlock.rs","begin":[2812,4],"end":[2814,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:819:551":{"id":"0:819:551","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[2805,4],"end":[2807,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[770,0],"end":[776,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:371:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:512:1850":{"id":"0:512:1850","crate_id":0,"name":"is_locked","span":{"filename":"src/rwlock.rs","begin":[513,4],"end":[515,5]},"visibility":"public","docs":"Checks whether this `RwLock` is currently locked in any way.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:549:2412":{"id":"0:549:2412","crate_id":0,"name":"try_upgradable_read_for","span":{"filename":"src/rwlock.rs","begin":[1081,4],"end":[1091,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with upgradable read access until a timeout\nis reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the shared access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:1835":{"id":"0:22:1835","crate_id":0,"name":"GuardMarker","span":{"filename":"src/mutex.rs","begin":[45,4],"end":[45,21]},"visibility":"default","docs":"Marker type which determines whether a lock guard should be `Send`. Use\none of the `GuardSend` or `GuardNoSend` helper types here.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"b:1:3320-0:873:218":{"id":"b:1:3320-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:641":{"id":"0:641","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1600,0],"end":[1653,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"0:445:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:645:1862","0:646:2009","0:649:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8253:4578-0:889:2395":{"id":"a:1:8253:4578-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[231,0],"end":[267,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:273:940","0:274:1891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:302:1876":{"id":"0:302:1876","crate_id":0,"name":"try_lock_for","span":{"filename":"src/remutex.rs","begin":[468,4],"end":[475,5]},"visibility":"public","docs":"Attempts to acquire this lock until a timeout is reached.\n\nIf the lock could not be acquired before the timeout expired, then\n`None` is returned. Otherwise, an RAII guard is returned. The lock will\nbe unlocked when the guard is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8254:4577-0:35:166":{"id":"a:1:8254:4577-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:533:2372":{"id":"0:533:2372","crate_id":0,"name":"read_recursive","span":{"filename":"src/rwlock.rs","begin":[854,4],"end":[858,5]},"visibility":"public","docs":"Locks this `RwLock` with shared read access, blocking the current thread\nuntil it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which\nhold the lock. There may be other readers currently inside the lock when\nthis method returns.\n\nUnlike `read`, this method is guaranteed to succeed without blocking if\nanother read lock is held at the time of the call. This allows a thread\nto recursively lock a `RwLock`. However using this method can cause\nwriters to starve since readers no longer block if a writer is waiting\nfor the lock.\n\nReturns an RAII guard which will release this thread's shared access\nonce it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1073,0],"end":[1147,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgradeTimed","id":"0:477:2252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:549:2412","0:550:2413"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:35:166":{"id":"b:1:2553-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2542-0:873:218":{"id":"b:1:2542-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:834:669":{"id":"0:834:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[2830,4],"end":[2832,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:865:2126":{"id":"b:1:2542-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74:1878":{"id":"0:74:1878","crate_id":0,"name":"try_lock_until","span":{"filename":"src/mutex.rs","begin":[377,4],"end":[384,5]},"visibility":"public","docs":"Attempts to acquire this lock until a timeout is reached.\n\nIf the lock could not be acquired before the timeout expired, then\n`None` is returned. Otherwise, an RAII guard is returned. The lock will\nbe unlocked when the guard is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1655,0],"end":[1661,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:654:230","0:655:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2684:220-0:8:1695":{"id":"a:1:2684:220-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[148,0],"end":[148,73]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:554:60":{"id":"0:554:60","crate_id":0,"name":"default","span":{"filename":"src/rwlock.rs","begin":[1151,4],"end":[1153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:2621-0:255:2081":{"id":"a:1:2741:2621-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:497:1891":{"id":"0:497:1891","crate_id":0,"name":"into_inner","span":{"filename":"src/rwlock.rs","begin":[391,4],"end":[393,5]},"visibility":"public","docs":"Consumes this `RwLock`, returning the underlying data.","links":{},"attrs":["#[inline]","#[allow(unused_unsafe)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2556:128":{"id":"1:2556:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32031:4478","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[192,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexTimed","id":"0:30:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["0:251:1878","0:253:1876"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:238:1840":{"id":"0:238:1840","crate_id":0,"name":"try_lock","span":{"filename":"src/remutex.rs","begin":[120,4],"end":[122,5]},"visibility":"public","docs":"Attempts to acquire this mutex without blocking. Returns `true`\nif the lock was successfully acquired and `false` otherwise.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:1697":{"id":"0:333:1697","crate_id":0,"name":"remutex","span":{"filename":"src/remutex.rs","begin":[616,4],"end":[618,5]},"visibility":"public","docs":"Returns a reference to the original `ReentrantMutex` object.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:669":{"id":"0:144:669","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[669,4],"end":[671,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:217:2053":{"id":"b:1:2542-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173:551":{"id":"0:173:551","crate_id":0,"name":"deref","span":{"filename":"src/mutex.rs","begin":[913,4],"end":[915,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:655:551":{"id":"0:655:551","crate_id":0,"name":"deref","span":{"filename":"src/rwlock.rs","begin":[1658,4],"end":[1660,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:5:1693":{"id":"b:1:2248-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2545-0:35:166":{"id":"b:1:2545-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2547:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:649:1867":{"id":"0:649:1867","crate_id":0,"name":"bump","span":{"filename":"src/rwlock.rs","begin":[1647,4],"end":[1652,5]},"visibility":"public","docs":"Temporarily yields the `RwLock` to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `write`, however it can be much more efficient in the case where there\nare no waiting threads.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:908:2456":{"id":"b:1:2248-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:365:587":{"id":"0:365:587","crate_id":0,"name":"drop","span":{"filename":"src/remutex.rs","begin":[762,4],"end":[767,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:656":{"id":"0:656","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1663,0],"end":[1668,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2911:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:660:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:35:166":{"id":"b:1:2548-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:308:60":{"id":"0:308:60","crate_id":0,"name":"default","span":{"filename":"src/remutex.rs","begin":[531,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425-0:195:1697":{"id":"0:425-0:195:1697","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,0],"end":[113,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"atomic_usize\")]"],"deprecation":null,"inner":{"import":{"source":"crate::remutex","name":"remutex","id":"0:195:1697","glob":true}}},"a:1:8254:4577-0:865:2126":{"id":"a:1:8254:4577-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:840-0:426:1698":{"id":"0:840-0:426:1698","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,0],"end":[116,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::rwlock","name":"rwlock","id":"0:426:1698","glob":true}}},"0:62:1850":{"id":"0:62:1850","crate_id":0,"name":"is_locked","span":{"filename":"src/mutex.rs","begin":[247,4],"end":[249,5]},"visibility":"public","docs":"Checks whether the mutex is currently locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:654:230":{"id":"0:654:230","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[1656,4],"end":[1656,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:139:669":{"id":"0:139:669","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[663,4],"end":[665,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:2345":{"id":"0:521:2345","crate_id":0,"name":"force_unlock_read_fair","span":{"filename":"src/rwlock.rs","begin":[678,4],"end":[680,5]},"visibility":"public","docs":"Forcibly unlocks a read lock using a fair unlock procotol.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `RwLockReadGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`RwLockReadGuard` but that guard has be discarded using `mem::forget`.\nBehavior is undefined if a rwlock is read-unlocked when not read-locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1149,0],"end":[1154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:554:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3320-0:908:2456":{"id":"b:1:3320-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:856:2087":{"id":"b:1:2251-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3320-0:217:2053":{"id":"b:1:3320-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:448:2180":{"id":"0:448:2180","crate_id":0,"name":"bump_shared","span":{"filename":"src/rwlock.rs","begin":[131,4],"end":[134,5]},"visibility":"default","docs":"Temporarily yields a shared lock to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_shared_fair` followed\nby `lock_shared`, however it can be much more efficient in the case where there\nare no waiting threads.\n\n# Safety\n\nThis method may only be called if a shared lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8254:4577-0:8:1695":{"id":"a:1:8254:4577-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:378":{"id":"0:378","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[910,0],"end":[913,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8254:4577-0:217:2053":{"id":"a:1:8254:4577-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2248-0:217:2053":{"id":"b:1:2248-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:791":{"id":"0:791","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2718,0],"end":[2721,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[222,0],"end":[225,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2583,0],"end":[2586,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:434:2152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2538-0:856:2087":{"id":"b:1:2538-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[365,0],"end":[365,82]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:818:230":{"id":"0:818:230","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[2803,4],"end":[2803,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:1:2542-0:5:1693":{"id":"b:1:2542-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[910,0],"end":[916,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:172:230","0:173:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:438:2157":{"id":"0:438:2157","crate_id":0,"name":"try_lock_shared","span":{"filename":"src/rwlock.rs","begin":[53,4],"end":[53,38]},"visibility":"default","docs":"Attempts to acquire a shared lock without blocking.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:443:1850":{"id":"0:443:1850","crate_id":0,"name":"is_locked","span":{"filename":"src/rwlock.rs","begin":[77,4],"end":[86,5]},"visibility":"default","docs":"Checks if this `RwLock` is currently locked in any way.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2248-0:841:167":{"id":"b:1:2248-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:480:2258":{"id":"0:480:2258","crate_id":0,"name":"try_upgrade_for","span":{"filename":"src/rwlock.rs","begin":[307,4],"end":[307,70]},"visibility":"default","docs":"Attempts to upgrade an upgradable lock to an exclusive lock until a\ntimeout is reached.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:685:1991":{"id":"0:685:1991","crate_id":0,"name":"unlocked","span":{"filename":"src/rwlock.rs","begin":[1890,4],"end":[1900,5]},"visibility":"public","docs":"Temporarily unlocks the `RwLock` to execute the given function.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the `RwLock`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:889:2395":{"id":"b:1:2553-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:690":{"id":"0:690","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1935,0],"end":[1988,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgradeFair","id":"0:471:2236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:694:1862","0:695:2009","0:698:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:813:1862":{"id":"0:813:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/rwlock.rs","begin":[2793,4],"end":[2799,5]},"visibility":"public","docs":"Unlocks the `RwLock` using a fair unlock protocol.\n\nBy default, `RwLock` is unfair and allow the current thread to re-lock\nthe `RwLock` before another has the chance to acquire the lock, even if\nthat thread has been blocked on the `RwLock` for a long time. This is\nthe default because it allows much higher throughput as it avoids\nforcing a context switch on every `RwLock` unlock. This can result in one\nthread acquiring a `RwLock` many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `MappedRwLockWriteGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:790:669":{"id":"0:790:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[2692,4],"end":[2694,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:646:2009":{"id":"0:646:2009","crate_id":0,"name":"unlocked_fair","span":{"filename":"src/rwlock.rs","begin":[1629,4],"end":[1639,5]},"visibility":"public","docs":"Temporarily unlocks the `RwLock` to execute the given function.\n\nThe `RwLock` is unlocked a fair unlock protocol.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the `RwLock`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:901:2427":{"id":"b:1:2251-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:255:2081":{"id":"b:1:2548-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:527:2354":{"id":"0:527:2354","crate_id":0,"name":"try_read_until","span":{"filename":"src/rwlock.rs","begin":[723,4],"end":[730,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with shared read access until a timeout\nis reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the shared access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:747":{"id":"0:747","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2582,0],"end":[2582,101]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:103:1987":{"id":"0:103:1987","crate_id":0,"name":"try_map","span":{"filename":"src/mutex.rs","begin":[536,4],"end":[551,5]},"visibility":"public","docs":"Attempts to make a new `MappedMutexGuard` for a component of the\nlocked data. The original guard is returned if the closure returns `None`.\n\nThis operation cannot fail as the `MutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `MutexGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:217:2053":{"id":"b:1:2538-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:285:1837":{"id":"0:285:1837","crate_id":0,"name":"lock","span":{"filename":"src/remutex.rs","begin":[312,4],"end":[316,5]},"visibility":"public","docs":"Acquires a reentrant mutex, blocking the current thread until it is able\nto do so.\n\nIf the mutex is held by another thread then this function will block the\nlocal thread until it is available to acquire the mutex. If the mutex is\nalready held by the current thread then this function will increment the\nlock reference count and return immediately. Upon returning,\nthe thread is the only thread with the mutex held. An RAII guard is\nreturned to allow scoped unlock of the lock. When the guard goes out of\nscope, the mutex will be unlocked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3320-0:255:2081":{"id":"b:1:3320-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:348:1862":{"id":"0:348:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/remutex.rs","begin":[707,4],"end":[713,5]},"visibility":"public","docs":"Unlocks the mutex using a fair unlock protocol.\n\nBy default, mutexes are unfair and allow the current thread to re-lock\nthe mutex before another has the chance to acquire the lock, even if\nthat thread has been blocked on the mutex for a long time. This is the\ndefault because it allows much higher throughput as it avoids forcing a\ncontext switch on every mutex unlock. This can result in one thread\nacquiring a mutex many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `ReentrantMutexGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:1835":{"id":"0:436:1835","crate_id":0,"name":"GuardMarker","span":{"filename":"src/rwlock.rs","begin":[47,4],"end":[47,21]},"visibility":"default","docs":"Marker type which determines whether a lock guard should be `Send`. Use\none of the `GuardSend` or `GuardNoSend` helper types here.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:477:2252":{"id":"0:477:2252","crate_id":0,"name":"RawRwLockUpgradeTimed","span":{"filename":"src/rwlock.rs","begin":[294,0],"end":[316,1]},"visibility":"public","docs":"Additional methods for RwLocks which support upgradable locks and locking\nwith timeouts.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:478:2254","0:479:2255","0:480:2258","0:481:2259"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockTimed","id":"0:452:2192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"a:1:8253:4578-0:908:2456":{"id":"a:1:8253:4578-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[337,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:69:1945"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:865:2126":{"id":"b:1:2248-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:737":{"id":"0:737","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2193,0],"end":[2199,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:741:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:8:1695":{"id":"b:1:2548-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:723:2504":{"id":"0:723:2504","crate_id":0,"name":"try_with_upgraded_until","span":{"filename":"src/rwlock.rs","begin":[2155,4],"end":[2172,5]},"visibility":"public","docs":"Tries to atomically upgrade an upgradable read lock into an exclusive\nwrite lock, until a timeout is reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned.\n\nOtherwise, calls the provided closure with an exclusive reference to the lock's data,\nand finally downgrades the lock back to an upgradable read lock.\nThe closure's return value is wrapped in `Some` and returned.\n\nThis function only requires a mutable reference to the guard, unlike\n`try_upgrade_until` which takes the guard by value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"Ret"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"generic":"Ret"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:841:167":{"id":"0:841:167","crate_id":0,"name":"MutexGuard","span":{"filename":"src/mutex.rs","begin":[490,0],"end":[493,1]},"visibility":"public","docs":"An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\ndropped (falls out of scope), the lock will be unlocked.\n\nThe data protected by the mutex can be accessed through this guard via its\n`Deref` and `DerefMut` implementations.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the Mutex will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:95","0:110","a:1:2741:2621-0:841:167","a:1:2684:220-0:841:167","a:1:8253:4578-0:841:167","a:1:8254:4577-0:841:167","b:1:2553-0:841:167","b:1:2542-0:841:167","b:1:2548-0:841:167","b:1:3320-0:841:167","b:1:2248-0:841:167","b:1:2538-0:841:167","b:1:2251-0:841:167","0:119","0:91","0:140","0:125","0:135","0:130"]}}},"b:1:3320-0:881:219":{"id":"b:1:3320-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:820":{"id":"0:820","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2810,0],"end":[2815,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2911:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:824:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:253:1876":{"id":"0:253:1876","crate_id":0,"name":"try_lock_for","span":{"filename":"src/remutex.rs","begin":[201,4],"end":[203,5]},"visibility":"public","docs":"Attempts to acquire this lock until a timeout is reached.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55":{"id":"0:55","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[191,0],"end":[335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:59:1837","0:60:1840","0:61:1913","0:62:1850","0:63:1922","0:64:62","0:65:1932"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:8:1695":{"id":"b:1:2553-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:1699":{"id":"0:0:1699","crate_id":0,"name":"lock_api","span":{"filename":"src/lib.rs","begin":[8,0],"end":[116,25]},"visibility":"public","docs":"This library provides type-safe and fully-featured `Mutex` and `RwLock`\ntypes which wrap a simple raw mutex or rwlock type. This has several\nbenefits: not only does it eliminate a large portion of the work in\nimplementing custom lock types, it also allows users to write code which is\ngeneric with regards to different lock implementations.\n\nBasic usage of this crate is very straightforward:\n\n1. Create a raw lock type. This should only contain the lock state, not any\n   data protected by the lock.\n2. Implement the `RawMutex` trait for your custom lock type.\n3. Export your mutex as a type alias for `lock_api::Mutex`, and\n   your mutex guard as a type alias for `lock_api::MutexGuard`.\n   See the [example](#example) below for details.\n\nThis process is similar for RwLocks, except that two guards need to be\nexported instead of one. (Or 3 guards if your type supports upgradable read\nlocks, see [extension traits](#extension-traits) below for details)\n\n# Example\n\n```\nuse lock_api::{RawMutex, Mutex, GuardSend};\nuse std::sync::atomic::{AtomicBool, Ordering};\n\n// 1. Define our raw lock type\npub struct RawSpinlock(AtomicBool);\n\n// 2. Implement RawMutex for this type\nunsafe impl RawMutex for RawSpinlock {\n    const INIT: RawSpinlock = RawSpinlock(AtomicBool::new(false));\n\n    // A spinlock guard can be sent to another thread and unlocked there\n    type GuardMarker = GuardSend;\n\n    fn lock(&self) {\n        // Note: This isn't the best way of implementing a spinlock, but it\n        // suffices for the sake of this example.\n        while !self.try_lock() {}\n    }\n\n    fn try_lock(&self) -> bool {\n        self.0\n            .compare_exchange(false, true, Ordering::Acquire, Ordering::Relaxed)\n            .is_ok()\n    }\n\n    unsafe fn unlock(&self) {\n        self.0.store(false, Ordering::Release);\n    }\n}\n\n// 3. Export the wrappers. This are the types that your users will actually use.\npub type Spinlock<T> = lock_api::Mutex<RawSpinlock, T>;\npub type SpinlockGuard<'a, T> = lock_api::MutexGuard<'a, RawSpinlock, T>;\n```\n\n# Extension traits\n\nIn addition to basic locking & unlocking functionality, you have the option\nof exposing additional functionality in your lock types by implementing\nadditional traits for it. Examples of extension features include:\n\n- Fair unlocking (`RawMutexFair`, `RawRwLockFair`)\n- Lock timeouts (`RawMutexTimed`, `RawRwLockTimed`)\n- Downgradable write locks (`RawRwLockDowngradable`)\n- Recursive read locks (`RawRwLockRecursive`)\n- Upgradable read locks (`RawRwLockUpgrade`)\n\nThe `Mutex` and `RwLock` wrappers will automatically expose this additional\nfunctionality if the raw lock type implements these extension traits.\n\n# Cargo features\n\nThis crate supports three cargo features:\n\n- `owning_ref`: Allows your lock types to be used with the `owning_ref` crate.\n- `arc_lock`: Enables locking from an `Arc`. This enables types such as `ArcMutexGuard`. Note that this\n  requires the `alloc` crate to be present.","links":{},"attrs":["#![no_std]","#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:1693","0:8:1695","0:194-0:12:1696","0:425-0:195:1697","0:840-0:426:1698"],"is_stripped":false}}},"0:399:1862":{"id":"0:399:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/remutex.rs","begin":[988,4],"end":[994,5]},"visibility":"public","docs":"Unlocks the mutex using a fair unlock protocol.\n\nBy default, mutexes are unfair and allow the current thread to re-lock\nthe mutex before another has the chance to acquire the lock, even if\nthat thread has been blocked on the mutex for a long time. This is the\ndefault because it allows much higher throughput as it avoids forcing a\ncontext switch on every mutex unlock. This can result in one thread\nacquiring a mutex many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `ReentrantMutexGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:217:2053":{"id":"b:1:2553-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2248-0:849:1982":{"id":"b:1:2248-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:578:1987":{"id":"0:578:1987","crate_id":0,"name":"try_map","span":{"filename":"src/rwlock.rs","begin":[1233,4],"end":[1248,5]},"visibility":"public","docs":"Attempts to make  a new `MappedRwLockReadGuard` for a component of the\nlocked data. Returns the original guard if the closure returns `None`.\n\nThis operation cannot fail as the `RwLockReadGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `RwLockReadGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:35:166":{"id":"b:1:2251-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[887,0],"end":[908,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:167:1862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8253:4578-0:35:166":{"id":"a:1:8253:4578-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:889:2395":{"id":"b:1:2251-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:426:1698":{"id":"0:426:1698","crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[8,0],"end":[2847,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:434:2152","0:445:2172","0:450:2187","0:452:2192","0:459:2205","0:462:2211","0:465:2221","0:471:2236","0:474:2245","0:477:2252","0:482:217","0:873:218","0:881:219","0:889:2395","0:901:2427","0:908:2456"],"is_stripped":true}}},"0:240:1848":{"id":"0:240:1848","crate_id":0,"name":"unlock","span":{"filename":"src/remutex.rs","begin":[131,4],"end":[138,5]},"visibility":"public","docs":"Unlocks this mutex. The inner mutex may not be unlocked if\nthis mutex was acquired previously in the current thread.\n\n# Safety\n\nThis method may only be called if the mutex is held by the current thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[529,0],"end":[534,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:308:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:473:2242":{"id":"0:473:2242","crate_id":0,"name":"bump_upgradable","span":{"filename":"src/rwlock.rs","begin":[268,4],"end":[271,5]},"visibility":"default","docs":"Temporarily yields an upgradable lock to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_upgradable_fair` followed\nby `lock_upgradable`, however it can be much more efficient in the case where there\nare no waiting threads.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:684:1698":{"id":"0:684:1698","crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[1881,4],"end":[1883,5]},"visibility":"public","docs":"Returns a reference to the original reader-writer lock object.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3320-0:889:2395":{"id":"b:1:3320-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:2621-0:889:2395":{"id":"a:1:2741:2621-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:511:1913":{"id":"0:511:1913","crate_id":0,"name":"get_mut","span":{"filename":"src/rwlock.rs","begin":[507,4],"end":[509,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the `RwLock` mutably, no actual locking needs to\ntake place---the mutable borrow statically guarantees no locks exist.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8254:4577-0:901:2427":{"id":"a:1:8254:4577-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[536,0],"end":[541,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:313:695"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:463:2214":{"id":"0:463:2214","crate_id":0,"name":"try_lock_shared_recursive_for","span":{"filename":"src/rwlock.rs","begin":[206,4],"end":[206,77]},"visibility":"default","docs":"Attempts to acquire a shared lock until a timeout is reached, without\ndeadlocking in case of a recursive lock.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:2684:220-0:841:167":{"id":"a:1:2684:220-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:762:1987":{"id":"0:762:1987","crate_id":0,"name":"try_map","span":{"filename":"src/rwlock.rs","begin":[2622,4],"end":[2637,5]},"visibility":"public","docs":"Attempts to make  a new `MappedRwLockReadGuard` for a component of the\nlocked data. The original guard is return if the closure returns `None`.\n\nThis operation cannot fail as the `MappedRwLockReadGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `MappedRwLockReadGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:2621-0:5:1693":{"id":"a:1:2741:2621-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[105,0],"end":[105,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:507:2018":{"id":"0:507:2018","crate_id":0,"name":"read","span":{"filename":"src/rwlock.rs","begin":[447,4],"end":[451,5]},"visibility":"public","docs":"Locks this `RwLock` with shared read access, blocking the current thread\nuntil it can be acquired.\n\nThe calling thread will be blocked until there are no more writers which\nhold the lock. There may be other readers currently inside the lock when\nthis method returns.\n\nNote that attempts to recursively acquire a read lock on a `RwLock` when\nthe current thread already holds one may result in a deadlock.\n\nReturns an RAII guard which will release this thread's shared access\nonce it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:714:2258":{"id":"0:714:2258","crate_id":0,"name":"try_upgrade_for","span":{"filename":"src/rwlock.rs","begin":[2068,4],"end":[2083,5]},"visibility":"public","docs":"Tries to atomically upgrade an upgradable read lock into an exclusive\nwrite lock, until a timeout is reached.\n\nIf the access could not be granted before the timeout expires, then\nthe current guard is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:2621-0:8:1695":{"id":"a:1:2741:2621-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:405:230":{"id":"0:405:230","crate_id":0,"name":"Target","span":{"filename":"src/remutex.rs","begin":[1000,4],"end":[1000,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:236:1837":{"id":"0:236:1837","crate_id":0,"name":"lock","span":{"filename":"src/remutex.rs","begin":[110,4],"end":[115,5]},"visibility":"public","docs":"Acquires this mutex, blocking if it's held by another thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:2194":{"id":"0:455:2194","crate_id":0,"name":"try_lock_shared_for","span":{"filename":"src/rwlock.rs","begin":[175,4],"end":[175,67]},"visibility":"default","docs":"Attempts to acquire a shared lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:710":{"id":"0:710","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2062,0],"end":[2107,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgradeTimed","id":"0:477:2252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:714:2258","0:715:2259"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:467:2225":{"id":"0:467:2225","crate_id":0,"name":"try_lock_upgradable","span":{"filename":"src/rwlock.rs","begin":[224,4],"end":[224,42]},"visibility":"default","docs":"Attempts to acquire an upgradable lock without blocking.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:765":{"id":"0:765","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2640,0],"end":[2661,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"0:445:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:769:1862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3320-0:841:167":{"id":"b:1:3320-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:694:1862":{"id":"0:694:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/rwlock.rs","begin":[1949,4],"end":[1955,5]},"visibility":"public","docs":"Unlocks the `RwLock` using a fair unlock protocol.\n\nBy default, `RwLock` is unfair and allow the current thread to re-lock\nthe `RwLock` before another has the chance to acquire the lock, even if\nthat thread has been blocked on the `RwLock` for a long time. This is\nthe default because it allows much higher throughput as it avoids\nforcing a context switch on every `RwLock` unlock. This can result in one\nthread acquiring a `RwLock` many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `RwLockUpgradableReadGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759:860":{"id":"0:759:860","crate_id":0,"name":"map","span":{"filename":"src/rwlock.rs","begin":[2598,4],"end":[2610,5]},"visibility":"public","docs":"Make a new `MappedRwLockReadGuard` for a component of the locked data.\n\nThis operation cannot fail as the `MappedRwLockReadGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `MappedRwLockReadGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:5:1693":{"id":"b:1:2548-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:613:669":{"id":"0:613:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[1350,4],"end":[1352,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:1696":{"id":"0:99:1696","crate_id":0,"name":"mutex","span":{"filename":"src/mutex.rs","begin":[499,4],"end":[501,5]},"visibility":"public","docs":"Returns a reference to the original `Mutex` object.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:1862":{"id":"0:246:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/remutex.rs","begin":[163,4],"end":[170,5]},"visibility":"public","docs":"Unlocks this mutex using a fair unlock protocol. The inner mutex\nmay not be unlocked if this mutex was acquired previously in the\ncurrent thread.\n\n# Safety\n\nThis method may only be called if the mutex is held by the current thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:514:2309":{"id":"0:514:2309","crate_id":0,"name":"force_unlock_read","span":{"filename":"src/rwlock.rs","begin":[535,4],"end":[537,5]},"visibility":"public","docs":"Forcibly unlocks a read lock.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `RwLockReadGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`RwLockReadGuard` but that guard has be discarded using `mem::forget`.\nBehavior is undefined if a rwlock is read-unlocked when not read-locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:482:217":{"id":"b:1:2538-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:167:1862":{"id":"0:167:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/mutex.rs","begin":[901,4],"end":[907,5]},"visibility":"public","docs":"Unlocks the mutex using a fair unlock protocol.\n\nBy default, mutexes are unfair and allow the current thread to re-lock\nthe mutex before another has the chance to acquire the lock, even if\nthat thread has been blocked on the mutex for a long time. This is the\ndefault because it allows much higher throughput as it avoids forcing a\ncontext switch on every mutex unlock. This can result in one thread\nacquiring a mutex many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `MutexGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:1913":{"id":"0:287:1913","crate_id":0,"name":"get_mut","span":{"filename":"src/remutex.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Returns a mutable reference to the underlying data.\n\nSince this call borrows the `ReentrantMutex` mutably, no actual locking needs to\ntake place---the mutable borrow statically guarantees no locks exist.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:1991":{"id":"0:340:1991","crate_id":0,"name":"unlocked","span":{"filename":"src/remutex.rs","begin":[678,4],"end":[688,5]},"visibility":"public","docs":"Temporarily unlocks the mutex to execute the given function.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the mutex.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:482:217":{"id":"b:1:2251-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:873:218":{"id":"0:873:218","crate_id":0,"name":"RwLockReadGuard","span":{"filename":"src/rwlock.rs","begin":[1187,0],"end":[1190,1]},"visibility":"public","docs":"RAII structure used to release the shared read access of a lock when\ndropped.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the RwLock will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:570","0:584","a:1:2741:2621-0:873:218","a:1:2684:220-0:873:218","a:1:8253:4578-0:873:218","a:1:8254:4577-0:873:218","b:1:2553-0:873:218","b:1:2542-0:873:218","b:1:2548-0:873:218","b:1:3320-0:873:218","b:1:2248-0:873:218","b:1:2538-0:873:218","b:1:2251-0:873:218","0:604","0:593","0:599","0:567","0:609"]}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[147,0],"end":[147,73]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:881:219":{"id":"b:1:2542-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:2621-0:217:2053":{"id":"a:1:2741:2621-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:726":{"id":"0:726","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2175,0],"end":[2181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:730:230","0:731:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[758,0],"end":[768,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:365:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2250:2530":{"id":"1:2250:2530","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442:2167":{"id":"0:442:2167","crate_id":0,"name":"unlock_exclusive","span":{"filename":"src/rwlock.rs","begin":[73,4],"end":[73,38]},"visibility":"default","docs":"Releases an exclusive lock.\n\n# Safety\n\nThis method may only be called if an exclusive lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2542-0:908:2456":{"id":"b:1:2542-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:545:2402":{"id":"0:545:2402","crate_id":0,"name":"try_upgradable_read","span":{"filename":"src/rwlock.rs","begin":[1024,4],"end":[1031,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with upgradable read access.\n\nIf the access could not be granted at this time, then `None` is returned.\nOtherwise, an RAII guard is returned which will release the shared access\nwhen it is dropped.\n\nThis function does not block.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:622:860":{"id":"0:622:860","crate_id":0,"name":"map","span":{"filename":"src/rwlock.rs","begin":[1499,4],"end":[1511,5]},"visibility":"public","docs":"Make a new `MappedRwLockWriteGuard` for a component of the locked data.\n\nThis operation cannot fail as the `RwLockWriteGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `RwLockWriteGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:1876":{"id":"0:33:1876","crate_id":0,"name":"try_lock_for","span":{"filename":"src/mutex.rs","begin":[128,4],"end":[128,60]},"visibility":"default","docs":"Attempts to acquire this lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[364,0],"end":[364,75]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:109:1996":{"id":"0:109:1996","crate_id":0,"name":"leak","span":{"filename":"src/mutex.rs","begin":[575,4],"end":[579,5]},"visibility":"public","docs":"Leaks the mutex guard and returns a mutable reference to the data\nprotected by the mutex.\n\nThis will leave the `Mutex` in a locked state.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:669":{"id":"0:318:669","crate_id":0,"name":"fmt","span":{"filename":"src/remutex.rs","begin":[544,4],"end":[563,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:688:2230":{"id":"0:688:2230","crate_id":0,"name":"upgrade","span":{"filename":"src/rwlock.rs","begin":[1904,4],"end":[1915,5]},"visibility":"public","docs":"Atomically upgrades an upgradable read lock lock into an exclusive write lock,\nblocking the current thread until it can be acquired.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[269,0],"end":[287,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:279:1894"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:337:1987":{"id":"0:337:1987","crate_id":0,"name":"try_map","span":{"filename":"src/remutex.rs","begin":[653,4],"end":[671,5]},"visibility":"public","docs":"Attempts to make  a new `MappedReentrantMutexGuard` for a component of the\nlocked data. The original guard is return if the closure returns `None`.\n\nThis operation cannot fail as the `ReentrantMutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `ReentrantMutexGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:534:2375":{"id":"0:534:2375","crate_id":0,"name":"try_read_recursive","span":{"filename":"src/rwlock.rs","begin":[871,4],"end":[878,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with shared read access.\n\nIf the access could not be granted at this time, then `None` is returned.\nOtherwise, an RAII guard is returned which will release the shared access\nwhen it is dropped.\n\nThis method is guaranteed to succeed if another read lock is held at the\ntime of the call. See the documentation for `read_recursive` for details.\n\nThis function does not block.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2741:2621-0:881:219":{"id":"a:1:2741:2621-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:755":{"id":"0:755","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2588,0],"end":[2638,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:759:860","0:762:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:736:587":{"id":"0:736:587","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[2185,4],"end":[2190,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:517:1932":{"id":"0:517:1932","crate_id":0,"name":"data_ptr","span":{"filename":"src/rwlock.rs","begin":[582,4],"end":[584,5]},"visibility":"public","docs":"Returns a raw pointer to the underlying data.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `RwLockReadGuard` or `RwLockWriteGuard` object\nalive, for example when dealing with FFI.\n\n# Safety\n\nYou must ensure that there are no data races when dereferencing the\nreturned pointer, for example if the current thread logically owns a\n`RwLockReadGuard` or `RwLockWriteGuard` but that guard has been discarded\nusing `mem::forget`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:553":{"id":"0:178:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/mutex.rs","begin":[920,4],"end":[922,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:901:2427":{"id":"b:1:2542-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:587":{"id":"0:183:587","crate_id":0,"name":"drop","span":{"filename":"src/mutex.rs","begin":[927,4],"end":[932,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2553-0:255:2081":{"id":"b:1:2553-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:461:2209":{"id":"0:461:2209","crate_id":0,"name":"try_lock_shared_recursive","span":{"filename":"src/rwlock.rs","begin":[199,4],"end":[199,48]},"visibility":"default","docs":"Attempts to acquire a shared lock without deadlocking in case of a recursive lock.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:59:1837":{"id":"0:59:1837","crate_id":0,"name":"lock","span":{"filename":"src/mutex.rs","begin":[213,4],"end":[217,5]},"visibility":"public","docs":"Acquires a mutex, blocking the current thread until it is able to do so.\n\nThis function will block the local thread until it is available to acquire\nthe mutex. Upon returning, the thread is the only thread with the mutex\nheld. An RAII guard is returned to allow scoped unlock of the lock. When\nthe guard goes out of scope, the mutex will be unlocked.\n\nAttempts to lock a mutex in the thread which already holds the lock will\nresult in a deadlock.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[778,0],"end":[784,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:377:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8253:4578-0:901:2427":{"id":"a:1:8253:4578-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:660:553":{"id":"0:660:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/rwlock.rs","begin":[1665,4],"end":[1667,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:597:230":{"id":"0:597:230","crate_id":0,"name":"Target","span":{"filename":"src/rwlock.rs","begin":[1324,4],"end":[1324,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:289:2069":{"id":"0:289:2069","crate_id":0,"name":"is_owned_by_current_thread","span":{"filename":"src/remutex.rs","begin":[352,4],"end":[354,5]},"visibility":"public","docs":"Checks whether the mutex is currently held by the current thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:529:2358":{"id":"0:529:2358","crate_id":0,"name":"try_write_until","span":{"filename":"src/rwlock.rs","begin":[755,4],"end":[762,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with exclusive write access until a\ntimeout is reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the exclusive access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445:2172":{"id":"0:445:2172","crate_id":0,"name":"RawRwLockFair","span":{"filename":"src/rwlock.rs","begin":[107,0],"end":[149,1]},"visibility":"public","docs":"Additional methods for RwLocks which support fair unlocking.\n\nFair unlocking means that a lock is handed directly over to the next waiting\nthread if there is one, without giving other threads the opportunity to\n\"steal\" the lock in the meantime. This is typically slower than unfair\nunlocking, but may be necessary in certain circumstances.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:446:2174","0:447:2176","0:448:2180","0:449:2184"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:746:669":{"id":"0:746:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[2204,4],"end":[2206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:675:669":{"id":"0:675:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[1689,4],"end":[1691,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5:1693":{"id":"0:5:1693","crate_id":0,"name":"GuardSend","span":{"filename":"src/lib.rs","begin":[100,0],"end":[100,25]},"visibility":"public","docs":"Marker type which indicates that the Guard type for a lock is `Send`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2741:2621-0:5:1693","a:1:2701:228-0:5:1693","a:1:2684:220-0:5:1693","a:1:8253:4578-0:5:1693","a:1:8254:4577-0:5:1693","b:1:2553-0:5:1693","b:1:2542-0:5:1693","b:1:2548-0:5:1693","b:1:3320-0:5:1693","b:1:2248-0:5:1693","b:1:2538-0:5:1693","b:1:2251-0:5:1693"]}}},"b:1:2538-0:35:166":{"id":"b:1:2538-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:526:2353":{"id":"0:526:2353","crate_id":0,"name":"try_read_for","span":{"filename":"src/rwlock.rs","begin":[707,4],"end":[714,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with shared read access until a timeout\nis reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the shared access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:809":{"id":"0:809","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2779,0],"end":[2800,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"0:445:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:813:1862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2251-0:865:2126":{"id":"b:1:2251-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8253:4578-0:856:2087":{"id":"a:1:8253:4578-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:803:860":{"id":"0:803:860","crate_id":0,"name":"map","span":{"filename":"src/rwlock.rs","begin":[2737,4],"end":[2749,5]},"visibility":"public","docs":"Make a new `MappedRwLockWriteGuard` for a component of the locked data.\n\nThis operation cannot fail as the `MappedRwLockWriteGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `MappedRwLockWriteGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:1945":{"id":"0:297:1945","crate_id":0,"name":"force_unlock_fair","span":{"filename":"src/remutex.rs","begin":[456,4],"end":[458,5]},"visibility":"public","docs":"Forcibly unlocks the mutex using a fair unlock protocol.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `ReentrantMutexGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`ReentrantMutexGuard` but that guard has be discarded using `mem::forget`.\nBehavior is undefined if a mutex is unlocked when not locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[396,0],"end":[409,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:501:1894"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:377:669":{"id":"0:377:669","crate_id":0,"name":"fmt","span":{"filename":"src/remutex.rs","begin":[781,4],"end":[783,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2548-0:482:217":{"id":"b:1:2548-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2253:10063":{"id":"1:2253:10063","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[289,0],"end":[441,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:285:1837","0:286:1840","0:287:1913","0:288:1850","0:289:2069","0:290:1922","0:291:62","0:292:1932"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[434,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:86:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:23:1837":{"id":"0:23:1837","crate_id":0,"name":"lock","span":{"filename":"src/mutex.rs","begin":[48,4],"end":[48,19]},"visibility":"default","docs":"Acquires this mutex, blocking the current thread until it is able to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:562:669":{"id":"0:562:669","crate_id":0,"name":"fmt","span":{"filename":"src/rwlock.rs","begin":[1164,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:589:2009":{"id":"0:589:2009","crate_id":0,"name":"unlocked_fair","span":{"filename":"src/rwlock.rs","begin":[1297,4],"end":[1307,5]},"visibility":"public","docs":"Temporarily unlocks the `RwLock` to execute the given function.\n\nThe `RwLock` is unlocked a fair unlock protocol.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the `RwLock`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:841:167":{"id":"b:1:2251-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2548-0:865:2126":{"id":"b:1:2548-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:567":{"id":"0:567","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1192,0],"end":[1192,88]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2009":{"id":"0:115:2009","crate_id":0,"name":"unlocked_fair","span":{"filename":"src/mutex.rs","begin":[611,4],"end":[621,5]},"visibility":"public","docs":"Temporarily unlocks the mutex to execute the given function.\n\nThe mutex is unlocked using a fair unlock protocol.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the mutex.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:1894":{"id":"0:279:1894","crate_id":0,"name":"const_new","span":{"filename":"src/remutex.rs","begin":[276,4],"end":[286,5]},"visibility":"public","docs":"Creates a new reentrant mutex based on a pre-existing raw mutex and a\nhelper to get the thread ID.\n\nThis allows creating a reentrant mutex in a constant context on stable\nRust.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_mutex",{"generic":"R"}],["get_thread_id",{"generic":"G"}],["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:575:860":{"id":"0:575:860","crate_id":0,"name":"map","span":{"filename":"src/rwlock.rs","begin":[1209,4],"end":[1221,5]},"visibility":"public","docs":"Make a new `MappedRwLockReadGuard` for a component of the locked data.\n\nThis operation cannot fail as the `RwLockReadGuard` passed\nin already locked the data.\n\nThis is an associated function that needs to be\nused as `RwLockReadGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:592:1867":{"id":"0:592:1867","crate_id":0,"name":"bump","span":{"filename":"src/rwlock.rs","begin":[1315,4],"end":[1320,5]},"visibility":"public","docs":"Temporarily yields the `RwLock` to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `read`, however it can be much more efficient in the case where there\nare no waiting threads.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:695":{"id":"0:82:695","crate_id":0,"name":"from","span":{"filename":"src/mutex.rs","begin":[429,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[427,0],"end":[432,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:82:695"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:849:1982":{"id":"b:1:2548-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:695:2009":{"id":"0:695:2009","crate_id":0,"name":"unlocked_fair","span":{"filename":"src/rwlock.rs","begin":[1964,4],"end":[1974,5]},"visibility":"public","docs":"Temporarily unlocks the `RwLock` to execute the given function.\n\nThe `RwLock` is unlocked a fair unlock protocol.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the `RwLock`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:707:2496":{"id":"0:707:2496","crate_id":0,"name":"try_with_upgraded","span":{"filename":"src/rwlock.rs","begin":[2046,4],"end":[2059,5]},"visibility":"public","docs":"First, tries to atomically upgrade an upgradable read lock into an exclusive write lock.\n\nIf the access could not be granted at this time, then `None` is returned.\n\nOtherwise, calls the provided closure with an exclusive reference to the lock's data,\nand finally downgrades the lock back to an upgradable read lock.\nThe closure's return value is wrapped in `Some` and returned.\n\nThis function only requires a mutable reference to the guard, unlike\n`try_upgrade` which takes the guard by value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"Ret"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"generic":"Ret"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:457:2197":{"id":"0:457:2197","crate_id":0,"name":"try_lock_exclusive_for","span":{"filename":"src/rwlock.rs","begin":[181,4],"end":[181,70]},"visibility":"default","docs":"Attempts to acquire an exclusive lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:273:940":{"id":"0:273:940","crate_id":0,"name":"new","span":{"filename":"src/remutex.rs","begin":[235,4],"end":[245,5]},"visibility":"public","docs":"Creates a new reentrant mutex in an unlocked state ready for use.","links":{},"attrs":["#[cfg(has_const_fn_trait_bound)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472:2238":{"id":"0:472:2238","crate_id":0,"name":"unlock_upgradable_fair","span":{"filename":"src/rwlock.rs","begin":[257,4],"end":[257,44]},"visibility":"default","docs":"Releases an upgradable lock using a fair unlock protocol.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:290:1922":{"id":"0:290:1922","crate_id":0,"name":"force_unlock","span":{"filename":"src/remutex.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Forcibly unlocks the mutex.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `ReentrantMutexGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`ReentrantMutexGuard` but that guard has be discarded using `mem::forget`.\nBehavior is undefined if a mutex is unlocked when not locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:538:2386":{"id":"0:538:2386","crate_id":0,"name":"try_read_recursive_for","span":{"filename":"src/rwlock.rs","begin":[920,4],"end":[930,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with shared read access until a timeout\nis reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the shared access when it is dropped.\n\nThis method is guaranteed to succeed without blocking if another read\nlock is held at the time of the call. See the documentation for\n`read_recursive` for details.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1891":{"id":"0:50:1891","crate_id":0,"name":"into_inner","span":{"filename":"src/mutex.rs","begin":[173,4],"end":[175,5]},"visibility":"public","docs":"Consumes this mutex, returning the underlying data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:636":{"id":"0:636","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1579,0],"end":[1598,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgradeDowngrade","id":"0:474:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:640:2249"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2548-0:908:2456":{"id":"b:1:2548-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2551:128","1:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:454:1874":{"id":"0:454:1874","crate_id":0,"name":"Instant","span":{"filename":"src/rwlock.rs","begin":[172,4],"end":[172,17]},"visibility":"default","docs":"Instant type used for `try_lock_until`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:628:1991":{"id":"0:628:1991","crate_id":0,"name":"unlocked","span":{"filename":"src/rwlock.rs","begin":[1545,4],"end":[1555,5]},"visibility":"public","docs":"Temporarily unlocks the `RwLock` to execute the given function.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the `RwLock`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:479:2255":{"id":"0:479:2255","crate_id":0,"name":"try_lock_upgradable_until","span":{"filename":"src/rwlock.rs","begin":[299,4],"end":[299,72]},"visibility":"default","docs":"Attempts to acquire an upgradable lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2542-0:35:166":{"id":"b:1:2542-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8254:4577-0:856:2087":{"id":"a:1:8254:4577-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:689:2233":{"id":"0:689:2233","crate_id":0,"name":"try_upgrade","span":{"filename":"src/rwlock.rs","begin":[1920,4],"end":[1932,5]},"visibility":"public","docs":"Tries to atomically upgrade an upgradable read lock into an exclusive write lock.\n\nIf the access could not be granted at this time, then the current guard is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:732":{"id":"0:732","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2183,0],"end":[2191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:736:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:889:2395":{"id":"b:1:2248-0:889:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2741:2621-0:865:2126":{"id":"a:1:2741:2621-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[150,0],"end":[176,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:49:940","0:50:1891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[355,0],"end":[418,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexTimed","id":"0:30:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:73:1876","0:74:1878"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30:1871":{"id":"0:30:1871","crate_id":0,"name":"RawMutexTimed","span":{"filename":"src/mutex.rs","begin":[120,0],"end":[132,1]},"visibility":"public","docs":"Additional methods for mutexes which support locking with timeouts.\n\nThe `Duration` and `Instant` types are specified as associated types so that\nthis trait is usable even in `no_std` environments.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:31:122","0:32:1874","0:33:1876","0:34:1878"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:124:551":{"id":"0:124:551","crate_id":0,"name":"deref","span":{"filename":"src/mutex.rs","begin":[640,4],"end":[642,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:4578-0:841:167":{"id":"a:1:8253:4578-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:215:1832":{"id":"0:215:1832","crate_id":0,"name":"INIT","span":{"filename":"src/remutex.rs","begin":[50,4],"end":[50,21]},"visibility":"default","docs":"Initial value.","links":{},"attrs":["#[allow(clippy :: declare_interior_mutable_const)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":null}}},"0:242:2069":{"id":"0:242:2069","crate_id":0,"name":"is_owned_by_current_thread","span":{"filename":"src/remutex.rs","begin":[148,4],"end":[151,5]},"visibility":"public","docs":"Checks whether the mutex is currently held by the current thread.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456:2195":{"id":"0:456:2195","crate_id":0,"name":"try_lock_shared_until","span":{"filename":"src/rwlock.rs","begin":[178,4],"end":[178,68]},"visibility":"default","docs":"Attempts to acquire a shared lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:73:1876":{"id":"0:73:1876","crate_id":0,"name":"try_lock_for","span":{"filename":"src/mutex.rs","begin":[362,4],"end":[369,5]},"visibility":"public","docs":"Attempts to acquire this lock until a timeout is reached.\n\nIf the lock could not be acquired before the timeout expired, then\n`None` is returned. Otherwise, an RAII guard is returned. The lock will\nbe unlocked when the guard is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:2233":{"id":"0:470:2233","crate_id":0,"name":"try_upgrade","span":{"filename":"src/rwlock.rs","begin":[246,4],"end":[246,41]},"visibility":"default","docs":"Attempts to upgrade an upgradable lock to an exclusive lock without\nblocking.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[668,0],"end":[672,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:144:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2553-0:5:1693":{"id":"b:1:2553-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:908:2456":{"id":"0:908:2456","crate_id":0,"name":"MappedRwLockWriteGuard","span":{"filename":"src/rwlock.rs","begin":[2712,0],"end":[2716,1]},"visibility":"public","docs":"An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the RwLock will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:799","0:809","a:1:2741:2621-0:908:2456","a:1:8253:4578-0:908:2456","a:1:8254:4577-0:908:2456","b:1:2553-0:908:2456","b:1:2542-0:908:2456","b:1:2548-0:908:2456","b:1:3320-0:908:2456","b:1:2248-0:908:2456","b:1:2538-0:908:2456","b:1:2251-0:908:2456","0:791","0:830","0:820","0:795","0:814","0:825","0:835"]}}},"0:699":{"id":"0:699","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1990,0],"end":[2060,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgradeDowngrade","id":"0:474:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:703:2190","0:704:2490","0:707:2496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:460:2207":{"id":"0:460:2207","crate_id":0,"name":"lock_shared_recursive","span":{"filename":"src/rwlock.rs","begin":[196,4],"end":[196,36]},"visibility":"default","docs":"Acquires a shared lock without deadlocking in case of a recursive lock.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[988,0],"end":[1071,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:544:2400","0:545:2402"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2741:2621-0:841:167":{"id":"a:1:2741:2621-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:288:1850":{"id":"0:288:1850","crate_id":0,"name":"is_locked","span":{"filename":"src/remutex.rs","begin":[346,4],"end":[348,5]},"visibility":"public","docs":"Checks whether the mutex is currently locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[154,0],"end":[190,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["0:246:1862","0:247:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:1848":{"id":"0:25:1848","crate_id":0,"name":"unlock","span":{"filename":"src/mutex.rs","begin":[65,4],"end":[65,28]},"visibility":"default","docs":"Unlocks this mutex.\n\n# Safety\n\nThis method may only be called if the mutex is held in the current context, i.e. it must\nbe paired with a successful call to [`lock`], [`try_lock`], [`try_lock_for`] or [`try_lock_until`].\n\n[`lock`]: #tymethod.lock\n[`try_lock`]: #tymethod.try_lock\n[`try_lock_for`]: trait.RawMutexTimed.html#tymethod.try_lock_for\n[`try_lock_until`]: trait.RawMutexTimed.html#tymethod.try_lock_until","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:75":{"id":"0:75","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[420,0],"end":[425,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:78:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:298":{"id":"0:298","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[461,0],"end":[527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexTimed","id":"0:30:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:302:1876","0:303:1878"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:359:551":{"id":"0:359:551","crate_id":0,"name":"deref","span":{"filename":"src/remutex.rs","begin":[753,4],"end":[755,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:558:695":{"id":"0:558:695","crate_id":0,"name":"from","span":{"filename":"src/rwlock.rs","begin":[1158,4],"end":[1160,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8254:4577-0:5:1693":{"id":"a:1:8254:4577-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:865:2126":{"id":"0:865:2126","crate_id":0,"name":"MappedReentrantMutexGuard","span":{"filename":"src/remutex.rs","begin":[904,0],"end":[908,1]},"visibility":"public","docs":"An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the ReentrantMutex will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:383","0:394","a:1:2741:2621-0:865:2126","a:1:2684:220-0:865:2126","a:1:8253:4578-0:865:2126","a:1:8254:4577-0:865:2126","b:1:2553-0:865:2126","b:1:2542-0:865:2126","b:1:2548-0:865:2126","b:1:3320-0:865:2126","b:1:2248-0:865:2126","b:1:2538-0:865:2126","b:1:2251-0:865:2126","0:407","0:419","0:413","0:378","0:400"]}}},"b:1:2542-0:8:1695":{"id":"b:1:2542-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:881:219":{"id":"0:881:219","crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/rwlock.rs","begin":[1477,0],"end":[1480,1]},"visibility":"public","docs":"RAII structure used to release the exclusive write access of a lock when\ndropped.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the RwLock will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:617","0:631","0:636","0:641","a:1:2741:2621-0:881:219","a:1:2684:220-0:881:219","a:1:8253:4578-0:881:219","a:1:8254:4577-0:881:219","b:1:2553-0:881:219","b:1:2542-0:881:219","b:1:2548-0:881:219","b:1:3320-0:881:219","b:1:2248-0:881:219","b:1:2538-0:881:219","b:1:2251-0:881:219","0:666","0:614","0:671","0:661","0:650","0:656"]}}},"0:412:587":{"id":"0:412:587","crate_id":0,"name":"drop","span":{"filename":"src/remutex.rs","begin":[1011,4],"end":[1016,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:1878":{"id":"0:34:1878","crate_id":0,"name":"try_lock_until","span":{"filename":"src/mutex.rs","begin":[131,4],"end":[131,61]},"visibility":"default","docs":"Attempts to acquire this lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:449:2184":{"id":"0:449:2184","crate_id":0,"name":"bump_exclusive","span":{"filename":"src/rwlock.rs","begin":[145,4],"end":[148,5]},"visibility":"default","docs":"Temporarily yields an exclusive lock to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_exclusive_fair` followed\nby `lock_exclusive`, however it can be much more efficient in the case where there\nare no waiting threads.\n\n# Safety\n\nThis method may only be called if an exclusive lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:849:1982":{"id":"0:849:1982","crate_id":0,"name":"MappedMutexGuard","span":{"filename":"src/mutex.rs","begin":[820,0],"end":[824,1]},"visibility":"public","docs":"An RAII mutex guard returned by `MutexGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedMutexGuard` and `MutexGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the Mutex will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:153","0:163","a:1:2741:2621-0:849:1982","a:1:8253:4578-0:849:1982","a:1:8254:4577-0:849:1982","b:1:2553-0:849:1982","b:1:2542-0:849:1982","b:1:2548-0:849:1982","b:1:3320-0:849:1982","b:1:2248-0:849:1982","b:1:2538-0:849:1982","b:1:2251-0:849:1982","0:189","0:184","0:149","0:179","0:168","0:145","0:174"]}}},"0:69:1945":{"id":"0:69:1945","crate_id":0,"name":"force_unlock_fair","span":{"filename":"src/mutex.rs","begin":[350,4],"end":[352,5]},"visibility":"public","docs":"Forcibly unlocks the mutex using a fair unlock procotol.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `MutexGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`MutexGuard` but that guard has been discarded using `mem::forget`.\nBehavior is undefined if a mutex is unlocked when not locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[367,0],"end":[394,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:496:940","0:497:1891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:496:940":{"id":"0:496:940","crate_id":0,"name":"new","span":{"filename":"src/rwlock.rs","begin":[371,4],"end":[376,5]},"visibility":"public","docs":"Creates a new instance of an `RwLock<T>` which is unlocked.","links":{},"attrs":["#[cfg(has_const_fn_trait_bound)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["val",{"generic":"T"}]],"output":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:2160":{"id":"0:439:2160","crate_id":0,"name":"unlock_shared","span":{"filename":"src/rwlock.rs","begin":[60,4],"end":[60,35]},"visibility":"default","docs":"Releases a shared lock.\n\n# Safety\n\nThis method may only be called if a shared lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:2741:2621-0:482:217":{"id":"a:1:2741:2621-0:482:217","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:776":{"id":"0:776","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2671,0],"end":[2679,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:780:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[497,0],"end":[580,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:99:1696","0:100:860","0:103:1987","0:106:1991","0:109:1996"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2248-0:255:2081":{"id":"b:1:2248-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334:860":{"id":"0:334:860","crate_id":0,"name":"map","span":{"filename":"src/remutex.rs","begin":[629,4],"end":[641,5]},"visibility":"public","docs":"Makes a new `MappedReentrantMutexGuard` for a component of the locked data.\n\nThis operation cannot fail as the `ReentrantMutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `ReentrantMutexGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:704:2490":{"id":"0:704:2490","crate_id":0,"name":"with_upgraded","span":{"filename":"src/rwlock.rs","begin":[2021,4],"end":[2034,5]},"visibility":"public","docs":"First, atomically upgrades an upgradable read lock lock into an exclusive write lock,\nblocking the current thread until it can be acquired.\n\nThen, calls the provided closure with an exclusive reference to the lock's data.\n\nFinally, atomically downgrades the lock back to an upgradable read lock.\nThe closure's return value is wrapped in `Some` and returned.\n\nThis function only requires a mutable reference to the guard, unlike\n`upgrade` which takes the guard by value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"Ret"},"c_variadic":false},"generics":{"params":[{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"generic":"Ret"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:695":{"id":"0:313:695","crate_id":0,"name":"from","span":{"filename":"src/remutex.rs","begin":[538,4],"end":[540,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349:2009":{"id":"0:349:2009","crate_id":0,"name":"unlocked_fair","span":{"filename":"src/remutex.rs","begin":[722,4],"end":[732,5]},"visibility":"public","docs":"Temporarily unlocks the mutex to execute the given function.\n\nThe mutex is unlocked a fair unlock protocol.\n\nThis is safe because `&mut` guarantees that there exist no other\nreferences to the data protected by the mutex.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[],"output":{"generic":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469:2230":{"id":"0:469:2230","crate_id":0,"name":"upgrade","span":{"filename":"src/rwlock.rs","begin":[238,4],"end":[238,29]},"visibility":"default","docs":"Upgrades an upgradable lock to an exclusive lock.\n\n# Safety\n\nThis method may only be called if an upgradable lock is held in the current context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:508:2291":{"id":"0:508:2291","crate_id":0,"name":"try_read","span":{"filename":"src/rwlock.rs","begin":[461,4],"end":[468,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with shared read access.\n\nIf the access could not be granted at this time, then `None` is returned.\nOtherwise, an RAII guard is returned which will release the shared access\nwhen it is dropped.\n\nThis function does not block.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530":{"id":"0:530","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[837,0],"end":[906,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockRecursive","id":"0:459:2205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:533:2372","0:534:2375"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:24:1840":{"id":"0:24:1840","crate_id":0,"name":"try_lock","span":{"filename":"src/mutex.rs","begin":[52,4],"end":[52,31]},"visibility":"default","docs":"Attempts to acquire this mutex without blocking. Returns `true`\nif the lock was successfully acquired and `false` otherwise.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2248-0:881:219":{"id":"b:1:2248-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2250:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:860":{"id":"0:100:860","crate_id":0,"name":"map","span":{"filename":"src/mutex.rs","begin":[512,4],"end":[524,5]},"visibility":"public","docs":"Makes a new `MappedMutexGuard` for a component of the locked data.\n\nThis operation cannot fail as the `MutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `MutexGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:8:1695":{"id":"b:1:2538-0:8:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardNoSend","id":"0:8:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:513:2170":{"id":"0:513:2170","crate_id":0,"name":"is_locked_exclusive","span":{"filename":"src/rwlock.rs","begin":[519,4],"end":[521,5]},"visibility":"public","docs":"Check if this `RwLock` is currently exclusively locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:1867":{"id":"0:118:1867","crate_id":0,"name":"bump","span":{"filename":"src/mutex.rs","begin":[629,4],"end":[634,5]},"visibility":"public","docs":"Temporarily yields the mutex to a waiting thread if there is one.\n\nThis method is functionally equivalent to calling `unlock_fair` followed\nby `lock`, however it can be much more efficient in the case where there\nare no waiting threads.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3320-0:901:2427":{"id":"b:1:3320-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:63:1922":{"id":"0:63:1922","crate_id":0,"name":"force_unlock","span":{"filename":"src/mutex.rs","begin":[263,4],"end":[265,5]},"visibility":"public","docs":"Forcibly unlocks the mutex.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `MutexGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`MutexGuard` but that guard has been discarded using `mem::forget`.\nBehavior is undefined if a mutex is unlocked when not locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:865:2126":{"id":"b:1:2538-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:544:2400":{"id":"0:544:2400","crate_id":0,"name":"upgradable_read","span":{"filename":"src/rwlock.rs","begin":[1010,4],"end":[1014,5]},"visibility":"public","docs":"Locks this `RwLock` with upgradable read access, blocking the current thread\nuntil it can be acquired.\n\nThe calling thread will be blocked until there are no more writers or other\nupgradable reads which hold the lock. There may be other readers currently\ninside the lock when this method returns.\n\nReturns an RAII guard which will release this thread's shared access\nonce it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2545-0:255:2081":{"id":"b:1:2545-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"never"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2547:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[941,0],"end":[947,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:193:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:676":{"id":"0:676","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1874,0],"end":[1877,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8253:4578-0:865:2126":{"id":"a:1:8253:4578-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8253:4578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:680":{"id":"0:680","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1879,0],"end":[1933,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"0:465:2221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:684:1698","0:685:1991","0:688:2230","0:689:2233"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2542-0:856:2087":{"id":"b:1:2542-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[915,0],"end":[970,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:388:860","0:391:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[691,0],"end":[746,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:348:1862","0:349:2009","0:352:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:437:2155":{"id":"0:437:2155","crate_id":0,"name":"lock_shared","span":{"filename":"src/rwlock.rs","begin":[50,4],"end":[50,26]},"visibility":"default","docs":"Acquires a shared lock, blocking the current thread until it is able to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:645:1862":{"id":"0:645:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/rwlock.rs","begin":[1614,4],"end":[1620,5]},"visibility":"public","docs":"Unlocks the `RwLock` using a fair unlock protocol.\n\nBy default, `RwLock` is unfair and allow the current thread to re-lock\nthe `RwLock` before another has the chance to acquire the lock, even if\nthat thread has been blocked on the `RwLock` for a long time. This is\nthe default because it allows much higher throughput as it avoids\nforcing a context switch on every `RwLock` unlock. This can result in one\nthread acquiring a `RwLock` many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `RwLockWriteGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:908:2456":{"id":"b:1:2538-0:908:2456","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockWriteGuard","id":"0:908:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[908,0],"end":[986,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockRecursiveTimed","id":"0:462:2211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:538:2386","0:539:2387"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:123:230":{"id":"0:123:230","crate_id":0,"name":"Target","span":{"filename":"src/mutex.rs","begin":[638,4],"end":[638,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:1:2553-0:865:2126":{"id":"b:1:2553-0:865:2126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:8254:4577-0:873:218":{"id":"a:1:8254:4577-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:157:860":{"id":"0:157:860","crate_id":0,"name":"map","span":{"filename":"src/mutex.rs","begin":[845,4],"end":[857,5]},"visibility":"public","docs":"Makes a new `MappedMutexGuard` for a component of the locked data.\n\nThis operation cannot fail as the `MappedMutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `MappedMutexGuard::map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:661":{"id":"0:661","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1670,0],"end":[1678,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:665:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[178,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:54:1894"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291:62":{"id":"0:291:62","crate_id":0,"name":"raw","span":{"filename":"src/remutex.rs","begin":[382,4],"end":[384,5]},"visibility":"public","docs":"Returns the underlying raw mutex object.\n\nNote that you will most likely need to import the `RawMutex` trait from\n`lock_api` to be able to call functions on the raw mutex.\n\n# Safety\n\nThis method is unsafe because it allows unlocking a mutex while\nstill holding a reference to a `ReentrantMutexGuard`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"R"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:1878":{"id":"0:251:1878","crate_id":0,"name":"try_lock_until","span":{"filename":"src/remutex.rs","begin":[195,4],"end":[197,5]},"visibility":"public","docs":"Attempts to acquire this lock until a timeout is reached.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:30:1871","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2541:2770":{"id":"1:2541:2770","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/mutex.rs","begin":[582,0],"end":[635,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:114:1862","0:115:2009","0:118:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8254:4577-0:841:167":{"id":"a:1:8254:4577-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:2741:2621-0:35:166":{"id":"a:1:2741:2621-0:35:166","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Mutex","id":"0:35:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:217:2053":{"id":"b:1:2251-0:217:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RawReentrantMutex","id":"0:217:2053","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:27:1857":{"id":"0:27:1857","crate_id":0,"name":"RawMutexFair","span":{"filename":"src/mutex.rs","begin":[87,0],"end":[114,1]},"visibility":"public","docs":"Additional methods for mutexes which support fair unlocking.\n\nFair unlocking means that a lock is handed directly over to the next waiting\nthread if there is one, without giving other threads the opportunity to\n\"steal\" the lock in the meantime. This is typically slower than unfair\nunlocking, but may be necessary in certain circumstances.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:28:1862","0:29:1867"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:286:1840":{"id":"0:286:1840","crate_id":0,"name":"try_lock","span":{"filename":"src/remutex.rs","begin":[326,4],"end":[333,5]},"visibility":"public","docs":"Attempts to acquire this lock.\n\nIf the lock could not be acquired at this time, then `None` is returned.\nOtherwise, an RAII guard is returned. The lock will be unlocked when the\nguard is dropped.\n\nThis function does not block.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:1987":{"id":"0:391:1987","crate_id":0,"name":"try_map","span":{"filename":"src/remutex.rs","begin":[951,4],"end":[969,5]},"visibility":"public","docs":"Attempts to make  a new `MappedReentrantMutexGuard` for a component of the\nlocked data. The original guard is return if the closure returns `None`.\n\nThis operation cannot fail as the `MappedReentrantMutexGuard` passed\nin already locked the mutex.\n\nThis is an associated function that needs to be\nused as `MappedReentrantMutexGuard::try_map(...)`. A method would interfere with methods of\nthe same name on the contents of the locked data.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"1:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"U"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[972,0],"end":[995,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:399:1862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:434:2152":{"id":"0:434:2152","crate_id":0,"name":"RawRwLock","span":{"filename":"src/rwlock.rs","begin":[38,0],"end":[99,1]},"visibility":"public","docs":"Basic operations for a reader-writer lock.\n\nTypes implementing this trait can be used by `RwLock` to form a safe and\nfully-functioning `RwLock` type.\n\n# Safety\n\nImplementations of this trait must ensure that the `RwLock` is actually\nexclusive: an exclusive lock can't be acquired while an exclusive or shared\nlock exists, and a shared lock can't be acquire while an exclusive lock\nexists.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:435:1832","0:436:1835","0:437:2155","0:438:2157","0:439:2160","0:440:2162","0:441:2164","0:442:2167","0:443:1850","0:444:2170"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:666":{"id":"0:666","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1680,0],"end":[1684,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:670:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:671":{"id":"0:671","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1686,0],"end":[1692,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:675:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:188:669":{"id":"0:188:669","crate_id":0,"name":"fmt","span":{"filename":"src/mutex.rs","begin":[936,4],"end":[938,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3320-0:849:1982":{"id":"b:1:3320-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:769:1862":{"id":"0:769:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/rwlock.rs","begin":[2654,4],"end":[2660,5]},"visibility":"public","docs":"Unlocks the `RwLock` using a fair unlock protocol.\n\nBy default, `RwLock` is unfair and allow the current thread to re-lock\nthe `RwLock` before another has the chance to acquire the lock, even if\nthat thread has been blocked on the `RwLock` for a long time. This is\nthe default because it allows much higher throughput as it avoids\nforcing a context switch on every `RwLock` unlock. This can result in one\nthread acquiring a `RwLock` many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `MappedRwLockReadGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2681,0],"end":[2687,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:785:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:780:587":{"id":"0:780:587","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[2673,4],"end":[2678,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502":{"id":"0:502","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[411,0],"end":[663,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:507:2018","0:508:2291","0:509:2298","0:510:2302","0:511:1913","0:512:1850","0:513:2170","0:514:2309","0:515:2314","0:516:62","0:517:1932"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:550:2413":{"id":"0:550:2413","crate_id":0,"name":"try_upgradable_read_until","span":{"filename":"src/rwlock.rs","begin":[1100,4],"end":[1110,5]},"visibility":"public","docs":"Attempts to acquire this `RwLock` with upgradable read access until a timeout\nis reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned. Otherwise, an RAII guard is returned which will\nrelease the shared access when it is dropped.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2542-0:849:1982":{"id":"b:1:2542-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1194,0],"end":[1266,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:574:1698","0:575:860","0:578:1987","0:581:1991"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:786":{"id":"0:786","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[2689,0],"end":[2695,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:790:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2684:220-0:856:2087":{"id":"a:1:2684:220-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:1:2741:2621-0:856:2087":{"id":"a:1:2741:2621-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2741:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2251-0:5:1693":{"id":"b:1:2251-0:5:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GuardSend","id":"0:5:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:358:230":{"id":"0:358:230","crate_id":0,"name":"Target","span":{"filename":"src/remutex.rs","begin":[751,4],"end":[751,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:599":{"id":"0:599","crate_id":0,"name":null,"span":{"filename":"src/rwlock.rs","begin":[1331,0],"end":[1339,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2922:2010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:603:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[443,0],"end":[459,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutexFair","id":"0:27:1857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:297:1945"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:195:1697":{"id":"0:195:1697","crate_id":0,"name":"remutex","span":{"filename":"src/remutex.rs","begin":[8,0],"end":[1039,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"atomic_usize\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:214:2040","0:217:2053","0:255:2081","0:856:2087","0:865:2126"],"is_stripped":true}}},"0:640:2249":{"id":"0:640:2249","crate_id":0,"name":"downgrade_to_upgradable","span":{"filename":"src/rwlock.rs","begin":[1586,4],"end":[1597,5]},"visibility":"public","docs":"Atomically downgrades a write lock into an upgradable read lock without allowing any\nwriters to take exclusive access of the lock in the meantime.\n\nNote that if there are any writers currently waiting to take the lock\nthen other readers may not be able to acquire the lock even if it was\ndowngraded.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RwLockUpgradableReadGuard","id":"0:889:2395","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2251-0:849:1982":{"id":"b:1:2251-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:841:167":{"id":"b:1:2553-0:841:167","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MutexGuard","id":"0:841:167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:26:1850":{"id":"0:26:1850","crate_id":0,"name":"is_locked","span":{"filename":"src/mutex.rs","begin":[69,4],"end":[78,5]},"visibility":"default","docs":"Checks whether the mutex is currently locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:621:1698":{"id":"0:621:1698","crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[1486,4],"end":[1488,5]},"visibility":"public","docs":"Returns a reference to the original reader-writer lock object.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"RwLock","id":"0:482:217","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:665:587":{"id":"0:665:587","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[1672,4],"end":[1677,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:901:2427":{"id":"b:1:2538-0:901:2427","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedRwLockReadGuard","id":"0:901:2427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:515:2314":{"id":"0:515:2314","crate_id":0,"name":"force_unlock_write","span":{"filename":"src/rwlock.rs","begin":[551,4],"end":[553,5]},"visibility":"public","docs":"Forcibly unlocks a write lock.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `RwLockWriteGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nThis method must only be called if the current thread logically owns a\n`RwLockWriteGuard` but that guard has be discarded using `mem::forget`.\nBehavior is undefined if a rwlock is write-unlocked when not write-locked.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2538-0:849:1982":{"id":"b:1:2538-0:849:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedMutexGuard","id":"0:849:1982","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2541:2770"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2251-0:255:2081":{"id":"b:1:2251-0:255:2081","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2253:10063"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2553-0:856:2087":{"id":"b:1:2553-0:856:2087","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutexGuard","id":"0:856:2087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2556:128","1:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2684:220-0:873:218":{"id":"a:1:2684:220-0:873:218","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockReadGuard","id":"0:873:218","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:65:1932":{"id":"0:65:1932","crate_id":0,"name":"data_ptr","span":{"filename":"src/mutex.rs","begin":[293,4],"end":[295,5]},"visibility":"public","docs":"Returns a raw pointer to the underlying data.\n\nThis is useful when combined with `mem::forget` to hold a lock without\nthe need to maintain a `MutexGuard` object alive, for example when\ndealing with FFI.\n\n# Safety\n\nYou must ensure that there are no data races when dereferencing the\nreturned pointer, for example if the current thread logically owns\na `MutexGuard` but that guard has been discarded using `mem::forget`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[1027,0],"end":[1033,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"MappedReentrantMutexGuard","id":"0:865:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:424:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:588:1862":{"id":"0:588:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/rwlock.rs","begin":[1282,4],"end":[1288,5]},"visibility":"public","docs":"Unlocks the `RwLock` using a fair unlock protocol.\n\nBy default, `RwLock` is unfair and allow the current thread to re-lock\nthe `RwLock` before another has the chance to acquire the lock, even if\nthat thread has been blocked on the `RwLock` for a long time. This is\nthe default because it allows much higher throughput as it avoids\nforcing a context switch on every `RwLock` unlock. This can result in one\nthread acquiring a `RwLock` many more times than other threads.\n\nHowever in some cases it can be beneficial to ensure fairness by forcing\nthe lock to pass on to a waiting thread if there is one. This is done by\nusing this method instead of dropping the `RwLockReadGuard` normally.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:829:587":{"id":"0:829:587","crate_id":0,"name":"drop","span":{"filename":"src/rwlock.rs","begin":[2819,4],"end":[2824,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:901:2427":{"id":"0:901:2427","crate_id":0,"name":"MappedRwLockReadGuard","span":{"filename":"src/rwlock.rs","begin":[2576,0],"end":[2580,1]},"visibility":"public","docs":"An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":["#[clippy::has_significant_drop]","#[must_use = \"if unused the RwLock will immediately unlock\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"0:434:2152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:755","0:765","a:1:2741:2621-0:901:2427","a:1:8253:4578-0:901:2427","a:1:8254:4577-0:901:2427","b:1:2553-0:901:2427","b:1:2542-0:901:2427","b:1:2548-0:901:2427","b:1:3320-0:901:2427","b:1:2248-0:901:2427","b:1:2538-0:901:2427","b:1:2251-0:901:2427","0:781","0:751","0:786","0:770","0:776","0:747"]}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[226,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"0:20:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"GetThreadId","id":"0:214:2040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2691:1887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Send","id":"1:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReentrantMutex","id":"0:255:2081","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}},{"type":{"generic":"G"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8254:4577-0:881:219":{"id":"a:1:8254:4577-0:881:219","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8254:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RwLockWriteGuard","id":"0:881:219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:129:553":{"id":"0:129:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/mutex.rs","begin":[647,4],"end":[649,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:720:2502":{"id":"0:720:2502","crate_id":0,"name":"try_with_upgraded_for","span":{"filename":"src/rwlock.rs","begin":[2124,4],"end":[2141,5]},"visibility":"public","docs":"Tries to atomically upgrade an upgradable read lock into an exclusive\nwrite lock, until a timeout is reached.\n\nIf the access could not be granted before the timeout expires, then\n`None` is returned.\n\nOtherwise, calls the provided closure with an exclusive reference to the lock's data,\nand finally downgrades the lock back to an upgradable read lock.\nThe closure's return value is wrapped in `Some` and returned.\n\nThis function only requires a mutable reference to the guard, unlike\n`try_upgrade_for` which takes the guard by value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:452:2192","args":null}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Option","id":"1:41402:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"Ret"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:2932:1983","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}],"output":{"generic":"Ret"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:1862":{"id":"0:28:1862","crate_id":0,"name":"unlock_fair","span":{"filename":"src/mutex.rs","begin":[96,4],"end":[96,33]},"visibility":"default","docs":"Unlocks this mutex using a fair unlock protocol.\n\n# Safety\n\nThis method may only be called if the mutex is held in the current context, see\nthe documentation of [`unlock`].\n\n[`unlock`]: trait.RawMutex.html#tymethod.unlock","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:478:2254":{"id":"0:478:2254","crate_id":0,"name":"try_lock_upgradable_for","span":{"filename":"src/rwlock.rs","begin":[296,4],"end":[296,71]},"visibility":"default","docs":"Attempts to acquire an upgradable lock until a timeout is reached.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["timeout",{"qualified_path":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:452:2192","args":null}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:418:669":{"id":"0:418:669","crate_id":0,"name":"fmt","span":{"filename":"src/remutex.rs","begin":[1022,4],"end":[1024,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:9110:210":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:47086:4098":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:47540:4103":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:47338:4100":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:8674:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:30277:2876":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2922:2010":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:39313:2661":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:21442:3320":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:7206:152":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:3163:2665":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:51728:745":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:2354:189":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:0:496":{"crate_id":1,"path":["core"],"kind":"module"},"1:41759:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:44114:4633":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:21343:9710":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:22403:2033":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:20590:11544":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:46696:4064":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:2796:2641":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:20852:9718":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:41919:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:40124:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:39963:3645":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:22370:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:2985:2659":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:5472:3112":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:10775:3693":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:41719:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:41799:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:43539:3961":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:1630:587":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:41605:2782":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:39187:200":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:42168:2844":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:21782:3321":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:44090:4626":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:8360:3677":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:20779:11955":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:49682:9723":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:47837:4109":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:2758:2639":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:40285:3301":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:43777:3970":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:41639:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:44102:4630":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:46050:4036":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:46620:4062":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:21956:14490":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:11721:3677":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:47761:3414":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:2317:125":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:20740:9714":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:1756:3229":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:20547:3327":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:47680:3409":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:45505:4017":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:2800:2643":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:21977:2689":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:20920:9719":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:2151:588":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:41388:3406":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:41879:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:47689:3412":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:40077:3889":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:2784:2640":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:12312:151":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:2822:2647":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:3152:234":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:51714:1517":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:9299:3679":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:2469:10717":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:2738:2620":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:4264:2601":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:2788:2644":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:40141:10210":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:41839:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:43493:3690":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:2515:133":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:9159:2847":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:22535:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:7165:4564":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:40332:3905":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:40058:3886":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:30243:1815":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:40716:3124":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:10134:3686":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:3182:15886":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:1916:3233":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:45405:4013":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:9153:2844":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:11539:3684":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:21729:3715":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:21127:3318":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:7169:4563":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:42666:3330":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:7595:2973":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:51730:1501":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:47814:4108":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:42182:2847":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:41353:4574":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:4786:14442":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:41211:155":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:4023:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:10262:3690":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:40726:3673":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:46460:4060":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:20781:4456":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:51723:641":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:43224:3900":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:43421:3958":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:11465:3701":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:9965:2970":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:8847:3308":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:21572:9708":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:45473:4016":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:40157:3898":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:51737:1128":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:51720:1483":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"4:14:2595":{"crate_id":4,"path":["scopeguard","Strategy"],"kind":"trait"},"1:41234:3400":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:40110:3894":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:44118:4627":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:2684:220":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"3:0:2592":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:44378:4008":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:39227:199":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:43823:3981":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:42674:3332":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:21873:3718":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:3197:2613":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:46430:4059":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:21989:2692":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:39969:3877":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:40407:3305":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:4187:2031":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:21927:10202":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:22271:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:43935:3984":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:47784:3423":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:40346:3304":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:39125:2669":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:41959:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:46226:4041":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:10290:3692":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:7244:121":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:30477:10159":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:40084:3890":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:43593:3963":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:46306:4042":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:9111:2843":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:41529:2755":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:9628:3136":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:46730:4065":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:51727:744":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:46880:4066":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:46074:4037":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:4:1015":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:11736:4636":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:42441:11057":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:44403:4010":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:12609:4683":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:2701:228":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"0:8:1695":{"crate_id":0,"path":["lock_api","GuardNoSend"],"kind":"struct"},"1:20753:9715":{"crate_id":1,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"1:45636:4022":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:22436:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:41402:181":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:45676:4024":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:39560:10199":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:43371:3681":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:47586:4104":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:39373:3748":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:47799:4107":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:1467:1813":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:8255:3307":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:7592:2972":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:6725:11469":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:22502:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:44122:4628":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:2589:116":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:40030:3883":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:1747:11043":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:30299:68":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:44110:4632":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:43670:3886":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:12506:107":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:43806:3980":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:22304:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:4437:2610":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:40042:3885":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:20949:9705":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:40692:3917":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:43521:3960":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:51713:418":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:46028:4035":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:45535:4018":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:30847:183":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:2506:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:40050:3645":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:40355:3656":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:4765:388":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:45575:4020":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:43315:3952":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:4259:2600":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:2856:2655":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:45760:4027":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:20560:11160":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:0:442":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:9165:2849":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:40263:3295":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:51734:1497":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:44145:122":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:39990:10218":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:43259:3239":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:10096:3685":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:2242:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:2603:128":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:40254:3902":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:3142:2663":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:21125:9713":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:41614:183":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:41297:3329":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:2695:225":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:23048:2686":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:44340:4003":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:2827:2649":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:2792:2642":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:1733:4472":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:20605:11542":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:3234:2614":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:43269:3951":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:40467:3916":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:2898:117":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"4:60:2597":{"crate_id":4,"path":["scopeguard","Always"],"kind":"enum"},"1:9157:2846":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:1821:2615":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:5532:3655":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2518:238":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:42039:2695":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:22601:2690":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:7599:4562":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:43898:3707":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:6921:3306":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:4336:2607":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:21094:10717":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:11428:3698":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:3169:2667":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:2981:2658":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:40364:3908":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:2932:1983":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:47228:4099":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:2763:2636":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:42484:128":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:3648:2782":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:41478:2782":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:39172:2660":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:9121:132":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:40006:3881":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:39291:203":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:45658:4023":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:22337:177":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:44297:211":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:5991:3657":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:12517:3141":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:43158:3945":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:47700:3421":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:42691:145":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:46125:4038":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:229:210":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:43347:3956":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:8821:669":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:2780:2637":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:51719:1399":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:45451:4015":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:21454:11158":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:43177:3946":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:4255:207":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:43792:3977":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:22238:178":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:40234:3900":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:42906:3942":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:12361:192":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:43871:3983":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:42925:3680":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:40091:4517":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:41376:3403":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"0:0:1699":{"crate_id":0,"path":["lock_api"],"kind":"module"},"1:10808:3694":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:2768:2635":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:45381:4012":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:32158:2626":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:42703:3938":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"4:19:2596":{"crate_id":4,"path":["scopeguard","ScopeGuard"],"kind":"struct"},"1:40314:3651":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:44178:4658":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:45557:4019":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:2264:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:47624:4105":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:43149:3944":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:40685:3670":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:2245:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:40020:3882":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:30052:2684":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:43237:3949":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:43279:3240":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:42506:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:21963:2691":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:9374:145":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:2741:2621":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:43635:3965":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:43654:3967":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:25858:2687":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:3318:69":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:1637:2873":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:10057:3684":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:43679:3645":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:43167:3236":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:9161:194":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:20993:10717":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:45952:4032":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:42466:68":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:42457:71":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:21838:2688":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:21001:9709":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:42411:68":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:20933:10717":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:42921:10263":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:41251:3402":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:51738:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:43949:4652":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:46666:4063":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:40204:3117":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:10014:3681":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:2696:109":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:51724:643":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:2746:106":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:44287:205":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:43645:3966":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:32067:3738":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:42713:3334":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:51736:1555":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:2851:2654":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:47746:3411":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:21099:9706":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:43439:3959":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:47876:4110":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:20815:9717":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:2911:1814":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10207:3688":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:51718:1369":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:43098:3943":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:41679:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:9613:3131":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:43198:3947":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:7322:159":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:40065:4516":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:2692:2612":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:2847:2653":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:45427:4014":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:39380:2607":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:45982:4033":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:43329:3955":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8254:4577":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:2706:1812":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:46004:4034":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:41340:3932":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:6678:4567":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:47709:3410":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:2470:4299":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:47662:4106":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:51731:1498":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:40456:3913":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:11741:4635":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:4410:1811":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:9817:222":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:2963:2668":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:2833:2650":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:44094:4629":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:2753:2634":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:9596:3130":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:3157:135":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:40432:3911":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:43389:3687":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:2929:2657":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:2812:2645":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:51717:312":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:9409:4581":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:44126:3317":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:45836:4029":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"0:5:1693":{"crate_id":0,"path":["lock_api","GuardSend"],"kind":"struct"},"1:21118:10717":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:11253:4590":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:2744:2623":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:51712:937":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:43357:3887":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:40323:3654":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:11269:3695":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:9151:120":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:39345:2664":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:40678:3669":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:8679:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:7267:2759":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:40495:3667":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:22469:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:40304:3302":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:45713:4026":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:44098:4631":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:4046:4501":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:39269:201":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"4:0:1690":{"crate_id":4,"path":["scopeguard"],"kind":"module"},"1:4390:2609":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:9414:3315":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:41999:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:20575:11160":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:46542:4061":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:43250:3950":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:3935:3112":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:12386:3711":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:8253:4578":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:10248:3689":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:41487:2963":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:32071:3739":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:40294:3903":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:47720:3413":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:3386:3644":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:41546:210":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:32031:4478":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:44106:4634":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:4381:2608":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:30313:10212":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:20890:4456":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:2839:2651":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:42401:11041":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:4812:796":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:9146:112":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:41538:193":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:41453:2781":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:2843:2652":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:41317:10094":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:43663:3704":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:51725:746":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:20880:9712":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:2817:2646":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:41268:4573":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:51733:1500":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:7215:2760":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:51729:741":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:42429:110":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:9155:2845":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:3514:3114":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:20588:11546":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:45361:4011":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:41462:2970":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:4011:3648":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:7202:134":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:43475:3689":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:44305:195":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:3374:4480":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:30371:10183":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:4326:2606":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:2691:1887":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:21911:10170":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:44361:161":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:21865:3717":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:11488:3702":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:47478:4102":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:6589:2790":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:22568:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:2512:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:2161:4456":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:7636:15573":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:45806:4028":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:51735:790":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:2749:2625":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:2348:182":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:8842:15575":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:9163:2848":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:3999:3647":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:9807:10717":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:2163:4457":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:43187:3238":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:21676:3713":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:41470:2971":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:4114:2616":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:9530:3127":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:43575:3962":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:10276:3691":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11730:4637":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:39203:198":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:41520:2964":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:44003:3708":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:30283:2877":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:21015:3318":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:51726:743":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:40707:3918":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:2926:2656":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:40276:3298":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:46172:4039":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:21570:10717":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:9989:2971":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:40734:3675":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:21850:10168":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:45695:4025":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:21798:3290":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:42161:2845":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:51732:1499":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:39086:2670":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:11787:4645":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:40129:3895":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:30875:3327":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:6772:4553":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:2774:2638":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:43983:3997":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:45906:4031":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3079:2662":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:40384:3661":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:2312:188":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:42682:3333":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:39387:3397":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:43755:4651":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:44166:4000":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:11942:112":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:2509:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:9366:141":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:43625:3964":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:5590:3303":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:20995:9707":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:39247:202":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:42721:3335":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:46384:4058":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:43688:3885":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:2522:237":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:2694:226":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:1544:3112":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:47416:4101":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:44348:4005":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:21890:10201":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:21348:9720":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:20771:9711":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:43970:3991":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:11504:3703":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:46203:4040":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:11676:2685":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:43960:3987":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:2805:2648":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:40397:3909":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:39352:3746":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:41589:2970":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:10169:3687":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:40375:3660":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:14:2298":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:44390:4009":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:12334:12164":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:20607:11547":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:40446:3664":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:12299:136":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:51711:371":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:39366:3747":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:6981:2599":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:43341:3697":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:45606:4021":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:51716:1050":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:40214:3899":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:4145:2617":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:21814:3322":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:5384:3112":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:40481:3666":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:40701:3671":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:39978:3878":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:41597:2971":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:45858:4030":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:40416:3662":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:42175:2846":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:47735:3422":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"scopeguard","html_root_url":"https://docs.rs/scopeguard/1/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}