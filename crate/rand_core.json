{"root":"0:0:2623","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"0:124:2505":{"id":"0:124:2505","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[268,4],"end":[268,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\n# #[allow(dead_code)]\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3073:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2992:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:41:2577":{"id":"0:41:2577","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[259,4],"end":[261,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2440":{"id":"0:120:2440","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:93:2935","`RngCore::try_fill_bytes`":"0:121:2451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:62:2505":{"id":"0:62:2505","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[414,4],"end":[414,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2878","0:76:2885","0:77:2900","0:78:2872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2774","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:150:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42516:4918-0:151:2846":{"id":"a:1:42516:4918-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3860-0:151:2846":{"id":"b:1:3860-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[136,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:22:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[413,0],"end":[430,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:62:2505","0:63:2527","0:64:2540","0:65:2577"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3025-0:151:2846":{"id":"b:1:3025-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:2429":{"id":"0:57:2429","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[374,4],"end":[384,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3024:2890":{"id":"1:3024:2890","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2998:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2426":{"id":"0:136:2426","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[402,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2451":{"id":"0:121:2451","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[181,4],"end":[181,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:120:2440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:3279:4773-0:72:138":{"id":"a:1:3279:4773-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[400,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":["0:136:2426","0:137:2429","0:138:2440","0:139:2451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32713:3210-0:72:138":{"id":"a:1:32713:3210-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:78:2872":{"id":"0:78:2872","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[104,4],"end":[113,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42422:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZeroU32","id":"1:23643:2867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42515:4919-0:151:2846":{"id":"a:1:42515:4919-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:50:1192":{"id":"0:50:1192","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[314,4],"end":[322,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2982":{"id":"0:111:2982","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[157,0],"end":[161,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3021-0:143:2810":{"id":"b:1:3021-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3024:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108:2980":{"id":"0:108:2980","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[150,0],"end":[154,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:2429":{"id":"0:137:2429","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:568":{"id":"0:147:568","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[132,4],"end":[132,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,0],"end":[480,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:122:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:77:2900":{"id":"0:77:2900","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[85,4],"end":[96,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42422:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:143:2810":{"id":"b:1:2748-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2746:3346","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2750:10324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:138:2440":{"id":"0:138:2440","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3860-0:143:2810":{"id":"b:1:3860-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3031-0:72:138":{"id":"b:1:3031-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3034:138","1:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56:2426":{"id":"0:56:2426","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[355,4],"end":[371,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:2359":{"id":"0:85:2359","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[206,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:91:2929","0:93:2935","0:106:2766","0:107:2767","0:108:2980","0:111:2982"],"is_stripped":false}}},"0:58:2440":{"id":"0:58:2440","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[387,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42515:4919-0:143:2810":{"id":"a:1:42515:4919-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32713:3210-0:151:2846":{"id":"a:1:32713:3210-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:34:2440":{"id":"0:34:2440","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[224,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3036-0:151:2846":{"id":"b:1:3036-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3039:138","1:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2716-0:143:2810":{"id":"b:1:2716-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2718:3015"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:2474":{"id":"0:122:2474","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[213,0],"end":[213,31]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"`RngCore`":"0:117:2421"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:43","0:140","0:67"]}}},"0:59:2451":{"id":"0:59:2451","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[407,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3862:1841":{"id":"1:3862:1841","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40137:3758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17:2778":{"id":"0:17:2778","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[73,4],"end":[73,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2989:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2774","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2992:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2774","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3073:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"a:1:42516:4918-0:143:2810":{"id":"a:1:42516:4918-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2774","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:159:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:16:173":{"id":"0:16:173","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[69,4],"end":[69,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:64:2540":{"id":"0:64:2540","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32654:237-0:72:138":{"id":"a:1:32654:237-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:116:2608":{"id":"0:116:2608","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[133,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10448:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3279:4773-0:151:2846":{"id":"a:1:3279:4773-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:22:811":{"id":"0:22:811","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[137,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:138":{"id":"0:72:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:1:32713:3210-0:72:138","a:1:3244:247-0:72:138","a:1:3279:4773-0:72:138","a:1:42515:4919-0:72:138","a:1:42516:4918-0:72:138","a:1:32654:237-0:72:138","b:1:3021-0:72:138","b:1:3860-0:72:138","b:1:3036-0:72:138","b:1:3025-0:72:138","b:1:3031-0:72:138","b:1:2719-0:72:138","b:1:2716-0:72:138","0:83","0:81","0:79"]}}},"0:32:2429":{"id":"0:32:2429","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[199,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2750:10324":{"id":"1:2750:10324","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[264,0],"end":[264,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:40:2540":{"id":"0:40:2540","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[254,4],"end":[256,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[245,0],"end":[262,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:38:2505","0:39:2527","0:40:2540","0:41:2577"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:2780":{"id":"0:18:2780","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[76,4],"end":[76,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2774","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[432,0],"end":[432,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2782","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3036-0:72:138":{"id":"b:1:3036-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3039:138","1:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3035:1828":{"id":"1:3035:1828","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2451":{"id":"0:35:2451","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[239,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2935":{"id":"0:93:2935","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[38,0],"end":[54,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:2782":{"id":"0:19:2782","crate_id":0,"name":"CryptoBlockRng","span":{"filename":"src/block.rs","begin":[83,0],"end":[83,42]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information.","links":{"`CryptoRng`":"0:122:2474","`RngCore`":"0:117:2421"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:107:2767":{"id":"0:107:2767","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[145,0],"end":[147,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u64]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3031-0:151:2846":{"id":"b:1:3031-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3034:138","1:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2748-0:151:2846":{"id":"b:1:2748-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2736:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2746:3346","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2750:10324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:39:2527":{"id":"0:39:2527","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2426":{"id":"0:31:2426","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[188,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[186,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:31:2426","0:32:2429","0:34:2440","0:35:2451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3021-0:151:2846":{"id":"b:1:3021-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3024:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82:811":{"id":"0:82:811","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[134,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2994":{"id":"0:115:2994","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[16,0],"end":[21,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3244:247-0:72:138":{"id":"a:1:3244:247-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32654:237-0:151:2846":{"id":"a:1:32654:237-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:27:2822":{"id":"0:27:2822","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5:419":{"id":"0:5:419","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[540,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoBlockRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:120:2440","crate::block::BlockRngCore":"0:15:2774","`RngCore`":"0:117:2421"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:15:2774","0:19:2782","0:143:2810","0:151:2846"],"is_stripped":false}}},"0:139:2451":{"id":"0:139:2451","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3279:4773-0:143:2810":{"id":"a:1:3279:4773-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3279:4773","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:2623":{"id":"0:0:2623","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[531,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:114:1007","`SeedableRng`":"0:123:2477","`RngCore`":"0:117:2421","`impls`":"0:85:2359","`Error`":"0:72:138"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:419","0:85:2359","0:114:1007","0:4-0:72:138","0:117:2421","0:122:2474","0:123:2477"],"is_stripped":false}}},"1:3034:138":{"id":"1:3034:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:15:2774":{"id":"0:15:2774","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[67,0],"end":[77,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:5:419"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:16:173","0:17:2778","0:18:2780"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:65:2577":{"id":"0:65:2577","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3036-0:143:2810":{"id":"b:1:3036-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3039:138","1:3040:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:126:2540":{"id":"0:126:2540","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[311,4],"end":[340,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:2929":{"id":"0:91:2929","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1007":{"id":"0:114:1007","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[54,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:115:2994","0:116:2608"],"is_stripped":false}}},"b:1:3025-0:143:2810":{"id":"b:1:3025-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:2825":{"id":"0:53:2825","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2718:3015":{"id":"1:2718:3015","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:2505":{"id":"0:38:2505","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[246,4],"end":[246,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:47:811":{"id":"0:47:811","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[300,4],"end":[307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:72:138":{"id":"b:1:2716-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2718:3015"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32713:3210-0:143:2810":{"id":"a:1:32713:3210-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32713:3210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:84:841":{"id":"0:84:841","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[152,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["code",{"resolved_path":{"name":"NonZeroU32","id":"1:23643:2867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:811":{"id":"0:80:811","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[117,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10409:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10390:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:4-0:72:138":{"id":"0:4-0:72:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[45,0],"end":[45,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"error::Error","name":"Error","id":"0:72:138","glob":false}}},"0:106:2766":{"id":"0:106:2766","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u32]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[146,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:25:1192","0:26:950","0:27:2822","0:28:2825"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[353,0],"end":[411,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:56:2426","0:57:2429","0:58:2440","0:59:2451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3021-0:72:138":{"id":"b:1:3021-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2995:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3024:2890"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42516:4918-0:72:138":{"id":"a:1:42516:4918-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42516:4918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:52:2822":{"id":"0:52:2822","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[337,4],"end":[340,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3860-0:72:138":{"id":"b:1:3860-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3858:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3862:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2719-0:72:138":{"id":"b:1:2719-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2721:10326"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32654:237-0:143:2810":{"id":"a:1:32654:237-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32654:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:51:950":{"id":"0:51:950","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[330,4],"end":[332,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2719-0:151:2846":{"id":"b:1:2719-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2721:10326"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3031-0:143:2810":{"id":"b:1:3031-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3001:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3034:138","1:3035:1828"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:151:2846":{"id":"0:151:2846","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[290,0],"end":[296,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:119:2429","`BlockRngCore`":"0:15:2774","`RngCore`":"0:117:2421","RngCore::next_u32":"0:118:2426","RngCore::try_fill_bytes":"0:121:2451","`BlockRng`":"0:143:2810","RngCore::fill_bytes":"0:120:2440"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:156:568"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:32713:3210-0:151:2846","a:1:3244:247-0:151:2846","a:1:3279:4773-0:151:2846","a:1:42515:4919-0:151:2846","a:1:42516:4918-0:151:2846","a:1:32654:237-0:151:2846","b:1:3021-0:151:2846","b:1:3860-0:151:2846","b:1:3036-0:151:2846","b:1:3025-0:151:2846","b:1:3031-0:151:2846","b:1:2748-0:151:2846","b:1:2719-0:151:2846","b:1:2716-0:151:2846","0:157","0:60","0:54","0:45","0:67"]}}},"0:76:2885":{"id":"0:76:2885","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:75:2878"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"a:1:42515:4919-0:72:138":{"id":"a:1:42515:4919-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42515:4919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:159:480":{"id":"0:159:480","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2577":{"id":"0:131:2577","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[366,4],"end":[370,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2477":{"id":"0:123:2477","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[221,0],"end":[395,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:124:2505","0:125:2527","0:126:2540","0:131:2577"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:60","0:36"]}}},"0:125:2527":{"id":"0:125:2527","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[295,4],"end":[295,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"1:3039:138":{"id":"1:3039:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32578:4761","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:3040:1826":{"id":"1:3040:1826","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42554:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3005:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2716-0:151:2846":{"id":"b:1:2716-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2718:3015"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:117:2421":{"id":"0:117:2421","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[139,0],"end":[189,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:118:2426","`SeedableRng`":"0:123:2477","RngCore::fill_bytes":"0:120:2440","RngCore::next_u64":"0:119:2429","`CryptoRng`":"0:122:2474","RngCore::try_fill_bytes":"0:121:2451","`SeedableRng::from_rng`":"0:131:2577","`impls`":"0:85:2359"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:118:2426","0:119:2429","0:120:2440","0:121:2451"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:133","0:54","0:29"]}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZero","id":"1:824:190","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:150:480":{"id":"0:150:480","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:1192":{"id":"0:25:1192","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[150,4],"end":[157,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[299,0],"end":[308,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:47:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63:2527":{"id":"0:63:2527","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2477","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2721:10326":{"id":"1:2721:10326","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3027:841":{"id":"1:3027:841","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2825":{"id":"0:28:2825","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[179,4],"end":[183,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:2810":{"id":"0:143:2810","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[128,0],"end":[133,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:15:2774","`RngCore`":"0:117:2421","RngCore::next_u32":"0:118:2426","`SeedableRng`":"0:123:2477","`BlockRng64`":"0:151:2846","RngCore::fill_bytes":"0:120:2440","RngCore::next_u64":"0:119:2429","`BlockRngCore::generate`":"0:18:2780","RngCore::try_fill_bytes":"0:121:2451"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:147:568"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:23","a:1:32713:3210-0:143:2810","a:1:3244:247-0:143:2810","a:1:3279:4773-0:143:2810","a:1:42515:4919-0:143:2810","a:1:42516:4918-0:143:2810","a:1:32654:237-0:143:2810","b:1:3021-0:143:2810","b:1:3860-0:143:2810","b:1:3036-0:143:2810","b:1:3025-0:143:2810","b:1:3031-0:143:2810","b:1:2748-0:143:2810","b:1:2719-0:143:2810","b:1:2716-0:143:2810","0:148","0:43","0:20","0:36","0:29"]}}},"a:1:3244:247-0:143:2810":{"id":"a:1:3244:247-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:26:950":{"id":"0:26:950","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:568":{"id":"0:156:568","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[295,4],"end":[295,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"b:1:3025-0:72:138":{"id":"b:1:3025-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2998:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3027:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[116,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10443:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[310,0],"end":[351,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:50:1192","0:51:950","0:52:2822","0:53:2825"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118:2426":{"id":"0:118:2426","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:108:2980"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:3244:247-0:151:2846":{"id":"a:1:3244:247-0:151:2846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3244:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2846","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:75:2878":{"id":"0:75:2878","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"b:1:2719-0:143:2810":{"id":"b:1:2719-0:143:2810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32655:2455","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2810","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2721:10326"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:119:2429":{"id":"0:119:2429","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[152,4],"end":[152,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:111:2982","`impls::next_u64_via_u32`":"0:91:2929"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}}},"paths":{"1:11135:10645":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:23050:3634":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:42610:3366":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:44900:4068":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:46681:4137":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:42754:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:31441:3127":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:43652:157":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:42475:3453":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"4:2342:3193":{"crate_id":4,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"1:46617:4133":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:43635:3996":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:3645:3153":{"crate_id":4,"path":["zerocopy","SizeInfo"],"kind":"enum"},"4:942:3187":{"crate_id":4,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"1:53115:763":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"4:764:3151":{"crate_id":4,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"1:8041:3604":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:31003:3165":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:3305:4786":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:42216:4912":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:53129:1435":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:10452:3424":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:2968:10720":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:47533:4214":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:4837:3143":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:42619:196":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:40080:216":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:4397:4829":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:46731:4139":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"4:34:3180":{"crate_id":4,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"1:46987:4165":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:3237:4772":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:22174:10720":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:47476:4209":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:3375:4797":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:47082:4168":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:41175:3923":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:42717:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:2155:3576":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:4485:4296":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:44545:4030":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:45347:4093":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:41152:3919":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:46226:4097":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:43664:3998":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:2746:3346":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"1:10391:3422":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"0:122:2474":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"4:757:3148":{"crate_id":4,"path":["zerocopy","ByteSlice"],"kind":"trait"},"1:53119:908":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:42546:3982":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:41659:3949":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:41644:3946":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:23279:11070":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:53122:1871":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:44097:3622":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:43134:3426":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:23454:3672":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:8336:165":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:47347:4204":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:43120:3423":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:13218:4307":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:2146:4753":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:36689:4799":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:22880:10149":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:23509:3677":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:3731:4818":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:23443:3671":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:47455:4208":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"0:93:2935":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:22815:10720":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:2736:113":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:40100:4811":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:43353:3984":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:7753:4868":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"4:1617:3190":{"crate_id":4,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"4:3386:3198":{"crate_id":4,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"1:10069:811":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:42328:11116":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:2343:3580":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:44395:4022":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:45083:4084":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:12302:4316":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:22894:4737":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:32578:4761":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:33609:4787":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:32656:244":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:44709:4047":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:42362:4913":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"0:91:2929":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:34294:4794":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:3858:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:8798:4903":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:2612:4738":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:2998:145":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:22007:10063":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:47103:4169":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:45274:4088":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4915:3163":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:46649:4135":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:47434:4207":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:53104:1893":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:21973:11811":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:8792:4866":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:44565:4032":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:40893:3901":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:3239:118":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"4:587:2926":{"crate_id":4,"path":["zerocopy","IntoBytes"],"kind":"trait"},"1:41123:3915":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:46211:4094":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"4:427:14402":{"crate_id":4,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:4946:3436":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"4:3594:14325":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"1:44198:4348":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:53128:1933":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:23341:3102":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:4636:3583":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:3434:4816":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:53130:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:43880:4005":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:21919:3127":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"4:3601:3178":{"crate_id":4,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"1:40735:3889":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:41421:3940":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:41669:3950":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"4:2780:3195":{"crate_id":4,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:46579:4131":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:31035:3166":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:45033:4079":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:11734:4313":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:23531:3679":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:23498:3676":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:47559:4216":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:23487:3675":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:4605:4297":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:43015:4309":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:40810:3895":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:53114:747":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:10235:3443":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:22005:10720":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:53118:902":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:22615:10720":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"4:595:3142":{"crate_id":4,"path":["zerocopy","Unaligned"],"kind":"trait"},"4:544:2927":{"crate_id":4,"path":["zerocopy","NoCell"],"kind":"trait"},"4:2991:3196":{"crate_id":4,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:41114:3914":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:44513:4029":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:47493:4210":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:45266:4350":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:40782:11107":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:44261:4013":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:23410:3669":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:23421:3670":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"1:46550:4130":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:4100:3366":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:53113:744":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"1:10443:120":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:4884:4847":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:46949:4163":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:44116:3624":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:4520:4837":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:42680:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:46600:4132":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:10991:10644":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:41063:3625":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:45203:4087":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:7818:11923":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:44277:3899":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:40820:3896":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:46410:4114":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:53121:895":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"4:535:3138":{"crate_id":4,"path":["zerocopy","KnownLayout"],"kind":"trait"},"1:3613:211":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:11623:4311":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:41677:3952":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:53125:1865":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"4:32:3179":{"crate_id":4,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"1:45208:151":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:40130:4331":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:8101:4840":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:15:2907":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:22060:10059":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:10456:3426":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:45005:4072":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:2222:189":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"4:1183:3188":{"crate_id":4,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:3703:4815":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:12973:4024":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:23328:3115":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:42902:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:40000:210":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:23983:236":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:38730:4803":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4497:110":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:5357:4302":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:3295:4788":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:32745:115":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:23103:3636":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:3686:254":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:43421:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:23643:2867":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"type_alias"},"1:12913:4016":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:44852:4055":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:33948:4793":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"4:2569:3194":{"crate_id":4,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"1:44788:4053":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:39968:4809":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:3481:3207":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:2596:679":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:40971:4890":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:0:568":{"crate_id":1,"path":["core"],"kind":"module"},"1:8836:13658":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:40854:4863":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:45287:11099":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:43408:11193":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:43127:3425":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:821:3103":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:46710:4138":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:42450:3605":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:41286:3936":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:47689:4231":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:44088:3621":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:41635:3945":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:31056:3433":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:12335:4317":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:22753:10146":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:43884:4006":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:44341:4019":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:32713:3210":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:32645:3745":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:3676:4812":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:42466:3366":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:23294:11085":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:11541:3615":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:23352:3116":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"4:553:3140":{"crate_id":4,"path":["zerocopy","FromZeros"],"kind":"trait"},"1:53116:742":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"1:13233:4986":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:43867:4004":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:42865:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:13286:4995":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:41161:3920":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"0:0:2623":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:44866:5002":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:42441:173":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:2760:3347":{"crate_id":1,"path":["core","clone","InitializingSlice"],"kind":"struct"},"1:43113:3424":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:44413:4023":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:40847:3898":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:2848:2925":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"4:3567:14325":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:41262:3933":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"4:546:3139":{"crate_id":4,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"1:7003:3603":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:44599:3889":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:38675:4802":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"0:114:1007":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:43643:3997":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:32620:4328":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:4:1271":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:10450:3423":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:53101:420":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:22829:10148":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:40323:4762":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:34082:4790":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:2992:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:32714:3747":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:45017:4075":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:106:2766":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:10454:3425":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:45009:4073":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:44176:4347":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"4:3552:14324":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:10095:11881":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"4:122:3171":{"crate_id":4,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:42402:3977":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:10669:157":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:23465:3673":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:40934:3903":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:46358:4111":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:44163:3625":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:13994:4324":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:41133:134":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:44137:4007":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:3244:247":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"0:151:2846":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:22184:10060":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:45324:4091":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:11803:4314":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:45041:4081":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:8482:178":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:43627:3994":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:45211:164":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:30773:3099":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:41227:3928":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:42594:3605":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:2995:163":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"0:117:2421":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:43467:3434":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:2710:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:3073:124":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:34467:4795":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:4763:4299":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:41411:3939":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:22843:4737":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:21929:11821":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:13837:4320":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:47180:4201":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:45029:4078":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:3290:4783":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:3697:4813":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:44267:4014":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:39888:4820":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:4539:4838":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:26383:267":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:44590:3898":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:23171:3638":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:7009:3602":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:44359:4020":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:12989:4027":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:45094:5012":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"4:1826:3191":{"crate_id":4,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"4:3587:14552":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"1:14260:5038":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:10409:144":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:3465:3167":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:46372:4112":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:22791:10147":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"4:3657:3154":{"crate_id":4,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"1:5298:438":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:44037:4344":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:11345:239":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:46290:4103":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:9583:4307":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:6305:3594":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:47008:4166":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:22186:3632":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:5319:11140":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:41026:3585":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:47548:4215":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:41143:3917":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:43363:3433":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:46454:4117":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:2834:195":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:46535:4129":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:11817:4315":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"0:111:2982":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:42537:3452":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:3691:147":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:40040:215":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:46425:4115":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:46326:4109":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:8325:146":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:7752:4867":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:21975:11815":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"4:3229:3197":{"crate_id":4,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"1:10709:3612":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:6814:3595":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:46875:4161":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:44208:3627":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:40022:212":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:42384:3974":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:44583:4034":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:44218:4349":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:23432:3500":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:40741:3890":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:3487:141":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:13877:3923":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:23210:3101":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:39972:3752":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:44309:3620":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:39985:213":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:46305:4104":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:47522:4213":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:40771:3891":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"4:607:3143":{"crate_id":4,"path":["zerocopy","Ref"],"kind":"struct"},"1:10390:226":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:44574:4033":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:40960:3905":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:9904:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:41193:3925":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:44740:4051":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:31414:196":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:47302:4203":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:34015:4791":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:44877:4058":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:53103:476":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:45225:227":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"0:107:2767":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:21956:11823":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:34813:4798":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:41083:4334":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"0:19:2782":{"crate_id":0,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"1:2052:3475":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:11516:4310":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:3490:142":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:33881:4789":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:53102:1188":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:11775:4022":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11696:3620":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:3768:4819":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:53110:1831":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"0:115:2994":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:2840:202":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:43380:3992":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"0:5:419":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"2:0:510":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:53120:914":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:22462:10065":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:47053:4167":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:44237:4009":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:3001:258":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:12727:4951":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:44126:4346":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:32654:237":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:42184:3956":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:47650:4221":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:40831:3897":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11335:10720":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"0:15:2774":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:41184:3924":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:5399:988":{"crate_id":1,"path":["core","iter"],"kind":"module"},"4:1408:3189":{"crate_id":4,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"1:10661:153":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:40137:3758":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:43392:11194":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:53127:977":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:44673:5001":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:11584:3619":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:46763:4141":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:47376:4205":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:824:190":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:42506:3454":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:32638:3143":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:47627:4220":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:46858:4160":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2798:201":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:3452:125":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9909:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:41105:3912":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:40942:3904":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:8288:4905":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:22937:10141":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:40797:3894":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:2969:4580":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:4758:4298":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:13227:4987":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:33185:4785":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:42791:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"4:756:14336":{"crate_id":4,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:45215:219":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:2148:4754":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:41214:3927":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:47502:4211":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:41246:3931":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:44815:4054":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:47597:4218":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:44723:4050":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"4:139:71":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"4:762:3150":{"crate_id":4,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"1:42200:3958":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:22617:10061":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:53108:1707":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"4:796:3185":{"crate_id":4,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"1:10460:3427":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:2713:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:46343:4110":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"0:143:2810":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:3522:4810":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:31041:3479":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:46439:4116":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:41650:3947":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:234:226":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"4:811:3186":{"crate_id":4,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"1:2149:4726":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:3320:4807":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:41092:3911":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:23156:3637":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:46970:4164":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:41205:3926":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:23221:11077":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:12743:4318":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:42422:194":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:2045:678":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:40998:3899":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:31067:11195":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:41237:3930":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:9470:4306":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:32624:4329":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:41276:3934":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:53106:1329":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:8374:130":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:10090:13659":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8427:3208":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:42515:4919":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:4827:3584":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:13942:11783":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:11492:3605":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:46497:4127":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"4:2099:3192":{"crate_id":4,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"1:23476:3674":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:44608:3897":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:1838:4686":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:13448:120":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:44189:3626":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:33397:4784":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:42244:3966":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:38565:4800":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:46468:4118":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"0:108:2980":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:4684:3435":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:22923:10720":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:2803:135":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:21941:11821":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:45335:4092":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:44555:4031":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:34640:4796":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:3716:14150":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:22496:11816":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:44106:4345":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:2610:4737":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:42828:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"3:0:3081":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:46748:4140":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:6114:4829":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:46258:4101":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:45233:207":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:10704:4944":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:53109:1741":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:47257:4202":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"0:85:2359":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:46837:4159":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:41628:3944":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:3493:143":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:45021:4076":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:22709:10145":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:3325:4808":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:44918:4071":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:8789:150":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:46273:4102":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:44441:4025":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:23187:3643":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:22078:3632":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:32743:4687":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:22066:10062":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:44250:4012":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:3317:4806":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:39924:4817":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:23321:3663":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:21987:11818":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:11661:4312":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"0:116:2608":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"4:0:2624":{"crate_id":4,"path":["zerocopy"],"kind":"module"},"1:10462:3428":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:47574:4217":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:40150:3760":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:10448:129":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:13172:3100":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:8345:3209":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:3470:4805":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:10998:10639":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"1:3125:4293":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:46632:4134":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:23235:3649":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:45059:131":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:2989:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:44887:4062":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:4473:4295":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:45037:4080":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:41435:3941":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:42602:4310":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:38620:4801":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:13969:205":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:7014:3600":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:3286:4750":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:13027:3619":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:32655:2455":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:22965:10142":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:2082:1373":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:3084:138":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:22457:10720":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"4:3666:3152":{"crate_id":4,"path":["zerocopy","CastType"],"kind":"enum"},"1:7869:4895":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:53123:1853":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:42458:4310":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:8292:4904":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:46808:4158":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:43674:4002":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:6191:3591":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:46664:4136":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:39309:4804":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:42516:4918":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:44459:4026":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:3249:3164":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:22841:11161":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:44694:4040":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:46393:4113":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:46518:4128":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:42350:3973":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"4:558:3141":{"crate_id":4,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:53126:1847":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:32631:4330":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:40060:214":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:10458:206":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:46920:4162":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:53124:1859":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:1969:4829":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:23243:3650":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:45298:4352":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:42978:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"4:512:3137":{"crate_id":4,"path":["zerocopy","DstLayout"],"kind":"struct"},"1:14168:3631":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:41621:3943":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:23373:10720":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:40927:3902":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:3967:10637":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:40986:3908":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:22484:3633":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:42162:170":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:22058:10720":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"0:123:2477":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:12950:4021":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3279:4773":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:4754:221":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:45025:4077":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:23259:11072":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:11789:4023":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:22970:10140":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"4:760:3149":{"crate_id":4,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"1:47513:4212":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:21958:11825":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:40955:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:46241:4098":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:43446:138":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:44291:3615":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:7647:2995":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:6018:4829":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:4893:3162":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:45308:180":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:43429:3433":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:14125:116":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:47612:4219":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:42554:226":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:42941:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:10863:10643":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:13854:4323":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:53117:920":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:47405:4206":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:14148:3629":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:3005:257":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:44495:4028":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:23520:3678":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:41036:4332":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:9433:4305":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"1:42643:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:41056:4333":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:45013:4074":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:34149:4792":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:43682:4003":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:40839:3889":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:53107:335":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:13238:4985":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"zerocopy","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}