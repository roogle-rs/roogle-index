{"root":"0:0:2070","crate_version":"0.6.4","includes_private":false,"index":{"0:65:2033":{"id":"0:65:2033","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[426,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32718:237-0:154:2251":{"id":"a:1:32718:237-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:24:721":{"id":"0:24:721","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[132,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9988:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9969:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:1899":{"id":"0:59:1899","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[406,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2978:246-0:154:2251":{"id":"a:1:2978:246-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2759:2334":{"id":"1:2759:2334","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2733:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[412,0],"end":[429,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:134:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:134:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:62:1961","0:63:1983","0:64:1996","0:65:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[116,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2322","0:76:2329","0:77:2344","0:78:2316"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3578-0:72:138":{"id":"b:1:3578-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3576:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3580:1639"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2771-0:154:2251":{"id":"b:1:2771-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2774:138","1:2775:1624"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41:1983":{"id":"0:41:1983","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[247,4],"end":[249,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:134:1933","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:2418":{"id":"0:116:2418","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[166,0],"end":[170,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[424,0],"end":[444,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":["0:147:1874","0:148:1877","0:149:1888","0:150:1899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:123:1869":{"id":"0:123:1869","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[142,0],"end":[185,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:124:1874","`SeedableRng`":"0:134:1933","RngCore::fill_bytes":"0:126:1888","RngCore::next_u64":"0:125:1877","`CryptoRng`":"0:128:1917","RngCore::try_fill_bytes":"0:127:1899","`SeedableRng::from_rng`":"0:142:2033","`impls`":"0:85:1807"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:124:1874","0:125:1877","0:126:1888","0:127:1899"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:54","0:31","0:144"]}}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[131,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10013:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10013:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:24:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[115,9],"end":[115,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:18:2217","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:161:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:1928":{"id":"0:129:1928","crate_id":0,"name":"CryptoRngCore","span":{"filename":"src/lib.rs","begin":[229,0],"end":[232,1]},"visibility":"public","docs":"An extension trait that is automatically implemented for any type\nimplementing [`RngCore`] and [`CryptoRng`].\n\nIt may be used as a trait object, and supports upcasting to [`RngCore`] via\nthe [`CryptoRngCore::as_rngcore`] method.\n\n# Example\n\n```\nuse rand_core::CryptoRngCore;\n\n#[allow(unused)]\nfn make_token(rng: &mut dyn CryptoRngCore) -> [u8; 32] {\n    let mut buf = [0u8; 32];\n    rng.fill_bytes(&mut buf);\n    buf\n}\n```","links":{"`CryptoRng`":"0:128:1917","`CryptoRngCore::as_rngcore`":"0:130:1930","`RngCore`":"0:123:1869"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:130:1930"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:131"]}}},"b:1:2771-0:72:138":{"id":"b:1:2771-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:138","1:2775:1624"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:136:1983":{"id":"0:136:1983","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[319,4],"end":[319,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:134:1933","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:142:2033":{"id":"0:142:2033","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[390,4],"end":[394,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1888":{"id":"0:36:1888","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[222,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:1874":{"id":"0:56:1874","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[354,4],"end":[370,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2756-0:72:138":{"id":"b:1:2756-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2759:2334"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90:2377":{"id":"0:90:2377","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[37,0],"end":[53,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:1961":{"id":"0:40:1961","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[244,4],"end":[244,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:134:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:170:457":{"id":"0:170:457","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42353:4472-0:162:2288":{"id":"a:1:42353:4472-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:158:535":{"id":"0:158:535","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[127,4],"end":[127,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:137:1996":{"id":"0:137:1996","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[335,4],"end":[364,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:1874":{"id":"0:33:1874","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[186,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[141,0],"end":[179,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:27:1044","0:28:827","0:29:2264","0:30:2267"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30:2267":{"id":"0:30:2267","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[174,4],"end":[178,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:1917":{"id":"0:128:1917","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[209,0],"end":[209,22]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`]\nimplementation is supposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"block::BlockRngCore":"0:18:2217","`RngCore`":"0:123:1869"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:67","0:151"]}}},"b:1:2456-0:162:2288":{"id":"b:1:2456-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2458:9857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135:1961":{"id":"0:135:1961","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2807:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2727:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[238,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"0:129:1928","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"T"},"items":["0:133:1930"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3578-0:162:2288":{"id":"b:1:3578-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3576:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3580:1639"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2762:748":{"id":"1:2762:748","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1044":{"id":"0:50:1044","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[310,4],"end":[318,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2760-0:72:138":{"id":"b:1:2760-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2762:748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2766-0:154:2251":{"id":"b:1:2766-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2769:138","1:2770:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2771-0:162:2288":{"id":"b:1:2771-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2774:138","1:2775:1624"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2456-0:154:2251":{"id":"b:1:2456-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2458:9857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42354:4471-0:154:2251":{"id":"a:1:42354:4471-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:82:721":{"id":"0:82:721","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[136,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9988:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9969:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2774:138":{"id":"1:2774:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32648:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:1:32775:2572-0:154:2251":{"id":"a:1:32775:2572-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:28:827":{"id":"0:28:827","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62:1961":{"id":"0:62:1961","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[413,4],"end":[413,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:134:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"a:1:2978:246-0:162:2288":{"id":"a:1:2978:246-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:78:2316":{"id":"0:78:2316","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[106,4],"end":[115,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42229:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZeroU32","id":"1:23120:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:1899":{"id":"0:150:1899","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[441,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:1899":{"id":"0:127:1899","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[184,4],"end":[184,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:126:1888"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:57:1877":{"id":"0:57:1877","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[373,4],"end":[383,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:1877":{"id":"0:125:1877","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[155,4],"end":[155,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:116:2418","`impls::next_u64_via_u32`":"0:88:2371"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:63:1983":{"id":"0:63:1983","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[416,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:134:1933","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:1874":{"id":"0:147:1874","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[426,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[481,0],"end":[481,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2070":{"id":"0:0:2070","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[531,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:119:877","`SeedableRng`":"0:134:1933","`RngCore`":"0:123:1869","`impls`":"0:85:1807","`Error`":"0:72:138"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:7:402","0:85:1807","0:119:877","0:6-0:72:138","0:123:1869","0:128:1917","0:129:1928","0:134:1933"],"is_stripped":false}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[135,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10018:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2456-0:72:138":{"id":"b:1:2456-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2458:9857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42354:4471-0:162:2288":{"id":"a:1:42354:4471-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:75:2322":{"id":"0:75:2322","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"a:1:42353:4472-0:154:2251":{"id":"a:1:42353:4472-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:121:2429":{"id":"0:121:2429","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[18,0],"end":[23,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2760-0:162:2288":{"id":"b:1:2760-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2762:748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:721":{"id":"0:47:721","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[296,4],"end":[303,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9988:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9969:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58:1888":{"id":"0:58:1888","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[386,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:721":{"id":"0:80:721","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[119,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9988:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9969:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:138":{"id":"0:72:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:1:42353:4472-0:72:138","a:1:42354:4471-0:72:138","a:1:32718:237-0:72:138","a:1:32775:2572-0:72:138","a:1:2978:246-0:72:138","b:1:3578-0:72:138","b:1:2456-0:72:138","b:1:2760-0:72:138","b:1:2756-0:72:138","b:1:2766-0:72:138","b:1:2771-0:72:138","b:1:2453-0:72:138","0:83","0:81","0:79"]}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[431,0],"end":[431,62]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3578-0:154:2251":{"id":"b:1:3578-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3576:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3580:1639"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2455:2450":{"id":"1:2455:2450","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:2223":{"id":"0:21:2223","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[77,4],"end":[77,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:18:2217","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:34:1877":{"id":"0:34:1877","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:2251":{"id":"0:154:2251","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[123,0],"end":[128,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:18:2217","`RngCore`":"0:123:1869","RngCore::next_u32":"0:124:1874","`SeedableRng`":"0:134:1933","`BlockRng64`":"0:162:2288","RngCore::fill_bytes":"0:126:1888","RngCore::next_u64":"0:125:1877","`BlockRngCore::generate`":"0:21:2223","RngCore::try_fill_bytes":"0:127:1899"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:158:535"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:25","a:1:42353:4472-0:154:2251","a:1:42354:4471-0:154:2251","a:1:32718:237-0:154:2251","a:1:32775:2572-0:154:2251","a:1:2978:246-0:154:2251","b:0:131-0:154:2251","b:1:3578-0:154:2251","b:1:2456-0:154:2251","b:1:2760-0:154:2251","b:1:2756-0:154:2251","b:1:2766-0:154:2251","b:1:2771-0:154:2251","b:1:2453-0:154:2251","0:22","0:31","0:67","0:159","0:38"]}}},"1:2775:1624":{"id":"1:2775:1624","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134:1933":{"id":"0:134:1933","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[246,0],"end":[419,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:135:1961","0:136:1983","0:137:1996","0:142:2033"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:60","0:38"]}}},"0:7:402":{"id":"0:7:402","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[539,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:126:1888","crate::block::BlockRngCore":"0:18:2217","`RngCore`":"0:123:1869"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:18:2217","0:154:2251","0:162:2288"],"is_stripped":false}}},"b:1:2766-0:162:2288":{"id":"b:1:2766-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2769:138","1:2770:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:52:2264":{"id":"0:52:2264","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[333,4],"end":[336,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2770:1626":{"id":"1:2770:1626","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32718:237-0:162:2288":{"id":"a:1:32718:237-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:19:174":{"id":"0:19:174","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[70,4],"end":[70,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:43:2033":{"id":"0:43:2033","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[257,4],"end":[259,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:877":{"id":"0:119:877","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[56,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:121:2429","0:122:2055"],"is_stripped":false}}},"b:1:2756-0:162:2288":{"id":"b:1:2756-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2759:2334"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:2267":{"id":"0:53:2267","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[341,4],"end":[346,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:2217":{"id":"0:18:2217","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[68,0],"end":[78,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:7:402"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:19:174","0:20:2221","0:21:2223"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:51:827":{"id":"0:51:827","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[326,4],"end":[328,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2769:138":{"id":"1:2769:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:1:2453-0:154:2251":{"id":"b:1:2453-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2455:2450"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:88:2371":{"id":"0:88:2371","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[24,0],"end":[29,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:18:2217","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:170:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6-0:72:138":{"id":"0:6-0:72:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[48,0],"end":[48,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"error::Error","name":"Error","id":"0:72:138","glob":false}}},"0:124:1874":{"id":"0:124:1874","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[148,4],"end":[148,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:113:2416"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[349,0],"end":[410,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2724:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u64"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2727:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u64"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:56:1874","0:57:1877","0:58:1888","0:59:1899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111:2207":{"id":"0:111:2207","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[140,0],"end":[142,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:535":{"id":"0:167:535","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[291,4],"end":[291,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:126:1888":{"id":"0:126:1888","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:90:2377","`RngCore::try_fill_bytes`":"0:127:1899"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2453-0:162:2288":{"id":"b:1:2453-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2455:2450"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:76:2329":{"id":"0:76:2329","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:75:2322"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:27:1044":{"id":"0:27:1044","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[145,4],"end":[152,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32718:237-0:72:138":{"id":"a:1:32718:237-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32718:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:149:1888":{"id":"0:149:1888","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[436,4],"end":[438,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2458:9857":{"id":"1:2458:9857","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2760-0:154:2251":{"id":"b:1:2760-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2762:748"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37:1899":{"id":"0:37:1899","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[237,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42372:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:2208":{"id":"0:112:2208","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[154,0],"end":[156,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2055":{"id":"0:122:2055","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[27,0],"end":[32,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2264":{"id":"0:29:2264","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:2416":{"id":"0:113:2416","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[159,0],"end":[163,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1877":{"id":"0:148:1877","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:0:131-0:154:2251":{"id":"b:0:131-0:154:2251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[238,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"0:129:1928","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:133:1930"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84:748":{"id":"0:84:748","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[154,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["code",{"resolved_path":{"name":"NonZeroU32","id":"1:23120:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:1930":{"id":"0:130:1930","crate_id":0,"name":"as_rngcore","span":{"filename":"src/lib.rs","begin":[231,4],"end":[231,49]},"visibility":"default","docs":"Upcast to an [`RngCore`] trait object.","links":{"`RngCore`":"0:123:1869"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[152,0],"end":[166,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZero","id":"1:728:190","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:748"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2453-0:72:138":{"id":"b:1:2453-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2455:2450"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:42:1996":{"id":"0:42:1996","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[252,4],"end":[254,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[295,0],"end":[304,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10013:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10013:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:47:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:162:2288":{"id":"0:162:2288","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[286,0],"end":[292,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:125:1877","`BlockRngCore`":"0:18:2217","`RngCore`":"0:123:1869","RngCore::next_u32":"0:124:1874","RngCore::try_fill_bytes":"0:127:1899","`BlockRng`":"0:154:2251","RngCore::fill_bytes":"0:126:1888"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:167:535"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:42353:4472-0:162:2288","a:1:42354:4471-0:162:2288","a:1:32718:237-0:162:2288","a:1:32775:2572-0:162:2288","a:1:2978:246-0:162:2288","b:1:3578-0:162:2288","b:1:2456-0:162:2288","b:1:2760-0:162:2288","b:1:2756-0:162:2288","b:1:2766-0:162:2288","b:1:2771-0:162:2288","b:1:2453-0:162:2288","0:45","0:54","0:60","0:168"]}}},"0:161:457":{"id":"0:161:457","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[115,9],"end":[115,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2978:246-0:72:138":{"id":"a:1:2978:246-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:20:2221":{"id":"0:20:2221","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[74,4],"end":[74,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2724:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:18:2217","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2727:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:18:2217","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2807:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[181,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2724:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u32"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2727:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u32"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:33:1874","0:34:1877","0:36:1888","0:37:1899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[243,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:134:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:134:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:40:1961","0:41:1983","0:42:1996","0:43:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:77:2344":{"id":"0:77:2344","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[87,4],"end":[98,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42229:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1996":{"id":"0:64:1996","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[421,4],"end":[423,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2766-0:72:138":{"id":"b:1:2766-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2769:138","1:2770:1626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2756-0:154:2251":{"id":"b:1:2756-0:154:2251","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:154:2251","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2759:2334"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:85:1807":{"id":"0:85:1807","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[207,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:88:2371","0:90:2377","0:111:2207","0:112:2208","0:113:2416","0:116:2418"],"is_stripped":false}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[306,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:50:1044","0:51:827","0:52:2264","0:53:2267"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:3580:1639":{"id":"1:3580:1639","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40016:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42354:4471-0:72:138":{"id":"a:1:42354:4471-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42354:4471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[118,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10013:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32775:2572-0:162:2288":{"id":"a:1:32775:2572-0:162:2288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32719:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2217","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:162:2288","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133:1930":{"id":"0:133:1930","crate_id":0,"name":"as_rngcore","span":{"filename":"src/lib.rs","begin":[235,4],"end":[237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"dyn_trait":{"traits":[{"trait":{"name":"RngCore","id":"0:123:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32775:2572-0:72:138":{"id":"a:1:32775:2572-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32775:2572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42353:4472-0:72:138":{"id":"a:1:42353:4472-0:72:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42353:4472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"1:12604:4527":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:1925:3288":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:53559:403":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:22381:9687":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:45021:150":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:22048:2852":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:44042:2871":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:40009:3948":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:44130:2865":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:39189:4361":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:10669:239":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:21612:10224":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:0:535":{"crate_id":1,"path":["core"],"kind":"module"},"1:3396:2850":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:42353:4472":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:45075:3963":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:3205:141":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:40714:4415":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:41044:3607":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:3211:143":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:53565:332":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:40740:4416":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:46186:3771":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:7697:4393":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:3051:4363":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:40642:10085":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:44013:2869":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:21559:10224":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"0:128:1917":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:44058:3682":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:48275:3850":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:12810:121":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:46364:3779":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:53580:1646":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:22342:9686":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:41428:3620":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:40657:3570":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:44607:3724":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"3:0:2513":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:46287:3775":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:3061:4365":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:3451:4373":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:44334:3700":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:42412:2857":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:12593:4529":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:53560:1040":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:48351:3854":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:53564:1158":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:4547:2790":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:53575:800":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:12357:3698":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:44112:2861":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:40202:9975":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:26344:266":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:45034:227":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:32776:3423":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:43230:10076":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:43191:3660":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:12095:2846":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:46854:3793":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:40803:3585":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:10659:10224":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:1811:2830":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:7350:4457":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:44234:2859":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:9168:3938":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:11624:2876":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:9490:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:43246:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:43478:157":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:46056:3766":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:13235:205":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:9817:2801":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:40930:3591":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:40940:3593":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:10838:2858":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:40968:3597":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:44856:3751":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:2733:145":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:39852:3428":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"0:154:2251":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:42278:174":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:43861:3962":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3819:2720":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"0:7:402":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:22730:3325":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:40016:3434":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:48386:3857":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:10032:2782":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:44878:132":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:32718:237":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:725:10224":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:22838:10008":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:13384:117":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:9485:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:34347:4352":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:3020:4323":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:3488:4374":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:41012:3603":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:39879:210":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:8013:2570":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:40921:3590":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:11125:2864":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:40691:3573":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:53568:1629":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:42023:4464":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:46327:3777":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:44836:3746":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:40777:3582":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:3417:4368":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:22609:3321":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"0:112:2208":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:2558:202":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:10945:2862":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:8069:179":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:39919:215":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:32805:4267":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:13422:3319":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:53579:1645":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:44216:2863":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:46102:3768":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:4214:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:3576:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:41435:3621":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:32695:3947":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:11111:2859":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:45024:219":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:46509:3783":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:44098:2383":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:40890:3951":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:33919:4348":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7467:4442":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:3177:127":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9672:13535":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:4601:2791":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:12281:3689":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:41053:3608":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:53576:801":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:21620:9600":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:30945:2787":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:30668:2532":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:43490:3673":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:10983:2879":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:7637:3304":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:6602:3303":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"0:123:1869":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:8378:4389":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:22172:9599":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:47193:3808":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:48397:3858":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:44262:3696":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:45096:3965":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:12395:2878":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:41451:3623":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:22393:12306":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:10481:3222":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:2973:119":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:21740:9598":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:40620:3566":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:2121:3291":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:21403:13285":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:33381:4343":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:22480:10224":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:2978:246":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:42354:4471":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:42157:3648":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:44559:3722":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:46156:3770":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:15:2351":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:43508:3678":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:40843:3949":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:53585:1254":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:3039:4344":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:40959:3596":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:23120:2310":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"type_alias"},"1:22258:9684":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:9970:2776":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:42578:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:32702:2790":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:22802:3337":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:47381:3812":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:42343:2811":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:1934:2965":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:41991:3631":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:41442:3622":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:21742:3320":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:42287:2857":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:21349:2565":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:43708:3680":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:44411:3574":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:22794:3336":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:30956:10052":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:41466:3212":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:44280:3697":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:10030:2781":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:12650:4537":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:44000:2874":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:53577:797":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:42051:3641":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:8387:4453":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:44088:3687":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:3190:4362":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"0:121:2429":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:21731:10224":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:36569:4356":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:44316:3699":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:42656:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3208:142":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:728:190":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:47347:3811":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:11139:2860":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:12318:3694":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:2447:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:21614:9597":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:44696:3729":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:47531:3813":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:10272:4497":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:33195:2534":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:47737:3843":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:46701:3789":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:38500:4358":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:5005:10421":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:3240:4367":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:4237:4390":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:40912:3588":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:12599:4528":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:48465:3862":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:11657:2877":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:43712:2887":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:10013:121":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:53578:1648":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:10028:206":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:44671:3726":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:10383:3215":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:4648:2792":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:45105:181":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:32807:116":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:4984:421":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:42372:226":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:13186:165":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:53584:1703":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:9677:13025":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:3024:2533":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:41969:171":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:3333:211":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:6608:3302":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:10814:2857":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:2730:163":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:46457:3781":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:5870:3293":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:44844:3748":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:45083:3758":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:44420:3565":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:2740:256":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:42135:10061":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:45144:3763":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:22880:3350":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:22435:9688":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:40680:3572":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:43201:2787":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:32648:2516":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:22366:10224":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"0:122:2055":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"1:41069:3610":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:44860:3752":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:44180:3693":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:38445:4357":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:44737:3742":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:43469:3672":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:4396:2789":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:33567:4345":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:30924:2835":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:46032:3765":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:42437:196":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"0:162:2288":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:2688:2517":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:53562:1664":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:32719:1934":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:44542:3721":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:4256:4391":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:46124:3769":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:44848:3749":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:22170:10224":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:10449:3216":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:46633:3786":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:21633:3320":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"0:85:1807":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:4592:3202":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:2724:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:43255:2787":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:42420:2858":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:47271:3809":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:34520:4353":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:4353:3292":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:44022:2872":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:32775:2572":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:22818:10063":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:46603:3785":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:48435:3860":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:39848:4366":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:4:1121":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:44082:3686":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:2736:257":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:2363:4312":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:41228:3617":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:42853:3940":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"0:129:1928":{"crate_id":0,"path":["rand_core","CryptoRngCore"],"kind":"trait"},"1:41021:3604":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:41093:3613":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:2983:2795":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:42972:2780":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:13260:3942":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:12111:2848":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:41484:3627":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"0:90:2377":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:40870:2873":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:2450:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:22715:3324":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:34037:4349":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:22780:10064":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:46487:3782":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:5084:859":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:3411:147":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:41218:3616":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:40991:3601":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:53571:695":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:38555:4359":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:22524:9680":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:2809:126":{"crate_id":1,"path":["core","default","Default"],"kind":"proc_derive"},"1:44824:3743":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:7881:4455":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:7918:146":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:47081:3806":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:44832:3745":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:48191:3848":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:31118:10056":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:5984:3296":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:39979:2849":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:43930:2855":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:46411:3780":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:2687:10224":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:22529:9678":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:46957:3795":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:44404:3705":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:40833:3203":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:7960:131":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:42814:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:42461:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:43461:3671":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:40733:3577":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:44366:3701":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:10024:2779":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:726:2539":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:42775:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:47317:3810":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:40982:3600":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:46776:3791":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:44828:3744":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:22018:10224":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:21359:13287":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:6413:3297":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:34174:4351":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:44376:3702":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:21388:13297":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:32709:3421":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:12584:3938":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:40670:3571":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:10229:153":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:43500:3677":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:2818:138":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:4468:3930":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:46346:3778":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:22887:2551":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:41000:3602":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:42007:3633":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:48340:3853":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:6613:3210":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:1804:637":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:44840:3747":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:22495:9679":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:32684:3945":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:3685:3198":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:39768:4375":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:32720:244":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:53586:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:1911:4324":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:42617:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:46226:3773":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:44429:3573":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:13512:4575":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"0:18:2217":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:41083:3611":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"0:88:2371":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:9988:144":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:39864:213":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:3056:4364":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:7245:2430":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:41034:3605":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3436:13098":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:2552:195":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:22853:10050":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"0:111:2207":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:9969:226":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:7885:4454":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:23944:236":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:42500:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:46257:3774":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:48129:3847":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:46679:3788":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:21561:9601":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:48371:3856":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:42958:2777":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:4113:3196":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:32688:3946":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:33978:4347":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:21405:13294":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:42734:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:5699:3196":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:44386:3703":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:53574:799":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:39959:216":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:10237:157":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:38610:4360":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:30892:2834":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:22746:3330":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:48360:3855":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:22911:2552":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:43693:3679":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:7931:2571":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:41476:3625":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:44902:3755":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:10906:2878":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:22395:4312":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:3406:253":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:43453:3669":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:40726:3576":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:1717:3196":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:44634:3725":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:22449:4312":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:234:226":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:53583:853":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:42209:3652":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:4190:3927":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:10026:2780":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:2469:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:41242:3618":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:13402:3227":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:2001:189":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:31467:196":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:42295:2858":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:31013:10080":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"0:116:2418":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:44162:3692":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:42951:2778":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:12539:2536":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:46012:3764":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:44706:3733":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:5043:3934":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:48237:3849":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:7922:166":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:2971:4334":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:46309:3776":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:42312:2810":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:2353:638":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:43987:2873":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:39939:214":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:42695:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:43961:2875":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:42303:2720":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:40863:3950":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:44071:3685":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:42965:2779":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:42364:3657":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:46725:3790":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:42191:3649":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:48067:3846":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:3013:4335":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:40699:3565":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:33860:4350":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:42229:194":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:10863:2861":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:44395:3704":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:48488:3863":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:44913:4550":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:21386:13282":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:0:480":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:22023:9603":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:47035:3805":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:48313:3851":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:34693:4355":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:8425:13500":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:40614:3565":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:3100:4354":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:43912:2856":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:3201:2569":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:48412:3859":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:3029:2535":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:2365:4313":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:22900:2538":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:40788:10038":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:53572:697":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:8381:4452":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:21371:13287":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:53566:1511":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:2727:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"0:0:2070":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:43293:2788":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:4202:3928":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:43218:10025":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:45042:207":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:40899:3587":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:42169:4465":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:46823:3792":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:4621:2793":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:3423:4370":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:47111:3807":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:40707:3574":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:53573:802":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:9651:721":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:41457:3624":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:44513:3711":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:53561:453":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:7351:4458":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:30930:2836":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:42539:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:53582:1644":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:10466:3217":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:45121:3761":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"0:134:1933":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:40772:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:46078:3767":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:11056:2866":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:46557:3784":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:47879:3844":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:10018:130":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:42428:2720":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"0:119:877":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:7415:9902":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:40759:3581":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:2859:3925":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:45132:3762":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:4464:221":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:48527:3864":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:39804:4372":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:22060:13295":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:13208:12523":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:44719:3739":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:10020:2777":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:44685:4544":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:42355:2809":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:21417:13290":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:46877:3794":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:4322:3929":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:39901:212":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:44032:2870":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:2521:135":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:40029:3436":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2516:201":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:47989:3845":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:22303:9685":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:10022:2778":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:43950:2868":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:44528:3718":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:44852:3750":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:43921:2854":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:11097:2863":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:53581:1647":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"0:113:2416":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:2566:2369":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:12341:3695":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:5794:3196":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:43272:138":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:46208:3772":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:11018:2865":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:4537:3201":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:10277:3310":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:46655:3787":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:40950:3594":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:43940:2867":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:48331:3852":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:4473:3931":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:9057:3937":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:53567:1544":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:33801:4346":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:31494:2565":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:44492:4543":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:22662:3323":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:40631:3567":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:22769:2537":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:2807:126":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:3159:4371":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:48450:3861":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}