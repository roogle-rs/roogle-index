{"root":"0:0:2802","crate_version":"0.9.0-alpha.2","includes_private":false,"index":{"0:115:2951":{"id":"0:115:2951","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u32]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:64:2706":{"id":"0:64:2706","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[248,4],"end":[250,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:3408:263-0:176:2630":{"id":"a:1:3408:263-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[307,0],"end":[348,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:76:1249","0:77:1000","0:78:3006","0:79:3009"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,42],"end":[244,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:35993:260","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:1:3408:263-0:159:2994":{"id":"a:1:3408:263-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[239,0],"end":[261,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:147:2643","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_from_rng","seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:147:2643","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:62:2671","0:63:2693","0:64:2706","0:65:2743","0:67:2747"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/blanket_impls.rs","begin":[25,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["unwrap_err"],"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"R"}}},"items":["0:23:150","0:24:2624","0:25:2625","0:26:2627"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:27":{"id":"0:27","crate_id":0,"name":null,"span":{"filename":"src/blanket_impls.rs","begin":[44,0],"end":[44,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryCryptoRng","id":"0:139:2637","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryCryptoRng","id":"0:139:2637","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"R"}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:148:2671":{"id":"0:148:2671","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[316,4],"end":[316,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\n# #[allow(dead_code)]\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3227:127","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:3146:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"type":null}}},"1:2862:3164":{"id":"1:2862:3164","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1:3194:1923":{"id":"1:3194:1923","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:175:508":{"id":"0:175:508","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[285,9],"end":[285,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:120:3112":{"id":"0:120:3112","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[157,0],"end":[161,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:14:2580":{"id":"0:14:2580","crate_id":0,"name":"next_u32","span":{"filename":"src/blanket_impls.rs","begin":[8,4],"end":[10,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:1:3190-0:159:2994":{"id":"b:1:3190-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3193:150","1:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2107":{"id":"0:179:2107","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[245,36],"end":[245,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"b:1:3179-0:176:2630":{"id":"b:1:3179-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:45862:5078-0:176:2630":{"id":"a:1:45862:5078-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:1:2918-0:159:2994":{"id":"b:1:2918-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2916:3364","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2920:12100"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:30:442":{"id":"0:30:442","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[538,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoBlockRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:131:2590","crate::block::BlockRngCore":"0:40:2959","`RngCore`":"0:128:2575"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:40:2959","0:44:2967","0:159:2994","0:167:3029"],"is_stripped":false}}},"0:138:2629":{"id":"0:138:2629","crate_id":0,"name":"unwrap_err","span":{"filename":"src/lib.rs","begin":[219,4],"end":[224,5]},"visibility":"default","docs":"Wrap RNG with the [`UnwrapErr`] wrapper.","links":{"`UnwrapErr`":"0:176:2630"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:117:3110":{"id":"0:117:3110","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[150,0],"end":[154,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:3443:3369-0:176:2630":{"id":"a:1:3443:3369-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[428,0],"end":[428,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:44:2967","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:132:2611","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,42],"end":[244,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"1:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:198:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:172:597":{"id":"0:172:597","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[292,4],"end":[292,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"a:1:36049:3304-0:159:2994":{"id":"a:1:36049:3304-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:123:3117":{"id":"0:123:3117","crate_id":0,"name":"impl_try_rng_from_rng_core","span":{"filename":"src/impls.rs","begin":[169,0],"end":[191,1]},"visibility":"public","docs":"Implement [`TryRngCore`][crate::TryRngCore] for a type implementing [`RngCore`].\n\nIdeally, `rand_core` would define blanket impls for this, but they conflict with blanket impls\nfor `&mut R` and `Box<R>`, so until specialziation is stabilized, implementer crates\nhave to implement `TryRngCore` directly.","links":{"`RngCore`":"0:128:2575","crate::TryRngCore":"0:133:2622"},"attrs":["#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! impl_try_rng_from_rng_core {\n    ($t:ty) => { ... };\n}"}},"a:1:35991:251-0:167:3029":{"id":"a:1:35991:251-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:52:3006":{"id":"0:52:3006","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[170,4],"end":[172,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:166:508":{"id":"0:166:508","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[118,9],"end":[118,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:76:1249":{"id":"0:76:1249","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[311,4],"end":[319,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:130:2583":{"id":"0:130:2583","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:120:3112","`impls::next_u64_via_u32`":"0:100:3059"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[247,0],"end":[259,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:142:2580","0:143:2583","0:144:2590"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:51:1000":{"id":"0:51:1000","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[163,4],"end":[165,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:3443:3369-0:159:2994":{"id":"a:1:3443:3369-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/blanket_impls.rs","begin":[6,0],"end":[21,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"R"}}},"items":["0:14:2580","0:15:2583","0:16:2590"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:185:60":{"id":"0:185:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[244,16],"end":[244,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:132:2611":{"id":"0:132:2611","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[192,0],"end":[192,31]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nImplementors of [`CryptoRng`] SHOULD also implement the [`TryCryptoRng`]\ntrait with the `Error` associated type being equal to [`Infallible`].\nIt can be done using the [`impl_try_crypto_rng_from_crypto_rng!`] macro.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore\n[`Infallible`]: core::convert::Infallible","links":{"`CryptoRng`":"0:132:2611","`RngCore`":"0:128:2575","`TryCryptoRng`":"0:139:2637","core::convert::Infallible":"1:35915:3120","`impl_try_crypto_rng_from_crypto_rng!`":"0:124:3126"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:17","0:69","0:94","0:145"]}}},"0:87:2671":{"id":"0:87:2671","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[405,4],"end":[405,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:147:2643","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}},"0:126:3140":{"id":"0:126:3140","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.\n\n# Panics\n\nIf `dst` has insufficient space (`4*dst.len() < src.len()`).","links":{},"attrs":["#[inline]","#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:53:3009":{"id":"0:53:3009","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[177,4],"end":[181,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:35991:251-0:159:2994":{"id":"a:1:35991:251-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:90:2743":{"id":"0:90:2743","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[418,4],"end":[420,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"impl_trait":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"impl RngCore","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:36049:3304-0:167:3029":{"id":"a:1:36049:3304-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:137:2627":{"id":"0:137:2627","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[216,4],"end":[216,76]},"visibility":"default","docs":"Fill `dest` entirely with random data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:15:2583":{"id":"0:15:2583","crate_id":0,"name":"next_u64","span":{"filename":"src/blanket_impls.rs","begin":[13,4],"end":[15,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:25:2625":{"id":"0:25:2625","crate_id":0,"name":"try_next_u64","span":{"filename":"src/blanket_impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:1:3190-0:176:2630":{"id":"b:1:3190-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3193:150","1:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3443:3369-0:167:3029":{"id":"a:1:3443:3369-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3443:3369","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[404,0],"end":[426,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:147:2643","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_from_rng","seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:147:2643","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:87:2671","0:88:2693","0:89:2706","0:90:2743","0:92:2747"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:56:2580":{"id":"0:56:2580","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[186,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:142:2580":{"id":"0:142:2580","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[248,4],"end":[250,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1:3181:878":{"id":"1:3181:878","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:42:2963":{"id":"0:42:2963","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[73,4],"end":[73,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3143:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:40:2959","args":null}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:3146:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:40:2959","args":null}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3227:127","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"type":null}}},"a:1:45861:5079-0:176:2630":{"id":"a:1:45861:5079-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:62:2671":{"id":"0:62:2671","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[240,4],"end":[240,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:147:2643","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}},"0:43:2965":{"id":"0:43:2965","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[76,4],"end":[76,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:40:2959","args":null}}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:57:2583":{"id":"0:57:2583","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:71":{"id":"0:71","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[296,0],"end":[305,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:73:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:2863-0:176:2630":{"id":"b:1:2863-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2865:12099"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3178:3378":{"id":"1:3178:3378","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3152:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/blanket_impls.rs","begin":[23,0],"end":[23,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:132:2611","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:132:2611","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"R"}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:4055-0:176:2630":{"id":"b:1:4055-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:149:2693":{"id":"0:149:2693","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:147:2643","args":null}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"b:1:4055-0:167:3029":{"id":"b:1:4055-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:182:847":{"id":"0:182:847","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:88:2693":{"id":"0:88:2693","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:147:2643","args":null}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:23:150":{"id":"0:23:150","crate_id":0,"name":"Error","span":{"filename":"src/blanket_impls.rs","begin":[26,4],"end":[26,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}}},"0:100:3059":{"id":"0:100:3059","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:134:150":{"id":"0:134:150","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[209,4],"end":[209,42]},"visibility":"default","docs":"The type returned in the event of a RNG error.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:11010:133","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"type":null}}},"a:1:36049:3304-0:176:2630":{"id":"a:1:36049:3304-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:36049:3304","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:201:921":{"id":"0:201:921","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[244,53],"end":[244,57]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"__H"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:11233:169","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:89:2706":{"id":"0:89:2706","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[413,4],"end":[415,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:182:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[261,0],"end":[261,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryCryptoRng","id":"0:139:2637","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:132:2611","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:2918-0:167:3029":{"id":"b:1:2918-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2916:3364","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2920:12100"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:45861:5079-0:167:3029":{"id":"a:1:45861:5079-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:102:3065":{"id":"0:102:3065","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[38,0],"end":[54,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:40:2959":{"id":"0:40:2959","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[67,0],"end":[77,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:30:442"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:41:185","0:42:2963","0:43:2965"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:1:45861:5079-0:159:2994":{"id":"a:1:45861:5079-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:45861:5079","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:1:2860-0:159:2994":{"id":"b:1:2860-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2862:3164"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3179-0:159:2994":{"id":"b:1:3179-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[263,0],"end":[263,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:44:2967","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:132:2611","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:159:2994":{"id":"0:159:2994","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[126,0],"end":[131,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] is called on a large array. These methods also handle\nthe bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] consume a whole number of `u32` values,\nconverting each `u32` to a byte slice in little-endian order. If the requested byte\nlength is not a multiple of 4, some bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes","links":{"`BlockRngCore`":"0:40:2959","`RngCore`":"0:128:2575","RngCore::next_u32":"0:129:2580","`SeedableRng`":"0:147:2643","`BlockRng64`":"0:167:3029","RngCore::fill_bytes":"0:131:2590","RngCore::next_u64":"0:130:2583","`BlockRngCore::generate`":"0:43:2965"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:163:597"],"has_stripped_fields":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:35991:251-0:159:2994","a:1:3408:263-0:159:2994","a:1:3443:3369-0:159:2994","a:1:36049:3304-0:159:2994","a:1:45861:5079-0:159:2994","a:1:45862:5078-0:159:2994","b:1:2860-0:159:2994","b:1:2863-0:159:2994","b:1:2918-0:159:2994","b:1:3175-0:159:2994","b:1:3179-0:159:2994","b:1:3185-0:159:2994","b:1:3190-0:159:2994","b:1:4055-0:159:2994","0:164","0:45","0:54","0:60","0:69"]}}},"b:1:3179-0:167:3029":{"id":"b:1:3179-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:92:2747":{"id":"0:92:2747","crate_id":0,"name":"try_from_rng","span":{"filename":"src/block.rs","begin":[423,4],"end":[425,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"S"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:125:1061":{"id":"0:125:1061","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[64,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:126:3140","0:127:2787"],"is_stripped":false}}},"0:59:2590":{"id":"0:59:2590","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[222,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:163:597":{"id":"0:163:597","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[130,4],"end":[130,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:167:3029":{"id":"0:167:3029","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[287,0],"end":[293,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] consumes a whole number of `u64` values. If the requested length\nis not a multiple of 8, some bytes will be discarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::next_u64":"0:130:2583","`BlockRngCore`":"0:40:2959","`RngCore`":"0:128:2575","RngCore::next_u32":"0:129:2580","`BlockRng`":"0:159:2994","RngCore::fill_bytes":"0:131:2590"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:172:597"],"has_stripped_fields":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":["0:74","a:1:35991:251-0:167:3029","a:1:3408:263-0:167:3029","a:1:3443:3369-0:167:3029","a:1:36049:3304-0:167:3029","a:1:45861:5079-0:167:3029","a:1:45862:5078-0:167:3029","b:1:2860-0:167:3029","b:1:2863-0:167:3029","b:1:2918-0:167:3029","b:1:3175-0:167:3029","b:1:3179-0:167:3029","b:1:3185-0:167:3029","b:1:3190-0:167:3029","b:1:4055-0:167:3029","0:173","0:71","0:80","0:85","0:94"]}}},"0:129:2580":{"id":"0:129:2580","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:117:3110"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"1:2865:12099":{"id":"1:2865:12099","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,16],"end":[244,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::default::Default","id":"1:3227:127","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3227:127","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:185:60"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:50:1249":{"id":"0:50:1249","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[148,4],"end":[155,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:65:2743":{"id":"0:65:2743","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[253,4],"end":[255,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"impl_trait":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"impl RngCore","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:44:2967":{"id":"0:44:2967","crate_id":0,"name":"CryptoBlockRng","span":{"filename":"src/block.rs","begin":[83,0],"end":[83,41]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information.","links":{"`CryptoRng`":"0:132:2611","`RngCore`":"0:128:2575"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"b:1:2860-0:176:2630":{"id":"b:1:2860-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2862:3164"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2860-0:167:3029":{"id":"b:1:2860-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2862:3164"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3175-0:176:2630":{"id":"b:1:3175-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3178:3378"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,32],"end":[244,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"1:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:198:739":{"id":"0:198:739","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[244,42],"end":[244,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:26:2627":{"id":"0:26:2627","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/blanket_impls.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:124:3126":{"id":"0:124:3126","crate_id":0,"name":"impl_try_crypto_rng_from_crypto_rng","span":{"filename":"src/impls.rs","begin":[203,0],"end":[215,1]},"visibility":"public","docs":"Implement [`TryCryptoRng`] and [`TryRngCore`] for a type implementing [`CryptoRng`].\n\nIdeally, `rand_core` would define blanket impls for this, but they conflict with blanket impls\nfor `&mut R` and `Box<R>`, so until specialziation is stabilized, implementer crates\nhave to implement `TryRngCore` and `TryCryptoRng` directly.\n\n[`TryCryptoRng`]: crate::TryCryptoRng\n[`TryRngCore`]: crate::TryRngCore\n[`CryptoRng`]: crate::CryptoRng","links":{"crate::TryRngCore":"0:133:2622","crate::CryptoRng":"0:132:2611","crate::TryCryptoRng":"0:139:2637"},"attrs":["#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! impl_try_crypto_rng_from_crypto_rng {\n    ($t:ty) => { ... };\n}"}},"0:0:2802":{"id":"0:0:2802","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[549,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`SeedableRng`":"0:147:2643","`RngCore`":"0:128:2575","`impls`":"0:96:2513","`le`":"0:125:1061"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:30:442","0:96:2513","0:125:1061","0:128:2575","0:132:2611","0:133:2622","0:139:2637","0:176:2630","0:147:2643","0:123:3117","0:124:3126"],"is_stripped":false}}},"0:96:2513":{"id":"0:96:2513","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[260,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:100:3059","0:102:3065","0:115:2951","0:116:2952","0:117:3110","0:120:3112"],"is_stripped":false}}},"1:3189:1925":{"id":"1:3189:1925","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:139:2637":{"id":"0:139:2637","crate_id":0,"name":"TryCryptoRng","span":{"filename":"src/lib.rs","begin":[240,0],"end":[240,37]},"visibility":"public","docs":"A marker trait used to indicate that a [`TryRngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information about cryptographically secure generators.","links":{"`TryRngCore`":"0:133:2622","`CryptoRng`":"0:132:2611"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:27"]}}},"0:47:847":{"id":"0:47:847","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[135,4],"end":[141,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:83:2583":{"id":"0:83:2583","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[371,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:155:2743":{"id":"0:155:2743","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[414,4],"end":[418,5]},"visibility":"default","docs":"Create a new PRNG seeded from an infallible `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"impl_trait":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"impl RngCore","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1:2920:12100":{"id":"1:2920:12100","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"is_mutable":true,"type":{"generic":"T"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:35991:251-0:176:2630":{"id":"a:1:35991:251-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1:3193:150":{"id":"1:3193:150","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"name":"Infallible","id":"1:35915:3120","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"0:73:847":{"id":"0:73:847","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[297,4],"end":[304,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[118,9],"end":[118,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:40:2959","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:166:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:188:508":{"id":"0:188:508","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[244,25],"end":[244,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:41:185":{"id":"0:41:185","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[69,4],"end":[69,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":null}}},"0:84:2590":{"id":"0:84:2590","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[384,4],"end":[401,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:147:2643":{"id":"0:147:2643","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[269,0],"end":[470,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:148:2671","0:149:2693","0:150:2706","0:155:2743","0:157:2747"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:60","0:85"]}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[184,0],"end":[237,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:56:2580","0:57:2583","0:59:2590"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:2918-0:176:2630":{"id":"b:1:2918-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2916:3364","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2920:12100"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:133:2622":{"id":"0:133:2622","crate_id":0,"name":"TryRngCore","span":{"filename":"src/lib.rs","begin":[207,0],"end":[234,1]},"visibility":"public","docs":"A potentially fallible version of [`RngCore`].\n\nThis trait is primarily used for IO-based generators such as [`OsRng`].\n\nMost of higher-level generic code in the `rand` crate is built on top\nof the the [`RngCore`] trait. Users can transform a fallible RNG\n(i.e. [`TryRngCore`] implementor) into an \"infallible\" (but potentially\npanicking) RNG (i.e. [`RngCore`] implementor) using the [`UnwrapErr`] wrapper.\n\n[`RngCore`] implementors also usually implement [`TryRngCore`] with the `Error`\nassociated type being equal to [`Infallible`][core::convert::Infallible].\nIn other words, users can use [`TryRngCore`] to generalize over fallible and\ninfallible RNGs.","links":{"`UnwrapErr`":"0:176:2630","`RngCore`":"0:128:2575","core::convert::Infallible":"1:35915:3120","`TryRngCore`":"0:133:2622"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:134:150","0:135:2624","0:136:2625","0:137:2627","0:138:2629"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:20"]}}},"a:1:45862:5078-0:167:3029":{"id":"a:1:45862:5078-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:128:2575":{"id":"0:128:2575","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[137,0],"end":[163,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nImplementors of [`RngCore`] SHOULD also implement the [`TryRngCore`]\ntrait with the `Error` associated type being equal to [`Infallible`].\nIt can be done using the [`impl_try_rng_from_rng_core!`] macro.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dst: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dst)\n    }\n}\n\nrand_core::impl_try_rng_from_rng_core!(CountingRng);\n```\n\n[`rand`]: https://docs.rs/rand\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`Infallible`]: core::convert::Infallible","links":{"RngCore::next_u32":"0:129:2580","`SeedableRng`":"0:147:2643","`RngCore`":"0:128:2575","`TryRngCore`":"0:133:2622","RngCore::fill_bytes":"0:131:2590","RngCore::next_u64":"0:130:2583","`CryptoRng`":"0:132:2611","core::convert::Infallible":"1:35915:3120","`SeedableRng::from_rng`":"0:155:2743","`impls`":"0:96:2513","`impl_try_rng_from_rng_core!`":"0:123:3117"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:129:2580","0:130:2583","0:131:2590"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:11","0:54","0:80","0:140"]}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,25],"end":[244,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:188:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1:4057:1938":{"id":"1:4057:1938","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:43492:3626","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[350,0],"end":[402,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:128:2575","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:82:2580","0:83:2583","0:84:2590"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:3185-0:159:2994":{"id":"b:1:3185-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3188:150","1:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:4055-0:159:2994":{"id":"b:1:4055-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67:2747":{"id":"0:67:2747","crate_id":0,"name":"try_from_rng","span":{"filename":"src/block.rs","begin":[258,4],"end":[260,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"S"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:131:2590":{"id":"0:131:2590","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,45]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`].\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:102:3065"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:77:1000":{"id":"0:77:1000","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[327,4],"end":[329,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:127:2787":{"id":"0:127:2787","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[35,0],"end":[40,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.\n\n# Panics\n\nIf `dst` has insufficient space (`8*dst.len() < src.len()`).","links":{},"attrs":["#[inline]","#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:176:2630":{"id":"0:176:2630","crate_id":0,"name":"UnwrapErr","span":{"filename":"src/lib.rs","begin":[245,0],"end":[245,43]},"visibility":"public","docs":"Wrapper around [`TryRngCore`] implementation which implements [`RngCore`]\nby panicking on potential errors.","links":{"`TryRngCore`":"0:133:2622","`RngCore`":"0:128:2575"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:179:2107"]},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":["a:1:35991:251-0:176:2630","a:1:3408:263-0:176:2630","a:1:3443:3369-0:176:2630","a:1:36049:3304-0:176:2630","a:1:45861:5079-0:176:2630","a:1:45862:5078-0:176:2630","b:1:2860-0:176:2630","b:1:2863-0:176:2630","b:1:2918-0:176:2630","b:1:3175-0:176:2630","b:1:3179-0:176:2630","b:1:3185-0:176:2630","b:1:3190-0:176:2630","b:1:4055-0:176:2630","0:180","0:183","0:186","0:189","0:191","0:194","0:196","0:199","0:140","0:145"]}}},"b:1:2863-0:167:3029":{"id":"b:1:2863-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2865:12099"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:78:3006":{"id":"0:78:3006","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[334,4],"end":[337,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,53],"end":[244,57]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"1:11225:165","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:11225:165","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:201:921"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:82:2580":{"id":"0:82:2580","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[352,4],"end":[368,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:116:2952":{"id":"0:116:2952","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[145,0],"end":[147,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u64]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:79:3009":{"id":"0:79:3009","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[342,4],"end":[347,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:1:3175-0:159:2994":{"id":"b:1:3175-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3178:3378"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3185-0:167:3029":{"id":"b:1:3185-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3188:150","1:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:136:2625":{"id":"0:136:2625","crate_id":0,"name":"try_next_u64","span":{"filename":"src/lib.rs","begin":[214,4],"end":[214,59]},"visibility":"default","docs":"Return the next random `u64`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[134,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:47:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:3190-0:167:3029":{"id":"b:1:3190-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3193:150","1:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:173":{"id":"0:173","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[285,9],"end":[285,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:40:2959","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:175:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:1:3408:263-0:167:3029":{"id":"a:1:3408:263-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:143:2583":{"id":"0:143:2583","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[252,4],"end":[254,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:24:2624":{"id":"0:24:2624","crate_id":0,"name":"try_next_u32","span":{"filename":"src/blanket_impls.rs","begin":[29,4],"end":[31,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:157:2747":{"id":"0:157:2747","crate_id":0,"name":"try_from_rng","span":{"filename":"src/lib.rs","begin":[423,4],"end":[427,5]},"visibility":"default","docs":"Create a new PRNG seeded from a potentially fallible `Rng`.\n\nSee [`from_rng`][SeedableRng::from_rng] docs for more information.","links":{"SeedableRng::from_rng":"0:155:2743"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,38],"end":[244,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"1:2957:147","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"TryRngCore","id":"0:133:2622","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2957:147","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:1:3175-0:167:3029":{"id":"b:1:3175-0:167:3029","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:167:3029","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3178:3378"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:16:2590":{"id":"0:16:2590","crate_id":0,"name":"fill_bytes","span":{"filename":"src/blanket_impls.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:1:2863-0:159:2994":{"id":"b:1:2863-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:2865:12099"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[144,0],"end":[182,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["0:50:1249","0:51:1000","0:52:3006","0:53:3009"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1:3188:150":{"id":"1:3188:150","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}}},"0:63:2693":{"id":"0:63:2693","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[243,4],"end":[245,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:147:2643","args":null}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:1:45862:5078-0:159:2994":{"id":"a:1:45862:5078-0:159:2994","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:40:2959","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:45862:5078","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:159:2994","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:135:2624":{"id":"0:135:2624","crate_id":0,"name":"try_next_u32","span":{"filename":"src/lib.rs","begin":[212,4],"end":[212,59]},"visibility":"default","docs":"Return the next random `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:46033:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:133:2622","args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:144:2590":{"id":"0:144:2590","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[256,4],"end":[258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:1:3185-0:176:2630":{"id":"b:1:3185-0:176:2630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"UnwrapErr","id":"0:176:2630","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"constraints":[]}}}},"items":["1:3188:150","1:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:150:2706":{"id":"0:150:2706","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[359,4],"end":[388,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:51301:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:50100:4108":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:57660:797":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:51638:4167":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:756:3615":{"crate_id":2,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"1:48771:4088":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:44552:3970":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:50478:4122":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:2184:3500":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:25633:15721":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"0:117:3110":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:48380:4072":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:12408:3837":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:48057:3851":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:50923:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:25224:3871":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:50856:4136":{"crate_id":1,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"1:10607:847":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:7982:5026":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:51470:4159":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:48520:4366":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:44605:3787":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:47887:3837":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:45587:4221":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:47987:4048":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:51153:4147":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:48403:4082":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:10954:3452":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:5024:3275":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:47582:4025":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:48390:4076":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:50545:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:26343:12114":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:57646:443":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:36081:118":{"crate_id":1,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"1:46164:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:45809:3389":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:4614:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:11020:219":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:44511:3774":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:50005:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:2286:4925":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:45968:223":{"crate_id":1,"path":["core","range","Range"],"kind":"struct"},"1:50235:4113":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:3712:4975":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11022:3457":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:48779:4090":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:26401:12117":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:43243:4970":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:9157:15241":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:48149:5146":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:47573:4024":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:51694:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:34371:3278":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:741:3614":{"crate_id":2,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"1:44204:3938":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:50896:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:4602:3760":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:12436:3839":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:48536:4370":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:46952:3464":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:47128:3542":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:50194:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:36752:4946":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:57647:1245":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:3866:4976":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:2364:201":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:51554:4163":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:48803:4093":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:45801:3827":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:3143:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:12906:3840":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:44151:3933":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:25089:15710":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:47783:3834":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:51112:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"0:125:1061":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"3:0:3230":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"0:40:2959":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:48841:4095":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:46618:3456":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:47735:3844":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:51247:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:48048:4052":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"0:0:2802":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:2892:13127":{"crate_id":1,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"1:26554:12852":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:47522:4023":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"4:561:3265":{"crate_id":4,"path":["zerocopy","ByteSlice"],"kind":"trait"},"1:49870:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:3149:175":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:46013:225":{"crate_id":1,"path":["core","range","RangeFrom"],"kind":"struct"},"1:50977:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:29666:286":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:36049:3304":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:44451:3960":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:45784:185":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:5077:3466":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:46127:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:50208:4112":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:47654:4032":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:12135:3827":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:51712:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"0:96:2513":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:46462:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:51424:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:46089:3389":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:44089:3756":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:9109:162":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:43279:4972":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:48853:4096":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:11433:13158":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:51328:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:50316:4116":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:25934:12852":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:11014:3454":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:25110:15713":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:4819:3465":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:10035:218":{"crate_id":1,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"1:48708:4372":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:42664:4969":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:57667:1969":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:50154:4110":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"4:369:3259":{"crate_id":4,"path":["zerocopy","Ref"],"kind":"struct"},"1:44987:3469":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:43340:226":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:47915:4045":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:12160:3828":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:45671:12147":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:10953:239":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:7004:3779":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:1966:4857":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:44596:3973":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:44586:3971":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:45992:227":{"crate_id":1,"path":["core","range","RangeInclusive"],"kind":"struct"},"1:46349:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:48421:3855":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:50653:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:51045:4143":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"0:176:2630":{"crate_id":0,"path":["rand_core","UnwrapErr"],"kind":"struct"},"1:48369:5147":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:8536:5065":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:25828:11895":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:3962:132":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:51496:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:50707:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:26668:3909":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:50086:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:34778:3242":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:26279:3875":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:43327:3923":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:26224:3874":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:51234:4150":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:48528:4368":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:25872:11896":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:50343:4117":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:50424:4120":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:49857:4099":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:37822:4960":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:3671:3301":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:26657:3908":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:50032:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:44520:3966":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:7198:3786":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"4:0:2803":{"crate_id":4,"path":["zerocopy"],"kind":"module"},"1:14457:3969":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:50167:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:50181:4111":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:36079:3372":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:50937:4139":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:37649:4959":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:48830:4094":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:4885:234":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:45705:5072":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:3227:127":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:48019:4049":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"0:115:2951":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:3495:4948":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:48713:163":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:45852:3484":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:37437:4952":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:2215:1445":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:5510:3767":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:43485:3927":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:51514:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:44482:3964":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:50518:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:27266:249":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:4637:4996":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:44125:3930":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:45861:5079":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:47611:4029":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:45546:3808":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:44360:3939":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:7876:3141":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:47724:4040":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:48304:3854":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:26463:3898":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:57659:780":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:50586:4126":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:2754:4909":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:47352:4361":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:51342:4154":{"crate_id":1,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"1:25135:15719":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:43355:223":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:57666:944":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:26169:3872":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:10784:3469":{"crate_id":1,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"1:51628:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:4053:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:48597:5157":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:50073:4107":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:48586:4085":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:14756:3869":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:50599:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:12422:3838":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:51058:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:50127:4109":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:51416:4156":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"4:630:3267":{"crate_id":4,"path":["zerocopy","_CastType"],"kind":"enum"},"1:40044:4964":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:25910:11897":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:3413:3276":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:36050:3373":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"4:197:16215":{"crate_id":4,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:44164:3934":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:2916:3364":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"1:46914:3463":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:51193:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:26309:3876":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2906:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:14415:3859":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:11268:3540":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:8656:134":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:8581:177":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:2738:711":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:50842:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:46847:3463":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:50910:4138":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"0:100:3059":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:47149:4017":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:57674:1508":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:44136:12142":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:8047:14684":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:51018:4142":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:36964:4949":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:8763:190":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:57675:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:3408:263":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:26443:4285":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:49816:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8331:4999":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:14734:284":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:50329:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:2988:207":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:13320:3842":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:13831:5132":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:35975:3259":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:48562:135":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:11225:165":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:48792:12372":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:12242:3832":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:44794:3792":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:25332:3871":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:45003:3797":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:4958:4281":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:57651:1400":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:47112:3543":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:47694:4036":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:12111:3825":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:26416:12118":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:36082:280":{"crate_id":1,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"1:51730:4171":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:50748:4132":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:13562:3850":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:3403:121":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:37995:4961":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:43415:227":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:51220:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:35993:260":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:4889:3763":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:49938:4102":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:10442:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:2854:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11012:3453":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"0:147:2643":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:57670:1963":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:13546:3849":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:44621:3974":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:35961:3916":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:43492:3626":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:46837:4352":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:49830:4098":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:2752:4908":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:44174:3935":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:35982:3918":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:50532:4124":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:44543:3778":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:11016:3455":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:3642:128":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:26013:4908":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:51602:4165":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"4:363:3258":{"crate_id":4,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:51004:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:46312:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3123:3530":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:11005:123":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:10447:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:46081:3827":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:37303:4955":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:50883:4137":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:47684:4035":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:45765:206":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:3507:4956":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"0:116:2952":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:3680:154":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:51031:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8590:3303":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:50802:4134":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:34392:3463":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:45958:4004":{"crate_id":1,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"1:48355:4069":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:43395:228":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:51261:4151":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:51460:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:25999:11899":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:25123:15716":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:50505:4123":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:26089:11890":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:44312:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:3803:224":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:49803:4097":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11024:3458":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:44770:3978":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:47643:3957":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:50046:4106":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:35992:253":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:26294:4213":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:38168:4963":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:44284:3942":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"2:0:539":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:48544:4220":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:3152:157":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:11571:13163":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"1:47711:4037":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:57668:1951":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:0:597":{"crate_id":1,"path":["core"],"kind":"module"},"1:44380:3955":{"crate_id":1,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"1:13820:3817":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:47674:4034":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:3480:4945":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:44370:3949":{"crate_id":1,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"1:4771:3762":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:8570:158":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:51722:2213":{"crate_id":1,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"4:322:3256":{"crate_id":4,"path":["zerocopy","FromZeroes"],"kind":"trait"},"1:47815:4043":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:6363:3775":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2177:710":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:57658:777":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"1:26450:3897":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"0:120:3112":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:2287:4897":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:51610:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:49951:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:51288:4152":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:57653:1791":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:2489:3620":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:7209:4282":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:12394:3836":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:51355:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:43455:4977":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:50397:4119":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:45900:4002":{"crate_id":1,"path":["core","range","iter","IterRange"],"kind":"struct"},"1:14711:119":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:46386:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:26365:3884":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:42030:4967":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:26701:3912":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:50788:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:10634:4218":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:26474:4750":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:44473:3963":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:48029:4050":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:14554:217":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:13890:5140":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:6476:3777":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:26042:12852":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:25153:11816":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:45026:3802":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:25948:11898":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:10972:156":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:57664:957":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:44442:3959":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"0:126:3140":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:44299:3944":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:46103:208":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:57652:356":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:45533:3806":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:50694:4130":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:51544:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:50289:4115":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:50140:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8098:5056":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:50869:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:46238:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:4160:13129":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:50775:4133":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:47622:4030":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:48212:4066":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:50019:4105":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:46876:12277":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:50275:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:14048:123":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:4894:3764":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:26381:12116":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:46906:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:48516:4365":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:13837:5131":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:5015:5006":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:26624:3905":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:51369:4155":{"crate_id":1,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"1:51072:4144":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:4724:3761":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:51506:4161":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:4:1335":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:50964:4140":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:13842:5130":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:45559:5071":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:50559:4125":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:50221:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:918:202":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:26712:3913":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:50815:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:50356:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:46033:239":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:3282:3623":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:26679:3910":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:48064:3938":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:5552:1039":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:26613:3904":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:4508:4989":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:44994:3979":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:45745:3812":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:3002:3056":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:25600:11818":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:3401:279":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:25735:12852":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:50451:4121":{"crate_id":1,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"1:57673:2033":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:48073:3756":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:14527:15328":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:49965:4103":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:42085:4968":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4738:13155":{"crate_id":1,"path":["core","cell","lazy","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"1:51676:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:48039:4051":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:57649:1991":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:50383:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:44980:3796":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:3887:4978":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:50950:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:25081:3242":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:26646:3907":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:44291:3943":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:44188:3937":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"0:139:2637":{"crate_id":0,"path":["rand_core","TryCryptoRng"],"kind":"trait"},"1:25151:12852":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:3443:3369":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:49884:4100":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:48508:4363":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:51315:4153":{"crate_id":1,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"1:44635:3789":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:57654:1827":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:45862:5078":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:44534:3969":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:45727:3809":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:26635:3906":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:46864:4360":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:44418:3956":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:43676:3365":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:5046:3375":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:3624:4971":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:51442:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:50302:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:51704:4170":{"crate_id":1,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"1:47969:4047":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:47365:4362":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4656:4997":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:43435:229":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:44196:3756":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:37236:4951":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"0:133:2622":{"crate_id":0,"path":["rand_core","TryRngCore"],"kind":"trait"},"1:2857:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:3881:159":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"4:560:17584":{"crate_id":4,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:4260:3389":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:50761:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:57663:951":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:47591:4027":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:49911:4101":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:44322:3945":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:2295:3616":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:43377:225":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:2952:213":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:11010:133":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:45940:4003":{"crate_id":1,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:26084:11892":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:50113:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:915:4751":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:34751:208":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:47369:3824":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:5458:13118":{"crate_id":1,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"1:34339:3277":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:51452:4158":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:51572:4164":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:15:3209":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:51562:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:57672:1028":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:43323:4974":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:14579:3864":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:51274:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:26591:3902":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:353:239":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:48270:4068":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:51536:4162":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"4:356:3057":{"crate_id":4,"path":["zerocopy","AsBytes"],"kind":"trait"},"1:49897:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:3910:14757":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:14432:3862":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:44348:3948":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:34104:4696":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:51488:4160":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:26690:3911":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:35915:3120":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:3876:270":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:13306:5110":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:47167:4022":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:49843:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4:326:3257":{"crate_id":4,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:47765:3828":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:48185:4062":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:44492:146":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:47933:4046":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:13771:4749":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:8711:3302":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:46892:12278":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:25320:12852":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:45018:3800":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:49978:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:57655:1928":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:50262:4114":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:3146:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:26357:3883":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:49992:4104":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:3238:150":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:2957:147":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:50370:4118":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:45892:3818":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:44573:3785":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:50491:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:48738:220":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:10629:15242":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:11708:13164":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:49924:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:25962:4908":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"0:30:442":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:37504:4954":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:47159:4021":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:50437:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:25960:15948":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:51382:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:3660:4973":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:8271:3795":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"0:123:3117":{"crate_id":0,"path":["rand_core","impl_try_rng_from_rng_core"],"kind":"macro"},"1:51434:4157":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:3159:273":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:5491:465":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:46425:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:44095:3929":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:44333:5048":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:46597:3454":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:57662:969":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:50734:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:3450:3371":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:12353:3835":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"0:132:2611":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:46275:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:50640:4128":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:50572:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:9765:3815":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"1:11273:3541":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:4590:3759":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:51166:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:47741:4041":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:50626:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:44250:3941":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:57669:1957":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:12315:3834":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:48170:4055":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:44564:3784":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:45793:3825":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:50059:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:48716:176":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:44425:3957":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:7981:5025":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:47120:4011":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:11923:12852":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:51207:4149":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:48524:4367":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:46604:3453":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:46931:150":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:3485:4950":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:50680:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8532:5066":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:50829:4135":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:14859:5183":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:26332:3881":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:50667:4129":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:46073:3825":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:48199:4065":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:46499:3821":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:34404:12126":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:48730:240":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:11233:169":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:44780:3791":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:3893:4980":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"0:124:3126":{"crate_id":0,"path":["rand_core","impl_try_crypto_rng_from_crypto_rng"],"kind":"macro"},"1:48532:4369":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"0:102:3065":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"0:159:2994":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:51478:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:51126:4146":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:13523:3848":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:44211:5022":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:50721:4131":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:47665:4033":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:3565:4962":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:25212:11815":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:167:3029":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:48540:4371":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:35968:3917":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"0:44:2967":{"crate_id":0,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"1:9918:3817":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:48082:3937":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:47137:169":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:2284:4924":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:3677:153":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:44502:3770":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:8416:3798":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"4:597:3296":{"crate_id":4,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"4:565:3266":{"crate_id":4,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"1:12280:3833":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:11936:254":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:47869:3836":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:43503:3928":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:48512:4364":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:7204:4284":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:25125:15718":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:51646:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:45511:182":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:47601:4028":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"4:87:3292":{"crate_id":4,"path":["zerocopy","util","ptr","Ptr"],"kind":"struct"},"1:51620:4166":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:25206:11812":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:3510:4957":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:51099:4145":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:57648:504":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:47751:3939":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:47833:4044":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:25595:12852":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:37370:4953":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:26602:3903":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"1:50410:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:57661:775":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"1:13600:3831":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:12939:3841":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:9802:3816":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:36540:4947":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:9112:5024":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"0:128:2575":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:51668:4168":{"crate_id":1,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"1:45693:3994":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:13486:3845":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:25204:12852":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:25099:15710":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:51580:4373":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:2091:4989":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:3155:274":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:45821:3483":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:48720:232":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:11564:13160":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"0:127:2787":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"1:50613:4127":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:6285:4989":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:46201:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:34377:3503":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:41920:4965":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:44464:3961":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:4968:3259":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:50464:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:3515:4958":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:45009:3980":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:12203:3831":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:2994:214":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:57665:963":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:3683:155":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:25330:11813":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:25112:15715":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:3925:115":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:46611:3455":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:48813:192":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:35957:3915":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:50248:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:26056:11891":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:11018:3456":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:51085:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:51180:4148":{"crate_id":1,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"1:57671:1945":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:3655:3291":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:50991:4141":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:25737:11814":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:25622:3870":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:51139:4373":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:44645:3975":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:51686:4169":{"crate_id":1,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"1:9118:5064":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:41975:4966":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:3122:12852":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:35991:251":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:45883:3482":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"zerocopy","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":34}