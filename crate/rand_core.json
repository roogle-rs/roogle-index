{"root":"0:0:2607","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"0:151:2830":{"id":"0:151:2830","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[290,0],"end":[296,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:119:2413","`BlockRngCore`":"0:15:2758","`RngCore`":"0:117:2405","RngCore::next_u32":"0:118:2410","RngCore::try_fill_bytes":"0:121:2435","`BlockRng`":"0:143:2794","RngCore::fill_bytes":"0:120:2424"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:156:567"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:3206:246-0:151:2830","a:1:3241:4742-0:151:2830","a:1:32385:236-0:151:2830","a:1:32444:3192-0:151:2830","a:1:42248:4887-0:151:2830","a:1:42247:4888-0:151:2830","b:1:2710-0:151:2830","b:1:2998-0:151:2830","b:1:2993-0:151:2830","b:1:2987-0:151:2830","b:1:2983-0:151:2830","b:1:2713-0:151:2830","b:1:3822-0:151:2830","0:67","0:54","0:60","0:45","0:157"]}}},"b:1:2713-0:72:137":{"id":"b:1:2713-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2715:10306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2862","0:76:2869","0:77:2884","0:78:2856"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2758","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:150:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:91:2913":{"id":"0:91:2913","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:4-0:72:137":{"id":"0:4-0:72:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[45,0],"end":[45,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"error::Error","name":"Error","id":"0:72:137","glob":false}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[136,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:22:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[413,0],"end":[430,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:62:2489","0:63:2511","0:64:2524","0:65:2561"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:136:2410":{"id":"0:136:2410","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[402,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2511":{"id":"0:125:2511","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[295,4],"end":[295,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:159:479":{"id":"0:159:479","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2997:1821":{"id":"1:2997:1821","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:2413":{"id":"0:32:2413","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[199,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2715:10306":{"id":"1:2715:10306","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:808":{"id":"0:47:808","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[300,4],"end":[307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:838":{"id":"0:84:838","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[152,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["code",{"resolved_path":{"name":"NonZeroU32","id":"1:23390:2851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:808":{"id":"0:80:808","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[117,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[400,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":["0:136:2410","0:137:2413","0:138:2424","0:139:2435"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2987-0:72:137":{"id":"b:1:2987-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:2413":{"id":"0:137:2413","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,0],"end":[480,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:122:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:52:2806":{"id":"0:52:2806","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[337,4],"end":[340,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17:2762":{"id":"0:17:2762","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[73,4],"end":[73,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2951:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2758","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2954:76","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2758","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3035:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:38:2489":{"id":"0:38:2489","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[246,4],"end":[246,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:58:2424":{"id":"0:58:2424","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[387,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:567":{"id":"0:147:567","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[132,4],"end":[132,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:59:2435":{"id":"0:59:2435","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[407,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32385:236-0:151:2830":{"id":"a:1:32385:236-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2983-0:143:2794":{"id":"b:1:2983-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2986:2874"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:2809":{"id":"0:53:2809","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3001:137":{"id":"1:3001:137","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32309:4731","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:62:2489":{"id":"0:62:2489","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[414,4],"end":[414,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"a:1:3241:4742-0:72:137":{"id":"a:1:3241:4742-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:31:2410":{"id":"0:31:2410","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[188,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2758","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:159:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:26:947":{"id":"0:26:947","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:2862":{"id":"0:75:2862","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[133,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2998-0:143:2794":{"id":"b:1:2998-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3001:137","1:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2983-0:151:2830":{"id":"b:1:2983-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2986:2874"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:2750":{"id":"0:106:2750","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u32]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2511":{"id":"0:39:2511","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:16:172":{"id":"0:16:172","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[69,4],"end":[69,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"1:2996:137":{"id":"1:2996:137","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:1:2713-0:143:2794":{"id":"b:1:2713-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2715:10306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:107:2751":{"id":"0:107:2751","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[145,0],"end":[147,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u64]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:2869":{"id":"0:76:2869","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:75:2862"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:93:2919":{"id":"0:93:2919","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[38,0],"end":[54,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[264,0],"end":[264,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3241:4742-0:151:2830":{"id":"a:1:3241:4742-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:25:1187":{"id":"0:25:1187","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[150,4],"end":[157,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[245,0],"end":[262,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:38:2489","0:39:2511","0:40:2524","0:41:2561"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:2794":{"id":"0:143:2794","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[128,0],"end":[133,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:15:2758","`RngCore`":"0:117:2405","RngCore::next_u32":"0:118:2410","`SeedableRng`":"0:123:2461","`BlockRng64`":"0:151:2830","RngCore::fill_bytes":"0:120:2424","RngCore::next_u64":"0:119:2413","`BlockRngCore::generate`":"0:18:2764","RngCore::try_fill_bytes":"0:121:2435"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:147:567"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:23","a:1:3206:246-0:143:2794","a:1:3241:4742-0:143:2794","a:1:32385:236-0:143:2794","a:1:32444:3192-0:143:2794","a:1:42248:4887-0:143:2794","a:1:42247:4888-0:143:2794","b:1:2710-0:143:2794","b:1:2998-0:143:2794","b:1:2993-0:143:2794","b:1:2987-0:143:2794","b:1:2983-0:143:2794","b:1:2713-0:143:2794","b:1:3822-0:143:2794","0:36","0:20","0:43","0:29","0:148"]}}},"b:1:2998-0:151:2830":{"id":"b:1:2998-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3001:137","1:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[432,0],"end":[432,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:2592":{"id":"0:116:2592","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32444:3192-0:151:2830":{"id":"a:1:32444:3192-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2987-0:151:2830":{"id":"b:1:2987-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2986:2874":{"id":"1:2986:2874","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2960:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2987-0:143:2794":{"id":"b:1:2987-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:2561":{"id":"0:65:2561","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2435":{"id":"0:121:2435","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[181,4],"end":[181,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:120:2424"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[186,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:31:2410","0:32:2413","0:34:2424","0:35:2435"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2607":{"id":"0:0:2607","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[531,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:114:1004","`SeedableRng`":"0:123:2461","`RngCore`":"0:117:2405","`impls`":"0:85:2343","`Error`":"0:72:137"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:418","0:85:2343","0:114:1004","0:4-0:72:137","0:117:2405","0:122:2458","0:123:2461"],"is_stripped":false}}},"b:1:3822-0:151:2830":{"id":"b:1:3822-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32385:236-0:72:137":{"id":"a:1:32385:236-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:2405":{"id":"0:117:2405","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[139,0],"end":[189,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:118:2410","`SeedableRng`":"0:123:2461","RngCore::fill_bytes":"0:120:2424","RngCore::next_u64":"0:119:2413","`CryptoRng`":"0:122:2458","RngCore::try_fill_bytes":"0:121:2435","`SeedableRng::from_rng`":"0:131:2561","`impls`":"0:85:2343"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:118:2410","0:119:2413","0:120:2424","0:121:2435"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:54","0:29","0:133"]}}},"1:3824:1834":{"id":"1:3824:1834","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39868:3740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2461":{"id":"0:123:2461","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[221,0],"end":[395,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:124:2489","0:125:2511","0:126:2524","0:131:2561"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:36","0:60"]}}},"0:15:2758":{"id":"0:15:2758","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[67,0],"end":[77,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:5:418"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:16:172","0:17:2762","0:18:2764"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:1:2713-0:151:2830":{"id":"b:1:2713-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2715:10306"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:85:2343":{"id":"0:85:2343","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[206,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:91:2913","0:93:2919","0:106:2750","0:107:2751","0:108:2964","0:111:2966"],"is_stripped":false}}},"a:1:32444:3192-0:143:2794":{"id":"a:1:32444:3192-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:50:1187":{"id":"0:50:1187","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[314,4],"end":[322,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:947":{"id":"0:51:947","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[330,4],"end":[332,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2710-0:151:2830":{"id":"b:1:2710-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2712:2999"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2710-0:143:2794":{"id":"b:1:2710-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2712:2999"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56:2410":{"id":"0:56:2410","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[355,4],"end":[371,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2809":{"id":"0:28:2809","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[179,4],"end":[183,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2712:2999":{"id":"1:2712:2999","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2993-0:143:2794":{"id":"b:1:2993-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2996:137","1:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41:2561":{"id":"0:41:2561","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[259,4],"end":[261,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3206:246-0:151:2830":{"id":"a:1:3206:246-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:5:418":{"id":"0:5:418","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[540,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoBlockRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:120:2424","crate::block::BlockRngCore":"0:15:2758","`RngCore`":"0:117:2405"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:15:2758","0:19:2766","0:143:2794","0:151:2830"],"is_stripped":false}}},"0:77:2884":{"id":"0:77:2884","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[85,4],"end":[96,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42153:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2993-0:151:2830":{"id":"b:1:2993-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2996:137","1:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:2489":{"id":"0:124:2489","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[268,4],"end":[268,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\n# #[allow(dead_code)]\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3035:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2954:76","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"b:1:3822-0:72:137":{"id":"b:1:3822-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:120:2424":{"id":"0:120:2424","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:93:2919","`RngCore::try_fill_bytes`":"0:121:2435"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"1:3002:1819":{"id":"1:3002:1819","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[146,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:25:1187","0:26:947","0:27:2806","0:28:2809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3206:246-0:143:2794":{"id":"a:1:3206:246-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42248:4887-0:143:2794":{"id":"a:1:42248:4887-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[353,0],"end":[411,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:56:2410","0:57:2413","0:58:2424","0:59:2435"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:19:2766":{"id":"0:19:2766","crate_id":0,"name":"CryptoBlockRng","span":{"filename":"src/block.rs","begin":[83,0],"end":[83,42]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information.","links":{"`CryptoRng`":"0:122:2458","`RngCore`":"0:117:2405"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:150:479":{"id":"0:150:479","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42248:4887-0:72:137":{"id":"a:1:42248:4887-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108:2964":{"id":"0:108:2964","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[150,0],"end":[154,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2435":{"id":"0:35:2435","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[239,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:567":{"id":"0:156:567","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[295,4],"end":[295,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:64:2524":{"id":"0:64:2524","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2983-0:72:137":{"id":"b:1:2983-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2986:2874"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:78:2856":{"id":"0:78:2856","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[104,4],"end":[113,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZeroU32","id":"1:23390:2851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3241:4742-0:143:2794":{"id":"a:1:3241:4742-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3241:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:138:2424":{"id":"0:138:2424","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42247:4888-0:72:137":{"id":"a:1:42247:4888-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:22:808":{"id":"0:22:808","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[137,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2978":{"id":"0:115:2978","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[16,0],"end":[21,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:137":{"id":"0:72:137","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:1:3206:246-0:72:137","a:1:3241:4742-0:72:137","a:1:32385:236-0:72:137","a:1:32444:3192-0:72:137","a:1:42248:4887-0:72:137","a:1:42247:4888-0:72:137","b:1:2710-0:72:137","b:1:2998-0:72:137","b:1:2993-0:72:137","b:1:2987-0:72:137","b:1:2983-0:72:137","b:1:2713-0:72:137","b:1:3822-0:72:137","0:83","0:81","0:79"]}}},"0:18:2764":{"id":"0:18:2764","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[76,4],"end":[76,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2758","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:32444:3192-0:72:137":{"id":"a:1:32444:3192-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32444:3192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZero","id":"1:821:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[299,0],"end":[308,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:47:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3822-0:143:2794":{"id":"b:1:3822-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2993-0:72:137":{"id":"b:1:2993-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2996:137","1:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34:2424":{"id":"0:34:2424","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[224,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3206:246-0:72:137":{"id":"a:1:3206:246-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:122:2458":{"id":"0:122:2458","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[213,0],"end":[213,31]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"`RngCore`":"0:117:2405"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:67","0:43","0:140"]}}},"b:1:2710-0:72:137":{"id":"b:1:2710-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2712:2999"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42247:4888-0:151:2830":{"id":"a:1:42247:4888-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2998-0:72:137":{"id":"b:1:2998-0:72:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3001:137","1:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:114:1004":{"id":"0:114:1004","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[54,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:115:2978","0:116:2592"],"is_stripped":false}}},"0:118:2410":{"id":"0:118:2410","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:108:2964"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:126:2524":{"id":"0:126:2524","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[311,4],"end":[340,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42247:4888-0:143:2794":{"id":"a:1:42247:4888-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42247:4888","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:82:808":{"id":"0:82:808","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[134,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:2511":{"id":"0:63:2511","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2461","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42248:4887-0:151:2830":{"id":"a:1:42248:4887-0:151:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42248:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:57:2413":{"id":"0:57:2413","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[374,4],"end":[384,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[116,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[310,0],"end":[351,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:50:1187","0:51:947","0:52:2806","0:53:2809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2989:838":{"id":"1:2989:838","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2413":{"id":"0:119:2413","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[152,4],"end":[152,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:111:2966","`impls::next_u64_via_u32`":"0:91:2913"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:139:2435":{"id":"0:139:2435","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32385:236-0:143:2794":{"id":"a:1:32385:236-0:143:2794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2758","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2794","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:27:2806":{"id":"0:27:2806","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2966":{"id":"0:111:2966","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[157,0],"end":[161,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32386:2439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:2524":{"id":"0:40:2524","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[254,4],"end":[256,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2561":{"id":"0:131:2561","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[366,4],"end":[370,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"4:3552:14191":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:44643:4049":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:44202:4007":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:43859:3606":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"0:91:2913":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:47200:4189":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:43951:3609":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:44156:4004":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:47139:4184":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:11237:3597":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:23099:3100":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:4843:4814":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"4:3587:14509":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"1:50942:739":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"1:46019:4085":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:40665:3885":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:44326:4015":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:44298:4012":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"4:796:3169":{"crate_id":4,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"1:42872:3403":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:3267:4755":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:40915:3906":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:22797:3616":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:46484:4132":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"4:544:2911":{"crate_id":4,"path":["zerocopy","NoCell"],"kind":"trait"},"1:3206:246":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:3287:4777":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:22850:3618":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:12483:4289":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:40528:3876":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"4:122:3155":{"crate_id":4,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:8282:164":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:10603:156":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:43404:156":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:42531:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:23201:3654":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:3427:3151":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:8050:4807":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:41931:3940":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:40729:3881":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:43434:3985":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:46123:4099":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:41893:169":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:44452:4028":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"4:3666:3136":{"crate_id":4,"path":["zerocopy","CastType"],"kind":"enum"},"1:32476:114":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:40883:3901":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:44531:4034":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:5358:985":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:43831:3603":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:2140:4723":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:12912:3084":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:44020:3881":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:41017:3918":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:45998:4084":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:42886:3406":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:6764:3577":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:32916:4754":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:44184:4006":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:22717:10122":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:39699:4778":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:22572:10130":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:11280:3601":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:42767:4280":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"0:107:2751":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:6143:3573":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"0:93:2919":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:22934:3625":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:44333:3880":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:43379:3976":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:44661:4052":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:46883:4174":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:3087:4265":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:22239:10405":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:47238:4191":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"4:811:3170":{"crate_id":4,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"1:36420:4768":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:40864:133":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:8238:4873":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:42453:86":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:50948:1864":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:44609:4984":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:44466:4031":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:40906:3905":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:43627:3987":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:44913:13256":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:34371:4765":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:50939:741":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"1:32351:4299":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:3820:70":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:44416:4983":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"0:117:2405":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:44052:3602":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:3653:146":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:45867:4070":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:33813:4759":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:2044:3457":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:50950:1852":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:50952:1840":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:44308:4013":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:43105:3966":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:42334:4281":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:9518:4278":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:39716:212":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:22957:3085":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:13610:4294":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:23190:3653":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:38406:4771":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:23006:10446":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:30787:3413":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:30766:3150":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"4:587:2910":{"crate_id":4,"path":["zerocopy","IntoBytes"],"kind":"trait"},"1:46928:4175":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:1831:4657":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:44317:4014":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:22205:10047":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:23245:3658":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:8737:149":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:42059:10756":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:3927:10379":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:2142:4724":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:32385:236":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:2954:76":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:40686:106":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:6953:3585":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:11471:4003":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:22534:10129":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"0:108:2964":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:46613:4137":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"4:553:3124":{"crate_id":4,"path":["zerocopy","FromZeros"],"kind":"trait"},"1:46144:4100":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:39040:4773":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3484:4779":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:13026:4977":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:7767:12430":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:44900:4060":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:21732:10416":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:2149:3558":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:45984:4083":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:44351:3879":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:50949:1846":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:2951:77":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:2931:4551":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:6959:3584":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:47148:4185":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:43416:3980":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:45884:4073":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"4:1617:3174":{"crate_id":4,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:2037:675":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:32376:3727":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:41352:3925":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:50954:1924":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:41381:3929":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:47031:4178":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:40767:4303":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:40854:3897":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:45852:4069":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:40472:3872":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:4477:4804":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:23730:235":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:23179:3483":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:233:225":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:43144:10476":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:10595:152":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:2604:4707":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:46094:4090":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:8234:4874":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:23278:3661":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:44837:163":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:12653:3997":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"4:3657:3138":{"crate_id":4,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"1:43426:3984":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:23267:3660":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:40757:3567":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:21676:10413":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:40823:3893":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:11212:4281":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:21802:10365":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:46080:4089":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:1961:4797":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:46275:4107":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:2726:112":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:21930:3614":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:5278:10398":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:47223:4190":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:10026:13085":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:2590:676":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:11430:4284":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:44342:3871":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:40054:4732":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:46634:4138":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:21804:10041":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"4:1408:3173":{"crate_id":4,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"1:44851:226":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:44238:4009":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:21718:10411":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:46243:4105":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:43181:3413":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"4:757:3132":{"crate_id":4,"path":["zerocopy","ByteSlice"],"kind":"trait"},"1:4786:3566":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:23075:3099":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:41166:3923":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:4852:3146":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:10394:3407":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:40717:3890":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:10386:3404":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:41390:3931":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:9839:84":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:10390:3406":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:12467:4921":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:39703:3734":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:39811:215":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:2930:10365":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:22712:10124":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:2606:4708":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:44892:4322":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:41142:3921":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:50947:892":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:44720:4994":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"4:762:3134":{"crate_id":4,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"1:22968:10755":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:22625:10131":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:46973:4176":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"4:0:2608":{"crate_id":4,"path":["zerocopy"],"kind":"module"},"1:42879:3405":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:44934:179":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"4:3601:3162":{"crate_id":4,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"1:39791:213":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:42081:3955":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:44288:4011":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:32474:4658":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:43941:4320":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:30772:3461":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:3693:4787":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:30734:3149":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:39731:209":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:12031:4288":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:21749:10365":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:42248:4887":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"4:32:3163":{"crate_id":4,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"1:3282:4776":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:26130:266":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:41975:3948":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:31145:195":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"0:116:2592":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"1:3678:13129":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:43993:3993":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:43160:10444":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:42237:3434":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"4:1183:3172":{"crate_id":4,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:22200:10365":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:3659:4782":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:10852:10428":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:46679:4139":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:47185:4188":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:50927:419":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:10384:3403":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:44859:206":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:39881:3742":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"0:15:2758":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:50946:911":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:44004:3994":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:8740:4833":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:23212:3655":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:10171:3423":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:10345:143":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:21928:10042":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:10754:4935":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:40513:10466":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:46501:4133":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"0:5:418":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:10643:3594":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:46336:4110":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11357:4283":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:12978:4967":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:41007:3916":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:11513:4286":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:22639:4707":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:4722:4271":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:33612:4758":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:11188:3587":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:33746:4760":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:11485:4004":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"4:3594:14192":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"1:21701:10409":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:15:2891":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:3648:253":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:22684:10123":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:12690:4002":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:22918:3620":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:40794:3607":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:22990:3632":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:46307:4109":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:39655:4786":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:42115:3956":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:3575:210":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:7597:2979":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:47276:4193":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:34025:4763":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:47102:4181":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:30798:10456":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:43932:3608":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:21810:10044":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:3252:4752":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:50943:917":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:46226:4104":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:43619:3986":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:46575:4135":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:7818:4862":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:22670:10365":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:22452:10127":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:2967:256":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:40892:3902":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:44595:4036":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"0:122:2458":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:44102:4001":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:12767:3601":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:13633:3905":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:4354:4797":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:40570:3871":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:21751:10045":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:40624:3883":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:3432:4774":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:40578:3880":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:46051:4087":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:22586:4707":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:41359:3926":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:10005:808":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:4430:4267":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:42342:3346":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"0:111:2966":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:40968:3912":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:13725:204":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:23390:2851":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"type_alias"},"1:43132:3974":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:8784:13084":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"4:2780:3179":{"crate_id":4,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:10388:3405":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:7702:4834":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:2796:194":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:10638:4913":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:46290:4108":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:10392:205":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:4564:4269":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:50933:334":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:5257:437":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:13593:4291":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:46161:4101":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:40814:4305":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:8291:3191":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:42286:225":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:3199:4741":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:40502:3873":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:46463:4131":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:2337:3562":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:11499:4285":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:13750:4295":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:38296:4769":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:42375:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:46546:4134":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"4:942:3171":{"crate_id":4,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"1:45952:4081":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:33880:4761":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:23120:10365":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:4717:4270":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:32386:2439":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:9844:91":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:11031:10365":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:32355:4300":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:40993:3915":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:11041:238":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:43780:4316":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3035:123":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:9407:4277":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:47002:4177":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:23026:10448":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:44084:4000":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:42093:4882":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:4496:4805":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:4796:3127":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:32309:4731":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"4:764:3135":{"crate_id":4,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"1:4713:220":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:4442:4268":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:3638:4781":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:10377:119":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:44685:130":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:3665:4784":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:8271:145":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:42181:3587":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:21703:10419":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:43880:3988":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:22903:3619":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:33128:4753":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:40551:3878":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:8373:3190":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:43980:3990":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:21918:10365":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:46176:4102":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:23234:3657":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"0:106:2750":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:42189:4281":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:3449:140":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:32369:3127":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:4905:3416":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:46374:4112":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:4:1265":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:42351:195":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:5972:4797":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:10837:14068":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:21720:10407":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:47174:4187":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:13904:3611":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:3443:3189":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:40541:3877":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"0:143:2794":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:13924:3613":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:8320:129":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"4:535:3122":{"crate_id":4,"path":["zerocopy","KnownLayout"],"kind":"trait"},"1:22358:10365":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:50953:974":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:45916:4075":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:10396:3408":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:40958:3910":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:2963:257":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:11998:4287":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"4:595:3126":{"crate_id":4,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:43849:4317":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:3201:117":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"4:3229:3181":{"crate_id":4,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"4:3567:14192":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:34544:4767":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:39771:214":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:6067:4797":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:7990:3586":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"0:123:2461":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"3:0:3065":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:43115:3413":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:50934:1700":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:818:3087":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:6964:3582":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:23088:3086":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:41366:3927":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:12729:4008":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"4:2991:3180":{"crate_id":4,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:43219:3414":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:42570:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:47119:4182":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:2760:200":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:39619:4789":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:41400:3932":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:11392:3602":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:42609:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:40977:3913":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:42865:3404":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:42326:3587":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:32445:3729":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"0:19:2766":{"crate_id":0,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"1:10327:3402":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:23068:3645":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:44924:4324":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:46357:4111":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:13698:13525":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:13881:115":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:40691:3887":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:3279:4775":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:14016:5020":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:42206:3433":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:43869:4318":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:32362:4301":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:3730:4788":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:22584:12632":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"4:512:3121":{"crate_id":4,"path":["zerocopy","DstLayout"],"kind":"struct"},"1:39861:4302":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:41915:3938":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:43387:3978":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:1826:3175":{"crate_id":4,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"0:114:1004":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:8428:177":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:22558:10365":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:8746:4872":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:23223:3656":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:42689:90":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:42153:193":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:3396:4785":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:12967:4969":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:50928:1183":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:32444:3192":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:42648:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:3248:4720":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:10382:128":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"4:2342:3177":{"crate_id":4,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"4:558:3125":{"crate_id":4,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:44973:4065":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"0:151:2830":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:3257:4757":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:10326:225":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:43906:3607":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:46205:4103":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:4060:3346":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:2707:103":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:821:189":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:47253:4192":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:40787:4304":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:38461:4772":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:3414:124":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:3337:4766":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:44010:3995":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:33679:4762":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:40466:3871":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:41408:3934":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:33340:4756":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:42247:4888":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:3452:141":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:45969:4082":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:22982:3631":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:21687:10413":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:44829:4059":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:50945:905":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:2216:188":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:46036:4086":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:22227:3615":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:43840:3604":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:22360:10043":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:45837:4066":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"4:760:3133":{"crate_id":4,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"1:43961:4321":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:43198:137":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:44709:4056":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:34198:4764":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:43395:3979":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:42492:93":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:44950:4063":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:44034:3597":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:39831:4780":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"2:0:509":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:44841:218":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:42414:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:46729:4141":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:46806:4173":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:46708:4140":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"4:3645:3137":{"crate_id":4,"path":["zerocopy","SizeInfo"],"kind":"enum"},"1:44620:4039":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:40945:3909":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:46434:4130":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:2957:162":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:42197:3346":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:40836:3894":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:12713:4005":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:40562:3879":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:4643:3415":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:42728:97":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:47081:4180":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:44630:4043":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:39868:3740":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"4:3386:3182":{"crate_id":4,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"1:38351:4770":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:23256:3659":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:46065:4088":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:39753:211":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:44256:4010":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:2802:201":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:31172:3111":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:21822:3614":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:47128:4183":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:40658:3884":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:23168:3652":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"1:44558:4035":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"4:607:3127":{"crate_id":4,"path":["zerocopy","Ref"],"kind":"struct"},"1:23041:10461":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:44437:4021":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:50955:1429":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:10031:12733":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:41152:3922":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:44834:150":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:23157:3651":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"0:0:2607":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:46389:4113":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:40936:3908":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:3241:4742":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:0:567":{"crate_id":1,"path":["core"],"kind":"module"},"1:44138:4003":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:50930:1886":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:42269:3432":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:22496:10128":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"4:756:14297":{"crate_id":4,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:32387:243":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"4:34:3164":{"crate_id":4,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"0:85:2343":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:46596:4136":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:45899:4074":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"4:2099:3176":{"crate_id":4,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"1:3211:3148":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:42133:3959":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:47159:4186":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:21667:3111":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"4:546:3123":{"crate_id":4,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"1:41947:4881":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:42172:172":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:2960:144":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:44961:4064":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:40845:3896":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:47315:4203":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:5316:4274":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:40874:3899":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:50941:760":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:13188:119":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:7703:4835":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:42278:3964":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:4595:3565":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:3046:137":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:43173:73":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:50944:899":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:50936:1824":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:50951:1858":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:10820:14070":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:44667:4053":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:50940:744":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:50929:475":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:4874:3147":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:43919:4319":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:2765:134":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"0:115:2978":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:50956:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"4:427:14536":{"crate_id":4,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:50932:1323":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:12973:4968":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:12958:4278":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:40924:3907":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:50935:1734":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:44483:4032":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:3455:142":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:40585:4830":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"4:139:70":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"1:2704:102":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:40673:3886":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:47060:4179":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:30508:3083":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:6256:3576":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:4454:109":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:11319:4282":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:45931:4076":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:40702:4857":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"4:2569:3178":{"crate_id":4,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"1:2810:2909":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:41375:3928":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:46258:4106":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"zerocopy","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}