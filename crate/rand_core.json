{"root":"0:0:2079","crate_version":"0.9.0-alpha.0","includes_private":false,"index":{"0:141:1885":{"id":"0:141:1885","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[410,4],"end":[412,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[483,0],"end":[483,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:126:1930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:126:1930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:160:537":{"id":"0:160:537","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[296,4],"end":[296,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:28:1053":{"id":"0:28:1053","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[151,4],"end":[158,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3673:1647":{"id":"1:3673:1647","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39267:3205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2845-0:155:2297":{"id":"b:1:2845-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2848:138","1:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:68:2033":{"id":"0:68:2033","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[428,4],"end":[430,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:1996":{"id":"0:43:1996","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[255,4],"end":[257,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3671-0:155:2297":{"id":"b:1:3671-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2850-0:75:138":{"id":"b:1:2850-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2853:138","1:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:154:458":{"id":"0:154:458","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[121,9],"end":[121,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[265,0],"end":[265,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:22:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:126:1930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[433,0],"end":[433,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:22:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:126:1930","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62:1907":{"id":"0:62:1907","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[408,4],"end":[411,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:2330","0:79:2337","0:80:2352","0:81:2324"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[414,0],"end":[431,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:127:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:127:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:65:1961","0:66:1983","0:67:1996","0:68:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:163:458":{"id":"0:163:458","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[289,9],"end":[289,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:31969:237-0:75:138":{"id":"a:1:31969:237-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:31969:237-0:155:2297":{"id":"a:1:31969:237-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2560-0:155:2297":{"id":"b:1:2560-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2562:2468"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2562:2468":{"id":"1:2562:2468","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41605:4309-0:75:138":{"id":"a:1:41605:4309-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[121,9],"end":[121,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:18:2225","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:154:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:85:726":{"id":"0:85:726","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[134,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2064":{"id":"0:120:2064","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[27,0],"end":[32,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:1930":{"id":"0:126:1930","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[216,0],"end":[216,31]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"`RngCore`":"0:121:1877"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:144","0:46","0:70"]}}},"a:1:32026:2663-0:75:138":{"id":"a:1:32026:2663-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:128:1961":{"id":"0:128:1961","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[271,4],"end":[271,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\n# #[allow(dead_code)]\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2887:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2806:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"1:2849:1634":{"id":"1:2849:1634","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:726":{"id":"0:50:726","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[301,4],"end":[308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1877":{"id":"0:121:1877","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[142,0],"end":[192,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:122:1882","`SeedableRng`":"0:127:1933","RngCore::fill_bytes":"0:124:1896","RngCore::next_u64":"0:123:1885","`CryptoRng`":"0:126:1930","RngCore::try_fill_bytes":"0:125:1907","`SeedableRng::from_rng`":"0:135:2033","`impls`":"0:88:1815"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:122:1882","0:123:1885","0:124:1896","0:125:1907"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:32","0:137","0:57"]}}},"0:155:2297":{"id":"0:155:2297","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[291,0],"end":[297,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:123:1885","`BlockRngCore`":"0:18:2225","`RngCore`":"0:121:1877","RngCore::next_u32":"0:122:1882","RngCore::try_fill_bytes":"0:125:1907","`BlockRng`":"0:147:2261","RngCore::fill_bytes":"0:124:1896"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:160:537"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:51","a:1:41605:4309-0:155:2297","a:1:3058:246-0:155:2297","a:1:31969:237-0:155:2297","a:1:41604:4310-0:155:2297","a:1:32026:2663-0:155:2297","b:1:2563-0:155:2297","b:1:3671-0:155:2297","b:1:2835-0:155:2297","b:1:2839-0:155:2297","b:1:2850-0:155:2297","b:1:2560-0:155:2297","b:1:2845-0:155:2297","0:70","0:63","0:57","0:161","0:48"]}}},"1:2838:2342":{"id":"1:2838:2342","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2812:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:726":{"id":"0:83:726","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[117,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2560-0:75:138":{"id":"b:1:2560-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2562:2468"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:94:2381":{"id":"0:94:2381","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:2273":{"id":"0:55:2273","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[338,4],"end":[341,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2033":{"id":"0:135:2033","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[369,4],"end":[373,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2839-0:155:2297":{"id":"b:1:2839-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:109:2215":{"id":"0:109:2215","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u32]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:1885":{"id":"0:123:1885","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[155,4],"end":[155,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:114:2435","`impls::next_u64_via_u32`":"0:94:2381"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:0:2079":{"id":"0:0:2079","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[533,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:117:886","`SeedableRng`":"0:127:1933","`RngCore`":"0:121:1877","`impls`":"0:88:1815","`Error`":"0:75:138"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:7:403","0:88:1815","0:117:886","0:6-0:75:138","0:121:1877","0:126:1930","0:127:1933"],"is_stripped":false}}},"a:1:3058:246-0:75:138":{"id":"a:1:3058:246-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:67:1996":{"id":"0:67:1996","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[423,4],"end":[425,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32026:2663-0:147:2261":{"id":"a:1:32026:2663-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:56:2276":{"id":"0:56:2276","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[346,4],"end":[351,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32026:2663-0:155:2297":{"id":"a:1:32026:2663-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32026:2663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:65:1961":{"id":"0:65:1961","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[415,4],"end":[415,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:127:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:6-0:75:138":{"id":"0:6-0:75:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[48,0],"end":[48,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"error::Error","name":"Error","id":"0:75:138","glob":false}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[403,0],"end":[423,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":["0:140:1882","0:141:1885","0:142:1896","0:143:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:61:1896":{"id":"0:61:1896","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[388,4],"end":[405,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:1885":{"id":"0:35:1885","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[200,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3058:246-0:147:2261":{"id":"a:1:3058:246-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:25:726":{"id":"0:25:726","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[138,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10168:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10149:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[354,0],"end":[412,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:59:1882","0:60:1885","0:61:1896","0:62:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:21:2231":{"id":"0:21:2231","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[77,4],"end":[77,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:18:2225","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:78:2330":{"id":"0:78:2330","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:59:1882":{"id":"0:59:1882","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[356,4],"end":[372,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2841:755":{"id":"1:2841:755","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[147,0],"end":[185,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:28:1053","0:29:835","0:30:2273","0:31:2276"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:53:1053":{"id":"0:53:1053","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[315,4],"end":[323,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:886":{"id":"0:117:886","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[56,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:119:2447","0:120:2064"],"is_stripped":false}}},"0:96:2387":{"id":"0:96:2387","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[38,0],"end":[54,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2854:1632":{"id":"1:2854:1632","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[289,9],"end":[289,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:18:2225","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2576:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:163:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:2216":{"id":"0:110:2216","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[145,0],"end":[147,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u64]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2563-0:75:138":{"id":"b:1:2563-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2565:9717"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111:2433":{"id":"0:111:2433","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[150,0],"end":[154,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2563-0:147:2261":{"id":"b:1:2563-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2565:9717"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2565:9717":{"id":"1:2565:9717","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2560-0:147:2261":{"id":"b:1:2560-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2554:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2562:2468"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2845-0:75:138":{"id":"b:1:2845-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2848:138","1:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:75:138":{"id":"0:75:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:77","a:1:41605:4309-0:75:138","a:1:3058:246-0:75:138","a:1:31969:237-0:75:138","a:1:41604:4310-0:75:138","a:1:32026:2663-0:75:138","b:1:2563-0:75:138","b:1:3671-0:75:138","b:1:2835-0:75:138","b:1:2839-0:75:138","b:1:2850-0:75:138","b:1:2560-0:75:138","b:1:2845-0:75:138","0:84","0:86","0:82"]}}},"0:143:1907":{"id":"0:143:1907","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[420,4],"end":[422,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:1885":{"id":"0:60:1885","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[375,4],"end":[385,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZero","id":"1:728:190","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:755"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:1983":{"id":"0:129:1983","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[298,4],"end":[298,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:127:1933","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[187,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:34:1882","0:35:1885","0:37:1896","0:38:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[246,0],"end":[263,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:127:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:127:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:41:1961","0:42:1983","0:43:1996","0:44:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2835-0:75:138":{"id":"b:1:2835-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2838:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2839-0:75:138":{"id":"b:1:2839-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2850-0:147:2261":{"id":"b:1:2850-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2853:138","1:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140:1882":{"id":"0:140:1882","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[405,4],"end":[407,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2447":{"id":"0:119:2447","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[18,0],"end":[23,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:2225":{"id":"0:18:2225","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[68,0],"end":[78,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:7:403"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:19:174","0:20:2229","0:21:2231"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:19:174":{"id":"0:19:174","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[70,4],"end":[70,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[311,0],"end":[352,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:53:1053","0:54:835","0:55:2273","0:56:2276"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[116,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:83:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:147:2261":{"id":"0:147:2261","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[129,0],"end":[134,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:18:2225","`RngCore`":"0:121:1877","RngCore::next_u32":"0:122:1882","`SeedableRng`":"0:127:1933","`BlockRng64`":"0:155:2297","RngCore::fill_bytes":"0:124:1896","RngCore::next_u64":"0:123:1885","`BlockRngCore::generate`":"0:21:2231","RngCore::try_fill_bytes":"0:125:1907"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:151:537"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:26","a:1:41605:4309-0:147:2261","a:1:3058:246-0:147:2261","a:1:31969:237-0:147:2261","a:1:41604:4310-0:147:2261","a:1:32026:2663-0:147:2261","b:1:2563-0:147:2261","b:1:3671-0:147:2261","b:1:2835-0:147:2261","b:1:2839-0:147:2261","b:1:2850-0:147:2261","b:1:2560-0:147:2261","b:1:2845-0:147:2261","0:32","0:46","0:152","0:23","0:39"]}}},"a:1:41604:4310-0:75:138":{"id":"a:1:41604:4310-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2835-0:147:2261":{"id":"b:1:2835-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2838:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:114:2435":{"id":"0:114:2435","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[157,0],"end":[161,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:835":{"id":"0:54:835","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[331,4],"end":[333,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:2337":{"id":"0:79:2337","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:78:2330"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[133,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10198:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:130:1996":{"id":"0:130:1996","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[314,4],"end":[343,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41605:4309-0:147:2261":{"id":"a:1:41605:4309-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:87:755":{"id":"0:87:755","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[152,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["code",{"resolved_path":{"name":"NonZeroU32","id":"1:22962:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[137,0],"end":[145,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:25:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:44:2033":{"id":"0:44:2033","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[260,4],"end":[262,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:121:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:1896":{"id":"0:37:1896","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[225,4],"end":[237,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2276":{"id":"0:31:2276","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[180,4],"end":[184,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:1907":{"id":"0:38:1907","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[240,4],"end":[243,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:1933":{"id":"0:127:1933","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[224,0],"end":[398,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:128:1961","0:129:1983","0:130:1996","0:135:2033"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:63","0:39"]}}},"0:22:2233":{"id":"0:22:2233","crate_id":0,"name":"CryptoBlockRng","span":{"filename":"src/block.rs","begin":[84,0],"end":[84,42]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information.","links":{"`CryptoRng`":"0:126:1930","`RngCore`":"0:121:1877"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:66:1983":{"id":"0:66:1983","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[418,4],"end":[420,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:127:1933","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2563-0:155:2297":{"id":"b:1:2563-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2557:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2565:9717"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:142:1896":{"id":"0:142:1896","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[415,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:2229":{"id":"0:20:2229","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[74,4],"end":[74,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2803:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:18:2225","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2806:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:18:2225","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2887:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:30:2273":{"id":"0:30:2273","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[173,4],"end":[175,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2848:138":{"id":"1:2848:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:1:2839-0:147:2261":{"id":"b:1:2839-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2841:755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:2324":{"id":"0:81:2324","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[104,4],"end":[113,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41480:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZeroU32","id":"1:22962:2319","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:835":{"id":"0:29:835","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:1961":{"id":"0:41:1961","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[247,4],"end":[247,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:127:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:151:537":{"id":"0:151:537","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[133,4],"end":[133,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"a:1:41605:4309-0:155:2297":{"id":"a:1:41605:4309-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41605:4309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:7:403":{"id":"0:7:403","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[541,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoBlockRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:124:1896","crate::block::BlockRngCore":"0:18:2225","`RngCore`":"0:121:1877"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:18:2225","0:22:2233","0:147:2261","0:155:2297"],"is_stripped":false}}},"0:88:1815":{"id":"0:88:1815","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[206,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:94:2381","0:96:2387","0:109:2215","0:110:2216","0:111:2433","0:114:2435"],"is_stripped":false}}},"1:2853:138":{"id":"1:2853:138","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:31897:2533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:122:1882":{"id":"0:122:1882","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[148,4],"end":[148,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:111:2433"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:125:1907":{"id":"0:125:1907","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[184,4],"end":[184,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:124:1896"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41623:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:41604:4310-0:155:2297":{"id":"a:1:41604:4310-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42:1983":{"id":"0:42:1983","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[250,4],"end":[252,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:127:1933","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41604:4310-0:147:2261":{"id":"a:1:41604:4310-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41604:4310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2835-0:155:2297":{"id":"b:1:2835-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2812:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2838:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2850-0:155:2297":{"id":"b:1:2850-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2809:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2853:138","1:2854:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34:1882":{"id":"0:34:1882","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[189,4],"end":[197,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:1896":{"id":"0:124:1896","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:96:2387","`RngCore::try_fill_bytes`":"0:125:1907"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:3671-0:147:2261":{"id":"b:1:3671-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2845-0:147:2261":{"id":"b:1:2845-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2819:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2815:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2848:138","1:2849:1634"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3058:246-0:155:2297":{"id":"a:1:3058:246-0:155:2297","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3058:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[300,0],"end":[309,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10193:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:155:2297","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:50:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:31969:237-0:147:2261":{"id":"a:1:31969:237-0:147:2261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:31969:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:147:2261","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:80:2352":{"id":"0:80:2352","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[85,4],"end":[96,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41480:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3671-0:75:138":{"id":"b:1:3671-0:75:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:31970:1911","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3669:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:75:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3673:1647"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"4:713:2606":{"crate_id":4,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"1:4689:4236":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:43201:3786":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:10839:10067":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:42065:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:1821:4219":{"crate_id":1,"path":["core","mem","maybe_uninit","clone_from_slice","Guard"],"kind":"struct"},"1:45906:3607":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:44356:181":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:42944:3452":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:46035:3612":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:13397:13264":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:41946:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:45758:3585":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"0:120:2064":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"1:40295:3379":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:11303:3758":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:39453:2535":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:8560:4289":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:2660:2377":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:3294:2660":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:6592:3052":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"4:3468:2657":{"crate_id":4,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"1:43251:3787":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:2815:257":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:46210:3647":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:22654:3096":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:44103:3527":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"4:2877:2650":{"crate_id":4,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:0:537":{"crate_id":1,"path":["core"],"kind":"module"},"1:22804:3121":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:41546:3754":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:2781:10067":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:40493:3390":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:12273:4344":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:41242:3405":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:44153:3532":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:40150:3359":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:10452:4335":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:22104:9456":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:46501:3660":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:22454:9535":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:44087:3523":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:42223:2877":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:40679:3392":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:46455:3656":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:21436:12695":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:22271:9542":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:7646:4279":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:21561:9457":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:43764:3488":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:38440:4196":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:31946:3769":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:52068:1656":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:8064:4291":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"4:519:2600":{"crate_id":4,"path":["zerocopy","Ref"],"kind":"struct"},"1:9997:2894":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:21680:3090":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:12535:3475":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:41480:194":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:39942:3344":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"4:745:2639":{"crate_id":4,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"1:39152:212":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:40023:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:40708:3396":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:40121:3083":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:21482:12697":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:43885:3502":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:44164:4407":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:10208:206":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:39921:3342":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:52076:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:41663:3062":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:43485:3471":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"4:126:2626":{"crate_id":4,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:10202:2875":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:40469:3388":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:13375:165":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"0:117:886":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:43112:3784":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:41907:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:52064:807":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:11317:3759":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:10563:4357":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"0:110:2216":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:5182:867":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:40201:3366":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:10457:3069":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:10629:10503":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:4561:221":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:30836:2584":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:41594:2904":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:46642:3676":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:12519:3472":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"0:119:2447":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:11234:3757":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:2557:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:45583:3576":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:42712:3444":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:39055:4208":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:42704:3442":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:41868:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:43957:3510":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:1908:640":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:52065:808":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:52073:861":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:39170:215":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:3516:4206":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:39908:3341":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:46387:3652":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:33052:4181":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:32026:2663":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:40084:3042":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:42959:3453":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:45545:3574":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:43513:3473":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:21951:10067":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"4:37:2633":{"crate_id":4,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"1:40181:3363":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:40693:3394":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:13591:3087":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:3283:2623":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:40251:3374":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"0:127:1933":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:42963:3454":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:4206:4219":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"0:22:2233":{"crate_id":0,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"4:475:2598":{"crate_id":4,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:43970:3516":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:43858:3501":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:3063:2620":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:39210:216":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:52057:1552":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:22726:3108":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:13611:3089":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:22323:4142":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"1:45697:3582":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"4:3108:2651":{"crate_id":4,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"1:42442:3433":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"0:7:403":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:3499:253":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:42720:3445":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:8248:179":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:4417:3742":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:45406:3558":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:46486:3659":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:40686:3393":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:23286:236":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:40172:3362":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:30460:9778":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:8557:4225":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:39260:3770":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:2819:256":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:12991:121":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:725:10067":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"4:1125:2642":{"crate_id":4,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:43936:4397":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:8192:2661":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:41554:2817":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:22704:9833":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:45968:3609":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"4:0:2080":{"crate_id":4,"path":["zerocopy"],"kind":"module"},"1:13449:3764":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:33229:4182":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:45665:3580":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"4:513:2599":{"crate_id":4,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:33288:4184":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"4:2673:2649":{"crate_id":4,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:43293:3789":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:37696:4192":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:45306:3548":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:39871:3337":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:30287:2884":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:45627:3578":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:31897:2533":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:45353:3551":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:22777:9798":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:41274:4301":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:21573:3090":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:4698:2618":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:40344:3385":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:10204:2876":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:52050:1049":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:44326:3790":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:12289:3762":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:41606:2902":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"4:708:13722":{"crate_id":4,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:43431:3468":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:21678:9455":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:45289:3545":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:10206:2877":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:22693:2556":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:2939:3738":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"4:3531:2607":{"crate_id":4,"path":["zerocopy","_CastType"],"kind":"enum"},"1:43947:3506":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:3193:4189":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"0:0:2079":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:44083:3522":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:22762:9805":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:5797:4219":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:11161:3756":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"4:891:2641":{"crate_id":4,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"1:41985:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:40702:3395":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:12831:4390":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:43212:3455":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:39230:4202":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:46603:3666":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:33170:4183":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:31935:3767":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:41302:3415":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:728:190":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:7424:2448":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:7529:4294":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:43163:3079":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:46056:3613":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:3581:4210":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:45441:3560":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"0:111:2433":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:1915:2928":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:31970:1911":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:9670:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:43662:3345":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:10417:157":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:21451:12691":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:43191:3082":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:5140:3747":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:12772:4382":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:45598:3577":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:9852:12660":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:32056:4094":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:40304:3380":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:30355:9799":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:10992:3062":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:21553:10067":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:39115:213":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:22962:2319":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"type_alias"},"1:43467:3470":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:3109:2554":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:39865:3336":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:40028:3354":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:43363:3072":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"0:147:2261":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:52072:1652":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:3912:2817":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:45712:3583":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3270:127":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:7530:4295":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"0:114:2435":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:10212:2879":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:22102:10067":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:4330:4226":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:9348:3751":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:40263:3375":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:13701:4432":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:2889:126":{"crate_id":1,"path":["core","default","Default"],"kind":"proc_derive"},"1:6792:3057":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:11802:3760":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:45997:3610":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:21468:12703":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:42481:10729":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:40094:3771":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:30298:9816":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:41529:174":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:39103:3199":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"4:1343:2643":{"crate_id":4,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"1:41671:3754":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:11835:3761":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:46512:3661":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:52069:1653":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:46466:3657":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:10149:226":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:39267:3205":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:31969:237":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:52061:698":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:41563:2903":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:52054:1167":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:13424:205":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:21414:2584":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"4:2469:2648":{"crate_id":4,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"1:22835:2571":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:10409:153":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:7594:10364":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:33598:4187":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:39950:3336":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:21555:9454":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:6083:3051":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:44272:150":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:3529:13547":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:22295:10067":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:21453:12699":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:12778:4381":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:43381:3078":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:44372:3538":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"4:1747:2645":{"crate_id":4,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"1:9857:10797":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:42506:2884":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:43646:3481":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:46527:3662":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:46358:3651":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"4:346:13566":{"crate_id":4,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:40717:3398":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:10150:2873":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:22449:9537":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:44129:132":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:52051:454":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:41408:3422":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:2610:201":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:41442:3423":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:11275:3470":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:40163:3360":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:10200:2874":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:45779:3586":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:40233:3372":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8101:166":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:42202:2875":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:0:481":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:3058:246":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:3093:4169":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:8139:131":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:3301:142":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:11289:3471":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:44275:219":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:33944:4190":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:44334:3535":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:45885:3606":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:39882:3338":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:39958:3345":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:22321:10905":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:11123:3755":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:45923:3608":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:31939:3768":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:32027:3194":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"4:463:2379":{"crate_id":4,"path":["zerocopy","NoCell"],"kind":"trait"},"1:46446:3655":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:11016:3754":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:42452:2884":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:3100:4155":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:45566:3575":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:22718:3107":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:43273:3788":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:10661:10493":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:39931:3343":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:44107:3528":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:52049:404":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:6787:3059":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:4295:3741":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:39977:3348":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:8110:2662":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:3333:4201":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:39280:3207":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2029:3030":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:40727:3399":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:11084:3077":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:52067:805":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:43264:3084":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:44091:3524":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"4:3522:2609":{"crate_id":4,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"1:41538:3062":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"4:3261:2652":{"crate_id":4,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"1:2806:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:10646:10505":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:33111:4185":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:2887:126":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"4:3510:2608":{"crate_id":4,"path":["zerocopy","SizeInfo"],"kind":"enum"},"1:41460:3426":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:42544:2885":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:45516:3565":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:5969:3048":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:21424:12695":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:2038:3033":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"3:0:2530":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:39130:210":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"0:96:2387":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:22189:9540":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:41420:4302":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:44099:3526":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:41829:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:22233:9541":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:37806:4194":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:45680:3581":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:4283:3740":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:39965:4252":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:42759:3451":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:22376:4142":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"1:45321:3549":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:52074:1711":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:22811:2570":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:21502:9458":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:52075:1264":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:41623:226":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:42209:2874":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:43413:3467":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"4:505:2378":{"crate_id":4,"path":["zerocopy","IntoBytes"],"kind":"trait"},"1:43283:3085":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:21956:9460":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:13573:117":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:46018:3611":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:18:2225":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:35820:4191":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:45796:3587":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:12496:3469":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:8566:4290":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:43743:4396":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"4:3425:13698":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:43309:3457":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:40210:3368":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:46329:3650":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:21669:10067":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:52063:810":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:2646:195":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:43333:3461":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:4307:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:45473:3562":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:3669:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:43655:3482":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:32058:116":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:41604:4310":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"4:3439:13726":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:44111:3529":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:42497:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:4644:2600":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:9237:3750":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:31971:244":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:726:2558":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:5081:422":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:43567:3476":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"4:39:2634":{"crate_id":4,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"1:2898:138":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:46300:3649":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:40114:3772":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:4448:3040":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:22742:9803":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:2812:145":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:40479:3389":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"4:2249:2647":{"crate_id":4,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"1:12783:4380":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:3131:4197":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:33425:4186":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:43680:3344":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:3252:4207":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:41258:3407":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:2470:4142":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:10168:144":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:45391:3557":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:3141:4199":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:39893:9794":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:39099:4200":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:2576:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:41220:171":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:43671:3336":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:41679:2817":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:45274:3544":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:45420:3559":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:43339:3462":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:3778:9768":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:37751:4193":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:3304:143":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:45811:3588":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:42469:10741":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:44395:3540":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:40141:3773":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:45856:3605":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:234:226":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:7876:4229":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:33771:4188":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"4:709:2605":{"crate_id":4,"path":["zerocopy","ByteSlice"],"kind":"trait"},"1:7816:3061":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:8604:12659":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:39984:3349":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:42026:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:43922:3503":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:52062:700":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:39991:4253":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:30266:2622":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:43349:3346":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:11196:3078":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:42729:157":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:32632:4178":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:40334:3383":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:9831:726":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:46429:3654":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:3053:119":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:2652:202":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:44347:3792":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:41712:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:44095:3525":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:41605:4309":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:3489:4203":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:3510:4204":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:39019:4211":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:46475:3658":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:12763:3751":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:9665:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:31953:2600":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:40219:3369":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:42523:138":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"0:126:1930":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:22309:9543":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:46580:3665":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:22407:10067":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:3426:211":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:22824:2557":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:46550:3663":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:40320:3382":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:2224:3037":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:37861:4195":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4745:2887":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:52052:1672":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"0:121:1877":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:21992:12701":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:46565:3664":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:2104:189":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"0:155:2297":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:2809:163":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:12459:3464":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:42104:3753":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:43627:3479":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:42741:3446":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"0:94:2381":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:40735:3401":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:3504:147":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:44293:207":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:40242:3373":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"0:109:2215":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:6781:3060":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:45487:3563":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"4:1545:2644":{"crate_id":4,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:43793:3498":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:10210:2878":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:4718:2619":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:41615:3431":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:5102:10521":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:52058:1637":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:2803:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:4:1130":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:10198:130":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:4570:3744":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:3136:4198":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:45729:3584":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:43617:3478":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:44285:227":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:46408:3653":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:21980:3091":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:4634:3041":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:12717:2555":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:44383:3539":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:43238:3083":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:43988:3519":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:30272:2932":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:43531:3474":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:2782:2534":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:44075:3520":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:30809:196":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:25686:266":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:40191:3365":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:43181:3785":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:30010:2551":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:11041:3072":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:42751:3450":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:52056:1520":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:2554:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:52066:809":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:4349:4227":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:52070:1654":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:40010:3353":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:43172:3080":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:22362:9544":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:45648:3579":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:39190:214":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:42216:2876":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:41751:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:52055:333":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:45374:3556":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:44079:3521":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:40054:3357":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:2615:135":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"4:2013:2646":{"crate_id":4,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"1:31960:3192":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:21500:10067":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:8060:4292":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:41688:196":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:12573:3077":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:41386:9808":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:43322:3460":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:3544:4209":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:3119:4179":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:4565:3743":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:45338:3550":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:22670:3101":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:46255:3648":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:32446:2553":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:22533:3092":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"4:470:2597":{"crate_id":4,"path":["zerocopy","FromZeros"],"kind":"trait"},"1:45502:3564":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:32818:4180":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:43810:3499":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:43585:3477":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:45458:3561":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:40272:3376":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:2015:4158":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:3104:2552":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:40039:9789":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:22639:3095":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:8097:146":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:5892:4219":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:3051:4168":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:10193:121":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"0:88:1815":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:22586:3094":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"4:760:2640":{"crate_id":4,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"1:2472:4143":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:43637:3480":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:41790:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:21470:12705":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:40285:3377":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3298:141":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:52071:1655":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:30234:2621":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:2456:641":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:46133:3646":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:45259:3541":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:4491:2886":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:43779:3495":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:22421:9536":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:15:2359":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:10849:239":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"zerocopy","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}