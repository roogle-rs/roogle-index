{"root":"0:0:1892","crate_version":"0.6.4","includes_private":false,"index":{"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[424,0],"end":[444,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"R"}}},"items":["0:147:1695","0:148:1698","0:149:1709","0:150:1720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[116,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2135","0:76:2142","0:77:2157","0:78:2129"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:131-0:154:2064":{"id":"b:0:131-0:154:2064","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[238,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"0:129:1749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:133:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[412,0],"end":[429,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:134:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:134:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:62:1782","0:63:1804","0:64:1817","0:65:1854"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2537:1455":{"id":"1:2537:1455","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34:1698":{"id":"0:34:1698","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:125:1698":{"id":"0:125:1698","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[155,4],"end":[155,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:116:2231","`impls::next_u64_via_u32`":"0:88:2184"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:8186:4018-0:154:2064":{"id":"a:1:8186:4018-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:53:2080":{"id":"0:53:2080","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[341,4],"end":[346,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56:1695":{"id":"0:56:1695","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[354,4],"end":[370,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:124:1695":{"id":"0:124:1695","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[148,4],"end":[148,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:113:2229"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[115,9],"end":[115,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2249:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"0:18:2029","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2249:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2249:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:161:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[131,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9048:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9048:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:24:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:123:1690":{"id":"0:123:1690","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[142,0],"end":[185,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:124:1695","`SeedableRng`":"0:134:1754","RngCore::fill_bytes":"0:126:1709","RngCore::next_u64":"0:125:1698","`CryptoRng`":"0:128:1738","RngCore::try_fill_bytes":"0:127:1720","`SeedableRng::from_rng`":"0:142:1854","`impls`":"0:85:1628"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:124:1695","0:125:1698","0:126:1709","0:127:1720"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:54","0:144","0:31"]}},"0:161:416":{"id":"0:161:416","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[115,9],"end":[115,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2732:2367-0:72:127":{"id":"a:1:2732:2367-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2541:127":{"id":"1:2541:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:31759:2327","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:1:2668:218-0:72:127":{"id":"a:1:2668:218-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:2668:218-0:162:2101":{"id":"a:1:2668:218-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2527-0:162:2101":{"id":"b:1:2527-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2529:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:20:2034":{"id":"0:20:2034","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[74,4],"end":[74,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2491:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:18:2029","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2494:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:18:2029","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2574:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[141,0],"end":[179,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:27:929","0:28:760","0:29:2077","0:30:2080"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3327-0:162:2101":{"id":"b:1:3327-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3325:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3329:1468"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:50:929":{"id":"0:50:929","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[310,4],"end":[318,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["core",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:659":{"id":"0:80:659","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[119,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9007:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8996:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[238,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRngCore","id":"0:129:1749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:133:1751"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2533-0:162:2101":{"id":"b:1:2533-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2503:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2536:127","1:2537:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:149:1709":{"id":"0:149:1709","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[436,4],"end":[438,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:129:1749":{"id":"0:129:1749","crate_id":0,"name":"CryptoRngCore","span":{"filename":"src/lib.rs","begin":[229,0],"end":[232,1]},"visibility":"public","docs":"An extension trait that is automatically implemented for any type\nimplementing [`RngCore`] and [`CryptoRng`].\n\nIt may be used as a trait object, and supports upcasting to [`RngCore`] via\nthe [`CryptoRngCore::as_rngcore`] method.\n\n# Example\n\n```\nuse rand_core::CryptoRngCore;\n\n#[allow(unused)]\nfn make_token(rng: &mut dyn CryptoRngCore) -> [u8; 32] {\n    let mut buf = [0u8; 32];\n    rng.fill_bytes(&mut buf);\n    buf\n}\n```","links":{"`CryptoRng`":"0:128:1738","`CryptoRngCore::as_rngcore`":"0:130:1751","`RngCore`":"0:123:1690"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:130:1751"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:131"]}},"b:1:2523-0:154:2064":{"id":"b:1:2523-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2497:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2526:2147"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:18:2029":{"id":"0:18:2029","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[68,0],"end":[78,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:7:368"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:19:2031","0:20:2034","0:21:2036"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:148:1698":{"id":"0:148:1698","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2236-0:154:2064":{"id":"b:1:2236-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2230:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2238:9552"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:167:489":{"id":"0:167:489","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[291,4],"end":[291,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"R"}},"0:52:2077":{"id":"0:52:2077","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[333,4],"end":[336,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119:801":{"id":"0:119:801","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[56,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:121:2242","0:122:1876"],"is_stripped":false}},"0:136:1804":{"id":"0:136:1804","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[319,4],"end":[319,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["seed",{"kind":"qualified_path","inner":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:134:1754","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:85:1628":{"id":"0:85:1628","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[207,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:88:2184","0:90:2190","0:111:2019","0:112:2020","0:113:2229","0:116:2231"],"is_stripped":false}},"a:1:2682:226-0:154:2064":{"id":"a:1:2682:226-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2235:2264":{"id":"1:2235:2264","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:40:1782":{"id":"0:40:1782","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[244,4],"end":[244,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"SeedableRng","id":"0:134:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:42:1817":{"id":"0:42:1817","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[252,4],"end":[254,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["seed",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8185:4019-0:72:127":{"id":"a:1:8185:4019-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:19:2031":{"id":"0:19:2031","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[70,4],"end":[70,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:1:2527-0:72:127":{"id":"b:1:2527-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2529:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:142:1854":{"id":"0:142:1854","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[390,4],"end":[394,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[481,0],"end":[481,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2233-0:162:2101":{"id":"b:1:2233-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2227:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2235:2264"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2668:218-0:154:2064":{"id":"a:1:2668:218-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2668:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[135,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9053:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:24:659":{"id":"0:24:659","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[132,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9007:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8996:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:62:1782":{"id":"0:62:1782","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[413,4],"end":[413,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"SeedableRng","id":"0:134:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:116:2231":{"id":"0:116:2231","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[166,0],"end":[170,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:64:1817":{"id":"0:64:1817","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[421,4],"end":[423,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["seed",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59:1720":{"id":"0:59:1720","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[406,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2523-0:72:127":{"id":"b:1:2523-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2497:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2526:2147"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2233-0:154:2064":{"id":"b:1:2233-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2227:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2235:2264"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:72:127":{"id":"0:72:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:1:8185:4019-0:72:127","a:1:2732:2367-0:72:127","a:1:2682:226-0:72:127","a:1:2668:218-0:72:127","a:1:8186:4018-0:72:127","b:1:2236-0:72:127","b:1:2538-0:72:127","b:1:2233-0:72:127","b:1:2527-0:72:127","b:1:2523-0:72:127","b:1:3327-0:72:127","b:1:2533-0:72:127","0:83","0:81","0:79"]}},"1:3329:1468":{"id":"1:3329:1468","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:38987:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2238:9552":{"id":"1:2238:9552","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:2080":{"id":"0:30:2080","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[174,4],"end":[178,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2536:127":{"id":"1:2536:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[431,0],"end":[431,62]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:128:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:21:2036":{"id":"0:21:2036","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[77,4],"end":[77,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["results",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:18:2029","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2533-0:154:2064":{"id":"b:1:2533-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2503:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2536:127","1:2537:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2682:226-0:162:2101":{"id":"a:1:2682:226-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:0:1892":{"id":"0:0:1892","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[531,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:119:801","`SeedableRng`":"0:134:1754","`RngCore`":"0:123:1690","`impls`":"0:85:1628","`Error`":"0:72:127"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7:368","0:85:1628","0:119:801","0:6-0:72:127","0:123:1690","0:128:1738","0:129:1749","0:134:1754"],"is_stripped":false}},"b:1:2236-0:72:127":{"id":"b:1:2236-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2230:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2238:9552"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:162:2101":{"id":"0:162:2101","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[286,0],"end":[292,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:125:1698","`BlockRngCore`":"0:18:2029","`RngCore`":"0:123:1690","RngCore::next_u32":"0:124:1695","RngCore::try_fill_bytes":"0:127:1720","`BlockRng`":"0:154:2064","RngCore::fill_bytes":"0:126:1709"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:167:489"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:8185:4019-0:162:2101","a:1:2732:2367-0:162:2101","a:1:2682:226-0:162:2101","a:1:2668:218-0:162:2101","a:1:8186:4018-0:162:2101","b:1:2236-0:162:2101","b:1:2538-0:162:2101","b:1:2233-0:162:2101","b:1:2527-0:162:2101","b:1:2523-0:162:2101","b:1:3327-0:162:2101","b:1:2533-0:162:2101","0:60","0:168","0:45","0:54"]}},"0:170:416":{"id":"0:170:416","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2538-0:72:127":{"id":"b:1:2538-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2497:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:127","1:2542:1454"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:43:1854":{"id":"0:43:1854","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[257,4],"end":[259,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"generic","inner":"S"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90:2190":{"id":"0:90:2190","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[37,0],"end":[53,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:2229":{"id":"0:113:2229","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[159,0],"end":[163,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:1695":{"id":"0:147:1695","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[426,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:127:1720":{"id":"0:127:1720","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[184,4],"end":[184,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:126:1709"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:78:2129":{"id":"0:78:2129","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[106,4],"end":[115,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:40659:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonZeroU32","id":"1:22076:174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:75:2135":{"id":"0:75:2135","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u32"},"default":"_"}},"a:1:2732:2367-0:162:2101":{"id":"a:1:2732:2367-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:154:2064":{"id":"0:154:2064","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[123,0],"end":[128,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:18:2029","`RngCore`":"0:123:1690","RngCore::next_u32":"0:124:1695","`SeedableRng`":"0:134:1754","`BlockRng64`":"0:162:2101","RngCore::fill_bytes":"0:126:1709","RngCore::next_u64":"0:125:1698","`BlockRngCore::generate`":"0:21:2036","RngCore::try_fill_bytes":"0:127:1720"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:158:489"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:25","a:1:8185:4019-0:154:2064","a:1:2732:2367-0:154:2064","a:1:2682:226-0:154:2064","a:1:2668:218-0:154:2064","a:1:8186:4018-0:154:2064","b:0:131-0:154:2064","b:1:2236-0:154:2064","b:1:2538-0:154:2064","b:1:2233-0:154:2064","b:1:2527-0:154:2064","b:1:2523-0:154:2064","b:1:3327-0:154:2064","b:1:2533-0:154:2064","0:67","0:159","0:22","0:38","0:31"]}},"a:1:2682:226-0:72:127":{"id":"a:1:2682:226-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2682:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2233-0:72:127":{"id":"b:1:2233-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2227:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2235:2264"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:84:685":{"id":"0:84:685","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[154,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["code",{"kind":"resolved_path","inner":{"name":"NonZeroU32","id":"1:22076:174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6-0:72:127":{"id":"0:6-0:72:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[48,0],"end":[48,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"error::Error","name":"Error","id":"0:72:127","glob":false}},"0:150:1720":{"id":"0:150:1720","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[441,4],"end":[443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:1804":{"id":"0:41:1804","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[247,4],"end":[249,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["seed",{"kind":"qualified_path","inner":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:134:1754","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1738":{"id":"0:128:1738","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[209,0],"end":[209,22]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`]\nimplementation is supposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"block::BlockRngCore":"0:18:2029","`RngCore`":"0:123:1690"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:151","0:67"]}},"a:1:8186:4018-0:162:2101":{"id":"a:1:8186:4018-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:2732:2367-0:154:2064":{"id":"a:1:2732:2367-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2732:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:58:1709":{"id":"0:58:1709","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[386,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:82:659":{"id":"0:82:659","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[136,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9007:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8996:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2249:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"0:18:2029","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2249:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2249:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:170:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:121:2242":{"id":"0:121:2242","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[18,0],"end":[23,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:33:1695":{"id":"0:33:1695","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[186,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2538-0:162:2101":{"id":"b:1:2538-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2497:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2541:127","1:2542:1454"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[349,0],"end":[410,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2491:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2494:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:56:1695","0:57:1698","0:58:1709","0:59:1720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:88:2184":{"id":"0:88:2184","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[24,0],"end":[29,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:76:2142":{"id":"0:76:2142","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:75:2135"},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"primitive","inner":"u32"},"default":"_"}},"0:77:2157":{"id":"0:77:2157","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[87,4],"end":[98,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:40659:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7:368":{"id":"0:7:368","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[539,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:126:1709","crate::block::BlockRngCore":"0:18:2029","`RngCore`":"0:123:1690"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:18:2029","0:154:2064","0:162:2101"],"is_stripped":false}},"b:1:3327-0:72:127":{"id":"b:1:3327-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3325:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3329:1468"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:47:659":{"id":"0:47:659","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[296,4],"end":[303,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9007:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8996:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:1720":{"id":"0:37:1720","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[237,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133:1751":{"id":"0:133:1751","crate_id":0,"name":"as_rngcore","span":{"filename":"src/lib.rs","begin":[235,4],"end":[237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2527-0:154:2064":{"id":"b:1:2527-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2529:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130:1751":{"id":"0:130:1751","crate_id":0,"name":"as_rngcore","span":{"filename":"src/lib.rs","begin":[231,4],"end":[231,49]},"visibility":"default","docs":"Upcast to an [`RngCore`] trait object.","links":{"`RngCore`":"0:123:1690"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2529:685":{"id":"1:2529:685","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51:760":{"id":"0:51:760","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[326,4],"end":[328,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:27:929":{"id":"0:27:929","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[145,4],"end":[152,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["core",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36:1709":{"id":"0:36:1709","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[222,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63:1804":{"id":"0:63:1804","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[416,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["seed",{"kind":"qualified_path","inner":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:134:1754","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[152,0],"end":[166,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonZeroU32","id":"1:22076:174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:158:489":{"id":"0:158:489","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[127,4],"end":[127,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"R"}},"0:28:760":{"id":"0:28:760","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:29:2077":{"id":"0:29:2077","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[295,0],"end":[304,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:9048:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9048:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:47:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2538-0:154:2064":{"id":"b:1:2538-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2497:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2541:127","1:2542:1454"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:65:1854":{"id":"0:65:1854","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[426,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["rng",{"kind":"generic","inner":"S"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57:1698":{"id":"0:57:1698","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[373,4],"end":[383,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1876":{"id":"0:122:1876","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[27,0],"end":[32,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111:2019":{"id":"0:111:2019","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[140,0],"end":[142,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2533-0:72:127":{"id":"b:1:2533-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2503:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2536:127","1:2537:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:134:1754":{"id":"0:134:1754","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[246,0],"end":[419,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:135:1782","0:136:1804","0:137:1817","0:142:1854"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:60","0:38"]}},"a:1:8186:4018-0:72:127":{"id":"a:1:8186:4018-0:72:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8186:4018","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[243,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:134:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:134:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:40:1782","0:41:1804","0:42:1817","0:43:1854"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2526:2147":{"id":"1:2526:2147","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2500:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[181,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2491:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2494:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:123:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:33:1695","0:34:1698","0:36:1709","0:37:1720"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2523-0:162:2101":{"id":"b:1:2523-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2497:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2526:2147"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:126:1709":{"id":"0:126:1709","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:90:2190","`RngCore::try_fill_bytes`":"0:127:1720"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:137:1817":{"id":"0:137:1817","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[335,4],"end":[364,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["state",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:1782":{"id":"0:135:1782","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2574:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2494:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[118,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9048:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:72:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:8185:4019-0:162:2101":{"id":"a:1:8185:4019-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2542:1454":{"id":"1:2542:1454","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40803:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3327-0:154:2064":{"id":"b:1:3327-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3325:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3329:1468"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[306,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:50:929","0:51:760","0:52:2077","0:53:2080"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2236-0:162:2101":{"id":"b:1:2236-0:162:2101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2230:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng64","id":"0:162:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2238:9552"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:112:2020":{"id":"0:112:2020","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[154,0],"end":[156,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u64"}}}}],["dest",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8185:4019-0:154:2064":{"id":"a:1:8185:4019-0:154:2064","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"BlockRngCore","id":"0:18:2029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8185:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BlockRng","id":"0:154:2064","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"paths":{"1:43658:3363":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:40525:4012":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:38807:3153":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:25618:2348":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:39689:3215":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:50473:1379":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:39641:3209":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:8185:4019":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:20683:9158":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:50478:634":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:46588:3455":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:2347:2182":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:29971:2628":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:40719:2650":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:20414:12501":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:50480:733":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:4001:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:3087:2645":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:39201:3162":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:4:1001":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:1714:3865":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:42549:2663":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:50486:1474":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:7525:4000":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:1896:3019":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:2588:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:8186:4018":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:2761:2343":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:2454:12131":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:44494:3375":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:43240:3331":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:48952:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:45430:3409":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:50492:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:41216:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:3150:2644":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:20814:9157":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:1529:2942":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"0:129:1749":{"crate_id":0,"path":["rand_core","CryptoRngCore"],"kind":"trait"},"1:2131:581":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:39703:3216":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:42801:3299":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:2678:224":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:43390:3350":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:39738:3222":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:2859:3896":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:40508:3239":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:5921:3025":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:21749:2350":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:40468:153":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:42651:2654":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:42819:3300":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"0:85:1628":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:2507:235":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:21637:3060":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:39491:2666":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:43458:4107":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:5697:13247":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:9059:2579":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:2813:3890":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:48965:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50489:780":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:40862:2520":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:44840:3386":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:43263:3341":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:40846:2650":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:20681:12131":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:45554:3411":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:4236:3549":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:2808:3885":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:20689:9160":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:46550:3452":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:44293:3367":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:4367:2590":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:21728:3074":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:42905:3304":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:39942:3226":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:11577:4085":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:42755:2656":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:45114:3395":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:40659:179":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:46725:3464":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"0:90:2190":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:43283:3344":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:42438:2647":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:44583:3379":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:44892:3388":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:4122:3020":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:39007:3174":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:31799:3146":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:6911:3932":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:42855:3302":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:50491:1111":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:43567:203":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:42637:2196":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:39327:3180":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:40744:2606":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:40710:2031":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:21761:2354":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"0:121:2242":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:11623:4094":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:5450:3021":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2668:218":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:22208:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:43370:3345":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:2788:3880":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"0:88:2184":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:9514:2960":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:40803:208":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:43229:4101":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:44423:3372":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:45618:3413":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:46474:3450":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:39244:3167":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:39520:3192":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:2766:2345":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:40727:2651":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:44938:3390":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:2732:2367":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:7529:4001":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:41256:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:43382:3348":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:50472:1349":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:42934:3307":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:11265:3292":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:21699:11306":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:2757:3874":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:7174:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:45348:3408":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2864:3897":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:12220:3559":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:50484:1476":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:41176:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:42701:3295":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"0:122:1876":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"1:39471:3564":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:45974:3444":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:20367:2363":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:2682:226":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:2841:3892":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:43103:3324":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:7099:4002":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:43641:159":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:2676:3869":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:11557:3554":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:31759:2327":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:48978:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:38760:3905":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:45272:3406":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:42595:3285":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:41686:109":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:42530:2662":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:7197:2372":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:2855:3895":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:20601:9165":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:41966:3275":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:39228:11287":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:2851:3894":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:10686:2669":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:42609:3288":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:42925:3306":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:42943:3308":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:10187:2657":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:44794:3385":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:11302:3297":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:4387:2592":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:4358:2948":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:2578:115":{"crate_id":1,"path":["core","default","Default"],"kind":"proc_derive"},"1:2230:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:50279:3472":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:22274:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:46568:3453":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:39580:3201":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:30205:11376":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:4303:2947":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:3932:2942":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:2776:3879":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:2847:3893":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:43628:3360":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:39673:3213":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:45508:3410":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:39983:3231":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:12195:190":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:9007:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:2989:3899":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:2800:3884":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:39542:3195":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:44393:3371":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:2820:3887":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:3640:2520":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:30041:11375":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:2745:3822":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:20564:9164":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:39964:3230":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:9546:2966":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:2503:236":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:1802:3018":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:21554:3048":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:30027:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:7145:2373":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:40633:3255":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:43585:193":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:49004:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:12386:203":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:12168:12120":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:50471:310":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:39280:3170":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:42773:2652":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:42621:3289":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:20640:12131":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"0:119:801":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:22241:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:43425:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:50483:731":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:4742:12012":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:41658:3263":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:9531:2961":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:11513:2346":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:39664:3212":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:43178:3327":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:9053:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:2679:223":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:2993:3900":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2906:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:39533:3193":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:20395:12282":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:40735:2520":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:39305:3162":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:44269:3366":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:21355:12131":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:43406:3354":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:38987:3159":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:42005:3281":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:22043:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:39028:3161":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:40786:2605":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:3242:3907":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:41950:3272":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:8187:3553":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:43250:3335":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:10118:2659":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:43398:3352":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:8611:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:4232:205":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:3989:3547":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:44746:3384":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:40936:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:39398:11284":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:9311:4052":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:44648:3381":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:20809:12131":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:22808:2347":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:39334:3181":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:46649:3460":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:46764:3465":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:40574:11290":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:44249:3365":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:1737:2753":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:21261:12285":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:20652:9156":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:43086:3323":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:50474:1458":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:42950:3180":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:40871:181":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:39367:3186":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:9276:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:46366:3448":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:22142:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:38838:196":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:9432:2959":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:31808:3148":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:2796:3886":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:3171:3901":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:2792:3882":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:42504:2666":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:39258:3168":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:8997:2574":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:46623:3458":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:2971:3904":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:42517:2667":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:48991:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:42539:2665":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:11376:2671":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:2919:3898":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:42719:3296":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:12467:4134":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:2825:3888":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:8996:208":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:44724:3383":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:2455:2328":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:43057:3313":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:4164:2588":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:2302:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:39381:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:43394:3351":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:46304:3447":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:42429:2649":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:39311:3953":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"0:111:2019":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:43151:3326":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:3205:3906":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:50487:1475":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:10719:2670":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:8753:659":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:50466:926":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:30575:181":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:2687:2594":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:1728:3015":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:40854:2651":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:4241:3550":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:2830:3889":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:6702:3991":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:9201:3557":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:30011:2630":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:2940:2371":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:40976:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:43035:4100":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:4721:3963":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:39414:3190":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:8606:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:3165:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:9316:3035":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:11090:2639":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:5527:3024":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:9057:2578":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:30603:2363":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4768:786":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:7132:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:50481:734":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:21501:3047":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:42478:2668":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:40795:191":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:45194:3396":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"0:123:1690":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:44339:3369":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:10173:2652":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:39621:3207":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:3190:12812":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:22175:2351":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:42559:2664":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:20842:3043":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:39268:3169":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:2497:148":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:38882:200":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:40645:3258":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:9268:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:21586:3054":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:42457:2660":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:3160:232":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:50488:1472":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:38822:198":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:50482:735":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:50465:369":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:40491:3237":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:41432:2579":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:21570:3049":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:9925:2654":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:42873:3303":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:9876:2650":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:41975:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:39958:3228":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"3:0:2323":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"2:0:436":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:50479:736":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:38862:197":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:11572:4086":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:39612:3206":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:22373:2352":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:229:208":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:39551:3196":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:45768:3414":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:43386:3349":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:9067:2582":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:4413:2591":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:40896:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:50470:1036":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:40777:2607":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:2719:3870":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:12355:2971":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:39935:3225":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:44546:3377":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"0:0:1892":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:9065:2581":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:41698:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:21448:3045":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:44870:3387":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:46116:3445":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:48926:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:31795:3561":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:39216:3164":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:39724:3221":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"0:162:2101":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:44361:3370":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:41136:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:43215:3328":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:48569:9193":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:9061:2580":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:39603:3205":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"0:113:2229":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:43577:209":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:2249:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:41439:2580":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:39713:3218":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:50485:1473":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:9048:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:39511:3565":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:10080:2658":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:46577:3454":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"0:154:2064":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:12147:4131":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:22109:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:7566:12541":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:3977:3546":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:41668:67":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:10045:2672":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:8292:3554":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:9968:2671":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:45584:3412":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:38926:201":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:14:2164":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:40597:3254":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:39589:3202":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:21735:2353":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:6519:2244":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:2491:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:39561:3198":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:10201:2653":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:38904:199":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"0:7:368":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:39654:3210":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:50490:1529":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:39973:2956":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:21662:11307":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:46608:3457":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:20412:12496":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:44524:3376":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:2782:3881":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:2934:2369":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:11341:3301":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:46672:3461":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:3325:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:8774:12540":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:46702:3463":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:11325:3298":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:45318:3407":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:46428:3449":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:30099:11377":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:2333:180":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"0:134:1754":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:2675:1755":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:20833:12131":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:7136:150":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:38721:3908":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:20435:12500":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:9900:2651":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:21683:11281":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:7095:4003":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:9733:220":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:46687:3462":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:29782:2342":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:45013:3392":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:43402:3353":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:2574:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:2680:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:22076:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:46597:3456":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:42190:3282":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:3388:3544":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:2297:186":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:46226:3446":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:6851:3029":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:50477:633":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:1620:2624":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:39991:3233":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:2835:3891":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:41296:3556":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:43072:3320":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:42378:3575":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:42467:2661":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:22340:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:12134:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:50467:412":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:39752:3223":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7522:3928":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:44694:3382":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:41016:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:42627:3290":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:44564:3378":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:42447:2648":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:4024:3930":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:21097:9184":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:39348:3954":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9055:2577":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:43374:3346":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:4092:3548":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:41987:3276":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:21249:2646":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:41997:3280":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"0:18:2029":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:41958:3274":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:44445:3373":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:8779:10506":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:41425:2577":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:46634:3459":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:39949:3227":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:2771:2344":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:20380:12282":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:43446:3357":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:42669:2658":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:38948:2643":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:42968:3170":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:43670:3364":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:3505:2944":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:12344:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:2227:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:41738:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"0:116:2231":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:45060:3393":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:3376:3868":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:43620:3576":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:42959:3162":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:41056:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:39207:3163":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:43378:3347":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:2804:3883":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:45091:3394":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:22010:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:41418:2578":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:38980:3562":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:39021:2589":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:50468:1492":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:48939:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:41716:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:21357:9159":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:42205:3283":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:21610:2349":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:11566:4087":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:39571:3199":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:9063:192":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:20433:12498":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"0:128:1738":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:44916:3389":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:0:489":{"crate_id":1,"path":["core"],"kind":"module"},"1:39386:3187":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:44962:3391":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:6608:4006":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:11778:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:39014:3563":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:39341:3182":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:20627:9166":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:22307:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:2500:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:4313:2589":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:9723:12131":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:30005:2629":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:44463:3374":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:39632:3208":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:39461:2949":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:41790:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:42915:3305":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:41774:2587":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:41096:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:39288:3952":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:6655:12614":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:2339:187":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:10159:2656":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:21622:11283":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:44315:3368":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:1613:580":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:3177:3903":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:46512:3451":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:10007:2655":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:44601:3380":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:2494:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:50300:3473":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:21092:9161":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:21645:3061":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:40610:4013":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:7252:157":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:20730:3043":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:40554:3247":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:2937:2370":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:42209:2680":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"0:112:2020":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:2930:2368":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:20840:9162":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:11106:2641":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}