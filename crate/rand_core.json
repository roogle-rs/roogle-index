{"root":"0:0:2644","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"0:122:2495":{"id":"0:122:2495","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[213,0],"end":[213,31]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"`RngCore`":"0:117:2443"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:67","0:43","0:140"]}}},"b:1:3077-0:72:149":{"id":"b:1:3077-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3080:2912"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2900","0:76:2907","0:77:2922","0:78:2894"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2796","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:150:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:131:2598":{"id":"0:131:2598","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[366,4],"end":[370,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[136,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:22:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[413,0],"end":[430,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:62:2526","0:63:2548","0:64:2561","0:65:2598"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3335:4794-0:143:2832":{"id":"a:1:3335:4794-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32824:3231-0:72:149":{"id":"a:1:32824:3231-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:19:2804":{"id":"0:19:2804","crate_id":0,"name":"CryptoBlockRng","span":{"filename":"src/block.rs","begin":[83,0],"end":[83,42]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information.","links":{"`CryptoRng`":"0:122:2495","`RngCore`":"0:117:2443"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"1:3095:149":{"id":"1:3095:149","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32689:4783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:57:2451":{"id":"0:57:2451","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[374,4],"end":[384,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2448":{"id":"0:136:2448","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[402,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[400,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":["0:136:2448","0:137:2451","0:138:2462","0:139:2473"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3943-0:143:2832":{"id":"b:1:3943-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:39:2548":{"id":"0:39:2548","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2498","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32765:248-0:151:2868":{"id":"a:1:32765:248-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3092-0:72:149":{"id":"b:1:3092-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32824:3231-0:151:2868":{"id":"a:1:32824:3231-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3943-0:151:2868":{"id":"b:1:3943-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3092-0:151:2868":{"id":"b:1:3092-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,0],"end":[480,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:122:2495","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2495","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32765:248-0:143:2832":{"id":"a:1:32765:248-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:143:2832":{"id":"0:143:2832","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[128,0],"end":[133,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:15:2796","`RngCore`":"0:117:2443","RngCore::next_u32":"0:118:2448","`SeedableRng`":"0:123:2498","`BlockRng64`":"0:151:2868","RngCore::fill_bytes":"0:120:2462","RngCore::next_u64":"0:119:2451","`BlockRngCore::generate`":"0:18:2802","RngCore::try_fill_bytes":"0:121:2473"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:147:582"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:23","a:1:3300:260-0:143:2832","a:1:32765:248-0:143:2832","a:1:32824:3231-0:143:2832","a:1:3335:4794-0:143:2832","a:1:42628:4937-0:143:2832","a:1:42627:4938-0:143:2832","b:1:3092-0:143:2832","b:1:2772-0:143:2832","b:1:3087-0:143:2832","b:1:3943-0:143:2832","b:1:3077-0:143:2832","b:1:2804-0:143:2832","b:1:2775-0:143:2832","b:1:3081-0:143:2832","0:148","0:29","0:20","0:36","0:43"]}}},"0:50:1208":{"id":"0:50:1208","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[314,4],"end":[322,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:494":{"id":"0:150:494","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:582":{"id":"0:156:582","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[295,4],"end":[295,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"a:1:3335:4794-0:72:149":{"id":"a:1:3335:4794-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:82:827":{"id":"0:82:827","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[134,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:2381":{"id":"0:85:2381","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[206,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:91:2951","0:93:2957","0:106:2788","0:107:2789","0:108:3002","0:111:3004"],"is_stripped":false}}},"0:119:2451":{"id":"0:119:2451","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[152,4],"end":[152,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:111:3004","`impls::next_u64_via_u32`":"0:91:2951"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"1:3091:1850":{"id":"1:3091:1850","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2847":{"id":"0:28:2847","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[179,4],"end":[183,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:966":{"id":"0:51:966","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[330,4],"end":[332,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:151:2868":{"id":"b:1:3081-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:25:1208":{"id":"0:25:1208","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[150,4],"end":[157,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:151:2868":{"id":"b:1:2775-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2777:10344"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32765:248-0:72:149":{"id":"a:1:32765:248-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32765:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42628:4937-0:143:2832":{"id":"a:1:42628:4937-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:59:2473":{"id":"0:59:2473","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[407,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:2598":{"id":"0:41:2598","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[259,4],"end":[261,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3300:260-0:151:2868":{"id":"a:1:3300:260-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2796","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:159:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:3016":{"id":"0:115:3016","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[16,0],"end":[21,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2644":{"id":"0:0:2644","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[531,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:114:1023","`SeedableRng`":"0:123:2498","`RngCore`":"0:117:2443","`impls`":"0:85:2381","`Error`":"0:72:149"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:433","0:85:2381","0:114:1023","0:4-0:72:149","0:117:2443","0:122:2495","0:123:2498"],"is_stripped":false}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[133,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10557:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42628:4937-0:151:2868":{"id":"a:1:42628:4937-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:63:2548":{"id":"0:63:2548","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2498","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159:494":{"id":"0:159:494","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:3004":{"id":"0:111:3004","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[157,0],"end":[161,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3335:4794-0:151:2868":{"id":"a:1:3335:4794-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3335:4794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:5:433":{"id":"0:5:433","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[540,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoBlockRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:120:2462","crate::block::BlockRngCore":"0:15:2796","`RngCore`":"0:117:2443"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:15:2796","0:19:2804","0:143:2832","0:151:2868"],"is_stripped":false}}},"0:4-0:72:149":{"id":"0:4-0:72:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[45,0],"end":[45,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"error::Error","name":"Error","id":"0:72:149","glob":false}}},"0:139:2473":{"id":"0:139:2473","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[264,0],"end":[264,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2495","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[245,0],"end":[262,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:38:2526","0:39:2548","0:40:2561","0:41:2598"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[432,0],"end":[432,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2495","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32824:3231-0:143:2832":{"id":"a:1:32824:3231-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32824:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2772-0:143:2832":{"id":"b:1:2772-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2774:3037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[186,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:31:2448","0:32:2451","0:34:2462","0:35:2473"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:138:2462":{"id":"0:138:2462","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42627:4938-0:151:2868":{"id":"a:1:42627:4938-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:22:827":{"id":"0:22:827","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[137,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15:2796":{"id":"0:15:2796","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[67,0],"end":[77,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:5:433"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:16:184","0:17:2800","0:18:2802"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:120:2462":{"id":"0:120:2462","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:93:2957","`RngCore::try_fill_bytes`":"0:121:2473"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:147:582":{"id":"0:147:582","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[132,4],"end":[132,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:124:2526":{"id":"0:124:2526","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[268,4],"end":[268,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\n# #[allow(dead_code)]\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3129:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:3048:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:137:2451":{"id":"0:137:2451","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:2561":{"id":"0:64:2561","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:72:149":{"id":"b:1:3087-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:123:2498":{"id":"0:123:2498","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[221,0],"end":[395,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:124:2526","0:125:2548","0:126:2561","0:131:2598"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:60","0:36"]}}},"0:40:2561":{"id":"0:40:2561","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[254,4],"end":[256,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2804-0:151:2868":{"id":"b:1:2804-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2806:10343"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56:2448":{"id":"0:56:2448","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[355,4],"end":[371,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2473":{"id":"0:121:2473","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[181,4],"end":[181,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:120:2462"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:3092-0:143:2832":{"id":"b:1:3092-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3095:149","1:3096:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58:2462":{"id":"0:58:2462","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[387,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3090:149":{"id":"1:3090:149","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:17:2800":{"id":"0:17:2800","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[73,4],"end":[73,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3045:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2796","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:3048:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2796","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:3129:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"1:2777:10344":{"id":"1:2777:10344","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:966":{"id":"0:26:966","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42627:4938-0:143:2832":{"id":"a:1:42627:4938-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3081-0:143:2832":{"id":"b:1:3081-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38:2526":{"id":"0:38:2526","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[246,4],"end":[246,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:65:2598":{"id":"0:65:2598","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:2894":{"id":"0:78:2894","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[104,4],"end":[113,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZeroU32","id":"1:23754:2889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:2451":{"id":"0:32:2451","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[199,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2806:10343":{"id":"1:2806:10343","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[146,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:25:1208","0:26:966","0:27:2844","0:28:2847"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[353,0],"end":[411,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:56:2448","0:57:2451","0:58:2462","0:59:2473"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3300:260-0:72:149":{"id":"a:1:3300:260-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108:3002":{"id":"0:108:3002","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[150,0],"end":[154,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:2789":{"id":"0:107:2789","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[145,0],"end":[147,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u64]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2775-0:143:2832":{"id":"b:1:2775-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2777:10344"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34:2462":{"id":"0:34:2462","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[224,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2561":{"id":"0:126:2561","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[311,4],"end":[340,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77:2922":{"id":"0:77:2922","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[85,4],"end":[96,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42534:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3096:1848":{"id":"1:3096:1848","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2772-0:72:149":{"id":"b:1:2772-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2774:3037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3080:2912":{"id":"1:3080:2912","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3054:156"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2804-0:143:2832":{"id":"b:1:2804-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2802:3367","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2806:10343"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:827":{"id":"0:47:827","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[300,4],"end":[307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:857":{"id":"0:84:857","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[152,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["code",{"resolved_path":{"name":"NonZeroU32","id":"1:23754:2889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:827":{"id":"0:80:827","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[117,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10516:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10497:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3077-0:151:2868":{"id":"b:1:3077-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3080:2912"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:72:149":{"id":"0:72:149","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:1:3300:260-0:72:149","a:1:32765:248-0:72:149","a:1:32824:3231-0:72:149","a:1:3335:4794-0:72:149","a:1:42628:4937-0:72:149","a:1:42627:4938-0:72:149","b:1:3092-0:72:149","b:1:2772-0:72:149","b:1:3087-0:72:149","b:1:3943-0:72:149","b:1:3077-0:72:149","b:1:2775-0:72:149","b:1:3081-0:72:149","0:83","0:81","0:79"]}}},"0:116:2629":{"id":"0:116:2629","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3087-0:151:2868":{"id":"b:1:3087-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42627:4938-0:72:149":{"id":"a:1:42627:4938-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42627:4938","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZero","id":"1:884:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:857"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2775-0:72:149":{"id":"b:1:2775-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2777:10344"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:35:2473":{"id":"0:35:2473","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[239,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42666:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:2907":{"id":"0:76:2907","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:75:2900"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"b:1:2772-0:151:2868":{"id":"b:1:2772-0:151:2868","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2774:3037"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[299,0],"end":[308,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:47:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:52:2844":{"id":"0:52:2844","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[337,4],"end":[340,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2774:3037":{"id":"1:2774:3037","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:2788":{"id":"0:106:2788","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u32]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2443":{"id":"0:117:2443","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[139,0],"end":[189,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:118:2448","`SeedableRng`":"0:123:2498","RngCore::fill_bytes":"0:120:2462","RngCore::next_u64":"0:119:2451","`CryptoRng`":"0:122:2495","RngCore::try_fill_bytes":"0:121:2473","`SeedableRng::from_rng`":"0:131:2598","`impls`":"0:85:2381"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:118:2448","0:119:2451","0:120:2462","0:121:2473"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:29","0:133","0:54"]}}},"b:1:3943-0:72:149":{"id":"b:1:3943-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3945:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:31:2448":{"id":"0:31:2448","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[188,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:72:149":{"id":"b:1:3081-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3083:857":{"id":"1:3083:857","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42628:4937-0:72:149":{"id":"a:1:42628:4937-0:72:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42628:4937","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:91:2951":{"id":"0:91:2951","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2957":{"id":"0:93:2957","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[38,0],"end":[54,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2443","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1023":{"id":"0:114:1023","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[54,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:115:3016","0:116:2629"],"is_stripped":false}}},"0:16:184":{"id":"0:16:184","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[69,4],"end":[69,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:151:2868":{"id":"0:151:2868","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[290,0],"end":[296,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:119:2451","`BlockRngCore`":"0:15:2796","`RngCore`":"0:117:2443","RngCore::next_u32":"0:118:2448","RngCore::try_fill_bytes":"0:121:2473","`BlockRng`":"0:143:2832","RngCore::fill_bytes":"0:120:2462"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:156:582"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:3300:260-0:151:2868","a:1:32765:248-0:151:2868","a:1:32824:3231-0:151:2868","a:1:3335:4794-0:151:2868","a:1:42628:4937-0:151:2868","a:1:42627:4938-0:151:2868","b:1:3092-0:151:2868","b:1:2772-0:151:2868","b:1:3087-0:151:2868","b:1:3943-0:151:2868","b:1:3077-0:151:2868","b:1:2804-0:151:2868","b:1:2775-0:151:2868","b:1:3081-0:151:2868","0:67","0:60","0:54","0:45","0:157"]}}},"0:18:2802":{"id":"0:18:2802","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[76,4],"end":[76,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2796","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:27:2844":{"id":"0:27:2844","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2847":{"id":"0:53:2847","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3300:260-0:143:2832":{"id":"a:1:3300:260-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32766:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:75:2900":{"id":"0:75:2900","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:118:2448":{"id":"0:118:2448","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:108:3002"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[116,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10552:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3087-0:143:2832":{"id":"b:1:3087-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3090:149","1:3091:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3945:1863":{"id":"1:3945:1863","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40249:3957","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3077-0:143:2832":{"id":"b:1:3077-0:143:2832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2832","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3080:2912"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[310,0],"end":[351,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2868","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:50:1208","0:51:966","0:52:2844","0:53:2847"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62:2526":{"id":"0:62:2526","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[414,4],"end":[414,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:125:2548":{"id":"0:125:2548","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[295,4],"end":[295,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2498","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}}},"paths":{"1:34406:4815":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:47518:4406":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:13024:4216":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:23370:10416":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:11102:11295":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:40249:3957":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:41204:4110":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:22295:10079":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:11807:3819":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:41374:4132":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:13283:3121":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:4564:4438":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:4918:3783":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:7096:3802":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:7852:4887":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:31167:3454":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:32735:4472":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:23609:3875":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:34194:4811":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:41046:4102":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:6284:3790":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:10195:10994":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:23405:10412":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:44696:4234":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:5389:452":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:45379:4493":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:22052:11035":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:46794:4337":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"4:756:14361":{"crate_id":4,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:22177:10081":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:47489:4405":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:22991:10168":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:44239:4489":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"0:143:2832":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:47672:4416":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:32767:257":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:41235:4114":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:45154:4281":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:41388:4133":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:44374:4213":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:2890:206":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:43225:3445":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"3:0:3102":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:41317:4125":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:34060:4814":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:53228:779":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:41255:4116":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:46762:4335":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:44965:4255":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"0:85:2381":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:10770:164":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:43239:3446":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:22568:11084":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:41110:4098":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:34925:4819":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"4:762:3171":{"crate_id":4,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"1:53230:936":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:43090:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:6398:3793":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:44853:4251":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:3759:4833":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:47661:4415":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"0:115:3016":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:42514:4176":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"4:942:3208":{"crate_id":4,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"1:53214:434":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:6907:3794":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:10563:3446":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:12854:4461":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"4:2780:3216":{"crate_id":4,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:22954:4759":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:45118:4272":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:43997:4206":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:22086:11024":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:41523:4138":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:43475:3454":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"4:760:3170":{"crate_id":4,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"1:44150:4487":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3054:156":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:41398:4135":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:2652:694":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:45150:4280":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:2792:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:53229:758":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"1:41067:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:46581:4318":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:3025:4566":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:45000:4262":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:47083:4364":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:46354:4298":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:23620:3876":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:23587:3873":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:23576:3872":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:46371:4301":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:46403:4303":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:47370:4402":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:23214:3835":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:10497:237":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:43787:4202":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:41217:4111":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:47615:4411":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:8391:4923":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:5006:3184":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:45324:175":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:2859:146":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:47802:4431":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:31152:3500":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:40909:4093":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:43232:3444":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:10498:3443":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:10972:11297":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:47635:4413":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:23432:3862":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:30884:3120":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:45411:4495":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:46418:4304":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:8581:189":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:44807:4240":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:44302:3825":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:3045:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:44687:4233":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"0:116:2629":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"4:2569:3215":{"crate_id":4,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"1:44404:3814":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:43559:149":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"4:512:3158":{"crate_id":4,"path":["zerocopy","DstLayout"],"kind":"struct"},"1:8897:4922":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:46610:4327":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:46861:4340":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"4:558:3162":{"crate_id":4,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:45134:4276":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:10552:122":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:11928:4458":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:3400:4827":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:33993:4810":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:13084:4224":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:22118:10082":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"4:2099:3213":{"crate_id":4,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"1:4611:4856":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:44979:5021":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:32749:3164":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:53223:1853":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:10009:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:2766:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11246:11268":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:13965:4466":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"4:122:3192":{"crate_id":4,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:47100:4365":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:47166:4367":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"4:1826:3212":{"crate_id":4,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"1:41747:4144":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"4:34:3201":{"crate_id":4,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"0:93:2957":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:45321:162":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:47687:4417":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:24094:247":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:42474:4932":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:23267:3836":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:45196:4284":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:43246:3447":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:40152:226":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:46506:4313":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:22820:10164":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:46631:4328":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:13100:4227":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:46745:4334":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:10565:3447":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:23081:10159":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:23484:11084":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:8888:161":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:46567:4317":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:43542:3454":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:44472:4220":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:42903:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"4:1408:3210":{"crate_id":4,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"1:22926:11084":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"4:796:3206":{"crate_id":4,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"1:2904:2947":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:45130:4275":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:10559:3444":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:42627:4938":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"4:3229:3218":{"crate_id":4,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"4:3601:3199":{"crate_id":4,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"1:34752:4817":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:40847:4088":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:23463:3137":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:46471:4311":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:43465:4183":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:34127:4812":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:11900:4223":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:41326:4126":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"4:2991:3217":{"crate_id":4,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:53219:1348":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:41039:4101":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:5490:1004":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:23532:3869":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"1:23005:4759":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:3517:4837":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:10567:217":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:41264:4118":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:32856:117":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:3799:10682":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:3774:158":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:44703:4097":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:53241:1955":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:3535:127":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:43580:3455":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:44219:4488":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:22189:3831":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:53233:930":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:44928:4254":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:44276:3824":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:44380:4214":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"4:764:3172":{"crate_id":4,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"1:2668:4760":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:46339:4297":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:41083:4909":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:53235:1893":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:7102:3801":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:13988:4122":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:41072:4104":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:40922:4094":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:4975:4866":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:45122:4273":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:7917:11085":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"4:3657:3175":{"crate_id":4,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"1:10169:827":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:22084:11040":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"0:111:3004":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:40932:4095":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:26494:281":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:42562:3804":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:42829:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:41175:3824":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:2769:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:42462:4172":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:4183:3387":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:3341:4772":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:44422:3819":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:41547:4140":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:10190:10934":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:41781:4149":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:40192:227":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"4:546:3160":{"crate_id":4,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"1:22040:11035":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:14279:3830":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"4:3587:14573":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"1:2854:212":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:757:3169":{"crate_id":4,"path":["zerocopy","ByteSlice"],"kind":"trait"},"1:3548:3188":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"4:3567:14345":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:42328:4931":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:10778:168":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:23298:3842":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:3373:4804":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:32766:250":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:47033:4362":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:3576:154":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"4:3552:14344":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:13329:4450":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:22728:10080":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"4:544:2949":{"crate_id":4,"path":["zerocopy","NoCell"],"kind":"trait"},"1:8424:157":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:3140:149":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:4050:10671":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:2816:3368":{"crate_id":1,"path":["core","clone","InitializingSlice"],"kind":"struct"},"1:10569:3448":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:2282:200":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:22573:10084":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:4576:4439":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:45338:238":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:44554:4225":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:43520:10588":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:53231:918":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:39421:4825":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:53226:760":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"1:7968:4914":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:45387:4288":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:46777:4336":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:47547:4407":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:3293:276":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:42940:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:33297:4806":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:22726:11084":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:40080:4830":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:41339:4127":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:40242:4474":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:44508:4222":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"0:107:2789":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:2029:4848":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:47415:4403":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:11603:3804":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:13349:5004":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:40951:4088":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:47460:4404":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:42534:205":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:53234:911":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:41733:4142":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"4:3666:3173":{"crate_id":4,"path":["zerocopy","CastType"],"kind":"enum"},"1:12446:4460":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:42496:4173":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:32756:3944":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:43534:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:44990:4258":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:45126:4274":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:3458:4818":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"2:0:524":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:14259:3828":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:42578:3387":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:884:201":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:46538:4315":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:43993:4205":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:22285:11084":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2802:3367":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"1:12838:4970":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:11652:3814":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:41168:4476":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:43765:168":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:43504:10582":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:53236:1875":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:42722:3387":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:23354:3849":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:43795:4203":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:3388:4807":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:9683:4450":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:3403:4828":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:40134:223":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:41296:4123":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:7107:3799":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:42274:181":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:22069:11029":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:44311:4491":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"0:151:2868":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:40084:3951":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:41273:4119":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:44321:3826":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:47646:4414":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:13061:4221":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:11734:4454":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:22030:3148":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"0:122:2495":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:42628:4937":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:33721:4808":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"4:1617:3211":{"crate_id":4,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:6207:4848":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:47216:4369":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:46439:4309":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:44210:3821":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:40097:224":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:47121:4366":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:22864:10165":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:45172:134":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:40212:4832":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:42666:237":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:11446:11084":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:41195:4477":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:32742:4473":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:5037:3457":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:14236:118":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:3851:131":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:8387:4924":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:41349:4129":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:3769:267":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"4:32:3200":{"crate_id":4,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"1:44331:4492":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:3295:120":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:22607:11027":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:15:2929":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:11845:4456":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:40959:4097":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:22169:11084":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:23439:3136":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:4849:4441":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:4928:3164":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:23048:10160":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:23034:11084":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:23282:3837":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:44201:3820":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:46386:4302":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:8526:3229":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:44289:4490":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:42440:10442":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:4630:4857":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"4:3645:3174":{"crate_id":4,"path":["zerocopy","SizeInfo"],"kind":"enum"},"1:41148:4475":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:42755:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:45031:4271":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"4:587:2948":{"crate_id":4,"path":["zerocopy","IntoBytes"],"kind":"trait"},"1:44678:4232":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:234:237":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:5410:12844":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:42356:4165":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:41771:4148":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:3573:153":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:45400:13652":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:31146:3187":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2403:3779":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:47710:4418":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:43053:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:47568:4408":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:46921:4358":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:44363:4212":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:41740:4143":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:45207:5031":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"4:595:3163":{"crate_id":4,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:23554:3870":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:46485:4312":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:53227:763":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:45421:191":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:31525:207":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:10571:3449":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:3181:4436":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:53237:1881":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:2206:4775":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:40112:221":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:40943:4096":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:5448:4445":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:3061:270":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:44250:4207":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"0:5:433":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:47293:4401":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:47606:4410":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:3780:4834":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:23543:3756":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:13397:5014":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:43777:4198":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:41098:4107":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:22297:3831":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:13344:5005":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:3300:260":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:44668:4231":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"4:1183:3209":{"crate_id":4,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:44626:4229":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:2142:1393":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:3057:271":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:3814:115":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:3570:152":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:10335:3464":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:53216:490":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:46552:4316":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:22067:11037":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"0:15:2796":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:8891:4885":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:44608:4228":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:53238:1887":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:47589:4409":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:11772:4455":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:43980:4204":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:44822:4247":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"0:123:2498":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:10818:3811":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:32731:4471":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:22595:3832":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:2208:4776":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:46324:4294":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:13948:4463":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"1:3564:3228":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:53239:1869":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:44526:4223":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:47062:4363":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:3786:4836":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:43014:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"0:108:3002":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:42977:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:44658:4230":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:9533:4448":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"1:53232:924":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:31552:3148":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4588:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:1898:4708":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:23452:3123":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:53217:1915":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:38732:4822":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:42618:3475":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:42706:3804":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:53242:1455":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:4854:4442":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:40894:10436":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:4984:3183":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:13559:122":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8444:3230":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:3408:4829":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:0:582":{"crate_id":1,"path":["core"],"kind":"module"},"1:8935:10938":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"4:535:3159":{"crate_id":4,"path":["zerocopy","KnownLayout"],"kind":"trait"},"1:8473:133":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:46876:4341":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:11109:11298":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"1:32689:4783":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:4727:3782":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:10516:155":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:42649:3473":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:23346:3848":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"4:427:14423":{"crate_id":4,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:23598:3874":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:41054:4103":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:7746:3017":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:23161:3833":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:41287:4122":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:53243:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:23321:3122":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"0:117:2443":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"4:139:71":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"1:4696:4440":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:40036:4838":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:22952:12854":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:12413:4459":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:38677:4821":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:31178:10415":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"0:114:1023":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:22902:10166":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:8140:3803":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"4:3386:3219":{"crate_id":4,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"1:44572:4226":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:42587:3474":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:32765:248":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:46713:4332":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:23076:10161":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:45316:4287":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:46523:4314":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:44454:4219":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:42570:4453":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:2215:3775":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:10813:4963":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:3553:4826":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:11695:3818":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:42553:184":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:44836:4250":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:40000:4839":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:47763:4421":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:881:3124":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:43740:4194":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:22098:11032":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:38842:4824":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4775:3456":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:2666:4759":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:40883:4090":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:45138:4277":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"0:19:2804":{"crate_id":0,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"1:10561:3445":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:3305:3185":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:3605:4831":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:53240:993":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:47626:4412":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:42296:4155":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:14371:5057":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:4486:4848":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:44786:5020":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:3696:222":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:41762:4146":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:53215:1204":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:43492:4192":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:40262:3959":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:42714:4453":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:10557:132":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:34261:4813":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"4:3594:14345":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"1:41358:4130":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:46823:4338":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:4845:232":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:43756:4197":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:23642:3878":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:23754:2889":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"type_alias"},"1:4:1288":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:40435:4784":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:42731:207":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:45146:4279":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:10004:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:3129:126":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:44712:4088":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:23631:3877":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"0:0:2644":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:46663:4330":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3941:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:43748:4196":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:23390:10414":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:41005:4100":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:40172:225":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:32824:3231":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:14105:4467":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:46971:4360":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:41756:4145":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:38787:4823":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:53220:349":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:43127:4452":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:46844:4339":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:9570:4449":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8200:4859":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:11627:4453":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:14080:216":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:42658:4181":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:45142:4278":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:32825:3946":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:53221:1729":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:45013:4268":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:45346:218":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:14053:11164":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:44390:4098":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:44721:4096":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:31114:3186":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:3335:4794":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:46648:4329":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:2112:3496":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:7851:4886":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:22171:10078":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:13338:5006":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:3378:4809":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:45437:4291":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:46730:4333":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:42792:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:41305:4124":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:45328:230":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:2209:4748":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:34579:4816":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:41789:4151":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:33509:4805":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:811:3207":{"crate_id":4,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"1:44229:3823":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:47740:4420":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:3051:174":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:23521:3868":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:23565:3871":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"4:0:2645":{"crate_id":4,"path":["zerocopy"],"kind":"module"},"1:45448:4292":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:46988:4361":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:45460:4293":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:36801:4820":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"4:607:3164":{"crate_id":4,"path":["zerocopy","Ref"],"kind":"struct"},"1:53222:1763":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:3024:11084":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:23332:10431":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:8435:176":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:46692:4331":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:22116:11084":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"0:106:2788":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:47195:4368":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:11914:4457":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:40853:4089":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:2105:693":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:41245:145":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:44350:4209":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:11886:4222":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"0:91:2951":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:46950:4359":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:32854:4709":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:2896:213":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:13138:3818":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:41533:4139":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"4:2342:3214":{"crate_id":4,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"1:11456:251":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:44901:4253":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:46456:4310":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:41138:3784":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:22940:10167":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:3048:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:47725:4419":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:42312:4157":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:40966:4882":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:42866:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:41226:4113":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"4:553:3161":{"crate_id":4,"path":["zerocopy","FromZeros"],"kind":"trait"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"zerocopy","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}