{"root":"0:0:2263","crate_version":"0.9.0-alpha.1","includes_private":false,"index":{"a:1:32073:2846-0:151:2485":{"id":"a:1:32073:2846-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:15:2413":{"id":"0:15:2413","crate_id":0,"name":"BlockRngCore","span":{"filename":"src/block.rs","begin":[67,0],"end":[77,1]},"visibility":"public","docs":"A trait for RNGs which do not generate random numbers individually, but in\nblocks (typically `[u32; N]`). This technique is commonly used by\ncryptographic RNGs to improve performance.\n\nSee the [module][crate::block] documentation for details.","links":{"crate::block":"0:5:404"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:16:172","0:17:2417","0:18:2419"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[28,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2518","0:76:2525","0:77:2540","0:78:2512"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2413","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:150:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111:2623":{"id":"0:111:2623","crate_id":0,"name":"next_u64_via_fill","span":{"filename":"src/impls.rs","begin":[157,0],"end":[161,1]},"visibility":"public","docs":"Implement `next_u64` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[136,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10244:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10244:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:22:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[413,0],"end":[430,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:62:2145","0:63:2167","0:64:2180","0:65:2217"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:47:787":{"id":"0:47:787","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[300,4],"end":[307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10218:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10199:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:2180":{"id":"0:40:2180","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[254,4],"end":[256,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1161":{"id":"0:50:1161","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[314,4],"end":[322,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2635":{"id":"0:115:2635","crate_id":0,"name":"read_u32_into","span":{"filename":"src/le.rs","begin":[16,0],"end":[21,1]},"visibility":"public","docs":"Reads unsigned 32 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2069":{"id":"0:119:2069","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[152,4],"end":[152,34]},"visibility":"default","docs":"Return the next random `u64`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","links":{"`impls::next_u64_via_fill`":"0:111:2623","`impls::next_u64_via_u32`":"0:91:2569"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:3103:246-0:143:2449":{"id":"a:1:3103:246-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2895-0:143:2449":{"id":"b:1:2895-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2880-0:72:136":{"id":"b:1:2880-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2883:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:117:2061":{"id":"0:117:2061","crate_id":0,"name":"RngCore","span":{"filename":"src/lib.rs","begin":[139,0],"end":[189,1]},"visibility":"public","docs":"The core of a random number generator.\n\nThis trait encapsulates the low-level functionality common to all\ngenerators, and is the \"back end\", to be implemented by generators.\nEnd users should normally use the `Rng` trait from the [`rand`] crate,\nwhich is automatically implemented for every type implementing `RngCore`.\n\nThree different methods for generating random data are provided since the\noptimal implementation of each is dependent on the type of generator. There\nis no required relationship between the output of each; e.g. many\nimplementations of [`fill_bytes`] consume a whole number of `u32` or `u64`\nvalues and drop any remaining unused bytes. The same can happen with the\n[`next_u32`] and [`next_u64`] methods, implementations may discard some\nrandom bits for efficiency.\n\nThe [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error\nhandling; it is not deemed sufficiently useful to add equivalents for\n[`next_u32`] or [`next_u64`] since the latter methods are almost always used\nwith algorithmic generators (PRNGs), which are normally infallible.\n\nImplementers should produce bits uniformly. Pathological RNGs (e.g. always\nreturning the same value, or never setting certain bits) can break rejection\nsampling used by random distributions, and also break other RNGs when\nseeding them via [`SeedableRng::from_rng`].\n\nAlgorithmic generators implementing [`SeedableRng`] should normally have\n*portable, reproducible* output, i.e. fix Endianness when converting values\nto avoid platform differences, and avoid making any changes which affect\noutput (except by communicating that the release has breaking changes).\n\nTypically an RNG will implement only one of the methods available\nin this trait directly, then use the helper functions from the\n[`impls`] module to implement the other methods.\n\nIt is recommended that implementations also implement:\n\n- `Debug` with a custom implementation which *does not* print any internal\n  state (at least, [`CryptoRng`]s should not risk leaking state through\n  `Debug`).\n- `Serialize` and `Deserialize` (from Serde), preferably making Serde\n  support optional at the crate level in PRNG libs.\n- `Clone`, if possible.\n- *never* implement `Copy` (accidental copies may cause repeated values).\n- *do not* implement `Default` for pseudorandom generators, but instead\n  implement [`SeedableRng`], to guide users towards proper seeding.\n  External / hardware RNGs can choose to implement `Default`.\n- `Eq` and `PartialEq` could be implemented, but are probably not useful.\n\n# Example\n\nA simple example, obviously not generating very *random* output:\n\n```\n#![allow(dead_code)]\nuse rand_core::{RngCore, Error, impls};\n\nstruct CountingRng(u64);\n\nimpl RngCore for CountingRng {\n    fn next_u32(&mut self) -> u32 {\n        self.next_u64() as u32\n    }\n\n    fn next_u64(&mut self) -> u64 {\n        self.0 += 1;\n        self.0\n    }\n\n    fn fill_bytes(&mut self, dest: &mut [u8]) {\n        impls::fill_bytes_via_next(self, dest)\n    }\n\n    fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {\n        Ok(self.fill_bytes(dest))\n    }\n}\n```\n\n[`rand`]: https://docs.rs/rand\n[`try_fill_bytes`]: RngCore::try_fill_bytes\n[`fill_bytes`]: RngCore::fill_bytes\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64","links":{"RngCore::next_u32":"0:118:2066","`SeedableRng`":"0:123:2117","RngCore::fill_bytes":"0:120:2080","RngCore::next_u64":"0:119:2069","`CryptoRng`":"0:122:2114","RngCore::try_fill_bytes":"0:121:2091","`SeedableRng::from_rng`":"0:131:2217","`impls`":"0:85:1999"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:118:2066","0:119:2069","0:120:2080","0:121:2091"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:133","0:29","0:54"]}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[400,0],"end":[420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":["0:136:2066","0:137:2069","0:138:2080","0:139:2091"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:151:2485":{"id":"0:151:2485","crate_id":0,"name":"BlockRng64","span":{"filename":"src/block.rs","begin":[290,0],"end":[296,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThis is similar to [`BlockRng`], but specialized for algorithms that operate\non `u64` values.\n\nNo whole generated `u64` values are thrown away and all values are consumed\nin-order. [`next_u64`] simply takes the next available `u64` value.\n[`next_u32`] is however a bit special: half of a `u64` is consumed, leaving\nthe other half in the buffer. If the next function called is [`next_u32`]\nthen the other half is then consumed, however both [`next_u64`] and\n[`fill_bytes`] discard the rest of any half-consumed `u64`s when called.\n\n[`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`\nvalues. If the requested length is not a multiple of 8, some bytes will be\ndiscarded.\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"RngCore::next_u64":"0:119:2069","`BlockRngCore`":"0:15:2413","`RngCore`":"0:117:2061","RngCore::next_u32":"0:118:2066","RngCore::try_fill_bytes":"0:121:2091","`BlockRng`":"0:143:2449","RngCore::fill_bytes":"0:120:2080"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:156:550"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:48","a:1:3103:246-0:151:2485","a:1:32014:236-0:151:2485","a:1:41675:4534-0:151:2485","a:1:41674:4535-0:151:2485","a:1:32073:2846-0:151:2485","a:1:3138:4389-0:151:2485","b:1:2895-0:151:2485","b:1:2884-0:151:2485","b:1:2610-0:151:2485","b:1:2607-0:151:2485","b:1:2880-0:151:2485","b:1:3719-0:151:2485","b:1:2890-0:151:2485","0:60","0:67","0:157","0:45","0:54"]}}},"b:1:2610-0:143:2449":{"id":"b:1:2610-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2612:9944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:2145":{"id":"0:124:2145","crate_id":0,"name":"Seed","span":{"filename":"src/lib.rs","begin":[268,4],"end":[268,45]},"visibility":"default","docs":"Seed type, which is restricted to types mutably-dereferenceable as `u8`\narrays (we recommend `[u8; N]` for some `N`).\n\nIt is recommended to seed PRNGs with a seed of at least circa 100 bits,\nwhich means an array of `[u8; 12]` or greater to avoid picking RNGs with\npartially overlapping periods.\n\nFor cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.\n\n\n# Implementing `SeedableRng` for RNGs with large seeds\n\nNote that the required traits `core::default::Default` and\n`core::convert::AsMut<u8>` are not implemented for large arrays\n`[u8; N]` with `N` > 32. To be able to implement the traits required by\n`SeedableRng` for RNGs with such large seeds, the newtype pattern can be\nused:\n\n```\nuse rand_core::SeedableRng;\n\nconst N: usize = 64;\npub struct MyRngSeed(pub [u8; N]);\n# #[allow(dead_code)]\npub struct MyRng(MyRngSeed);\n\nimpl Default for MyRngSeed {\n    fn default() -> MyRngSeed {\n        MyRngSeed([0; N])\n    }\n}\n\nimpl AsMut<[u8]> for MyRngSeed {\n    fn as_mut(&mut self) -> &mut [u8] {\n        &mut self.0\n    }\n}\n\nimpl SeedableRng for MyRng {\n    type Seed = MyRngSeed;\n\n    fn from_seed(seed: MyRngSeed) -> MyRng {\n        MyRng(seed)\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2932:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2851:76","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:5:404":{"id":"0:5:404","crate_id":0,"name":"block","span":{"filename":"src/block.rs","begin":[9,0],"end":[540,1]},"visibility":"public","docs":"The `BlockRngCore` trait and implementation helpers\n\nThe [`BlockRngCore`] trait exists to assist in the implementation of RNGs\nwhich generate a block of data in a cache instead of returning generated\nvalues directly.\n\nUsage of this trait is optional, but provides two advantages:\nimplementations only need to concern themselves with generation of the\nblock, not the various [`RngCore`] methods (especially [`fill_bytes`], where\nthe optimal implementations are not trivial), and this allows\n`ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic\nreseeding with very low overhead.\n\n# Example\n\n```no_run\nuse rand_core::{RngCore, SeedableRng};\nuse rand_core::block::{BlockRngCore, BlockRng};\n\nstruct MyRngCore;\n\nimpl BlockRngCore for MyRngCore {\n    type Item = u32;\n    type Results = [u32; 16];\n\n    fn generate(&mut self, results: &mut Self::Results) {\n        unimplemented!()\n    }\n}\n\nimpl SeedableRng for MyRngCore {\n    type Seed = [u8; 32];\n    fn from_seed(seed: Self::Seed) -> Self {\n        unimplemented!()\n    }\n}\n\n// optionally, also implement CryptoBlockRng for MyRngCore\n\n// Final RNG.\nlet mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);\nprintln!(\"First value: {}\", rng.next_u32());\n```\n\n[`BlockRngCore`]: crate::block::BlockRngCore\n[`fill_bytes`]: RngCore::fill_bytes","links":{"RngCore::fill_bytes":"0:120:2080","crate::block::BlockRngCore":"0:15:2413","`RngCore`":"0:117:2061"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:15:2413","0:19:2421","0:143:2449","0:151:2485"],"is_stripped":false}}},"a:1:3138:4389-0:151:2485":{"id":"a:1:3138:4389-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:93:2575":{"id":"0:93:2575","crate_id":0,"name":"fill_bytes_via_next","span":{"filename":"src/impls.rs","begin":[38,0],"end":[54,1]},"visibility":"public","docs":"Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.\n\nThe fastest way to fill a slice is usually to work as long as possible with\nintegers. That is why this method mostly uses `next_u64`, and only when\nthere are 4 or less bytes remaining at the end of the slice it uses\n`next_u32` once.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2898:136":{"id":"1:2898:136","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:31938:4378","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:1:41675:4534-0:151:2485":{"id":"a:1:41675:4534-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[480,0],"end":[480,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoRng","id":"0:122:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"R"}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3719-0:151:2485":{"id":"b:1:3719-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32014:236-0:72:136":{"id":"a:1:32014:236-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:22:787":{"id":"0:22:787","crate_id":0,"name":"fmt","span":{"filename":"src/block.rs","begin":[137,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10218:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10199:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:151:2485":{"id":"b:1:2610-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2612:9944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2091":{"id":"0:59:2091","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[407,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41674:4535-0:72:136":{"id":"a:1:41674:4535-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2607-0:143:2449":{"id":"b:1:2607-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2609:2656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3719-0:143:2449":{"id":"b:1:3719-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159:462":{"id":"0:159:462","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2883:2530":{"id":"1:2883:2530","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2857:143"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:72:136":{"id":"b:1:2610-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2612:9944"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2609:2656":{"id":"1:2609:2656","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:2569":{"id":"0:91:2569","crate_id":0,"name":"next_u64_via_u32","span":{"filename":"src/impls.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Implement `next_u64` via `next_u32`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2895-0:72:136":{"id":"b:1:2895-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:4-0:72:136":{"id":"0:4-0:72:136","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[45,0],"end":[45,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"error::Error","name":"Error","id":"0:72:136","glob":false}}},"a:1:41674:4535-0:151:2485":{"id":"a:1:41674:4535-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:106:2403":{"id":"0:106:2403","crate_id":0,"name":"fill_via_u32_chunks","span":{"filename":"src/impls.rs","begin":[127,0],"end":[129,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u32, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u32]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u32` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 4` rounded up.\n\n# Example\n(from `IsaacRng`)\n\n```ignore\nfn fill_bytes(&mut self, dest: &mut [u8]) {\n    let mut read_len = 0;\n    while read_len < dest.len() {\n        if self.index >= self.rsl.len() {\n            self.isaac();\n        }\n\n        let (consumed_u32, filled_u8) =\n            impls::fill_via_u32_chunks(&mut self.rsl[self.index..],\n                                       &mut dest[read_len..]);\n\n        self.index += consumed_u32;\n        read_len += filled_u8;\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2886:817":{"id":"1:2886:817","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2217":{"id":"0:131:2217","crate_id":0,"name":"from_rng","span":{"filename":"src/lib.rs","begin":[366,4],"end":[370,5]},"visibility":"default","docs":"Create a new PRNG seeded from another `Rng`.\n\nThis may be useful when needing to rapidly seed many PRNGs from a master\nPRNG, and to allow forking of PRNGs. It may be considered deterministic.\n\nThe master PRNG should be at least as high quality as the child PRNGs.\nWhen seeding non-cryptographic child PRNGs, we recommend using a\ndifferent algorithm for the master PRNG (ideally a CSPRNG) to avoid\ncorrelations between the child PRNGs. If this is not possible (e.g.\nforking using small non-crypto PRNGs) ensure that your PRNG has a good\nmixing function on the output or consider use of a hash function with\n`from_seed`.\n\nNote that seeding `XorShiftRng` from another `XorShiftRng` provides an\nextreme example of what can go wrong: the new PRNG will be a clone\nof the parent.\n\nPRNG implementations are allowed to assume that a good RNG is provided\nfor seeding, and that it is cryptographically secure when appropriate.\nAs of `rand` 0.7 / `rand_core` 0.5, implementations overriding this\nmethod should ensure the implementation satisfies reproducibility\n(in prior versions this was not required).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"R"}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32014:236-0:143:2449":{"id":"a:1:32014:236-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2884-0:143:2449":{"id":"b:1:2884-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58:2080":{"id":"0:58:2080","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[387,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2114":{"id":"0:122:2114","crate_id":0,"name":"CryptoRng","span":{"filename":"src/lib.rs","begin":[213,0],"end":[213,31]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\n*Cryptographically secure generators*, also known as *CSPRNGs*, should\nsatisfy an additional properties over other generators: given the first\n*k* bits of an algorithm's output\nsequence, it should not be possible using polynomial-time algorithms to\npredict the next bit with probability significantly greater than 50%.\n\nSome generators may satisfy an additional property, however this is not\nrequired by this trait: if the CSPRNG's state is revealed, it should not be\ncomputationally-feasible to reconstruct output prior to this. Some other\ngenerators allow backwards-computation and are considered *reversible*.\n\nNote that this trait is provided for guidance only and cannot guarantee\nsuitability for cryptographic applications. In general it should only be\nimplemented for well-reviewed code implementing well-regarded algorithms.\n\nNote also that use of a `CryptoRng` does not protect against other\nweaknesses such as seeding from a weak entropy source or leaking state.\n\n[`BlockRngCore`]: block::BlockRngCore","links":{"`RngCore`":"0:117:2061"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:67","0:43","0:140"]}}},"0:32:2069":{"id":"0:32:2069","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[199,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2080":{"id":"0:34:2080","crate_id":0,"name":"fill_bytes","span":{"filename":"src/block.rs","begin":[224,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:2145":{"id":"0:38:2145","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[246,4],"end":[246,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:35:2091":{"id":"0:35:2091","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/block.rs","begin":[239,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:2525":{"id":"0:76:2525","crate_id":0,"name":"INTERNAL_START","span":{"filename":"src/error.rs","begin":[42,4],"end":[42,44]},"visibility":"public","docs":"Codes below this point represent OS Errors (i.e. positive i32 values).\nCodes at or above this point, but below [`Error::CUSTOM_START`] are\nreserved for use by the `rand` and `getrandom` crates.\n\nThis is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","links":{"`Error::CUSTOM_START`":"0:75:2518"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[288,9],"end":[288,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:15:2413","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:159:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[133,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10249:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2899:1784":{"id":"1:2899:1784","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2167":{"id":"0:125:2167","crate_id":0,"name":"from_seed","span":{"filename":"src/lib.rs","begin":[295,4],"end":[295,43]},"visibility":"default","docs":"Create a new PRNG using the given seed.\n\nPRNG implementations are allowed to assume that bits in the seed are\nwell distributed. That means usually that the number of one and zero\nbits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.\nNote that many non-cryptographic PRNGs will show poor quality output\nif this is not adhered to. If you wish to seed from simple numbers, use\n`seed_from_u64` instead.\n\nAll PRNG implementations should be reproducible unless otherwise noted:\ngiven a fixed `seed`, the same sequence of output should be produced\non all runs, library versions and architectures (e.g. check endianness).\nAny \"value-breaking\" changes to the generator should require bumping at\nleast the minor version and documentation of the change.\n\nIt is not required that this function yield the same state as a\nreference implementation of the PRNG given equivalent seed; if necessary\nanother constructor replicating behaviour from a reference\nimplementation can be added.\n\nPRNG implementations should make sure `from_seed` never panics. In the\ncase that some special values (like an all zero seed) are not viable\nseeds it is preferable to map these to alternative constant value(s),\nfor example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad\nseed\"). This is assuming only a small number of values must be rejected.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2117","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:147:550":{"id":"0:147:550","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[132,4],"end":[132,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:64:2180":{"id":"0:64:2180","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/block.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:4389-0:143:2449":{"id":"a:1:3138:4389-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:16:172":{"id":"0:16:172","crate_id":0,"name":"Item","span":{"filename":"src/block.rs","begin":[69,4],"end":[69,14]},"visibility":"default","docs":"Results element type, e.g. `u32`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:52:2461":{"id":"0:52:2461","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[337,4],"end":[340,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:151:2485":{"id":"b:1:2880-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2883:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[264,0],"end":[264,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78:2512":{"id":"0:78:2512","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[104,4],"end":[113,5]},"visibility":"public","docs":"Retrieve the error code, if any.\n\nIf this `Error` was constructed via `From<NonZeroU32>`, then this method\nwill return this `NonZeroU32` code (for `no_std` this is always the\ncase). Otherwise, this method will return `None`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41580:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZeroU32","id":"1:23152:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:2217":{"id":"0:41:2217","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[259,4],"end":[261,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:787":{"id":"0:80:787","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[117,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10218:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10199:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:2419":{"id":"0:18:2419","crate_id":0,"name":"generate","span":{"filename":"src/block.rs","begin":[76,4],"end":[76,56]},"visibility":"default","docs":"Generate a new block of results.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["results",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2413","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[245,0],"end":[262,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"SeedableRng","id":"0:123:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["seed_from_u64","from_rng"],"trait":{"name":"SeedableRng","id":"0:123:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:38:2145","0:39:2167","0:40:2180","0:41:2217"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[432,0],"end":[432,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CryptoBlockRng","id":"0:19:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CryptoRng","id":"0:122:2114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:108:2621":{"id":"0:108:2621","crate_id":0,"name":"next_u32_via_fill","span":{"filename":"src/impls.rs","begin":[150,0],"end":[154,1]},"visibility":"public","docs":"Implement `next_u32` via `fill_bytes`, little-endian order.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"R"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2066":{"id":"0:136:2066","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[402,4],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2464":{"id":"0:53:2464","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:2461":{"id":"0:27:2461","crate_id":0,"name":"reset","span":{"filename":"src/block.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Reset the number of available results.\nThis will force a new set of results to be generated on next use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2167":{"id":"0:39:2167","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2117","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2893:136":{"id":"1:2893:136","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[186,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u32"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:31:2066","0:32:2069","0:34:2080","0:35:2091"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121:2091":{"id":"0:121:2091","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[181,4],"end":[181,71]},"visibility":"default","docs":"Fill `dest` entirely with random data.\n\nThis is the only method which allows an RNG to report errors while\ngenerating random data thus making this the primary method implemented\nby external (true) RNGs (e.g. `OsRng`) which can fail. It may be used\ndirectly to generate keys and to seed (infallible) PRNGs.\n\nOther than error handling, this method is identical to [`RngCore::fill_bytes`];\nthus this may be implemented using `Ok(self.fill_bytes(dest))` or\n`fill_bytes` may be implemented with\n`self.try_fill_bytes(dest).unwrap()` or more specific error handling.","links":{"`RngCore::fill_bytes`":"0:120:2080"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:120:2080":{"id":"0:120:2080","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,46]},"visibility":"default","docs":"Fill `dest` with random data.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nvia [`impls::fill_bytes_via_next`] or\nvia [`RngCore::try_fill_bytes`]; if this generator can\nfail the implementation must choose how best to handle errors here\n(e.g. panic with a descriptive message or log a warning and retry a few\ntimes).\n\nThis method should guarantee that `dest` is entirely filled\nwith new data, and may panic if this is impossible\n(e.g. reading past the end of a file that is being used as the\nsource of randomness).","links":{"`impls::fill_bytes_via_next`":"0:93:2575","`RngCore::try_fill_bytes`":"0:121:2091"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:28:2464":{"id":"0:28:2464","crate_id":0,"name":"generate_and_set","span":{"filename":"src/block.rs","begin":[179,4],"end":[183,5]},"visibility":"public","docs":"Generate a new set of results immediately, setting the index to the\ngiven value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3103:246-0:151:2485":{"id":"a:1:3103:246-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2895-0:151:2485":{"id":"b:1:2895-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:19:2421":{"id":"0:19:2421","crate_id":0,"name":"CryptoBlockRng","span":{"filename":"src/block.rs","begin":[83,0],"end":[83,42]},"visibility":"public","docs":"A marker trait used to indicate that an [`RngCore`] implementation is\nsupposed to be cryptographically secure.\n\nSee [`CryptoRng`] docs for more information.","links":{"`CryptoRng`":"0:122:2114","`RngCore`":"0:117:2061"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:118:2066":{"id":"0:118:2066","crate_id":0,"name":"next_u32","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,34]},"visibility":"default","docs":"Return the next random `u32`.\n\nRNGs must implement at least one method from this trait directly. In\nthe case this method is not implemented directly, it can be implemented\nusing `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","links":{"`impls::next_u32_via_fill`":"0:108:2621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:3103:246-0:72:136":{"id":"a:1:3103:246-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:31:2066":{"id":"0:31:2066","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[188,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:143:2449":{"id":"b:1:2880-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2883:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2884-0:151:2485":{"id":"b:1:2884-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:51:924":{"id":"0:51:924","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[330,4],"end":[332,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3721:1799":{"id":"1:3721:1799","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39315:3402","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:151:2485":{"id":"b:1:2607-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2609:2656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84:817":{"id":"0:84:817","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[152,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["code",{"resolved_path":{"name":"NonZeroU32","id":"1:23152:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[146,0],"end":[184,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:25:1161","0:26:924","0:27:2461","0:28:2464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[353,0],"end":[411,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u64"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:56:2066","0:57:2069","0:58:2080","0:59:2091"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:156:550":{"id":"0:156:550","crate_id":0,"name":"core","span":{"filename":"src/block.rs","begin":[295,4],"end":[295,15]},"visibility":"public","docs":"The *core* part of the RNG, implementing the `generate` function.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"R"}}},"0:143:2449":{"id":"0:143:2449","crate_id":0,"name":"BlockRng","span":{"filename":"src/block.rs","begin":[128,0],"end":[133,1]},"visibility":"public","docs":"A wrapper type implementing [`RngCore`] for some type implementing\n[`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\na full RNG from just a `generate` function.\n\nThe `core` field may be accessed directly but the results buffer may not.\nPRNG implementations can simply use a type alias\n(`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a\nwrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must\nre-implement `RngCore` but hides the implementation details and allows\nextra functionality to be defined on the RNG\n(e.g. `impl MyRng { fn set_stream(...){...} }`).\n\n`BlockRng` has heavily optimized implementations of the [`RngCore`] methods\nreading values from the results buffer, as well as\ncalling [`BlockRngCore::generate`] directly on the output array when\n[`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods\nalso handle the bookkeeping of when to generate a new batch of values.\n\nNo whole generated `u32` values are thrown away and all values are consumed\nin-order. [`next_u32`] simply takes the next available `u32` value.\n[`next_u64`] is implemented by combining two `u32` values, least\nsignificant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole\nnumber of `u32` values, converting each `u32` to a byte slice in\nlittle-endian order. If the requested byte length is not a multiple of 4,\nsome bytes will be discarded.\n\nSee also [`BlockRng64`] which uses `u64` array buffers. Currently there is\nno direct support for other buffer types.\n\nFor easy initialization `BlockRng` also implements [`SeedableRng`].\n\n[`next_u32`]: RngCore::next_u32\n[`next_u64`]: RngCore::next_u64\n[`fill_bytes`]: RngCore::fill_bytes\n[`try_fill_bytes`]: RngCore::try_fill_bytes","links":{"`BlockRngCore`":"0:15:2413","`RngCore`":"0:117:2061","RngCore::next_u32":"0:118:2066","`SeedableRng`":"0:123:2117","`BlockRng64`":"0:151:2485","RngCore::fill_bytes":"0:120:2080","RngCore::next_u64":"0:119:2069","`BlockRngCore::generate`":"0:18:2419","RngCore::try_fill_bytes":"0:121:2091"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:147:550"],"fields_stripped":true}},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:23","a:1:3103:246-0:143:2449","a:1:32014:236-0:143:2449","a:1:41675:4534-0:143:2449","a:1:41674:4535-0:143:2449","a:1:32073:2846-0:143:2449","a:1:3138:4389-0:143:2449","b:1:2895-0:143:2449","b:1:2884-0:143:2449","b:1:2610-0:143:2449","b:1:2607-0:143:2449","b:1:2880-0:143:2449","b:1:3719-0:143:2449","b:1:2890-0:143:2449","0:36","0:20","0:148","0:29","0:43"]}}},"b:1:2884-0:72:136":{"id":"b:1:2884-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:150:462":{"id":"0:150:462","crate_id":0,"name":"clone","span":{"filename":"src/block.rs","begin":[120,9],"end":[120,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72:136":{"id":"0:72:136","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"Error type of random number generators\n\nIn order to be compatible with `std` and `no_std`, this type has two\npossible implementations: with `std` a boxed `Error` trait object is stored,\nwhile with `no_std` we merely store an error code.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:1:3103:246-0:72:136","a:1:32014:236-0:72:136","a:1:41675:4534-0:72:136","a:1:41674:4535-0:72:136","a:1:32073:2846-0:72:136","a:1:3138:4389-0:72:136","b:1:2895-0:72:136","b:1:2884-0:72:136","b:1:2610-0:72:136","b:1:2607-0:72:136","b:1:2880-0:72:136","b:1:3719-0:72:136","b:1:2890-0:72:136","0:79","0:83","0:81"]}}},"0:17:2417":{"id":"0:17:2417","crate_id":0,"name":"Results","span":{"filename":"src/block.rs","begin":[73,4],"end":[73,70]},"visibility":"default","docs":"Results type. This is the 'block' an RNG implementing `BlockRngCore`\ngenerates, which will usually be an array like `[u32; 16]`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2848:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2413","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"1:2851:76","args":{"angle_bracketed":{"args":[{"type":{"slice":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:15:2413","args":null}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"1:2932:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:116:2248":{"id":"0:116:2248","crate_id":0,"name":"read_u64_into","span":{"filename":"src/le.rs","begin":[25,0],"end":[30,1]},"visibility":"public","docs":"Reads unsigned 64 bit integers from `src` into `dst`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2180":{"id":"0:126:2180","crate_id":0,"name":"seed_from_u64","span":{"filename":"src/lib.rs","begin":[311,4],"end":[340,5]},"visibility":"default","docs":"Create a new PRNG using a `u64` seed.\n\nThis is a convenience-wrapper around `from_seed` to allow construction\nof any `SeedableRng` from a simple `u64` value. It is designed such that\nlow Hamming Weight numbers like 0 and 1 can be used and should still\nresult in good, independent seeds to the PRNG which is returned.\n\nThis **is not suitable for cryptography**, as should be clear given that\nthe input size is only 64 bits.\n\nImplementations for PRNGs *may* provide their own implementations of\nthis function, but the default implementation should be good enough for\nall purposes. *Changing* the implementation of this function should be\nconsidered a value-breaking change.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["state",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:980":{"id":"0:114:980","crate_id":0,"name":"le","span":{"filename":"src/le.rs","begin":[9,0],"end":[54,1]},"visibility":"public","docs":"Little-Endian utilities\n\nLittle-Endian order has been chosen for internal usage; this makes some\nuseful functions available.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:115:2635","0:116:2248"],"is_stripped":false}}},"a:1:41675:4534-0:143:2449":{"id":"a:1:41675:4534-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32073:2846-0:72:136":{"id":"a:1:32073:2846-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3138:4389-0:72:136":{"id":"a:1:3138:4389-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:4389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:62:2145":{"id":"0:62:2145","crate_id":0,"name":"Seed","span":{"filename":"src/block.rs","begin":[414,4],"end":[414,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"SeedableRng","id":"0:123:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:65:2217":{"id":"0:65:2217","crate_id":0,"name":"from_rng","span":{"filename":"src/block.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rng",{"generic":"S"}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RngCore","id":"0:117:2061","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77:2540":{"id":"0:77:2540","crate_id":0,"name":"raw_os_error","span":{"filename":"src/error.rs","begin":[85,4],"end":[96,5]},"visibility":"public","docs":"Extract the raw OS error code (if this error came from the OS)\n\nThis method is identical to `std::io::Error::raw_os_error()`, except\nthat it works in `no_std` contexts. If this method returns `None`, the\nerror value can still be formatted via the `Display` implementation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41580:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2890-0:143:2449":{"id":"b:1:2890-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2890-0:151:2485":{"id":"b:1:2890-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2607-0:72:136":{"id":"b:1:2607-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2609:2656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2890-0:72:136":{"id":"b:1:2890-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:123:2117":{"id":"0:123:2117","crate_id":0,"name":"SeedableRng","span":{"filename":"src/lib.rs","begin":[221,0],"end":[395,1]},"visibility":"public","docs":"A random number generator that can be explicitly seeded.\n\nThis trait encapsulates the low-level functionality common to all\npseudo-random number generators (PRNGs, or algorithmic generators).\n\n[`rand`]: https://docs.rs/rand","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:124:2145","0:125:2167","0:126:2180","0:131:2217"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:36","0:60"]}}},"0:56:2066":{"id":"0:56:2066","crate_id":0,"name":"next_u32","span":{"filename":"src/block.rs","begin":[355,4],"end":[371,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"NonZero","id":"1:732:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:2091":{"id":"0:139:2091","crate_id":0,"name":"try_fill_bytes","span":{"filename":"src/lib.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:924":{"id":"0:26:924","crate_id":0,"name":"index","span":{"filename":"src/block.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Get the index into the result buffer.\n\nIf this is equal to or larger than the size of the result buffer then\nthe buffer is \"empty\" and `generate()` must be called to produce new\nresults.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[299,0],"end":[308,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"1:10244:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10244:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:47:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:138:2080":{"id":"0:138:2080","crate_id":0,"name":"fill_bytes","span":{"filename":"src/lib.rs","begin":[412,4],"end":[414,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:1999":{"id":"0:85:1999","crate_id":0,"name":"impls","span":{"filename":"src/impls.rs","begin":[9,0],"end":[206,1]},"visibility":"public","docs":"Helper functions for implementing `RngCore` functions.\n\nFor cross-platform reproducibility, these functions all use Little Endian:\nleast-significant part first. For example, `next_u64_via_u32` takes `u32`\nvalues `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`\nfrom `next_u64` in little-endian order, one should use `next_u64() as u32`.\n\nByte-swapping (like the std `to_le` functions) is only needed to convert\nto/from byte sequences, and since its purpose is reproducibility,\nnon-reproducible sources (e.g. `OsRng`) need not bother with it.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:91:2569","0:93:2575","0:106:2403","0:107:2404","0:108:2621","0:111:2623"],"is_stripped":false}}},"0:25:1161":{"id":"0:25:1161","crate_id":0,"name":"new","span":{"filename":"src/block.rs","begin":[150,4],"end":[157,5]},"visibility":"public","docs":"Create a new `BlockRng` from an existing RNG implementing\n`BlockRngCore`. Results will be generated on first use.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["core",{"generic":"R"}]],"output":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2894:1786":{"id":"1:2894:1786","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41713:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2612:9944":{"id":"1:2612:9944","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:2518":{"id":"0:75:2518","crate_id":0,"name":"CUSTOM_START","span":{"filename":"src/error.rs","begin":[36,4],"end":[36,56]},"visibility":"public","docs":"Codes at or above this point can be used by users to define their own\ncustom errors.\n\nThis has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,\ntherefore the number of values available for custom codes is `1 << 30`.\n\nThis is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"u32"},"default":"_"}}},"b:1:3719-0:72:136":{"id":"b:1:3719-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:63:2167":{"id":"0:63:2167","crate_id":0,"name":"from_seed","span":{"filename":"src/block.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seed",{"qualified_path":{"name":"Seed","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:123:2117","args":null}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:787":{"id":"0:82:787","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[134,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10218:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10199:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41674:4535-0:143:2449":{"id":"a:1:41674:4535-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41674:4535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:57:2069":{"id":"0:57:2069","crate_id":0,"name":"next_u64","span":{"filename":"src/block.rs","begin":[374,4],"end":[384,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2263":{"id":"0:0:2263","crate_id":0,"name":"rand_core","span":{"filename":"src/lib.rs","begin":[10,0],"end":[531,1]},"visibility":"public","docs":"Random number generation traits\n\nThis crate is mainly of interest to crates publishing implementations of\n[`RngCore`]. Other users are encouraged to use the [`rand`] crate instead\nwhich re-exports the main traits and error types.\n\n[`RngCore`] is the core trait implemented by algorithmic pseudo-random number\ngenerators and external random-number sources.\n\n[`SeedableRng`] is an extension trait for construction from fixed seeds and\nother random number generators.\n\n[`Error`] is provided for error-handling. It is safe to use in `no_std`\nenvironments.\n\nThe [`impls`] and [`le`] sub-modules include a few small functions to assist\nimplementation of [`RngCore`].\n\n[`rand`]: https://docs.rs/rand","links":{"`le`":"0:114:980","`SeedableRng`":"0:123:2117","`RngCore`":"0:117:2061","`impls`":"0:85:1999","`Error`":"0:72:136"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk.png\", html_favicon_url\n= \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://rust-random.github.io/rand/\")]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![doc(test(attr(allow(unused_variables), deny(warnings))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:5:404","0:85:1999","0:114:980","0:4-0:72:136","0:117:2061","0:122:2114","0:123:2117"],"is_stripped":false}}},"a:1:32073:2846-0:143:2449":{"id":"a:1:32073:2846-0:143:2449","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32073:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng","id":"0:143:2449","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[116,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10244:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/block.rs","begin":[310,0],"end":[351,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:50:1161","0:51:924","0:52:2461","0:53:2464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:107:2404":{"id":"0:107:2404","crate_id":0,"name":"fill_via_u64_chunks","span":{"filename":"src/impls.rs","begin":[145,0],"end":[147,1]},"visibility":"public","docs":"Implement `fill_bytes` by reading chunks from the output buffer of a block\nbased RNG.\n\nThe return values are `(consumed_u64, filled_u8)`.\n\nOn big-endian systems, endianness of `src[..consumed_u64]` values is\nswapped. No other adjustments to `src` are made.\n\n`filled_u8` is the number of filled bytes in `dest`, which may be less than\nthe length of `dest`.\n`consumed_u64` is the number of words consumed from `src`, which is the same\nas `filled_u8 / 8` rounded up.\n\nSee `fill_via_u32_chunks` for an example.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}],["dest",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32014:236-0:151:2485":{"id":"a:1:32014:236-0:151:2485","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Results","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"BlockRngCore","id":"0:15:2413","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32015:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32014:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BlockRng64","id":"0:151:2485","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:41675:4534-0:72:136":{"id":"a:1:41675:4534-0:72:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41675:4534","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:72:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:137:2069":{"id":"0:137:2069","crate_id":0,"name":"next_u64","span":{"filename":"src/lib.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:22744:3293":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:44192:3719":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:40118:3549":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:4535:3070":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:43389:3985":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"0:115:2635":{"crate_id":0,"path":["rand_core","le","read_u32_into"],"kind":"function"},"1:41374:4528":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:44452:12058":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:4789:3071":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:42299:3058":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:21680:10088":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:42634:3069":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:40214:3968":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:10683:13760":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:45765:3774":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:45604:3758":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:39315:3402":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:41761:3949":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:32679:4400":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:52194:1805":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:32016:243":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:46085:3804":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:39066:4436":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:45376:3736":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:40351:3569":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:8159:144":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:21990:3277":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:8201:129":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:23007:3320":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:44512:3735":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"4:762:2788":{"crate_id":4,"path":["zerocopy","IntoByteSlice"],"kind":"trait"},"1:22335:9769":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:21584:3276":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"4:1826:2829":{"crate_id":4,"path":["zerocopy","byteorder","Usize"],"kind":"struct"},"1:30459:3116":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:22259:9767":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:46135:3806":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:44180:3716":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:122:2809":{"crate_id":4,"path":["zerocopy","pointer","ptr","def","Ptr"],"kind":"struct"},"1:3551:145":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"4:535:2776":{"crate_id":4,"path":["zerocopy","KnownLayout"],"kind":"trait"},"1:44058:3705":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:41841:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:52197:1398":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:44373:149":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:40184:3228":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:4678:3227":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:22768:11695":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:22985:3318":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"4:942:2825":{"crate_id":4,"path":["zerocopy","byteorder","U16"],"kind":"struct"},"1:3347:140":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:41958:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:46644:3857":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:30859:2765":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:39501:4379":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:11331:3665":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:12772:2738":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:52183:724":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:42613:136":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:40342:3568":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:8172:2845":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:21464:10039":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:42596:3068":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:44390:226":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:2699:201":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:2030:4375":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:43865:3683":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:37743:4416":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:42532:3628":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:42794:3637":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:41753:3248":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:42313:3061":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:43334:3269":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"4:1408:2827":{"crate_id":4,"path":["zerocopy","byteorder","U64"],"kind":"struct"},"1:30204:2737":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:39940:11716":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:10503:4560":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:43779:3541":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:44230:130":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:44208:3723":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:46152:3807":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:41674:4535":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:40272:3557":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:44184:3717":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11097:3258":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"4:2569:2832":{"crate_id":4,"path":["zerocopy","byteorder","I64"],"kind":"struct"},"4:558:2779":{"crate_id":4,"path":["zerocopy","FromBytes"],"kind":"trait"},"1:21435:10046":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"4:3601:2816":{"crate_id":4,"path":["zerocopy","wrappers","Unalign"],"kind":"struct"},"1:46720:3861":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:44398:206":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:732:189":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:45455:3745":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:12551:3664":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:22215:9766":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:31998:2781":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1:41633:3088":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:40144:3552":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:44473:179":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:40786:3588":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:22974:3317":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:3546:253":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:21447:10046":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:10257:3061":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:22480:9761":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:4340:3936":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:52178:1666":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:3344:139":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"4:512:2775":{"crate_id":4,"path":["zerocopy","DstLayout"],"kind":"struct"},"1:3473:210":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:21481:10050":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:45715:3772":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3329:4421":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1:39163:212":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:43462:3258":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:43287:3268":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:52173:458":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:32493:4401":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:30453:2804":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:43408:3652":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:46475:3846":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:12514:3659":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:3957:3001":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"0:143:2449":{"crate_id":0,"path":["rand_core","block","BlockRng"],"kind":"struct"},"1:2707:2565":{"crate_id":1,"path":["core","cmp","min"],"kind":"function"},"1:40802:3590":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:40395:3574":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:43049:3648":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:43726:3674":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:44037:4623":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:46603:3854":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:42036:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:44089:3714":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:2827:10088":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:39238:213":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:43844:4622":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:1936:3112":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:4394:4452":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:33099:4405":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:40363:3570":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:42849:3646":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:41713:225":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:31991:3965":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:10244:119":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:11048:3248":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:46546:3849":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:41342:3600":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"4:3552:13972":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Invariants"],"kind":"trait"},"1:3563:4431":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:46525:3848":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:2623:112":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:43034:3647":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:6031:3234":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:40092:3547":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:40569:3583":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:40579:3584":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:41696:3087":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:39929:3535":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"4:811:2824":{"crate_id":4,"path":["zerocopy","byteorder","LittleEndian"],"kind":"enum"},"1:10253:3059":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:12833:4607":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:22349:4359":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:45973:3800":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:46759:3871":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"4:760:2787":{"crate_id":4,"path":["zerocopy","ByteSliceMut"],"kind":"trait"},"1:22788:11712":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:22665:3281":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:10903:238":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:42559:11711":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:40779:3587":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:43268:3266":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:45797:3776":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:22803:11707":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:2943:136":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:40291:3560":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"0:15:2413":{"crate_id":0,"path":["rand_core","block","BlockRngCore"],"kind":"trait"},"1:40817:3593":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"0:111:2623":{"crate_id":0,"path":["rand_core","impls","next_u64_via_fill"],"kind":"function"},"1:32014:236":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:21511:10088":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:44376:163":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:45619:3759":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:3536:4428":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:43911:3694":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:10251:3058":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"4:796:2823":{"crate_id":4,"path":["zerocopy","byteorder","BigEndian"],"kind":"enum"},"1:7485:2636":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:11179:3950":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:7878:3247":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:13762:4658":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:44431:3986":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"0:5:404":{"crate_id":0,"path":["rand_core","block"],"kind":"module"},"1:3591:4434":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:43053:3649":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:30474:3068":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:41675:4534":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:15:2547":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:33158:4409":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:2119:188":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:2860:257":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:43736:3675":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:52172:1157":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:10468:156":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:40593:3585":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:43360:3270":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:45537:3754":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:43666:3671":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:4614:3939":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:33217:4407":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:22850:2740":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:42571:11718":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:40793:3589":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:39989:3541":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:2851:76":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:40156:3543":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:52176:1295":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"0:91:2569":{"crate_id":0,"path":["rand_core","impls","next_u64_via_u32"],"kind":"function"},"1:22559:3278":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"4:544:2567":{"crate_id":4,"path":["zerocopy","NoCell"],"kind":"trait"},"0:106:2403":{"crate_id":0,"path":["rand_core","impls","fill_via_u32_chunks"],"kind":"function"},"1:33335:4408":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:41599:172":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:3096:4388":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:4328:3935":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:45633:3760":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:21479:10048":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:41880:86":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:46697:3860":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:6854:3243":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:40835:3596":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:43347:3983":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:10047:3078":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:2053:3219":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:46504:3847":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:33818:4412":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:40404:3575":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:42810:3640":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:11891:3956":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"4:3594:13973":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","at_least","Shared"],"kind":"trait"},"1:21564:10088":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:11345:3666":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:8309:177":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:41616:3949":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:46023:3802":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:3164:4402":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:3311:124":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:40085:3546":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:25892:266":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:12838:4606":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:52185:894":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:41919:93":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"4:595:2780":{"crate_id":4,"path":["zerocopy","Unaligned"],"kind":"trait"},"1:7938:4454":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:45662:3769":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:23492:235":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:33645:4411":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:7706:4509":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:46417:3844":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:3824:10156":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:40420:3577":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:2240:3223":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:22719:2739":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:30485:11701":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:3557:4429":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:41580:193":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:41508:3617":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:42802:3639":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:22882:10088":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:40301:3561":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:40263:3555":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:33991:4414":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:12818:3946":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:43208:3980":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:6145:3237":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:5163:11580":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:52190:1829":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:44489:3733":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:6654:3238":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:5201:3942":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"4:756:13809":{"crate_id":4,"path":["zerocopy","sealed","ByteSliceSealed"],"kind":"trait"},"1:4733:4461":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:9720:91":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:52177:333":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"4:3645:2791":{"crate_id":4,"path":["zerocopy","SizeInfo"],"kind":"enum"},"1:44204:3722":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:2864:256":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"4:546:2777":{"crate_id":4,"path":["zerocopy","TryFromBytes"],"kind":"trait"},"1:45913:3782":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:45782:3775":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:39178:209":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:22996:3319":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:45491:3751":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:10508:3255":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:40434:3578":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"0:114:980":{"crate_id":0,"path":["rand_core","le"],"kind":"module"},"1:43308:3650":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:52188:888":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:45391:3739":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:40281:3558":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:44212:3724":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:22952:3315":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:43770:3533":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:10263:3063":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:10255:3060":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:22297:9768":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:2604:103":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:40385:3572":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:10259:205":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:39150:3396":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:39968:3539":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:23152:2507":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"type_alias"},"1:5142:423":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:4352:109":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:13046:119":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:42194:3948":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:21690:9681":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:10218:142":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:13670:3275":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:30832:195":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:21493:10052":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:21692:3276":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"0:0:2263":{"crate_id":0,"path":["rand_core"],"kind":"module"},"1:4742:2800":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:42841:3645":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:2932:123":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:10460:152":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:52196:1890":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:46114:3805":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"0:107:2404":{"crate_id":0,"path":["rand_core","impls","fill_via_u64_chunks"],"kind":"function"},"1:52174:1851":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:39919:3534":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:43259:3265":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:46173:3808":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"4:1617:2828":{"crate_id":4,"path":["zerocopy","byteorder","U128"],"kind":"struct"},"1:45896:3781":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:43566:3665":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:4688:2781":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:22388:9770":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:21963:10088":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:43612:3668":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:46667:3858":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:41486:12027":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:6849:3245":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:39102:4433":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"4:2342:2831":{"crate_id":4,"path":["zerocopy","byteorder","I32"],"kind":"struct"},"1:12574:3667":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:22963:3316":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"1:52195:950":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:3293:4432":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"4:3386:2836":{"crate_id":4,"path":["zerocopy","byteorder","F64"],"kind":"struct"},"1:43716:3673":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:12886:4616":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"4:764:2789":{"crate_id":4,"path":["zerocopy","IntoByteSliceMut"],"kind":"trait"},"1:44176:3715":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:4251:4444":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:44439:3730":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:3379:4426":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:40129:4504":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:1853:4444":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:40051:3545":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:2487:659":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:33472:4410":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:44200:3721":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:32073:2846":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:41358:3602":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:42542:3068":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"4:587:2566":{"crate_id":4,"path":["zerocopy","IntoBytes"],"kind":"trait"},"1:46002:3801":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:10715:11751":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:41320:169":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:45508:3752":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:43894:3693":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:43684:3672":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"0:122:2114":{"crate_id":0,"path":["rand_core","CryptoRng"],"kind":"trait"},"1:0:550":{"crate_id":1,"path":["core"],"kind":"module"},"1:41778:195":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:52187:882":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"3:0:2719":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:22941:3141":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:11290:3952":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:3154:4404":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:45406:3740":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:11072:3949":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:4609:3938":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:45814:3777":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:8665:12852":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"4:0:2264":{"crate_id":4,"path":["zerocopy"],"kind":"module"},"1:10617:4583":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:43630:3669":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:52180:1789":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:39308:3966":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:40250:3554":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:30421:2803":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:8163:164":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:39997:3533":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:9907:12468":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:45744:3773":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:31980:3963":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:23018:3321":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:3350:141":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:7655:11551":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:32015:2095":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"0:108:2621":{"crate_id":0,"path":["rand_core","impls","next_u32_via_fill"],"kind":"function"},"1:3149:4399":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:45423:3743":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:40100:3548":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:38487:4420":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:45590:3757":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:45558:3755":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"4:3587:14125":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Initialized"],"kind":"enum"},"1:39913:3533":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:43432:3656":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:37798:4417":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:13450:12371":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:41997:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"0:19:2421":{"crate_id":0,"path":["rand_core","block","CryptoBlockRng"],"kind":"trait"},"1:52184:740":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:32103:4312":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:40319:3564":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:41608:3248":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:43379:3271":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:52171:405":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:12344:3957":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:7590:4481":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:39955:3538":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:46583:3852":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:2693:194":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"4:3666:2790":{"crate_id":4,"path":["zerocopy","CastType"],"kind":"enum"},"1:21513:9684":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:42831:3641":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:2984:3933":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:43421:3655":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:41705:3626":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:4605:220":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"4:32:2817":{"crate_id":4,"path":["zerocopy","byteorder","ByteOrder"],"kind":"trait"},"4:757:2786":{"crate_id":4,"path":["zerocopy","ByteSlice"],"kind":"trait"},"1:10700:13788":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:234:225":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:31984:3964":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"1:43438:3657":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:8122:4521":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:40005:3542":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:12827:4608":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:3576:12004":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:2854:162":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:8254:2844":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:10199:225":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"1:9288:3945":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:5243:961":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:39978:3540":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:11217:3951":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:43584:3666":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:22321:10088":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:43761:3542":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:32005:3389":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:46446:3845":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:46572:3851":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:3179:4423":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:32865:4403":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:42292:3059":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:5954:4444":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"0:123:2117":{"crate_id":0,"path":["rand_core","SeedableRng"],"kind":"trait"},"1:8621:4480":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:3098:117":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:39328:3404":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:0:492":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:22121:10088":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"0:85:1999":{"crate_id":0,"path":["rand_core","impls"],"kind":"module"},"1:13477:204":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:40194:3967":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:2662:133":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:46327:3842":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:4492:3226":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:43297:3982":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:3324:2805":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:45875:3780":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:39146:4425":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:52191:1811":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"4:607:2781":{"crate_id":4,"path":["zerocopy","Ref"],"kind":"struct"},"1:44463:3988":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:3103:246":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:3234:4413":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:4:1239":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:3108:2802":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:39258:215":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:2501:4359":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:43754:3677":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:10893:10088":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:22347:12413":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:40827:3594":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:41769:3001":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:40333:3567":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:7591:4482":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:52186:876":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:44048:3701":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:2828:4183":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:22123:9682":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:729:2741":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:22752:3294":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:22433:10088":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:3340:2843":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"0:117:2061":{"crate_id":0,"path":["rand_core","RngCore"],"kind":"trait"},"1:1929:658":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:10261:3062":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:3176:4422":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:5858:4444":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:41624:3001":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:46563:3850":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"0:151:2485":{"crate_id":0,"path":["rand_core","block","BlockRng64"],"kind":"struct"},"1:45575:3756":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:10249:128":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:35867:4415":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:41542:3618":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:44196:3720":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:21572:9683":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:39200:211":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:22830:3307":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"0:93:2575":{"crate_id":0,"path":["rand_core","impls","fill_bytes_via_next"],"kind":"function"},"1:8618:148":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"4:2099:2830":{"crate_id":4,"path":["zerocopy","byteorder","I16"],"kind":"struct"},"1:40113:106":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:3145:4372":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:42819:156":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:21566:9680":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:40444:3580":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:13502:3959":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:43277:3981":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"4:34:2818":{"crate_id":4,"path":["zerocopy","byteorder","Order"],"kind":"enum"},"4:2780:2833":{"crate_id":4,"path":["zerocopy","byteorder","I128"],"kind":"struct"},"1:52198:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:9715:84":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:22612:3280":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:44265:4633":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:2848:77":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:44500:3734":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:21462:10042":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:43959:3696":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:22837:2753":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:32074:3391":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:22919:3313":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:41520:4529":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:11140:3263":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:40241:3969":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:12328:4568":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"4:3229:2835":{"crate_id":4,"path":["zerocopy","byteorder","F32"],"kind":"struct"},"1:13627:115":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:42587:73":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:22730:12026":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:46592:3853":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:52179:1700":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:41402:3610":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:2601:102":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:22447:9762":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"4:553:2778":{"crate_id":4,"path":["zerocopy","FromZeros"],"kind":"trait"},"1:23040:3323":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:43986:3697":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:43480:3264":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:6843:3246":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:43512:3662":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:41802:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:44380:218":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:2503:4360":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:8627:4519":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:21968:9686":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:42306:3060":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:12590:3670":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:46682:3859":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:41560:3621":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:13650:3273":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:21425:2765":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:40372:3571":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:44254:3727":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:45683:3770":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:42075:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:39218:214":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:44071:3711":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:43369:3984":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:52189:869":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:43745:3676":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:41664:3089":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:40808:3591":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:45928:3783":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:46250:3841":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:40012:4477":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:2044:3216":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:11858:3955":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:52193:1823":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:22696:3287":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:44188:3718":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:9399:3946":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:46040:3803":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:46372:3843":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:45829:3778":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3184:4424":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:2857:143":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:42155:97":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:22002:10043":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:33276:4406":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:22475:9763":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"0:116:2248":{"crate_id":0,"path":["rand_core","le","read_u64_into"],"kind":"function"},"4:3657:2792":{"crate_id":4,"path":["zerocopy","TrailingSliceLayout"],"kind":"struct"},"1:45846:3779":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:45523:3753":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:4762:2801":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:43530:3663":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:22861:2754":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:12628:3263":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:22930:3314":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"4:3567:13973":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Shared"],"kind":"enum"},"1:40221:3269":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"4:427:13810":{"crate_id":4,"path":["zerocopy","wrappers","update","WriteBackOnDrop"],"kind":"struct"},"1:3717:70":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:10200:3057":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:3138:4389":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:31938:4378":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:46629:3856":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:3628:4435":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:43880:3690":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:11252:3264":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"4:1183:2826":{"crate_id":4,"path":["zerocopy","byteorder","U32"],"kind":"struct"},"1:44023:3698":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:32105:114":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:8126:4520":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:22402:4359":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:23029:3322":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:39278:4427":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:37853:4418":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"4:2991:2834":{"crate_id":4,"path":["zerocopy","byteorder","Isize"],"kind":"struct"},"1:9902:12887":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:9881:787":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:37908:4419":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"4:139:70":{"crate_id":4,"path":["zerocopy","pointer","ptr","invariant","Any"],"kind":"enum"},"1:11373:3954":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:22680:3282":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:40310:3563":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:45438:3744":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:4461:3937":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:4375:4451":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:42116:90":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:2657:200":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:45470:3746":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:45700:3771":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:11359:3953":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:46618:3855":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:43448:3543":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:52192:1817":{"crate_id":1,"path":["core","u32"],"kind":"primitive"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"zerocopy","html_root_url":null},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}